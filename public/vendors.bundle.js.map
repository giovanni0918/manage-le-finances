{"version":3,"sources":["webpack:///./node_modules/react/index.js","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/react-router/node_modules/prop-types/index.js","webpack:///./node_modules/react-router-dom/node_modules/prop-types/index.js","webpack:///./node_modules/history/node_modules/warning/browser.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks.js","webpack:///./node_modules/warning/warning.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_global.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_core.js","webpack:///./node_modules/resolve-pathname/index.js","webpack:///./node_modules/value-equal/index.js","webpack:///./node_modules/history/es/PathUtils.js","webpack:///./node_modules/history/es/LocationUtils.js","webpack:///./node_modules/history/es/createTransitionManager.js","webpack:///./node_modules/history/es/DOMUtils.js","webpack:///./node_modules/history/es/createBrowserHistory.js","webpack:///./node_modules/history/es/createHashHistory.js","webpack:///./node_modules/history/es/createMemoryHistory.js","webpack:///./node_modules/history/es/index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_export.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_hide.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_has.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/react-router/node_modules/invariant/browser.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_fails.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_uid.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_defined.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_cof.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-pie.js","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_shared.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gops.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks-ext.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks-define.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_library.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/react-router-dom/node_modules/invariant/browser.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/react-dom/index.js","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/scheduler/index.js","webpack:///./node_modules/scheduler/cjs/scheduler.production.min.js","webpack:///./node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/promise-polyfill/lib/polyfill.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/array/find.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/array/find-index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/object/assign.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.object.assign.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-assign.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/string/starts-with.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.starts-with.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/string/repeat.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-repeat.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/symbol/index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.symbol.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_meta.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_enum-keys.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_html.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopn-ext.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.object.to-string.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_classof.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es7.symbol.observable.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/symbol/iterator.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-at.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/firebase/auth/dist/index.esm.js","webpack:///../../node_modules/google-closure-library/closure/goog/base.js","webpack:///../../node_modules/google-closure-library/closure/goog/promise/thenable.js","webpack:///../../node_modules/google-closure-library/closure/goog/debug/error.js","webpack:///../../node_modules/google-closure-library/closure/goog/asserts/asserts.js","webpack:///../../node_modules/google-closure-library/closure/goog/async/freelist.js","webpack:///../../node_modules/google-closure-library/closure/goog/async/workqueue.js","webpack:///../../node_modules/google-closure-library/closure/goog/async/run.js","webpack:///../../node_modules/google-closure-library/closure/goog/array/array.js","webpack:///../../node_modules/google-closure-library/closure/goog/string/string.js","webpack:///../../node_modules/google-closure-library/closure/goog/labs/useragent/util.js","webpack:///../../node_modules/google-closure-library/closure/goog/object/object.js","webpack:///../../node_modules/google-closure-library/closure/goog/async/nexttick.js","webpack:///../../node_modules/google-closure-library/closure/goog/labs/useragent/browser.js","webpack:///../../node_modules/google-closure-library/closure/goog/labs/useragent/engine.js","webpack:///../../node_modules/google-closure-library/closure/goog/promise/promise.js","webpack:///../../node_modules/google-closure-library/closure/goog/disposable/disposable.js","webpack:///../../node_modules/google-closure-library/closure/goog/reflect/reflect.js","webpack:///../../node_modules/google-closure-library/closure/goog/useragent/useragent.js","webpack:///../../node_modules/google-closure-library/closure/goog/debug/debug.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/browserfeature.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/event.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/browserevent.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/eventtype.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/listenable.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/listener.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/listenermap.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/events.js","webpack:///../../node_modules/google-closure-library/closure/goog/events/eventtarget.js","webpack:///../../node_modules/google-closure-library/closure/goog/timer/timer.js","webpack:///../../node_modules/google-closure-library/closure/goog/structs/structs.js","webpack:///../../node_modules/google-closure-library/closure/goog/structs/map.js","webpack:///../../node_modules/google-closure-library/closure/goog/uri/utils.js","webpack:///../../node_modules/google-closure-library/closure/goog/uri/uri.js","webpack:///src/iframeclient/ifchandler.js","webpack:///../../node_modules/google-closure-library/closure/goog/dom/browserfeature.js","webpack:///../../node_modules/google-closure-library/closure/goog/string/const.js","webpack:///../../node_modules/google-closure-library/closure/goog/html/trustedresourceurl.js","webpack:///../../node_modules/google-closure-library/closure/goog/html/safeurl.js","webpack:///../../node_modules/google-closure-library/closure/goog/html/safehtml.js","webpack:///../../node_modules/google-closure-library/closure/goog/dom/dom.js","webpack:///../../node_modules/google-closure-library/closure/goog/json/json.js","webpack:///src/utils.js","webpack:///../../node_modules/google-closure-library/closure/goog/window/window.js","webpack:///../../node_modules/google-closure-library/closure/goog/labs/useragent/platform.js","webpack:///../../node_modules/google-closure-library/closure/goog/dom/safe.js","webpack:///../../node_modules/google-closure-library/closure/goog/html/uncheckedconversions.js","webpack:///src/deprecation.js","webpack:///src/object.js","webpack:///src/actioncodeinfo.js","webpack:///src/error_auth.js","webpack:///src/actioncodesettings.js","webpack:///../../node_modules/google-closure-library/closure/goog/crypt/base64.js","webpack:///src/idtoken.js","webpack:///src/defines.js","webpack:///src/idp.js","webpack:///src/additionaluserinfo.js","webpack:///src/actioncodeurl.js","webpack:///src/dynamiclink.js","webpack:///src/authcredential.js","webpack:///src/authevent.js","webpack:///src/universallinksubscriber.js","webpack:///src/rpchandler.js","webpack:///src/auth.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/xmlhttp.js","webpack:///src/error_invalidorigin.js","webpack:///src/error_withcredential.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/xmlhttpfactory.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/corsxmlhttpfactory.js","webpack:///../../node_modules/google-closure-library/closure/goog/debug/logrecord.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/httpstatus.js","webpack:///../../node_modules/google-closure-library/closure/goog/debug/logger.js","webpack:///../../node_modules/google-closure-library/closure/goog/log/log.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/fetchxmlhttpfactory.js","webpack:///../../node_modules/google-closure-library/closure/goog/functions/functions.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/xhrio.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/eventtype.js","webpack:///../../node_modules/google-closure-library/third_party/closure/goog/mochikit/async/deferred.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/errorcode.js","webpack:///../../node_modules/google-closure-library/closure/goog/net/jsloader.js","webpack:///src/iframeclient/iframewrapper.js","webpack:///src/storage/asyncstorage.js","webpack:///src/storage/storage.js","webpack:///src/messagechannel/receiver.js","webpack:///src/storage/indexeddb.js","webpack:///src/messagechannel/postmessager.js","webpack:///src/messagechannel/sender.js","webpack:///src/messagechannel/defines.js","webpack:///src/storage/hybridindexeddb.js","webpack:///src/storage/inmemorystorage.js","webpack:///src/storage/localstorage.js","webpack:///src/storage/nullstorage.js","webpack:///src/storage/sessionstorage.js","webpack:///src/storage/factory.js","webpack:///src/authstorage.js","webpack:///src/storageautheventmanager.js","webpack:///../../node_modules/google-closure-library/closure/goog/crypt/sha2.js","webpack:///src/storageoauthhandlermanager.js","webpack:///../../node_modules/google-closure-library/closure/goog/crypt/hash.js","webpack:///../../node_modules/google-closure-library/closure/goog/crypt/sha256.js","webpack:///src/cordovahandler.js","webpack:///../../node_modules/google-closure-library/closure/goog/crypt/crypt.js","webpack:///src/storagependingredirectmanager.js","webpack:///src/autheventmanager.js","webpack:///src/authsettings.js","webpack:///src/confirmationresult.js","webpack:///src/idtokenresult.js","webpack:///src/proactiverefresh.js","webpack:///src/authuser.js","webpack:///src/token.js","webpack:///src/storageredirectusermanager.js","webpack:///src/storageusermanager.js","webpack:///src/recaptchaverifier/grecaptcha.js","webpack:///src/recaptchaverifier/grecaptchamock.js","webpack:///src/recaptchaverifier/mockloader.js","webpack:///src/recaptchaverifier/realloader.js","webpack:///src/recaptchaverifier/recaptchaverifier.js","webpack:///src/args.js","webpack:///src/exports_lib.js","webpack:///src/exports_auth.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/react-router-dom/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/react-router-dom/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/react-router/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/react-router/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/path-to-regexp/node_modules/isarray/index.js","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./node_modules/react-router/es/matchPath.js","webpack:///./node_modules/react-router/es/Route.js","webpack:///./node_modules/react-router-dom/es/Route.js","webpack:///./node_modules/react-router/es/Router.js","webpack:///./node_modules/react-router-dom/es/Router.js","webpack:///./node_modules/react-router-dom/es/BrowserRouter.js","webpack:///./node_modules/react-router/es/generatePath.js","webpack:///./node_modules/react-router/es/Redirect.js","webpack:///./node_modules/react-router-dom/es/Redirect.js"],"names":["module","exports","__webpack_require__","global","Object","defineProperty","value","util","contains","obj","key","prototype","hasOwnProperty","call","DEFAULT_ENTRY_NAME","tokenListeners","FirebaseAppImpl","options","config","firebase_","this","isDeleted_","services_","name_","name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","INTERNAL","getUid","getToken","Promise","resolve","addAuthTokenListener","callback","push","setTimeout","removeAuthTokenListener","filter","listener","get","checkDestroyed_","set","val","enumerable","configurable","delete","_this","then","removeApp","services","keys","forEach","serviceKey","instanceKey","all","map","service","_getService","instanceIdentifier","instanceSpecifier","undefined","factories","extendApp","bind","props","deepExtend","error","code","args","appErrors","create","console","log","ErrorFactory","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","isNode","toString","process","e","warn","firebase","createFirebaseNamespace","apps_","appHooks","namespace","__esModule","initializeApp","rawConfig","name_1","app","callAppHooks","apps","SDK_VERSION","registerService","createService","serviceProperties","appHook","allowMultipleInstances","getApps","serviceNamespace","appArg","_i","arguments","length","apply","extendNamespace","createSubscribe","useAsService","eventName","serviceName","factoryName","useService","patchProperty","default","store","uid","Symbol","USE_SYMBOL","warning","window","Math","self","Function","__g","core","version","__e","isAbsolute","pathname","charAt","spliceOne","list","index","i","k","n","pop","resolve_pathname","to","from","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","concat","hasTrailingSlash","last","up","part","unshift","result","join","substr","_typeof","iterator","constructor","value_equal","valueEqual","a","b","Array","isArray","every","item","aType","aValue","valueOf","bValue","aKeys","bKeys","addLeadingSlash","path","hasBasename","prefix","RegExp","test","stripBasename","stripTrailingSlash","slice","createPath","location","search","hash","_extends","assign","target","source","LocationUtils_createLocation","state","currentLocation","hashIndex","indexOf","searchIndex","parsePath","decodeURI","URIError","LocationUtils_locationsAreEqual","es_createTransitionManager","prompt","listeners","setPrompt","nextPrompt","browser_default","confirmTransitionTo","action","getUserConfirmation","appendListener","fn","isActive","notifyListeners","_len","_key","canUseDOM","document","createElement","addEventListener","node","event","attachEvent","removeEventListener","detachEvent","getConfirmation","message","confirm","createBrowserHistory_typeof","createBrowserHistory_extends","getHistoryState","history","es_createBrowserHistory","invariant_browser_default","ua","globalHistory","canUseHistory","navigator","userAgent","needsHashChangeListener","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","random","transitionManager","setState","nextState","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","revertPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","href","pushState","prevIndex","nextKeys","replace","replaceState","goBack","goForward","block","unblock","listen","unlisten","d","__webpack_exports__","hide","redefine","ctx","$export","type","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","expProto","U","W","R","dP","createDesc","object","f","it","g","anObject","IE8_DOM_DEFINE","toPrimitive","O","Attributes","TypeError","IObject","defined","condition","format","c","Error","argIndex","framesToPop","exec","has","SRC","$toString","TPL","inspectSource","safe","isFunction","String","id","px","$keys","enumBugKeys","isObject","bitmap","writable","ceil","floor","isNaN","propertyIsEnumerable","isarray","pathToRegexp","parse","compile","str","tokensToFunction","tokensToRegExp","PATH_REGEXP","res","tokens","defaultDelimiter","delimiter","m","escaped","offset","next","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","charCodeAt","toUpperCase","matches","opts","data","encode","pretty","encodeURIComponent","token","segment","JSON","stringify","j","attachKeys","re","flags","sensitive","strict","end","route","endsWithDelimiter","groups","match","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","ex","cof","toInteger","min","UNSCOPABLES","ArrayProto","shared","getOwnPropertySymbols","def","TAG","tag","stat","LIBRARY","wksExt","$Symbol","propIsEnumerable","test1","getOwnPropertyNames","test2","fromCharCode","test3","letter","err","shouldUseNative","symbols","toObject","s","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","is","aFunction","that","toLength","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","arg","toIObject","arrayIndexOf","IE_PROTO","names","dPs","Empty","createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","open","write","lt","close","Properties","hiddenKeys","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","returnThis","Base","NAME","Constructor","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","tslib_1","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","assertionError","stringToByteArray","p","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","base64Decode","Date","getTime","prop","Deferred","promise","reject","wrapCallback","catch","getUA","ERROR_NAME","captureStackTrace","FirebaseError","stack","errors","template","fullCode","jsonEval","decode","header","claims","signature","extend","objTo","objFrom","findKey","opt_this","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","__extends","compress_","buf","opt_offset","t","update","opt_length","lengthMinusBlock","inbuf","digest","totalBits","ObserverProxy","executor","onNoObservers","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","complete","subscribe","nextOrObserver","methods_1","method","implementsAnyMethods","unsub","unsubscribeOne","finalError","sendOne","errorPrefix","fnName","argumentNumber","argName","base64Encode","utf8Bytes","isMobileCordova","isNodeSdk","isReactNative","patchCapture","captureFake","isAdmin","issuedAtTime","isValidFormat","isValidTimestamp","validSince","validUntil","now","clone","findValue","getAnyKey","getCount","rv","getValues","isEmpty","isNonNullObject","opt_obj","safeGet","querystring","querystringParams","params","arrayVal","querystringDecode","async","onError","proxy","validateArgCount","minCount","maxCount","argCount","argError","validateCallback","validateContextObject","context","validateNamespace","stringLength","high","r","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","setPrototypeOf","__proto__","__","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","generator","fulfilled","step","rejected","done","body","y","_","label","sent","trys","ops","verb","throw","return","v","op","o","ar","asyncIterator","q","resume","fulfill","settle","shift","cooked","raw","mod","makeEmptyFunction","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","validateFormat","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","for","w","x","z","aa","ba","A","h","l","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","updater","isReactComponent","forceUpdate","H","isPureReactComponent","I","current","J","K","L","ref","__self","__source","M","children","defaultProps","$$typeof","_owner","N","Q","keyPrefix","func","count","T","=",":","escape","ea","fa","V","da","X","Children","toArray","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","va","wa","currentTarget","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","disabled","Da","Ea","Fa","Ga","Ha","parentNode","Ia","Ja","Ka","La","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","toLowerCase","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","transition","Xa","Ya","Za","$a","ab","bb","cb","db","eb","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","ib","eventPool","jb","destructor","hb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","isTrusted","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","keyCode","vb","detail","wb","zb","locale","which","xb","ctrlKey","altKey","metaKey","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","color","date","datetime","datetime-local","email","month","number","password","range","tel","text","time","url","week","Mb","nodeName","Nb","srcElement","correspondingUseElement","nodeType","Ob","setAttribute","Pb","Rb","_valueTracker","getValue","setValue","stopTracking","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","displayName","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","qc","oc","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","ownerDocument","activeElement","Bc","change","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","view","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","defaultView","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","child","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","charCode","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","firstChild","Ld","nextSibling","Nd","HTMLIFrameElement","contentDocument","Od","contentEditable","Qd","focusedElem","selectionRange","Md","compareDocumentPosition","documentElement","start","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","selected","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","svg","ge","he","ie","je","namespaceURI","innerHTML","removeChild","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","trim","oe","setProperty","substring","pe","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","qe","se","blur","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Set","Fe","Ge","He","Ie","Je","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","cf","didError","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","payload","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","zf","Af","_stringRef","Bf","Cf","Map","Df","Ef","Ff","Gf","Hf","If","Jf","tagName","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","baseUpdate","ng","og","pg","dispatch","qg","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","hidden","first","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","ih","jh","kh","lh","mh","nh","oh","onClick","onclick","ph","WeakSet","qh","rh","sh","th","vh","componentWillUnmount","wh","xh","yh","insertBefore","_reactRootContainer","zh","wasMultiple","multiple","Ce","uh","hi","Xh","add","Bh","WeakMap","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","createTextNode","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","hasAttribute","Ri","Ti","Mi","querySelectorAll","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","previous","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","fetch","support","searchParams","iterable","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","Headers","append","normalizeName","normalizeValue","oldValue","items","iteratorFor","Request","_bodyInit","Body","Response","status","statusText","headers","response","redirectStatuses","redirect","RangeError","init","request","xhr","XMLHttpRequest","onload","rawHeaders","getAllResponseHeaders","line","responseURL","responseText","onerror","ontimeout","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","chars","readArrayBufferAsText","json","upcased","referrer","decodeURIComponent","bodyInit","setImmediate","setTimeoutFunc","_state","_handled","_value","_deferreds","doResolve","handle","deferred","_immediateFn","onFulfilled","onRejected","ret","newValue","finale","_unhandledRejectionFn","Handler","reason","prom","arr","remaining","race","globalNS","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","script","onreadystatechange","find","$find","forced","speciesConstructor","original","SPECIES","findIndex","KEY","getKeys","gOPS","pIE","$assign","aLen","getSymbols","isEnum","toAbsoluteIndex","IS_INCLUDES","el","max","startsWith","$startsWith","searchString","isRegExp","MATCH","Infinity","DESCRIPTORS","META","$fails","wks","wksDefine","enumKeys","_create","gOPNExt","$GOPD","$DP","gOPD","gOPN","$JSON","_stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","protoDesc","wrap","sym","_k","isSymbol","$defineProperty","$defineProperties","$propertyIsEnumerable","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","es6Symbols","wellKnownSymbols","keyFor","useSetter","useSimple","defineProperties","replacer","$replacer","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","NEED","fastKey","getWeak","onFreeze","windowNames","getWindowNames","classof","ARG","tryGet","callee","$at","iterated","_t","point","TO_STRING","descriptor","$iterators","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","addToUnscopables","Arguments","goog","goog.global","goog.isString","goog.isBoolean","goog.nullFunction","goog.typeOf","className","splice","goog.isNull","goog.isArray","goog.isArrayLike","goog.isFunction","goog.isObject","goog.UID_PROPERTY_","goog.uidCounter_","goog.bindNative_","selfObj","var_args","goog.bindJs_","boundArgs","newArgs","goog.bind","goog.partial","goog.now","goog.inherits","childCtor","parentCtor","tempCtor","superClass_","childCtor.base","methodName","goog.Thenable.addImplementation","ctor","$goog_Thenable","goog.Thenable.isImplementedBy","goog.debug.Error","opt_msg","goog.asserts.AssertionError","messagePattern","messageArgs","returnString","subLast","splitParts","goog.debug.Error.call","goog.asserts.fail","opt_message","create_","reset_","occupants_","head_","put","goog.async.WorkQueue.DEFAULT_MAX_UNUSED","goog.async.WorkQueue","workTail_","workHead_","goog.async.FreeList","goog.async.WorkQueue.freelist_","goog.async.WorkItem","goog.async.WorkQueue.prototype.remove","goog.async.run.workQueue_.remove","scope","goog.async.WorkQueue.prototype.add","goog.async.WorkQueue.freelist_.get","goog.async.WorkItem.prototype.set","goog.async.WorkItem.prototype.reset","goog.array.indexOf","opt_fromIndex","goog.array.forEach","arr2","goog.array.map","goog.array.some","some","goog.array.contains","goog.array.remove","goog.array.removeAllIf","goog.array.forEachRight","removedCount","goog.array.concat","goog.array.toArray","goog.string.subs","subsArguments","goog.string.trim","goog.string.ALL_RE_.test","goog.string.AMP_RE_","goog.string.LT_RE_","goog.string.GT_RE_","goog.string.QUOT_RE_","goog.string.SINGLE_QUOTE_RE_","goog.string.NULL_RE_","goog.labs.userAgent.util.userAgent_","goog.string.ALL_RE_","goog.string.contains","subString","goog.string.compareElements_","right","goog.global.navigator","goog.labs.userAgent.util.matchUserAgent","goog.object.forEach","goog.object.isEmpty","goog.object.clone","goog.object.PROTOTYPE_FIELDS_","goog.object.extend","goog.object.PROTOTYPE_FIELDS_.length","goog.async.throwException","exception","goog.global.setTimeout","goog.async.run","opt_context","goog.async.run.schedule_","goog.async.run.initializeRunner_","goog.global.Promise","goog.global.Promise.resolve","goog.async.run.processWorkQueue","goog.global.setImmediate","goog.global.Window","Window","goog.async.nextTick.setImmediate_","Channel","win","origin","protocol","host","head","tail","script.onreadystatechange","goog.async.nextTick.getSetImmediateEmulator_","goog.async.run.workQueueScheduled_","goog.async.run.workQueue_.add","goog.async.run.workQueue_","remove","goog.async.WorkQueue.freelist_.put","goog.Promise","resolver","state_","goog.Promise.State_.PENDING","result_","callbackEntriesTail_","callbackEntries_","parent_","hadUnhandledRejection_","executing_","resolve_","goog.Promise.State_.FULFILLED","goog.Promise.CancellationError","goog.Promise.State_.REJECTED","PENDING","FULFILLED","REJECTED","goog.Promise.CallbackEntry_","always","goog.Promise.CallbackEntry_.prototype.reset","goog.Promise.freelist_","entry","goog.Promise.freelist_.get","goog.Promise.resolve","opt_value","goog.Promise.reject","opt_reason","goog.Promise.resolveThen_","goog.Promise.maybeThen_","goog.Promise.allSettled","promises","toSettle","results","onSettled","goog.Promise.prototype.addCallbackEntry_","callbackEntry","hasEntry_","scheduleCallbacks_","queueEntry_","goog.Promise.prototype.addChildPromise_","goog.Promise.getCallbackEntry_","addCallbackEntry_","goog.Promise.prototype.resolve_","BLOCKED","unblockAndFulfill_","unblockAndReject_","goog.Promise.addUnhandledRejection_","goog.Promise.handleRejection_.call","goog.Promise.tryThen_","thenable","called","goog.Promise.prototype.scheduleCallbacks_","executeCallbacks_","goog.Promise.prototype.popEntry_","goog.Promise.prototype.executeCallback_","goog.Promise.invokeCallback_","goog.Promise.freelist_.put","goog.Promise.prototype.then","opt_onFulfilled","opt_onRejected","addChildPromise_","thenAlways","goog.Promise.prototype.thenAlways","goog.Promise.prototype","thenCatch","goog.Promise.prototype.thenCatch","cancel","goog.Promise.prototype.cancel","goog.Promise.prototype.cancelInternal_","childCount","childEntry","beforeChildEntry","childPromise","cancelInternal_","removeEntryAfter_","popEntry_","executeCallback_","goog.Promise.prototype.unblockAndFulfill_","goog.Promise.prototype.unblockAndReject_","goog.Promise.prototype.executeCallbacks_","goog.Promise.handleRejection_","goog.Promise.CancellationError.base","goog.Disposable","goog.Disposable.MONITORING_MODE","goog.Disposable.MonitoringMode.OFF","goog.Disposable.instances_","disposed_","onDisposeCallbacks_","OFF","goog.Disposable.prototype.dispose","disposeInternal","goog.reflect.sinkValue","goog.Disposable.prototype.disposeInternal","goog.userAgent.VERSION","goog.userAgent.OPERA","goog.userAgent.IE","goog.userAgent.EDGE","goog.userAgent.EDGE_OR_IE","goog.userAgent.GECKO","goog.userAgent.WEBKIT","goog.userAgent.getDocumentMode_","docMode","parseFloat","goog.userAgent.isVersionOrHigherCache_","goog.reflect.cache","valueFn","cacheObj","v1Subs","v2Subs","subCount","subIdx","v1Sub","v2Sub","v1Comp","v2Comp","parseInt","compatMode","goog.debug.freezeInternal_","freeze","HAS_W3C_EVENT_SUPPORT","Number","goog.userAgent.DOCUMENT_MODE","SET_KEY_CODE_TO_PREVENT_DEFAULT","goog.userAgent.isVersionOrHigher","PASSIVE_EVENTS","goog.global.addEventListener","passive","goog.global.removeEventListener","goog.events.Event","opt_target","returnValue_","goog.events.BrowserEvent","opt_e","opt_currentTarget","goog.events.Event.call","goog.events.BrowserEvent.base","event_","relevantTouch","MOUSEOVER","MOUSEOUT","goog.events.BrowserEvent.IE_POINTER_TYPE_MAP","goog.events.Event.prototype.preventDefault","2","TOUCH","3","PEN","4","MOUSE","goog.events.BrowserEvent.prototype.preventDefault","goog.events.BrowserEvent.superClass_.preventDefault.call","goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT","VK_F1","VK_F12","getBrowserEvent","goog.events.BrowserEvent.prototype.getBrowserEvent","goog.events.Listenable.IMPLEMENTED_BY_PROP","goog.events.ListenableKey.counter_","goog.events.Listener","opt_handler","handler","removed","callOnce","goog.events.Listener.prototype.markAsRemoved","goog.events.ListenerMap","typeCount_","goog.events.ListenerMap.prototype.removeByKey","markAsRemoved","goog.events.ListenerMap.findListenerIndex_","listenerArray","opt_useCapture","opt_listenerScope","listenerObj","goog.events.ListenerMap.prototype.add","typeStr","goog.events.LISTENER_MAP_PROP_","goog.events.onStringMap_","goog.events.listen","opt_options","goog.events.listenOnce","goog.events.wrapListener","goog.events.listen_","listenerMap","goog.events.getListenerMap_","goog.events.getProxy","proxyCallbackFunction","goog.events.handleBrowserEvent_","goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT","eventObject","goog.events.BrowserFeature.PASSIVE_EVENTS","goog.events.getOnString_","goog.events.listenerCountEstimate_","listenOnce","goog.events.unlisten","eventTargetListeners_","goog.events.unlistenByKey","removeByKey","goog.events.onString_","goog.events.fireListeners_","retval","goog.events.fireListener","listenerFn","listenerHandler","opt_evt","cur","evt","ieEvent","useReturnValue","parent","goog.events.LISTENER_WRAPPER_PROP_","handleEvent","goog.events.EventTarget","goog.Disposable.call","actualEventTarget_","parentEventTarget_","goog.events.EventTarget.prototype.listen","goog.events.EventTarget.prototype.listenOnce","goog.events.EventTarget.prototype.fireListeners","unlistenByKey","goog.Timer.callOnce","opt_delay","goog.Timer.MAX_TIMEOUT_","goog.Timer.INVALID_TIMEOUT_ID_","goog.Timer.promise","delay","timerKey","opt_result","goog.global.clearTimeout","goog.structs.getValues","goog.structs.getKeys","goog.structs.Map","opt_map","map_","keys_","count_","argLength","addAll","goog.structs.Map.prototype.cleanupKeysArray_","srcIndex","destIndex","goog.structs.Map.hasKey_","seen","goog.events.EventTarget.prototype.addEventListener","opt_capture","opt_handlerScope","goog.events.EventTarget.prototype.removeEventListener","dispatchEvent","goog.events.EventTarget.prototype.dispatchEvent","ancestorsTree","ancestor","getParentEventTarget","oldEvent","opt_ancestorsTree","fireListeners","goog.events.EventTarget.prototype.disposeInternal","goog.events.EventTarget.superClass_.disposeInternal.call","goog.structs.Map.prototype.getValues","cleanupKeysArray_","goog.structs.Map.prototype","goog.structs.Map.prototype.getKeys","clear","goog.structs.Map.prototype.clear","goog.structs.Map.prototype.get","opt_val","goog.structs.Map.prototype.set","goog.structs.Map.prototype.forEach","goog.uri.utils.splitRe_","goog.Uri","opt_uri","opt_ignoreCase","domain_","userInfo_","scheme_","port_","fragment_","path_","ignoreCase_","setScheme","setUserInfo","setDomain","setPort","setPath","queryData_","goog.Uri.QueryData","encodedQuery_","keyMap_","setQueryData","setFragment","SCHEME","goog.Uri.decodeOrEmpty_","USER_INFO","DOMAIN","PORT","PATH","QUERY_DATA","FRAGMENT","goog.Uri.prototype.setScheme","newScheme","opt_decode","goog.Uri.prototype.setPort","newPort","goog.Uri.prototype.setQueryData","queryData","goog.Uri.QueryData.prototype.setIgnoreCase","ignoreCase","ensureKeyMapInitialized_","invalidateCache_","lowerCase","setValues","setIgnoreCase","goog.Uri.encodeSpecialChars_","goog.Uri.reDisallowedInQuery_","goog.Uri.prototype.setParameterValue","goog.Uri.prototype.getParameterValue","paramName","goog.Uri.parse","uri","goog.Uri.create","opt_domain","opt_path","fireauth.iframeclient.SCHEME","opt_preserveReserved","unescapedPart","extra","opt_removeDoubleEncoding","encoded","goog.Uri.encodeChar_","goog.Uri.prototype.toString","scheme","getScheme","goog.Uri.reDisallowedInSchemeOrUserInfo_","domain","getDomain","userInfo","getUserInfo","port","getPort","getPath","hasDomain","goog.Uri.reDisallowedInAbsolutePath_","goog.Uri.reDisallowedInRelativePath_","query","getEncodedQuery","fragment","getFragment","goog.Uri.reDisallowedInFragment_","opt_query","goog.Uri.QueryData.prototype.ensureKeyMapInitialized_","goog.uri.utils.parseQueryData","encodedQuery","pairs","indexOfEquals","goog.Uri.QueryData.createFromMap","goog.Uri.QueryData.prototype.remove","getKeyName_","goog.Uri.QueryData.prototype.containsKey","goog.Uri.QueryData.prototype.setValues","goog.Uri.QueryData.prototype.getKeyName_","keyName","goog.Uri.QueryData.prototype.add","goog.Uri.QueryData.prototype","goog.Uri.QueryData.prototype.clear","goog.Uri.QueryData.prototype.forEach","opt_scope","goog.Uri.QueryData.prototype.getKeys","vals","goog.Uri.QueryData.prototype.getValues","opt_key","containsKey","goog.Uri.QueryData.prototype.set","goog.Uri.QueryData.prototype.get","opt_default","goog.Uri.QueryData.prototype.toString","encodedKey","CAN_ADD_NAME_OR_TYPE_ATTRIBUTES","goog.string.Const","stringConstValueWithSecurityContract__googStringSecurityPrivate_","STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_","goog.string.Const.TYPE_MARKER_","goog.string.Const.unwrap","stringConst","implementsGoogStringTypedString","getTypedStringValue","goog.string.Const.prototype.getTypedStringValue","goog.string.Const.prototype.toString","goog.string.Const.create__googStringSecurityPrivate_","goog.html.TrustedResourceUrl","privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_","TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.TrustedResourceUrl.unwrap","trustedResourceUrl","goog.html.TrustedResourceUrl.format","formatStr","goog.html.TrustedResourceUrl.BASE_URL_.test","goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse","goog.html.TrustedResourceUrl.FORMAT_MARKER_","goog.html.TrustedResourceUrl.prototype.getTypedStringValue","goog.html.TrustedResourceUrl.prototype.toString","goog.html.TrustedResourceUrl.BASE_URL_","goog.html.SafeUrl","privateDoNotAccessOrElseSafeHtmlWrappedValue_","SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeUrl.unwrap","safeUrl","goog.html.SafeUrl.prototype.getTypedStringValue","goog.html.SafeUrl.prototype.toString","goog.html.SAFE_URL_PATTERN_","goog.html.SAFE_URL_PATTERN_.test","goog.html.SafeUrl.INNOCUOUS_STRING","goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse","goog.html.SafeHtml","SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeHtml.prototype.getTypedStringValue","goog.html.SafeHtml.prototype.toString","goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_","initSecurityPrivateDoNotAccessOrElse_","goog.dom.getElementHelper_","getElementById","goog.dom.setProperties","properties","cssText","htmlFor","goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty","goog.dom.DIRECT_ATTRIBUTE_MAP_","lastIndexOf","cellpadding","cellspacing","colspan","frameborder","maxlength","nonce","role","rowspan","usemap","valign","opt_attributes","attributes","goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES","tagNameArr","goog.string.htmlEscape","goog.dom.append_","childHandler","startIndex","goog.dom.isNodeList","goog.json.Serializer.prototype.serializeInternal","sep","serializeInternal","serializeArray","Boolean","serializeString_","serializeObject_","isFinite","serialize","goog.json.Serializer","goog.json.Serializer.charToJsonCharCache_","\"","\\","/","\b","\f","\n","\r","\t","\u000b","goog.json.Serializer.charsToReplace_","fireauth.util.isLocalStorageNotSynchronized","fireauth.util.getUserAgentString","fireauth.util.getCurrentUrl","fireauth.util.goTo","opt_window","finalUrl","goog.html.SafeUrl.sanitize","fireauth.util.isMobileBrowser","opt_userAgent","uaLower","fireauth.util.closeWindow","fireauth.util.popup","opt_url","opt_width","opt_height","opt_name","screen","availHeight","availWidth","option","resizable","statusbar","toolbar","fireauth.util.getBrowserName","fireauth.util.BrowserName.FIREFOX","scrollbars","parentWin","safeLinkRef","linkRef","optionString","standalone","noreferrer","click","createEvent","initMouseEvent","newWin","sanitizedLinkRef","opener","goog.html.SafeHtml.unwrap","safeHtml","noopener","fireauth.util.IP_ADDRESS_REGEXP_","fireauth.util.EMAIL_ADDRESS_REGEXP_","fireauth.util.onDomReady","goog.global.document","readyState","LOAD","fireauth.util.isAndroidOrIosFileEnvironment","fireauth.util.getCurrentScheme","fireauth.util.isIframe","fireauth.util.isWorker","fireauth.util.getEnvironment","REACT_NATIVE","NODE","WORKER","BROWSER","fireauth.util.isNativeEnvironment","environment","FIREFOX","CHROME","OPERA","IEMOBILE","IE","EDGE","SILK","BLACKBERRY","WEBOS","ANDROID","OTHER","fireauth.util.BrowserName.CHROME","SAFARI","fireauth.util.Framework","FIREBASEUI","fireauth.util.getClientVersion","clientVersion","opt_frameworkVersion","frameworkVersion","frameworkSet","providedFrameworks","sort","reportedEnvironment","fireauth.util.getObjectRef","varStrName","pieces","fireauth.util.isWebStorageSupported","storage","localStorage","fireauth.util.generateEventId","setItem","removeItem","indexedDB","fireauth.util.isPopupRedirectSupported","fireauth.util.isHttpOrHttps","fireauth.util.runsInBackground","fireauth.util.stringifyJSON","goog.json.serialize","fireauth.util.copyWithoutNullsOrUndefined","trimmedObj","fireauth.util.parseJSON","opt_prefix","fireauth.util.iframeCanSyncWebStorage","fireauth.util.resetUnloadedGapiModules","beacon","___jsl","hint","CP","fireauth.util.Delay","shortDelay","longDelay","shortDelay_","longDelay_","isMobile_","fireauth.util.isAppVisible","visibilityState","fireauth.util.utcTimestampToDateString","utcTimestamp","toUTCString","fireauth.util.isAuthHandlerOrIframe","fireauth.util.Delay.prototype.get","onLine","connection","fireauth.util.Delay.OFFLINE_DELAY_MS_","fireauth.object.readonlyConfigurable_","fireauth.deprecation.shownMessages_","fireauth.deprecation.log","abcd","fireauth.object.setReadonlyProperty","fireauth.object.setReadonlyProperties","fireauth.object.makeReadonlyCopy","fireauth.object.unsafeCreateReadOnlyCopy","copy","fireauth.ActionCodeInfo","fireauth.ActionCodeInfo.ServerFieldName.EMAIL","newEmail","fireauth.ActionCodeInfo.ServerFieldName.NEW_EMAIL","operation","fireauth.ActionCodeInfo.ServerFieldName.REQUEST_TYPE","fireauth.ActionCodeInfo.RequestType.EMAIL_SIGNIN","fireauth.ActionCodeInfo.DataField.FROM_EMAIL","fireauth.ActionCodeInfo.DataField.EMAIL","fireauth.ActionCodeInfo.PropertyName.OPERATION","fireauth.ActionCodeInfo.PropertyName.DATA","EMAIL_SIGNIN","EMAIL","NEW_EMAIL","REQUEST_TYPE","FROM_EMAIL","DATA","OPERATION","fireauth.AuthError","fireauth.AuthError.ERROR_CODE_PREFIX","fireauth.AuthError.MESSAGES_","fireauth.AuthError.fromPlainObject","fireauth.AuthError.ERROR_CODE_PREFIX.length","toPlainObject","fireauth.AuthError.prototype.toPlainObject","toJSON","fireauth.AuthError.prototype.toJSON","ARGUMENT_ERROR","APP_NOT_AUTHORIZED","APP_NOT_INSTALLED","CAPTCHA_CHECK_FAILED","CODE_EXPIRED","CORDOVA_NOT_READY","CORS_UNSUPPORTED","CREDENTIAL_ALREADY_IN_USE","CREDENTIAL_MISMATCH","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","DYNAMIC_LINK_NOT_ACTIVATED","EMAIL_EXISTS","EXPIRED_OOB_CODE","EXPIRED_POPUP_REQUEST","INTERNAL_ERROR","INVALID_APP_CREDENTIAL","INVALID_APP_ID","INVALID_AUTH","INVALID_AUTH_EVENT","INVALID_CODE","INVALID_CONTINUE_URI","INVALID_CORDOVA_CONFIGURATION","INVALID_CUSTOM_TOKEN","INVALID_DYNAMIC_LINK_DOMAIN","INVALID_EMAIL","INVALID_API_KEY","INVALID_CERT_HASH","INVALID_IDP_RESPONSE","INVALID_PERSISTENCE","INVALID_MESSAGE_PAYLOAD","INVALID_OAUTH_PROVIDER","INVALID_OAUTH_CLIENT_ID","INVALID_ORIGIN","INVALID_OOB_CODE","INVALID_PASSWORD","INVALID_PHONE_NUMBER","INVALID_PROVIDER_ID","INVALID_RECIPIENT_EMAIL","INVALID_SENDER","INVALID_SESSION_INFO","MISSING_ANDROID_PACKAGE_NAME","MISSING_AUTH_DOMAIN","MISSING_APP_CREDENTIAL","MISSING_CODE","MISSING_CONTINUE_URI","MISSING_IFRAME_START","MISSING_IOS_BUNDLE_ID","MISSING_OR_INVALID_NONCE","MISSING_PHONE_NUMBER","MISSING_SESSION_INFO","MODULE_DESTROYED","NEED_CONFIRMATION","NETWORK_REQUEST_FAILED","NO_AUTH_EVENT","NO_SUCH_PROVIDER","NULL_USER","OPERATION_NOT_ALLOWED","OPERATION_NOT_SUPPORTED","POPUP_BLOCKED","POPUP_CLOSED_BY_USER","PROVIDER_ALREADY_LINKED","QUOTA_EXCEEDED","REDIRECT_CANCELLED_BY_USER","REDIRECT_OPERATION_PENDING","REJECTED_CREDENTIAL","TIMEOUT","TOKEN_EXPIRED","TOO_MANY_ATTEMPTS_TRY_LATER","UNAUTHORIZED_DOMAIN","UNSUPPORTED_PERSISTENCE","USER_CANCELLED","USER_DELETED","USER_DISABLED","USER_MISMATCH","USER_SIGNED_OUT","WEAK_PASSWORD","WEB_STORAGE_UNSUPPORTED","fireauth.ActionCodeSettings","settingsObj","continueUrl","fireauth.ActionCodeSettings.RawField.URL","initialize_","continueUrl_","amv_","apn_","installApp_","androidSettings","fireauth.ActionCodeSettings.RawField.ANDROID","apn","fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME","installApp","fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP","amv","fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION","ibi_","iosSettings","fireauth.ActionCodeSettings.RawField.IOS","ibi","fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID","canHandleCodeInApp","fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP","canHandleCodeInApp_","dynamicLinkDomain","fireauth.ActionCodeSettings.RawField.DYNAMIC_LINK_DOMAIN","dynamicLinkDomain_","DYNAMIC_LINK_DOMAIN","HANDLE_CODE_IN_APP","IOS","URL","INSTALL_APP","MINIMUM_VERSION","PACKAGE_NAME","BUNDLE_ID","fireauth.ActionCodeSettings.prototype.buildRequest","androidPackageName","androidMinimumVersion","androidInstallApp","iOSBundleId","goog.crypt.base64.byteToCharMap_","goog.crypt.base64.charToByteMap_","goog.crypt.base64.decodeString","goog.crypt.base64.decodeStringInternal_","pushByte","getByte","default_val","nextCharIndex","goog.crypt.base64.init_","goog.crypt.base64.ENCODED_VALS.charAt","goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt","fireauth.IdToken","localId_","sub","providerId_","provider_id","sign_in_provider","anonymous_","is_anonymous","fireauth.IdToken.parse","tokenString","fireauth.IdToken.parseIdTokenClaims","iss","aud","fields","padLen","jsonInfo","isAnonymous","fireauth.IdToken.prototype.isAnonymous","fireauth.constants.Endpoint","PRODUCTION","firebaseAuthEndpoint","secureTokenEndpoint","STAGING","TEST","opt_id","endpointKey","firebaseEndpoint","endpoint","fireauth.constants.getEndpointConfig","fireauth.idp.RESERVED_OAUTH1_PARAMS","fireauth.idp.RESERVED_OAUTH2_PARAMS","fireauth.idp.Settings","FACEBOOK","languageParam","popupWidth","popupHeight","providerId","reservedOAuthParameters","GITHUB","GOOGLE","TWITTER","fireauth.idp.getIdpSettings","fireauth.AdditionalUserInfo.fromPlainObject","resp","factory","fireauth.FacebookAdditionalUserInfo","fireauth.GoogleAdditionalUserInfo","fireauth.GithubAdditionalUserInfo","fireauth.TwitterAdditionalUserInfo","fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID","fireauth.FederatedAdditionalUserInfo","fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN","fireauth.GenericAdditionalUserInfo","ID_TOKEN","PROVIDER_ID","info","idToken","ANONYMOUS","CUSTOM","isNewUser","fireauth.GenericAdditionalUserInfo.call","fireauth.FederatedAdditionalUserInfo.base","profile","rawUserInfo","fireauth.FederatedAdditionalUserInfo.call","fireauth.FacebookAdditionalUserInfo.base","fireauth.GithubAdditionalUserInfo.base","login","fireauth.GoogleAdditionalUserInfo.base","fireauth.TwitterAdditionalUserInfo.base","screenName","fireauth.ActionCodeUrl","actionCodeUrl","uri_","fireauth.DynamicLink.parseDeepLink","getParameterValue","doubleDeepLink","iOSdeepLink","fireauth.AuthCredential.verifyTokenResponseUid","idTokenResolver","fireauth.RpcHandler.AuthServerField.ID_TOKEN","parsedIdToken","fireauth.SAMLAuthCredential","pendingToken","pendingToken_","fireauth.SAMLAuthCredential.prototype.makeVerifyAssertionRequest_","requestUri","oauthResponse","signInMethod","accessToken","oauthToken","oauthTokenSecret","fireauth.OAuthCredential.prototype.makeVerifyAssertionRequest_","postBody","id_token","access_token","secret","oauth_token_secret","fireauth.FederatedProvider","opt_reservedParams","reservedParams_","isOAuthProvider","customParameters_","languageParameter","defaultLanguageCode","fireauth.constants.SAML_PREFIX","fireauth.FederatedProvider.call","fireauth.SAMLAuthProvider.base","fireauth.OAuthProvider","fireauth.OAuthProvider.base","scopes_","fireauth.FacebookAuthProvider","fireauth.OAuthProvider.call","fireauth.FacebookAuthProvider.base","accessTokenOrObject","credential","fireauth.GithubAuthProvider","fireauth.GithubAuthProvider.base","fireauth.GithubAuthProvider.credential","fireauth.GoogleAuthProvider","fireauth.GoogleAuthProvider.base","addScope","fireauth.GoogleAuthProvider.credential","idTokenOrObject","fireauth.TwitterAuthProvider","fireauth.TwitterAuthProvider.base","tokenOrObject","tokenObject","fireauth.OAuthCredential","fireauth.EmailAuthCredential","opt_signInMethod","email_","password_","PASSWORD","fireauth.EmailAuthProvider","EMAIL_LINK_SIGN_IN_METHOD","EMAIL_PASSWORD_SIGN_IN_METHOD","fireauth.EmailAuthProvider.credentialWithLink","emailLink","fireauth.EmailAuthProvider.getActionCodeFromSignInEmailLink","CODE","SIGN_IN","MODE","verificationId","verificationCode","temporaryProof","phoneNumber","params_","PHONE","fireauth.PhoneAuthCredential.prototype.makeVerifyPhoneNumberRequest_","sessionInfo","fireauth.PhoneAuthProvider","opt_auth","auth_","auth","fireauth.PhoneAuthProvider.credential","fireauth.PhoneAuthCredential","oauthAccessToken","accessTokenSecret","rawNonce","oauthIdToken","fireauth.FacebookAuthProvider.credential","fireauth.TwitterAuthProvider.credential","fireauth.AuthProvider.checkIfOAuthSupported","provider","fireauth.AuthEvent","opt_eventId","opt_urlResponse","opt_sessionId","opt_error","opt_postBody","type_","eventId_","urlResponse_","sessionId_","postBody_","error_","rawResponse","eventId","urlResponse","sessionId","fireauth.UniversalLinkSubscriber","masterCb_","cb_","getIdTokenProvider","fireauth.SAMLAuthCredential.prototype.getIdTokenProvider","rpcHandler","verifyAssertion","makeVerifyAssertionRequest_","linkToIdToken","fireauth.SAMLAuthCredential.prototype.linkToIdToken","verifyAssertionForLinking","matchIdTokenWithUid","fireauth.SAMLAuthCredential.prototype.matchIdTokenWithUid","verifyAssertionForExisting","fireauth.SAMLAuthCredential.prototype.toPlainObject","fireauth.OAuthCredential.prototype.getIdTokenProvider","fireauth.OAuthCredential.prototype.linkToIdToken","fireauth.OAuthCredential.prototype.matchIdTokenWithUid","fireauth.OAuthCredential.prototype.toPlainObject","setCustomParameters","fireauth.FederatedProvider.prototype.setCustomParameters","customParameters","fireauth.SAMLAuthProvider","fireauth.OAuthProvider.prototype.addScope","getScopes","fireauth.OAuthProvider.prototype.getScopes","fireauth.OAuthProvider.prototype.credential","opt_idToken","opt_accessToken","opt_rawNonce","fireauth.EmailAuthCredential.prototype.getIdTokenProvider","invokeRpc_","fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN","oobCode","fireauth.RpcHandler.ApiMethod.VERIFY_PASSWORD","fireauth.EmailAuthCredential.prototype.linkToIdToken","fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN_FOR_LINKING","fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE","fireauth.EmailAuthCredential.prototype.matchIdTokenWithUid","fireauth.EmailAuthCredential.prototype.toPlainObject","EMAIL_LINK","EMAIL_PASSWORD","fireauth.PhoneAuthCredential.prototype.getIdTokenProvider","verifyPhoneNumber","makeVerifyPhoneNumberRequest_","fireauth.PhoneAuthCredential.prototype.linkToIdToken","fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_LINKING","fireauth.PhoneAuthCredential.prototype.matchIdTokenWithUid","fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_EXISTING","fireauth.PhoneAuthCredential.prototype.toPlainObject","fireauth.PhoneAuthProvider.prototype.verifyPhoneNumber","applicationVerifier","rpcHandler_","verify","fireauth.RpcHandler.prototype.sendVerificationCode","fireauth.RpcHandler.ApiMethod.SEND_VERIFICATION_CODE","sendVerificationCode","recaptchaToken","PHONE_SIGN_IN_METHOD","fireauth.AuthEvent.prototype.toPlainObject","fireauth.UniversalLinkSubscriber.instance_","fireauth.InvalidOriginError","fireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_","fireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_","fireauth.InvalidOriginError.base","fireauth.AuthErrorWithCredential","opt_credentialInfo","fireauth.AuthError.call","fireauth.AuthErrorWithCredential.base","credentialInfo","fireauth.AuthProvider.getCredentialFromResponse","goog.net.XmlHttpFactory","goog.net.XmlHttpFactory.prototype.getOptions","cachedOptions_","internalGetOptions","goog.net.DefaultXmlHttpFactory","goog.net.DefaultXmlHttpFactory.prototype.getProgId_","ieProgId_","ActiveXObject","ACTIVE_X_IDENTS","candidate","goog.net.CorsXmlHttpFactory","xdr_","XDomainRequest","UNINITIALIZED","handleLoad_","handleError_","onprogress","handleProgress_","handleTimeout_","goog.net.IeCorsXhrAdapter.prototype.setReadyState_","goog.debug.LogRecord","level","msg","loggerName","opt_time","opt_sequenceNumber","fireauth.UniversalLinkSubscriber.prototype.subscribe","this.masterCb_","unsubscribe","fireauth.UniversalLinkSubscriber.prototype.unsubscribe","ele","fireauth.AuthErrorWithCredential.prototype.toPlainObject","fireauth.AuthErrorWithCredential.prototype.toJSON","createInstance","goog.net.DefaultXmlHttpFactory.prototype.createInstance","progId","getProgId_","goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions","USE_NULL_FUNCTION","LOCAL_REQUEST_ERROR","goog.net.XmlHttp.factory_","goog.net.CorsXmlHttpFactory.prototype.createInstance","goog.net.IeCorsXhrAdapter","goog.net.CorsXmlHttpFactory.prototype.internalGetOptions","goog.net.IeCorsXhrAdapter.prototype.open","opt_async","goog.net.IeCorsXhrAdapter.prototype.send","opt_content","goog.net.IeCorsXhrAdapter.prototype","abort","goog.net.IeCorsXhrAdapter.prototype.abort","goog.net.IeCorsXhrAdapter.prototype.setRequestHeader","getResponseHeader","goog.net.IeCorsXhrAdapter.prototype.getResponseHeader","contentType","goog.net.IeCorsXhrAdapter.prototype.handleLoad_","OK","setReadyState_","COMPLETE","goog.net.IeCorsXhrAdapter.prototype.handleError_","INTERNAL_SERVER_ERROR","goog.net.IeCorsXhrAdapter.prototype.handleTimeout_","goog.net.IeCorsXhrAdapter.prototype.handleProgress_","LOADING","goog.net.IeCorsXhrAdapter.prototype.getAllResponseHeaders","exception_","goog.debug.Logger","children_","level_","goog.debug.Logger.Level","goog.debug.LogRecord.prototype.reset","goog.debug.LogRecord.nextSequenceNumber_","goog.debug.Logger.Level.prototype.toString","goog.debug.Logger.Level.SEVERE","goog.debug.Logger.Level.WARNING","goog.debug.Logger.Level.CONFIG","goog.debug.Logger.Level.FINE","goog.debug.Logger.prototype.log","opt_exception","goog.debug.Logger.prototype.getEffectiveLevel","getEffectiveLevel","isLoggable","logRecord","doLogRecord_","goog.debug.LogManager.loggers_","goog.debug.LogManager.rootLogger_","goog.debug.Logger.ROOT_LOGGER_NAME","goog.debug.LogManager.rootLogger_.setLevel","logger","lastDotIndex","leafName","parentLogger","goog.debug.LogManager.getLogger","goog.log.fine","goog.net.FetchXmlHttpFactory","worker","worker_","goog.net.FetchXmlHttp","goog.events.EventTarget.call","goog.net.FetchXmlHttp.base","goog.net.FetchXmlHttp.RequestState.UNSENT","requestHeaders_","responseHeaders_","method_","url_","inProgress_","logger_","goog.net.FetchXmlHttpFactory.prototype.createInstance","instance","goog.functions.constant","retValue","UNSENT","goog.net.FetchXmlHttp.prototype.dispatchCallback_","goog.net.XhrIo","opt_xmlHttpFactory","goog.net.XhrIo.base","xmlHttpFactory_","active_","xhrOptions_","xhr_","lastError_","lastMethod_","lastUri_","inAbort_","inOpen_","inSend_","errorDispatched_","timeoutInterval_","timeoutId_","responseType_","goog.net.XhrIo.ResponseType.DEFAULT","useXhr2Timeout_","withCredentials_","goog.net.FetchXmlHttp.prototype.open","OPENED","dispatchCallback_","goog.net.FetchXmlHttp.prototype","goog.net.FetchXmlHttp.prototype.send","opt_data","requestInit","cache","handleResponse_","handleSendFailure_","goog.net.FetchXmlHttp.prototype.abort","DONE","goog.net.FetchXmlHttp.prototype.handleResponse_","HEADER_RECEIVED","handleResponseText_","goog.net.FetchXmlHttp.prototype.handleResponseText_","goog.net.FetchXmlHttp.prototype.handleSendFailure_","goog.net.FetchXmlHttp.prototype.setRequestHeader","goog.net.FetchXmlHttp.prototype.getResponseHeader","goog.net.FetchXmlHttp.prototype.getAllResponseHeaders","lines","iter","pair","goog.net.XhrIo.HTTP_SCHEME_PATTERN","goog.net.XhrIo.METHODS_WITH_FORM_DATA","goog.net.XhrIo.prototype.send","opt_method","opt_headers","createXhr","goog.net.XmlHttp.factory_.createInstance","getOptions","goog.net.XmlHttp.factory_.getOptions","onReadyStateChange_","formatMsg_","content","goog.structs.forEach","contentTypeKey","goog.net.XhrIo.isContentTypeHeader_","goog.array.find","contentIsFormData","goog.net.XhrIo.CONTENT_TYPE_HEADER","goog.net.XhrIo.FORM_CONTENT_TYPE","cleanUpTimeoutTimer_","goog.net.XhrIo.shouldUseXhr2Timeout_","timeout_","goog.net.XhrIo.prototype.error_","dispatchErrors_","cleanUpXhr_","goog.net.XhrIo.prototype.dispatchErrors_","ERROR","goog.net.XhrIo.prototype.onReadyStateChangeHelper_","getReadyState","getStatus","READY_STATE_CHANGE","isComplete","isSuccess","CREATED","ACCEPTED","NO_CONTENT","PARTIAL_CONTENT","NOT_MODIFIED","QUIRK_IE_NO_CONTENT","goog.global.self","goog.global.self.location","goog.global.self.location.protocol","goog.net.XhrIo.HTTP_SCHEME_PATTERN.test","SUCCESS","LOADED","getStatusText","goog.net.XhrIo.prototype.cleanUpXhr_","opt_fromDispose","clearedOnReadyStateChange","READY","goog.net.XhrIo.prototype.cleanUpTimeoutTimer_","goog.net.XhrIo.prototype.getReadyState","goog.net.XhrIo.prototype.getStatus","goog.net.XhrIo.prototype.formatMsg_","goog.async.Deferred","opt_onCancelFunction","opt_defaultScope","sequence_","onCancelFunction_","defaultScope_","hadError_","fired_","silentlyCanceled_","blocking_","blocked_","unhandledErrorId_","branches_","goog.async.Deferred.prototype.updateResult_","fire_","goog.async.Deferred.prototype.check_","hasFired","goog.async.Deferred.AlreadyCalledError","goog.async.Deferred.prototype.addCallbacks","goog.async.Deferred.prototype.hasErrback_","sequenceRow","goog.async.Deferred.prototype.fire_","hasErrback_","goog.async.Deferred.errorMap_","id_","isNewlyBlocked","unhandledException","sequenceEntry","errback","onCallback","continue_","onErrback","addCallbacks","deferredError","goog.async.Deferred.Error_","goog.async.Deferred.CanceledError","Ah","throwError","goog.net.XhrIo.prototype.timeout_","goog.net.XhrIo.prototype","goog.net.XhrIo.prototype.abort","ABORT","goog.net.XhrIo.prototype.disposeInternal","goog.net.XhrIo.superClass_.disposeInternal.call","goog.net.XhrIo.prototype.disposeInternal.base","goog.net.XhrIo.prototype.onReadyStateChange_","isDisposed","onReadyStateChangeHelper_","onReadyStateChangeEntryPoint_","goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_","getResponse","goog.net.XhrIo.prototype.getResponse","TEXT","ARRAY_BUFFER","mozResponseArrayBuffer","goog.async.Deferred.prototype.cancel","opt_deepCancel","check_","updateResult_","goog.async.Deferred.prototype.continue_","goog.async.Deferred.prototype.callback","goog.async.Deferred.prototype.then","rej","goog.async.Deferred.Error_.prototype.throwError","goog.net.jsloader.safeLoad","trustedUri","script_","goog.net.jsloader.cancel_","timeoutDuration","goog.net.jsloader.DEFAULT_TIMEOUT","goog.net.jsloader.cleanup_","goog.net.jsloader.Error","goog.net.jsloader.ErrorCode.TIMEOUT","cleanupWhenDone","script.onerror","goog.net.jsloader.ErrorCode.LOAD_ERROR","charset","goog.net.jsloader.getScriptParentElement_","headElements","getElementsByTagName","scriptNode","goog.dom.TagName.SCRIPT","removeScriptNode","opt_timeout","LOAD_ERROR","goog.net.jsloader.Error.base","fireauth.XmlHttpFactory","xmlHttpRequest","xmlHttpRequest_","apiKey","opt_config","opt_firebaseClientVersion","apiKey_","secureTokenEndpoint_","fireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_","secureTokenTimeout_","secureTokenTimeout","fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_","secureTokenHeaders_","secureTokenHeaders","fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_","firebaseEndpoint_","fireauth.RpcHandler.FIREBASE_ENDPOINT_","firebaseTimeout_","firebaseTimeout","fireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_","firebaseHeaders_","firebaseHeaders","fireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_","rpcHandlerXhrFactory_","fireauth.XmlHttpFactory.prototype.createInstance","fireauth.XmlHttpFactory.prototype.internalGetOptions","Content-Type","fireauth.RpcHandler.prototype.updateCustomLocaleHeader","languageCode","fireauth.RpcHandler.FIREBASE_LOCALE_KEY_","fireauth.RpcHandler.prototype.updateClientVersion","fireauth.RpcHandler.prototype.sendXhr_","opt_callback","opt_httpMethod","fireauth.util.supportsCors","chromeVersion","sendXhr","sendXhrUsingXhrIo_","fireauth.RpcHandler.loadGApi_","gapi","client","fireauth.RpcHandler.GAPI_CALLBACK_NAME_","fireauth.RpcHandler.GAPI_SRC_","goog.async.Deferred.prototype.addErrback","addErrback","fireauth.RpcHandler.loadGApiJs_","sendXhrUsingGApiClient_","fireauth.RpcHandler","fireauth.RpcHandler.prototype.sendXhrUsingXhrIo_","xhrIo","requestTimeout","goog.net.XhrIo.prototype.getResponseText","getResponseText","dispose","fireauth.RpcHandler.validateRequestHasEmail_","fireauth.util.EMAIL_ADDRESS_REGEXP_.test","fireauth.RpcHandler.validateEmailIfPresent_","fireauth.RpcHandler.validateIdTokenResponse_","fireauth.RpcHandler.validateVerifyPhoneNumberRequest_","fireauth.RpcHandler.prototype.sendXhrUsingGApiClient_","fireauth.RpcHandler.loadGApi_.then","setApiKey","oauth2Token","setToken","authType","signInAnonymously","fireauth.RpcHandler.prototype.signInAnonymously","fireauth.RpcHandler.ApiMethod.SIGN_IN_ANONYMOUSLY","updateEmail","fireauth.RpcHandler.prototype.updateEmail","fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO","updatePassword","fireauth.RpcHandler.prototype.updatePassword","newPassword","fireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_","photoUrl","fireauth.RpcHandler.validateVerifyAssertionRequest_","fireauth.RpcHandler.processVerifyAssertionResponse_","fireauth.constants.OIDC_PREFIX","NONCE","fireauth.RpcHandler.validateVerifyAssertionResponse_","needConfirmation","fireauth.AuthErrorWithCredential.fromPlainObject","FEDERATED_USER_ID_ALREADY_LINKED","errorMessage","fireauth.RpcHandler.getDeveloperErrorFromCode_","fireauth.RpcHandler.prototype.verifyAssertion","returnIdpCredential","fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION","fireauth.RpcHandler.prototype.verifyAssertionForLinking","fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_LINKING","fireauth.RpcHandler.prototype.verifyAssertionForExisting","autoCreate","fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_EXISTING","fireauth.RpcHandler.validateApplyActionCodeRequest_","updateProfile","fireauth.RpcHandler.prototype.updateProfile","profileData","fieldsToDelete","enumName","fieldName","fieldValue","deleteAttribute","fireauth.RpcHandler.prototype","sendPasswordResetEmail","fireauth.RpcHandler.prototype.sendPasswordResetEmail","additionalRequestData","requestType","PASSWORD_RESET","fireauth.RpcHandler.ApiMethod.GET_OOB_CODE","sendSignInLinkToEmail","fireauth.RpcHandler.prototype.sendSignInLinkToEmail","fireauth.RpcHandler.ApiMethod.GET_EMAIL_SIGNIN_CODE","sendEmailVerification","fireauth.RpcHandler.prototype.sendEmailVerification","VERIFY_EMAIL","fireauth.RpcHandler.ApiMethod.GET_EMAIL_VERIFICATION_CODE","fireauth.RpcHandler.prototype.verifyPhoneNumber","fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER","confirmPasswordReset","fireauth.RpcHandler.prototype.confirmPasswordReset","fireauth.RpcHandler.ApiMethod.RESET_PASSWORD","checkActionCode","fireauth.RpcHandler.prototype.checkActionCode","fireauth.RpcHandler.ApiMethod.CHECK_ACTION_CODE","applyActionCode","fireauth.RpcHandler.prototype.applyActionCode","fireauth.RpcHandler.ApiMethod.APPLY_OOB_CODE","APPLY_OOB_CODE","requestValidator","responseField","CHECK_ACTION_CODE","responseValidator","fireauth.RpcHandler.validateCheckActionCodeResponse_","CREATE_ACCOUNT","fireauth.RpcHandler.validateCreateAccountRequest_","returnSecureToken","CREATE_AUTH_URI","DELETE_ACCOUNT","requestRequiredFields","DELETE_LINKED_ACCOUNTS","fireauth.RpcHandler.validateDeleteLinkedAccountsRequest_","deleteProvider","EMAIL_LINK_SIGNIN","EMAIL_LINK_SIGNIN_FOR_LINKING","GET_ACCOUNT_INFO","GET_EMAIL_SIGNIN_CODE","fireauth.RpcHandler.validateEmailSignInCodeRequest_","GET_EMAIL_VERIFICATION_CODE","fireauth.RpcHandler.validateEmailVerificationCodeRequest_","GET_OOB_CODE","fireauth.RpcHandler.validateOobCodeRequest_","GET_PROJECT_CONFIG","cachebuster","httpMethod","GET","GET_RECAPTCHA_PARAM","fireauth.RpcHandler.validateGetRecaptchaParamResponse_","recaptchaSiteKey","RESET_PASSWORD","SEND_VERIFICATION_CODE","SESSION_INFO","SET_ACCOUNT_INFO","SET_ACCOUNT_INFO_SENSITIVE","fireauth.RpcHandler.validateSetAccountInfoSensitive_","SIGN_IN_ANONYMOUSLY","VERIFY_ASSERTION","responsePreprocessor","VERIFY_ASSERTION_FOR_EXISTING","fireauth.RpcHandler.validateVerifyAssertionForExistingResponse_","USER_NOT_FOUND","VERIFY_ASSERTION_FOR_LINKING","fireauth.RpcHandler.validateVerifyAssertionLinkRequest_","VERIFY_CUSTOM_TOKEN","fireauth.RpcHandler.validateVerifyCustomTokenRequest_","VERIFY_PASSWORD","fireauth.RpcHandler.validateVerifyPasswordRequest_","VERIFY_PHONE_NUMBER","VERIFY_PHONE_NUMBER_FOR_LINKING","fireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_","fireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_","VERIFY_PHONE_NUMBER_FOR_EXISTING","customErrorMap","fireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_","fireauth.RpcHandler.prototype.invokeRpc_","fireauth.object.hasNonEmptyFields","opt_fields","field","POST","fireauth.RpcHandler.prototype.requestFirebaseEndpoint","opt_customErrorMap","opt_cachebuster","setParameterValue","getApiKey","isGet","sendXhr_","fireauth.RpcHandler.getDeveloperError_","requestFirebaseEndpoint","tempResponse","serverErrorCode","Wh","errorReasonMap","keyInvalid","ipRefererBlocked","apiaryError","prefixCode","errorMap","MISSING_CUSTOM_TOKEN","INVALID_IDENTIFIER","MISSING_PASSWORD","PASSWORD_LOGIN_DISABLED","INVALID_PENDING_TOKEN","EMAIL_NOT_FOUND","RESET_PASSWORD_EXCEED_LIMIT","MISSING_OOB_CODE","INVALID_ID_TOKEN","INVALID_TEMPORARY_PROOF","SESSION_EXPIRED","fireauth.iframeclient.IframeWrapper","iframe_","onIframeOpen_","fireauth.iframeclient.IframeWrapper.prototype.open_","fireauth.iframeclient.IframeWrapper.cachedGApiLoader_","onGapiLoad","fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_.get","cbName","fireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_","where","messageHandlersFilter","position","dontclear","onOpen","clearTimerAndResolve","networkErrorTimer","restyle","setHideOnLeave","fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_.get","ping","open_","fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_","fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_","fireauth.iframeclient.IframeUrlBuilder","authDomain","appName","authDomain_","appName_","v_","endpointId_","frameworks_","fireauth.iframeclient.OAuthUrlBuilder","authType_","redirectUrl_","provider_","fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_","getFramework","fireauth.iframeclient.IfcHandler","opt_clientVersion","opt_endpointId","clientVersion_","iframeUrl_","fullClientVersion_","authEventListeners_","isInitialized_","originValidator_","fireauth.iframeclient.IfcHandler.getOriginValidator_","fireauth.RpcHandler.prototype.getAuthorizedDomains","fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG","authorizedDomains","getAuthorizedDomains","domainPattern","fireauth.util.IP_ADDRESS_REGEXP_.test","escapedDomainPattern","fireauth.iframeclient.IfcHandler.prototype.initialize","Ui","builder","setEndpointId","opt_frameworks","iframeWrapper_","fireauth.iframeclient.IfcHandler.prototype.registerEvents_","fireauth.iframeclient.IframeWrapper.prototype.registerEvent","register","AUTH_EVENT","registerEvent","resolveResponse","authEvent","isHandled","fireauth.AuthEvent.fromPlainObject","ACK","registerEvents_","fireauth.iframeclient.IfcHandler.prototype.getRpcHandler_","Yi","opt_redirectUrl","opt_additionalParams","setEventId","additionalParams_","fireauth.storage.AsyncStorage","Zi","opt_asyncStorage","storage_","reactNative","AsyncStorage","ASYNC_STORAGE","fireauth.messagechannel.Receiver","$i","eventTarget","eventTarget_","eventHandlers_","messageEventHandler_","handleEvent_","fireauth.iframeclient.IframeUrlBuilder.prototype.toString","fireauth.iframeclient.OAuthUrlBuilder.prototype.toString","getAuthLanguage_","getLanguageCode","scopes","frameworks","getAuthFrameworks_","startPopupTimeout","fireauth.iframeclient.IfcHandler.prototype.startPopupTimeout","popupWin","popupClosedByUserError","webStorageNotSupportedError","isResolved","initializeAndWait","fireauth.iframeclient.IfcHandler.prototype.isWebStorageSupported","WEB_STORAGE_SUPPORT_EVENT","initialize","fireauth.iframeclient.IframeWrapper.prototype.sendMessage","sendMessage","webStorageSupport","isWebStorageSupported","isSupported","fireauth.util.onPopupClose","fireauth.util.POPUP_WAIT_CYCLE_MS_","closed","shouldBeInitializedEarly","fireauth.iframeclient.IfcHandler.prototype.shouldBeInitializedEarly","fireauth.iframeclient.IfcHandler.prototype","hasVolatileStorage","fireauth.iframeclient.IfcHandler.prototype.hasVolatileStorage","fireauth_CordovaHandler_prototype$processPopup","fireauth.iframeclient.IfcHandler.prototype.processPopup","onInitialize","opt_alreadyRedirected","getRpcHandler_","onReady","fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl","processRedirect","fireauth.iframeclient.IfcHandler.prototype.processRedirect","fireauth.iframeclient.IfcHandler.prototype.initializeAndWait","unloadsOnRedirect","fireauth.iframeclient.IfcHandler.prototype.unloadsOnRedirect","fireauth_CordovaHandler_prototype$addAuthEventListener","fireauth.iframeclient.IfcHandler.prototype.addAuthEventListener","fireauth_CordovaHandler_prototype$removeAuthEventListener","fireauth.iframeclient.IfcHandler.prototype.removeAuthEventListener","fireauth.storage.AsyncStorage.prototype.get","getItem","fireauth.storage.AsyncStorage.prototype","fireauth.storage.AsyncStorage.prototype.set","fireauth_storage_AsyncStorage_prototype$remove","fireauth.storage.AsyncStorage.prototype.remove","addStorageListener","fireauth.storage.AsyncStorage.prototype.addStorageListener","removeStorageListener","fireauth.storage.AsyncStorage.prototype.removeStorageListener","jj","fireauth.messagechannel.Receiver.receivers_","fireauth.messagechannel.WorkerClientPostMessager","cj","fireauth.messagechannel.Sender","dj","postMessager","postMessager_","closed_","messageHandlers_","fireauth.messagechannel.Sender.prototype.send","ej","eventType","opt_useLongTimeout","onMessage","ackTimer","completionTimer","CONNECTION_UNAVAILABLE","ackTimeout","LONG_ACK","messageChannel","pow","digits","UNSUPPORTED_EVENT","COMPLETION","UNKNOWN","INVALID_RESPONSE","removeMessageHandler_","fireauth.messagechannel.Sender.prototype.removeMessageHandler_","fj","messageHandler","fireauth.storage.IndexedDB","gj","fireauth.storage.IndexedDB.isAvailable","localMap_","storageListeners_","pendingOpsTracker_","indexedDB_","goog.global.indexedDB","INDEXEDDB","sender_","receiver_","pollTimerId_","poll_","serviceWorkerReceiverAvailable_","activeServiceWorker_","fireauth.messagechannel.Receiver.getInstance","receiver","fireauth.messagechannel.Receiver.receivers_.push","sync_","keyProcessed","fireauth.util.getActiveServiceWorker","serviceWorker","ready","registration","sw","fireauth.storage.IndexedDB.prototype.initializeDb_","lj","fireauth.storage.IndexedDB.DB_NAME_","fireauth.storage.IndexedDB.VERSION_","request.onerror","onupgradeneeded","request.onupgradeneeded","createObjectStore","fireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_","keyPath","fireauth.storage.IndexedDB.DATA_KEY_PATH_","onsuccess","request.onsuccess","objectStoreNames","fireauth.storage.IndexedDB.prototype.deleteDb_","deleteDatabase","deleteDb_","initializeDb_","newDb","fireauth.storage.IndexedDB.prototype.initializeDbAndRun_","mj","initPromise_","hj","fireauth.storage.IndexedDB.prototype.getDataObjectStore_","nj","tx","objectStore","fireauth.storage.IndexedDB.prototype.getTransaction_","oj","isReadWrite","transaction","fireauth.storage.IndexedDB.prototype.onIDBRequest_","pj","fireauth.storage.IndexedDB.prototype.notifySW_","qj","fireauth.util.getServiceWorkerController","controller","ij","fireauth.storage.IndexedDB.prototype.sync_","initializeDbAndRun_","getDataObjectStore_","getTransaction_","getAll","onIDBRequest_","openCursor","cursor","centralCopy","diffKeys","fbase_key","fireauth.util.getKeyDiff","diff","fireauth.storage.IndexedDB.prototype.stopListeners_","sj","fireauth.storage.IndexedDB.STOP_ERROR_","fireauth.storage.HybridIndexedDB","tj","fallbackStorage","fallbackStorage_","underlyingStoragePromise_","randomId","randomKey","fireauth.storage.HybridIndexedDB.KEY_","fireauth.storage.IndexedDB.managerInstance_","fireauth.storage.InMemoryStorage","uj","IN_MEMORY","fireauth.storage.LocalStorage","vj","fireauth.storage.LocalStorage.isAvailable","fireauth.storage.LocalStorage.getGlobalStorage","fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_","LOCAL_STORAGE","xj","fireauth.storage.NullStorage","yj","NULL_STORAGE","fireauth.storage.SessionStorage","zj","fireauth.storage.SessionStorage.isAvailable","fireauth.storage.SessionStorage.getGlobalStorage","sessionStorage","fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_","SESSION_STORAGE","Bj","fireauth.storage.Factory","Cj","envMap","Browser","fireauth.storage.Factory.EnvConfig.BROWSER","Node","fireauth.storage.Factory.EnvConfig.NODE","ReactNative","fireauth.storage.Factory.EnvConfig.REACT_NATIVE","Worker","fireauth.storage.Factory.EnvConfig.WORKER","env_","fireauth.messagechannel.Receiver.prototype.handleEvent_","handlers","ports","allResponses","fireauth.messagechannel.Receiver.prototype.subscribe","fireauth.messagechannel.Receiver.prototype.unsubscribe","fireauth.messagechannel.WorkerClientPostMessager.prototype.postMessage","transfer","fireauth.messagechannel.Sender.prototype.close","fireauth.storage.IndexedDB.prototype.set","dbTemp","isLocked","notifySW_","fireauth.storage.IndexedDB.prototype","fireauth.storage.IndexedDB.prototype.get","fireauth.storage.IndexedDB.prototype.remove","fireauth.storage.IndexedDB.prototype.addStorageListener","fireauth.storage.IndexedDB.prototype.startListeners_","stopListeners_","fireauth.storage.IndexedDB.POLLING_DELAY_","startListeners_","fireauth.storage.IndexedDB.prototype.removeStorageListener","fireauth.storage.HybridIndexedDB.prototype.get","fireauth.storage.HybridIndexedDB.prototype.set","fireauth.storage.HybridIndexedDB.prototype","fireauth.storage.HybridIndexedDB.prototype.remove","fireauth.storage.HybridIndexedDB.prototype.addStorageListener","fireauth.storage.HybridIndexedDB.prototype.removeStorageListener","fireauth.storage.InMemoryStorage.prototype.get","fireauth.storage.InMemoryStorage.prototype","fireauth.storage.InMemoryStorage.prototype.set","fireauth.storage.InMemoryStorage.prototype.remove","fireauth.storage.InMemoryStorage.prototype.addStorageListener","fireauth.storage.InMemoryStorage.prototype.removeStorageListener","fireauth.storage.LocalStorage.prototype.get","fireauth.storage.LocalStorage.prototype","fireauth.storage.LocalStorage.prototype.set","fireauth.storage.LocalStorage.prototype.remove","fireauth.storage.LocalStorage.prototype.addStorageListener","fireauth.storage.LocalStorage.prototype.removeStorageListener","fireauth.storage.NullStorage.prototype.get","fireauth.storage.NullStorage.prototype","fireauth.storage.NullStorage.prototype.set","fireauth.storage.NullStorage.prototype.remove","fireauth.storage.NullStorage.prototype.addStorageListener","fireauth.storage.NullStorage.prototype.removeStorageListener","fireauth.storage.SessionStorage.prototype.get","fireauth.storage.SessionStorage.prototype","fireauth.storage.SessionStorage.prototype.set","fireauth.storage.SessionStorage.prototype.remove","fireauth.storage.SessionStorage.prototype.addStorageListener","fireauth.storage.SessionStorage.prototype.removeStorageListener","Hj","Lj","persistent","temporary","fireauth.authStorage.Persistence","LOCAL","NONE","SESSION","fireauth.authStorage.Manager","Kj","safariLocalStorageNotSynced","runsInBackground","webStorageSupported","safariLocalStorageNotSynced_","runsInBackground_","webStorageSupported_","listeners_","fireauth.storage.Factory.instance_","persistentStorage_","storageFactory","temporaryStorage_","inMemoryStorage_","storageChangeEventHandler_","storageChangeEvent_","fireauth.authStorage.Manager.getInstance","Mj","fireauth.authStorage.Manager.instance_","fireauth.authStorage.Manager.prototype.getStorage_","Nj","fireauth.authStorage.Manager.prototype.getKeyName_","Oj","dataKey","fireauth.authStorage.SEPARATOR_","fireauth.authStorage.Manager.prototype.remove","Qj","getStorage_","fireauth.authStorage.Manager.prototype.stopManualListeners_","Sj","manualListenerTimer_","fireauth.storage.AuthEventManager","Tj","appId","appId_","manager_","fireauth.authStorage.Manager.prototype.get","fireauth.authStorage.Manager.prototype","fireauth.authStorage.Manager.prototype.set","serializedValue","fireauth.authStorage.Manager.prototype.addListener","fireauth.authStorage.Manager.prototype.startManualListeners_","stopManualListeners_","currentValue","poll","fireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_","startManualListeners_","fireauth.authStorage.Manager.prototype.removeListener","fireauth.authStorage.Manager.prototype.storageChangeEvent_","storedValue","realValue","callListeners_","triggerListeners","fireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY","fireauth.authStorage.Manager.prototype.callListeners_","ak","fireauth.storage.OAuthHandlerManager","Wj","goog.crypt.Sha2","Yj","numHashBlocks","initHashBlocks","goog.crypt.Sha2.BLOCKSIZE_","chunk_","inChunk_","hash_","numHashBlocks_","initHashBlocks_","w_","Int32Array","goog.crypt.Sha2.Kx_","goog.crypt.Sha2.K_","goog.crypt.Hash","ck","goog.crypt.Sha2.PADDING_","gk","goog.crypt.Sha2.prototype.computeChunk_","chunk","rounds","w_15","w_2","partialSum1","partialSum2","t2","t1","goog.crypt.Sha2.prototype.update","hk","inChunk","computeChunk_","goog.crypt.Sha2.prototype.reset","goog.crypt.Sha256","ik","goog.crypt.Sha2.call","goog.crypt.Sha256.base","goog.crypt.Sha256.INIT_HASH_BLOCK_","fireauth.CordovaHandler","kk","storageKey_","fireauth.util.STORAGE_KEY_SEPARATOR_","savePartialEventManager_","getAndDeletePartialEventManager_","initialAuthEvent_","inAppBrowserRef_","pendingRedirect_","fireauth.CordovaHandler.getError_","lk","fireauth.CordovaHandler.prototype.computeSecureHash_","nk","sha256","goog.crypt.byteArrayToHex","numByte","hexByte","fireauth.CordovaHandler.prototype.dispatchEvent_","rk","fireauth.CordovaHandler.prototype.getInitialAuthEvent_","addAuthEventListener","authEventCallback","removeAuthEventListener","fireauth.CordovaHandler.prototype.setAuthEventListener_","universalLinkCb","eventData","initialResolve","noEventTimer","getPartialStoredEvent_","noEvent","callbackUrl","errorObject","dispatchEvent_","fireauth.CordovaHandler.INITIAL_TIMEOUT_MS_","existingHandlerOpenURL","handleOpenURL","setAuthEventListener_","fireauth.CordovaHandler.prototype.getPartialStoredEvent_","qk","fireauth.storage.AuthEventManager.prototype.getAuthEvent","fireauth.storage.AuthEventManager.Keys.AUTH_EVENT","getAuthEvent","fireauth.storage.PendingRedirectManager","tk","fireauth.CordovaHandler.prototype.initializeAndWait","isReady_","timeoutId","fireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_","fireauth.CordovaHandler.prototype","fireauth.CordovaHandler.prototype.startPopupTimeout","fireauth.CordovaHandler.prototype.processPopup","fireauth.CordovaHandler.prototype.unloadsOnRedirect","fireauth.CordovaHandler.prototype.shouldBeInitializedEarly","fireauth.CordovaHandler.prototype.hasVolatileStorage","fireauth.CordovaHandler.prototype.processRedirect","onClose","onResume","onVisibilityChange","getInitialAuthEvent_","fireauth.CordovaHandler.prototype.processRedirectInternal_","fireauth.CordovaHandler.prototype.generateSessionId_","numOfChars","fireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_","allowedChars","generateSessionId_","appIdentifier","appDisplayName","additionalParams","hashedSessionId","computeSecureHash_","oauthHelperWidgetUrl","isAvailable","openUrl","processRedirectInternal_","closeBrowsertab","fireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_","cleanup","fireauth.CordovaHandler.prototype.addAuthEventListener","fireauth.CordovaHandler.prototype.removeAuthEventListener","fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_","fireauth.storage.PendingRedirectManager.prototype.removePendingStatus","wk","fireauth.AuthEventManager","yk","subscribedHandlers_","initialized_","authEventHandler_","handleAuthEvent_","redirectAuthEventProcessor_","fireauth.RedirectAuthEventProcessor","popupAuthEventProcessor_","fireauth.PopupAuthEventProcessor","pendingRedirectStorageManager_","fireauth.AuthEventManager.KEY_SEPARATOR_","typeToManager_","unknown","signInViaRedirect","linkViaRedirect","reauthViaRedirect","signInViaPopup","linkViaPopup","reauthViaPopup","oauthSignInHandler_","fireauth.AuthEventManager.instantiateOAuthSignInHandler","fireauth.constants.clientEndpoint","Bk","fireauth.AuthEventManager.prototype.initialize","Ck","previousOauthSignInHandler","fireauth.AuthEventManager.prototype.initializeWithNoPendingRedirectResult_","Dk","notSupportedEvent","fireauth.AuthEventManager.isCordovaFalsePositive_","defaultToEmptyResponse","fireauth.AuthEventManager.prototype.reset","fireauth.AuthEventManager.prototype","clearRedirectResult","fireauth.AuthEventManager.prototype.clearRedirectResult","fireauth.AuthEventManager.prototype.subscribe","fireauth.storage.PendingRedirectManager.prototype.getPendingStatus","fireauth.storage.PendingRedirectManager.PENDING_FLAG_","getPendingStatus","removePendingStatus","initializeWithNoPendingRedirectResult_","fireauth.AuthEventManager.prototype.unsubscribe","fireauth.AuthEventManager.prototype.handleAuthEvent_","processed","potentialHandler","canHandleAuthEvent","eventManager","processAuthEvent","fireauth.AuthEventManager.POPUP_TIMEOUT_MS_","fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_","fireauth.AuthEventManager.prototype.processPopup","Ik","processPopup","Ek","getRedirectResult","fireauth.AuthEventManager.prototype.getRedirectResult","fireauth.AuthEventManager.prototype.processRedirect","fireauth.storage.PendingRedirectManager.prototype.setPendingStatus","setPendingStatus","fireauth.AuthEventManager.prototype.startPopupTimeout","owner","resolvePendingPopupEvent","fireauth.AuthEventManager.POPUP_TIMEOUT_MS_.get","fireauth.AuthEventManager.manager_","Kk","zk","redirectedUserPromise_","redirectResolve_","redirectReject_","redirectTimeoutPromise_","unrecoverableErrorDetected_","redirectResultResolved_","fireauth.RedirectAuthEventProcessor.prototype.defaultToEmptyResponse","Fk","setRedirectResult_","fireauth.RedirectAuthEventProcessor.prototype.setRedirectResolve_","Ok","popupRedirectResult","this.redirectedUserPromise_","fireauth.RedirectAuthEventProcessor.prototype.setRedirectResult_","Lk","isRedirect","fireauth.RedirectAuthEventProcessor.prototype.setRedirectReject_","setRedirectReject_","setRedirectResolve_","user","Ak","fireauth.AuthSettings","Rk","appVerificationDisabledForTesting_","getAppVerificationDisabledForTesting","setAppVerificationDisabledForTesting","fireauth.ConfirmationResult","Sk","credentialResolver","credentialResolver_","fireauth.ConfirmationResult.initialize","Tk","appVerifier","fireauth.IdTokenResult","Uk","auth_time","iat","authTime","signInProvider","fireauth.ProactiveRefresh","Vk","retryPolicy","getWaitDuration","operation_","retryPolicy_","getWaitDuration_","lowerBound_","RETRIAL_MIN_WAIT","upperBound_","RETRIAL_MAX_WAIT","pending_","nextErrorWaitInterval_","fireauth.StsTokenManager","Yk","accessToken_","refreshToken_","expirationTime_","fireauth.StsTokenManager.prototype.parseServerResponse","Zk","refreshToken","fireauth.StsTokenManager.calcOffsetTimestamp_","expiresIn","setAccessToken","setRefreshToken","$k","fireauth.StsTokenManager.prototype.requestToken_","bl","fireauth.RpcHandler.prototype.requestStsToken","grant_type","refresh_token","requestStsToken","expires_in","fireauth.UserMetadata","cl","opt_createdAt","opt_lastLoginAt","createdAt_","lastLoginAt_","lastSignInTime","creationTime","fireauth.AuthUserInfo","opt_email","opt_displayName","opt_photoURL","opt_phoneNumber","photoURL","fireauth.UserEvent","fl","opt_properties","appOptions","stsTokenResponse","opt_accountInfo","pendingPromises_","clientFullVersion","stsTokenManager_","setLastAccessToken_","parseServerResponse","setAccountInfo","fireauth.AuthUser.base","popupRedirectEnabled_","authEventManager_","fireauth.AuthEventManager.getManager","stateChangeListeners_","userInvalidatedError_","proactiveRefresh_","fireauth.AuthUser.prototype.initializeProactiveRefreshUtility_","getIdToken","waitInterval","OFFSET_DURATION","initializeProactiveRefreshUtility_","userTokenChangeListener_","handleUserTokenChange_","languageCode_","onLanguageCodeChanged_","this.onLanguageCodeChanged_","setLanguageCode","languageCodeChangeEventDispatcher_","onFrameworkChanged_","this.onFrameworkChanged_","setFramework","frameworkChangeEventDispatcher_","fireauth.AuthUser.prototype.setLanguageCodeChangeDispatcher","kl","dispatcher","LANGUAGE_CODE_CHANGED","fireauth.AuthUser.prototype.setFramework","jl","framework","updateClientVersion","fireauth.AuthUser.prototype.setFrameworkChangeDispatcher","ll","FRAMEWORK_CHANGED","ml","fireauth.AuthUser.prototype.getAuth_","fireauth.AuthUser.prototype.startProactiveRefresh","nl","destroyed_","TOKEN_CHANGED","fireauth.AuthUser.prototype.stopProactiveRefresh","ol","stop","fireauth.AuthUser.prototype.setLastAccessToken_","gl","lastAccessToken","lastAccessToken_","fireauth.AuthUser.prototype.notifyStateChangeListeners_","ql","fireauth.AuthUser.prototype.enablePopupRedirect","rl","fireauth.AuthUser.prototype.setAccountInfo","hl","accountInfo","emailVerified","createdAt","lastLoginAt","providerData","fireauth.AuthUser.returnNothing_","sl","fireauth.AuthUser.prototype.checkDestroyed_","tl","fireauth.AuthUser.prototype.getProviderIds","ul","fireauth.AuthUser.prototype.addProviderData","vl","removeProviderData","fireauth.AuthUser.prototype.removeProviderData","wl","fireauth.AuthUser.prototype.updateProperty","xl","propName","fireauth.AuthUser.prototype.copy","yl","userToCopy","fireauth.UserMetadata.prototype.clone","addProviderData","fireauth.StsTokenManager.prototype.copy","tokenManagerToCopy","zl","fireauth.AuthUser.prototype.reloadWithoutSaving_","fireauth.AuthUser.prototype.setUserAccountInfoFromToken_","fireauth.RpcHandler.ApiMethod.GET_ACCOUNT_INFO","parseAccountInfo_","setUserAccountInfoFromToken_","updateProperty","Bl","fireauth.AuthUser.prototype.updateTokensIfPresent_","notifyAuthListeners_","fireauth.AuthUser.prototype.checkIfAlreadyLinked_","El","reloadWithoutSaving_","getProviderIds","notifyStateChangeListeners_","fireauth.AuthUser.prototype.getUserCredential_","Dl","idTokenResponse","operationType","additionalUserInfo","fireauth.AuthUser.prototype.finalizeLinking_","Fl","updateTokensIfPresent_","reload","Gl","fireauth.AuthUser.prototype.runOperationWithPopup_","additionalCheck","isReauthOperation","settings","generateEventId_","getAuthEventManager","popupEventId_","pendingPopupResolvePromise_","pendingPopupRejectPromise_","popupTimeoutPromise_","registerPendingPromise_","Il","fireauth.AuthUser.prototype.runOperationWithRedirect_","errorThrown","redirectEventId_","redirectStorageManager_","fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_","redirectUser","removeRedirectUser","fireauth.AuthUser.prototype.getAuthEventManager","Hl","fireauth.AuthUser.prototype.registerPendingPromise_","opt_skipInvalidationCheck","processedP","fireauth.AuthUser.prototype.checkIfInvalidated_","USER_INVALIDATED","checkIfInvalidated_","Ml","stsTokenManagerResponse","stsTokenManager","firebaseUser","fireauth.AuthUser","redirectEventId","fireauth.storage.RedirectUserManager","Pl","fireauth.RedirectAuthEventProcessor.prototype.reset","fireauth.RedirectAuthEventProcessor.prototype.processAuthEvent","isWebStorageNotSupported","isOperationNotSupported","processErrorEvent_","getAuthEventHandlerFinisher","fireauth.RedirectAuthEventProcessor.prototype.processSuccessEvent_","popupRedirectResponse","processSuccessEvent_","processUnknownEvent_","fireauth.RedirectAuthEventProcessor.prototype.clearRedirectResult","fireauth.RedirectAuthEventProcessor.prototype.getRedirectResult","fireauth.RedirectAuthEventProcessor.prototype.startRedirectTimeout_","fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_.get","startRedirectTimeout_","fireauth.PopupAuthEventProcessor.prototype.processAuthEvent","fireauth.ConfirmationResult.prototype.confirm","fireauth.ProactiveRefresh.prototype.start","fireauth.ProactiveRefresh.prototype.process_","Wk","hasSucceeded","fireauth.ProactiveRefresh.prototype.getNextRun_","currentErrorWaitInterval","getNextRun_","fireauth.util.onAppVisible","process_","fireauth.ProactiveRefresh.prototype.stop","fireauth.StsTokenManager.prototype.toPlainObject","fireauth.StsTokenManager.prototype.getToken","opt_forceRefresh","isRefreshTokenExpired","isExpired_","fireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_","requestToken_","exchangeRefreshToken_","fireauth.UserMetadata.prototype.toPlainObject","fireauth.AuthUser.prototype.setLanguageCode","updateCustomLocaleHeader","fireauth.AuthUser.prototype.getLanguageCode","fireauth.AuthUser.prototype.getFramework","fireauth.AuthUser.prototype.handleUserTokenChange_","FIREBASE","fireauth.AuthUser.prototype.reload","fireauth.AuthUser.prototype","getIdTokenResult","fireauth.AuthUser.prototype.getIdTokenResult","fireauth.AuthUser.prototype.getIdToken","fireauth.AuthUser.prototype.parseAccountInfo_","users","localId","linkedAccounts","providerInfo","providerUserInfo","rawId","extractLinkedAccounts_","passwordHash","reauthenticateAndRetrieveDataWithCredential","fireauth.AuthUser.prototype.reauthenticateAndRetrieveDataWithCredential","userCredential","getUserCredential_","REAUTHENTICATE","reauthenticateWithCredential","fireauth.AuthUser.prototype.reauthenticateWithCredential","REAUTH_WITH_CREDENTIAL","linkAndRetrieveDataWithCredential","fireauth.AuthUser.prototype.linkAndRetrieveDataWithCredential","checkIfAlreadyLinked_","LINK","finalizeLinking_","linkWithCredential","fireauth.AuthUser.prototype.linkWithCredential","LINK_WITH_CREDENTIAL","linkWithPhoneNumber","fireauth.AuthUser.prototype.linkWithPhoneNumber","getAuth_","reauthenticateWithPhoneNumber","fireauth.AuthUser.prototype.reauthenticateWithPhoneNumber","fireauth.AuthUser.prototype.updateEmail","updatePhoneNumber","fireauth.AuthUser.prototype.updatePhoneNumber","phoneCredential","fireauth.AuthUser.prototype.updatePassword","fireauth.AuthUser.prototype.updateProfile","profileRequest","unlink","fireauth.AuthUser.prototype.unlink","fireauth.RpcHandler.prototype.deleteLinkedAccounts","providersToDelete","fireauth.RpcHandler.ApiMethod.DELETE_LINKED_ACCOUNTS","deleteLinkedAccounts","remainingProviderIds","pId","fireauth.AuthUser.prototype.delete","fireauth.RpcHandler.ApiMethod.DELETE_ACCOUNT","setLanguageCodeChangeDispatcher","setFrameworkChangeDispatcher","stopProactiveRefresh","fireauth.AuthUser.prototype.canHandleAuthEvent","LINK_VIA_POPUP","getPopupEventId","REAUTH_VIA_POPUP","LINK_VIA_REDIRECT","getRedirectEventId","REAUTH_VIA_REDIRECT","fireauth.AuthUser.prototype.resolvePendingPopupEvent","fireauth.AuthUser.prototype.getAuthEventHandlerFinisher","finishPopupAndRedirectLink","finishPopupAndRedirectReauth","linkWithPopup","fireauth.AuthUser.prototype.linkWithPopup","runOperationWithPopup_","reauthenticateWithPopup","fireauth.AuthUser.prototype.reauthenticateWithPopup","linkWithRedirect","fireauth.AuthUser.prototype.linkWithRedirect","runOperationWithRedirect_","reauthenticateWithRedirect","fireauth.AuthUser.prototype.reauthenticateWithRedirect","fireauth.AuthUser.prototype.finishPopupAndRedirectLink","fireauth.AuthUser.prototype.finishPopupAndRedirectReauth","fireauth.AuthUser.prototype.sendEmailVerification","opt_actionCodeSettings","latestIdToken","buildRequest","fireauth.AuthUser.prototype.toJSON","fireauth.AuthUser.prototype.toPlainObject","fireauth.object.makeWritableCopy","fireauth.storage.RedirectUserManager.prototype.removeRedirectUser","Kl","fireauth.storage.UserManager","Sl","currentAuthUserKey_","onReady_","fireauth.storage.UserManager.prototype.initialize_","localKey","fireauth.storage.UserManager.getAuthUserKey_","sessionKey","inMemoryKey","fireauth.authStorage.Manager.prototype.migrateFromLocalStorage","oldStorageValue","migrateFromLocalStorage","fireauth.storage.UserManager.PERSISTENCE_KEY_","persistence","currentKey","removeAllExcept_","switchToLocalOnExternalEvent_","fireauth.storage.UserManager.prototype.removeAllExcept_","Wl","goog.Promise.all","toFulfill","onFulfill","onReject","fireauth.storage.UserManager.prototype.switchToLocalOnExternalEvent_","waitForReady_","Ul","fireauth.storage.UserManager.AUTH_USER_KEY_NAME_","fireauth.storage.UserManager.prototype.setCurrentUser","Zl","currentUser","fireauth.storage.UserManager.prototype.removeCurrentUser","$l","fireauth.storage.UserManager.prototype.getCurrentUser","am","opt_authDomain","fireauth.AuthUser.fromPlainObject","fireauth.storage.UserManager.prototype.waitForReady_","Vl","fireauth.Auth","bm","deleted_","app_","authListeners_","userChangeListeners_","onIdTokenChanged_","initIdTokenChangeObserver_","userStateChangeUid_","onUserStateChanged_","initUserStateObserver_","setCurrentUser_","userStorageManager_","getStorageKey","redirectUserStorageManager_","authStateLoaded_","fireauth.Auth.prototype.initAuthState_","fireauth.Auth.prototype.initRedirectUser_","fireauth.storage.RedirectUserManager.prototype.getRedirectUser","getRedirectUser","redirectUser_","initRedirectUser_","getCurrentUser","setCurrentUser","removeCurrentUser","initAuthState_","redirectStateIsReady_","fireauth.Auth.prototype.initAuthRedirectState_","getSyncAuthUserChanges_","isStateResolved_","initAuthRedirectState_","syncAuthUserChanges_","userStateChangeListener_","handleUserStateChange_","userDeleteListener_","handleUserDelete_","userInvalidatedListener_","handleUserInvalidated_","fireauth.Auth.prototype.initAuthEventManager_","eventManagerProviderPromise_","currentUser_","enablePopupRedirect","initAuthEventManager_","logFramework","firebaseServices_","fireauth.Auth.base","fireauth.Auth.prototype.initializeReadableWritableProps_","initializeReadableWritableProps_","fireauth.Auth.LanguageCodeChangeEvent","hm","im","fireauth.Auth.prototype.getAuthEventManager_","jm","km","fireauth.Auth.prototype.signInWithIdTokenResponse","fireauth.AuthUser.initializeFromIdTokenResponse","opt_redirectStorageManager","fireauth.Auth.prototype.setCurrentUser_","cm","attachEventListeners_","fireauth.AuthUser.prototype.removeStateChangeListener","removeStateChangeListener","startProactiveRefresh","setUserLanguage_","setUserFramework_","nm","fireauth.Auth.prototype.signInWithIdTokenProvider_","idTokenPromise","signInWithIdTokenResponse","fireauth.Auth.prototype.app_","fireauth.Auth.prototype.currentUser_","fireauth.Auth.prototype.getLastAccessToken_","pm","_lat","fireauth.Auth.prototype.notifyAuthListeners_","lm","getLastAccessToken_","fireauth.Auth.prototype.registerPendingPromise_","fireauth.grecaptcha","qm","fireauth.GRecaptchaMockFactory","rm","counter_","fireauth.GRecaptchaMockFactory.START_INSTANCE_ID","setPersistence","fireauth.storage.UserManager.prototype.setPersistence","fireauth.authStorage.validatePersistenceArgument","invalidTypeError","unsupportedTypeError","fireauth.Auth.FrameworkChangeEvent","fireauth.Auth.prototype.setPersistence","fireauth.Auth.prototype","fireauth.Auth.prototype.setLanguageCode","notifyLanguageCodeListeners_","fireauth.Auth.prototype.getLanguageCode","useDeviceLanguage","fireauth.Auth.prototype.useDeviceLanguage","languages","language","userLanguage","fireauth.Auth.prototype.logFramework","frameworkId","fireauth.Auth.prototype.getFramework","fireauth.Auth.prototype.toJSON","fireauth.Auth.prototype.canHandleAuthEvent","SIGN_IN_VIA_REDIRECT","SIGN_IN_VIA_POPUP","fireauth.Auth.prototype.resolvePendingPopupEvent","fireauth.Auth.prototype.getAuthEventHandlerFinisher","finishPopupAndRedirectSignIn","fireauth.Auth.prototype.finishPopupAndRedirectSignIn","signInWithPopup","fireauth.Auth.prototype.signInWithPopup","getAuthEventManager_","manager","signInWithRedirect","fireauth.Auth.prototype.signInWithRedirect","fireauth.storage.UserManager.prototype.savePersistenceForRedirect","fireauth.Auth.prototype.getRedirectResult","updateCurrentUser","fireauth.Auth.prototype.updateCurrentUser","newUser","fireauth.AuthUser.copyUser","opt_appOptions","getRefreshToken","getExpirationTime","signOut","fireauth.Auth.prototype.signOut","fireauth.Auth.prototype.syncAuthUserChanges_","thisId","thatId","otherUser","fireauth.Auth.prototype.handleUserStateChange_","fireauth_Auth_prototype$handleUserTokenChange_","fireauth.Auth.prototype.handleUserTokenChange_","fireauth.Auth.prototype.handleUserDelete_","fireauth.Auth.prototype.handleUserInvalidated_","fireauth.Auth.prototype.initIdTokenChangeObserver_","fireauth.Auth.prototype.initUserStateObserver_","fireauth.Auth.prototype.addUserChangeListener_","addUserChangeListener_","onIdTokenChanged","fireauth.Auth.prototype.onIdTokenChanged","opt_completed","onAuthStateChanged","fireauth.Auth.prototype.onAuthStateChanged","getIdTokenInternal","fireauth.Auth.prototype.getIdTokenInternal","stsAccessToken","signInWithCustomToken","fireauth.Auth.prototype.signInWithCustomToken","signInWithIdTokenProvider_","fireauth.RpcHandler.ApiMethod.VERIFY_CUSTOM_TOKEN","signInAndRetrieveDataWithCustomToken","fireauth.Auth.prototype.signInAndRetrieveDataWithCustomToken","SIGN_IN_WITH_CUSTOM_TOKEN","signInAndRetrieveDataWithEmailAndPassword","fireauth.Auth.prototype.signInAndRetrieveDataWithEmailAndPassword","SIGN_IN_WITH_EMAIL_AND_PASSWORD","signInWithEmailAndPassword","fireauth.Auth.prototype.signInWithEmailAndPassword","createUserWithEmailAndPassword","fireauth.Auth.prototype.createUserWithEmailAndPassword","fireauth.RpcHandler.ApiMethod.CREATE_ACCOUNT","createUserAndRetrieveDataWithEmailAndPassword","fireauth.Auth.prototype.createUserAndRetrieveDataWithEmailAndPassword","CREATE_USER_WITH_EMAIL_AND_PASSWORD","signInWithCredential","fireauth.Auth.prototype.signInWithCredential","SIGN_IN_WITH_CREDENTIAL","signInAndRetrieveDataWithCredential","fireauth.Auth.prototype.signInAndRetrieveDataWithCredential","fireauth.Auth.prototype.signInAnonymously","signInAnonymouslyAndRetrieveData","fireauth.Auth.prototype.signInAnonymouslyAndRetrieveData","fireauth.Auth.prototype.getUid","addAuthTokenListenerInternal","fireauth.Auth.prototype.addAuthTokenListenerInternal","removeAuthTokenListenerInternal","fireauth.Auth.prototype.removeAuthTokenListenerInternal","fireauth.Auth.prototype.addAuthTokenListener","fireauth.Auth.prototype.removeAuthTokenListener","fireauth.Auth.prototype.delete","fetchProvidersForEmail","fireauth.Auth.prototype.fetchProvidersForEmail","FETCH_PROVIDERS_FOR_EMAIL","fireauth.RpcHandler.prototype.fetchProvidersForIdentifier","identifier","fireauth.RpcHandler.ApiMethod.CREATE_AUTH_URI","continueUri","allProviders","fetchProvidersForIdentifier","getRpcHandler","fetchSignInMethodsForEmail","fireauth.Auth.prototype.fetchSignInMethodsForEmail","fireauth.RpcHandler.prototype.fetchSignInMethodsForIdentifier","signinMethods","fetchSignInMethodsForIdentifier","isSignInWithEmailLink","fireauth.Auth.prototype.isSignInWithEmailLink","fireauth.Auth.prototype.sendSignInLinkToEmail","actionCodeSettings","actionCodeSettingsBuilder","verifyPasswordResetCode","fireauth.Auth.prototype.verifyPasswordResetCode","fireauth.Auth.prototype.confirmPasswordReset","fireauth.Auth.prototype.checkActionCode","fireauth.Auth.prototype.applyActionCode","fireauth.Auth.prototype.sendPasswordResetEmail","signInWithPhoneNumber","fireauth.Auth.prototype.signInWithPhoneNumber","signInWithEmailLink","fireauth.Auth.prototype.signInWithEmailLink","opt_link","fireauth.grecaptcha.prototype.render","fireauth.grecaptcha.prototype.reset","fireauth.grecaptcha.prototype.getResponse","execute","fireauth.grecaptcha.prototype.execute","fireauth.GRecaptchaMockFactory.instance_","fireauth.GRecaptchaMockFactory.prototype.getMock_","um","getId_","fireauth.GRecaptchaMockFactory.prototype.getId_","vm","fireauth.RecaptchaMock","tm","elementOrId","timerId_","responseToken_","isVisible_","size","element_","onClickHandler_","this.onClickHandler_","CLICK","fireauth.RecaptchaMock.prototype.checkIfDeleted_","wm","fireauth.RecaptchaMockLoader","xm","fireauth.GRecaptchaMockFactory.prototype.render","fireauth.GRecaptchaMockFactory.prototype.reset","mock","getMock_","fireauth.GRecaptchaMockFactory.prototype.getResponse","fireauth.GRecaptchaMockFactory.prototype.execute","fireauth.RecaptchaMock.prototype.getResponse","checkIfDeleted_","fireauth.RecaptchaMock.prototype.execute","fireauth.util.generateRandomAlphaNumericString","expirationCallback","fireauth.GRecaptchaMockFactory.EXPIRATION_TIME_MS","fireauth.GRecaptchaMockFactory.SOLVE_TIME_MS","fireauth.RecaptchaMock.prototype.delete","loadRecaptchaDeps","fireauth.RecaptchaMockLoader.prototype.loadRecaptchaDeps","clearSingleRecaptcha","fireauth.RecaptchaMockLoader.prototype.clearSingleRecaptcha","fireauth.RecaptchaMockLoader.instance_","fireauth.RecaptchaRealLoader","zm","grecaptcha","hl_","cbName_","fireauth.RecaptchaRealLoader.RECAPTCHA_SRC_","fireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_","fireauth.RecaptchaRealLoader.prototype.loadRecaptchaDeps","timer","fireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_.get","container","parameters","widgetId","fireauth.RecaptchaRealLoader.prototype.clearSingleRecaptcha","fireauth.RecaptchaRealLoader.instance_","fireauth.BaseRecaptchaVerifier","Dm","opt_parameters","opt_getLanguageCode","opt_rpcHandlerConfig","opt_isTestingMode","widgetId_","cachedReadyPromise_","container_","grecaptcha_","recaptchaLoader_","parameters_","theme","fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY","isInvisible_","fireauth.BaseRecaptchaVerifier.ParamName.SIZE","hasChildNodes","getLanguageCode_","tokenListeners_","existingCallback","fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK","existingExpiredCallback","fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK","CALLBACK","EXPIRED_CALLBACK","SITEKEY","SIZE","fireauth.BaseRecaptchaVerifier.prototype.dispatchEvent_","Hm","fireauth.BaseRecaptchaVerifier.prototype.registerPendingPromise_","Km","Lm","fireauth.BaseRecaptchaVerifier.prototype.checkIfDestroyed_","Mm","opt_app","isTestingMode","appVerificationDisabledForTesting","fireauth.BaseRecaptchaVerifier.call","fireauth.RecaptchaVerifier.base","fireauth.args.validate","Nm","apiName","expected","actual","opt_isSetter","actualAsArray","numRequiredArgs","isOptionalSection","maxNumArgs","minNumArgs","optionalUndefined","validator","fireauth.args.ORDINAL_NUMBERS_.length","fireauth.args.ORDINAL_NUMBERS_","ordinal","expectedType","typeLabel","fireauth.BaseRecaptchaVerifier.prototype.isReady_","fireauth.RpcHandler.ApiMethod.GET_RECAPTCHA_PARAM","fireauth.BaseRecaptchaVerifier.prototype.render","checkIfDestroyed_","outerContainer","goog.dom.createDom","goog.dom.TagName.DIV","fireauth.BaseRecaptchaVerifier.prototype","fireauth.BaseRecaptchaVerifier.prototype.verify","fireauth.BaseRecaptchaVerifier.prototype.removeTokenChangeListener_","removeTokenChangeListener_","fireauth.BaseRecaptchaVerifier.prototype.reset","fireauth.BaseRecaptchaVerifier.prototype.clear","fireauth.RecaptchaVerifier","fireauth.args.string","opt_optional","fireauth.args.bool","Pm","fireauth.args.object","fireauth.args.func","Qm","fireauth.args.null","Rm","fireauth.args.authCredential","Vm","opt_requiredProviderId","matchesRequiredProvider","fireauth.args.applicationVerifier","Xm","fireauth.args.or","optionA","optionB","fireauth.exportlib.exportPrototypeMethods","protObj","fnMap","obfuscatedFnName","unobfuscatedFnName","fireauth.exportlib.wrapMethodWithArgumentVerifier_","fireauth.exportlib.exportPrototypeProperties","Zm","propMap","obfuscatedPropName","unobfuscatedPropName","getter","expectedArg","fireauth.exportlib.exportFunction","parentObj","opt_expectedArgs","Ym","wrapper","argumentsAsArray","shortName","fireauth.exportlib.extractMethodNameFromFullPath_","Persistence","appVerificationDisabled","fireauth.EmailAuthProvider.credential","Auth","Element","App","fireauth.exportlib.AUTH_TYPE","User","logger$1","DOMStorageWrapper","domStorage_","prefix_","prefixedName_","storedVal","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","firstLog_","enableLogging","logLevel","LogLevel","VERBOSE","logWrapper","fatal","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","ln","bits","abs","LN2","round","reverse","hexByteString","INTEGER_REGEXP_","intVal","exceptionGuard","beingCrawled","setTimeoutNonBlocking","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","begin","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","secure","webSocketOnly","persistenceKey","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","repoInfo","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodePath","queryParams","queryString","_a","kv","decodeQuery","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","validateFirebaseData","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","validateKey","validatePathString","validateWritablePath","validateUrl","isValidRootPathString","OnDisconnect","repo_","onComplete","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","nextPushId","duplicateTime","timeStampChars","NamedNode","Wrap","Index","getCompare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat",".value",".priority","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","RED","SortedMap","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nr","checkMaxDepth_","blackDepth","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","indexMap_","Default","newPriority","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","setMaxNode$1","USE_HINZE","nodeFromJSON$1","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","OperationType","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","getQueryParams","getIndex","snapshotNode","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","addEventCallbackForQuery","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","childKey","remember","forget","self_1","tree","forEachTree","prefixPath","resolveDeferredValue","serverValues","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","existing","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","events_1","serverCacheComplete","eventCacheComplete","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","trigger","validateEventType_","getInitialEvent","et","VisibilityMonitor","visibilityChange","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","called_1","wrappedFn_1","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","dframe","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","iframeContents","alive","myID","disconn","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","rstate","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","User-Agent","platform","NODE_ENV","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onKill_","connectionCount","pendingDataMessages","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","token_1","authMethod","requestData","cred","onAuthRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","interrupt","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolvedTree","resolveDeferredValueTree","showDelta","longestName","reduce","previousValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","Reference","validateRootPathString","parentPath","getRoot","databaseProp","database","transactionUpdate","applyLocally","bool","validateBoolean","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","Tree","subTree","pathObj","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","RepoManager","repos_","useRestClient_","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","listens","firebaseRef","registerDatabase","unused","setLogLevel","instances","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","DEBUG","WARN","_logLevel","_logHandler","debug","inst","invariant","ReactPropTypesSecret","shim","componentName","propFullName","getShim","isRequired","ReactPropTypes","string","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","invariant__WEBPACK_IMPORTED_MODULE_2__","invariant__WEBPACK_IMPORTED_MODULE_2___default","history__WEBPACK_IMPORTED_MODULE_3__","_possibleConstructorReturn","ReferenceError","isModifiedEvent","Link","_React$Component","_temp","_classCallCheck","handleClick","router","_this$props","subClass","superClass","_inherits","_props","innerRef","_objectWithoutProperties","propTypes","patternCache","cacheCount","es_matchPath","_options","_options$exact","_options$strict","_options$sensitive","_compilePath","cacheKey","compiledPattern","path_to_regexp_default","matchPath_compilePath","isExact","Route_isEmptyChildren","react_default","Route_Route","Route","computeMatch","computedMatch","warning_default","component","nextProps","nextContext","_context$router","staticContext","prop_types_default","es_Route","Router_Router","Router","_this2","node_modules_prop_types_default","react_router_dom_es_Router","BrowserRouter_possibleConstructorReturn","BrowserRouter_BrowserRouter","BrowserRouter","BrowserRouter_classCallCheck","es","BrowserRouter_inherits","es_generatePath","compiledGenerator","generatePath_compileGenerator","Redirect_Redirect","Redirect","isStatic","perform","prevProps","prevTo","nextTo","computeTo","es_Redirect"],"mappings":"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1OgD+uD,EA0O/B/uD,MAAAoK,SAA6B,GA7EtD25D,GA3JIkgD,EAAW,CAjiEO71B,qBZ7DAA,uBYiDDd,oBZjEAA,wBYkGC42B,qBZ5FNt2B,iBY4EIu2B,mBZhEL71B,gBY+EOoB,qBZ3FN9B,iBYyEDU,cZ7DAA,gBYoEGU,iBZ7DAA,iBY0FHsC,cZnDAA,gBYsCG8yB,iBZhGFx2B,iBY8DFH,aZjEAA,uBYuGW42B,wBZ1DF/zB,wBYiCD7B,qBZ9DAA,qBYoEC61B,sBZpED71B,qBYoDY6tB,iCZxEPjvB,4BYsGDwC,yBZ9DAA,2BY4CDlB,wBZ/DAA,0BYsEAQ,wBZ7DAA,0BY8DTC,eZ7DAA,iBYuCCm1B,gBZNHlzB,iBY6CemzB,4BZjDAvzB,oBYWXvD,iBZlEAA,sBYiFAqB,iBZ9DAA,sBY6EA01B,iBZ9FF72B,iBYmFKsB,oBZ7DAA,sBYsCW3B,+BZjEAA,wBY+Edm3B,iBZtEJ32B,qBYqGCiD,cZrDAA,qBY0DC6wB,eZ1DD7wB,qBYMG5D,iBZlEAA,mBYqEUI,2BZjEAA,6BYuEZM,eZhEAA,iBYuGamD,4BZrDAA,oBY0DdQ,cZlDAA,gBYsCQnB,sBZzDAA,wBYkEPc,eZpDAA,iBYCMnE,qBZpEAA,uBY6EEY,uBZhEAA,yBYmEVI,aZ9DAA,4BY2EQgB,qBZ7DAA,uBYiEAI,qBZ7DAA,0BY8DGs1B,wBZ1EHl2B,qBY4EEe,uBZ9DAA,yBY+DVC,aZ7DAA,4BYoEQK,qBZ/DAA,uBYgEAC,qBZ/DAA,0BYkENY,eZtDAA,iBYyDCi0B,gBZlHH13B,eYiHO4D,oBZrDAA,sBYoBC5C,qBZ9DAA,uBYgFQoB,6BZ9DAA,2BYmEPM,sBZ7DAA,wBY2EFsB,oBZrDAA,4BYkBQ7C,4BZ7DAA,8BYmEJQ,wBZ/DAA,0BYqDNL,kBZ9DAA,qBY4vEEy0B,GAAsB,IAyCzC58G,GAFEyN,EAnCmD4vG,EAmCzCxuG,MAAoB,yBACF,EAAjBpB,EAAAnR,OACNmR,EAAQ,QAR+C,EAvBzCmwG,EACrB,GAA4C,IAAxCP,EAAAr7G,QAAwB27G,GAC1B,OAAO,IAAI33B,GAAmB43B,EAASD,GAAazH,GAYxD,OALKA,GAAgBxtD,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","file":"vendors.bundle.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.8.5',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nvar isNode = false;\r\ntry {\r\n    isNode =\r\n        Object.prototype.toString.call(global.process) === '[object process]';\r\n}\r\ncatch (e) { }\r\nisNode &&\r\n    console.warn(\"\\nWarning: This is a browser-targeted Firebase bundle but it appears it is being\\nrun in a Node environment.  If running in a Node environment, make sure you\\nare using the bundle specified by the \\\"main\\\" field in package.json.\\n\\nIf you are using Webpack, you can specify \\\"main\\\" as the first item in\\n\\\"resolve.mainFields\\\":\\nhttps://webpack.js.org/configuration/resolve/#resolvemainfields\\n\\nIf using Rollup, use the rollup-plugin-node-resolve plugin and set \\\"module\\\"\\nto false and \\\"main\\\" to true:\\nhttps://github.com/rollup/rollup-plugin-node-resolve\\n\");\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash = void 0;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n\n    if (aKeys.length !== bKeys.length) return false;\n\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;","export var addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nexport var stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nexport var hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nexport var stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nexport var stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nexport var parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nexport var createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n\n\n  var path = pathname || '/';\n\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n\n  return path;\n};","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport { parsePath } from './PathUtils';\n\nexport var createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\n\nexport var locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n};","import warning from 'warning';\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    warning(prompt == null, 'A history supports only one prompt at a time');\n\n    prompt = nextPrompt;\n\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexport default createTransitionManager;","export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexport var addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nexport var removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nexport var getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nexport var supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nexport var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nexport var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nexport var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation } from './LocationUtils';\nimport { addLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsHistory, supportsPopStateOnHashChange, isExtraneousPopstateEvent } from './DOMUtils';\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  invariant(canUseDOM, 'Browser history needs a DOM');\n\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n\n\n    var path = pathname + search + hash;\n\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = stripBasename(path, basename);\n\n    return createLocation(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + createPath(location);\n  };\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.pushState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.replaceState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexport default createBrowserHistory;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation, locationsAreEqual } from './LocationUtils';\nimport { addLeadingSlash, stripLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsGoWithoutReloadUsingHash } from './DOMUtils';\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  invariant(canUseDOM, 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = stripBasename(path, basename);\n\n    return createLocation(path);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  };\n\n  var push = function push(path, state) {\n    warning(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexport default createHashHistory;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from 'warning';\nimport { createPath } from './PathUtils';\nimport { createLocation } from './LocationUtils';\nimport createTransitionManager from './createTransitionManager';\n\nvar clamp = function clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n};\n\n/**\n * Creates a history object that stores locations in memory.\n */\nvar createMemoryHistory = function createMemoryHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getUserConfirmation = props.getUserConfirmation,\n      _props$initialEntries = props.initialEntries,\n      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,\n      _props$initialIndex = props.initialIndex,\n      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  });\n\n  // Public interface\n\n  var createHref = createPath;\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n\n      var nextEntries = history.entries.slice(0);\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      history.entries[history.index] = location;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var canGo = function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return transitionManager.setPrompt(prompt);\n  };\n\n  var listen = function listen(listener) {\n    return transitionManager.appendListener(listener);\n  };\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexport default createMemoryHistory;","import _createBrowserHistory from './createBrowserHistory';\nexport { _createBrowserHistory as createBrowserHistory };\nimport _createHashHistory from './createHashHistory';\nexport { _createHashHistory as createHashHistory };\nimport _createMemoryHistory from './createMemoryHistory';\nexport { _createMemoryHistory as createMemoryHistory };\n\nexport { createLocation, locationsAreEqual } from './LocationUtils';\nexport { parsePath, createPath } from './PathUtils';","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","exports.f = {}.propertyIsEnumerable;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","exports.f = Object.getOwnPropertySymbols;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","exports.f = require('./_wks');\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","module.exports = false;\n","module.exports = {};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.8.3\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"307\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.3\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/** @license React v16.8.3\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"307\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.eagerReducer=a;c.eagerState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==d){var h=e=null,\nl=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.eagerReducer=a;c.eagerState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.eagerReducer,null!==d))try{var l=b.eagerState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,eagerReducer:a,eagerState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,eagerReducer:og,\neagerState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return tg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;e=f;p=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(e));l===fe.html?\"script\"===e?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof p.is?k=k.createElement(e,{is:p.is}):(k=k.createElement(e),\"select\"===e&&p.multiple&&(k.multiple=!0)):k=k.createElementNS(l,e);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.3\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.13.3\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n","import 'whatwg-fetch';\nimport 'promise-polyfill/lib/polyfill';\nimport 'core-js/fn/array/find';\nimport 'core-js/fn/array/find-index';\nimport 'core-js/fn/object/assign';\nimport 'core-js/fn/string/starts-with';\nimport 'core-js/fn/string/repeat';\nimport 'core-js/fn/symbol';\nimport 'core-js/fn/symbol/iterator';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","'use strict';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","require('../../modules/es6.array.find');\nmodule.exports = require('../../modules/_core').Array.find;\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","require('../../modules/es6.array.find-index');\nmodule.exports = require('../../modules/_core').Array.findIndex;\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","require('../../modules/es6.string.starts-with');\nmodule.exports = require('../../modules/_core').String.startsWith;\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","require('../../modules/es6.string.repeat');\nmodule.exports = require('../../modules/_core').String.repeat;\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","import '@firebase/auth';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will attempt to load Closure's deps file, unless\n * the global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects\n * to include their own deps file(s) from different locations.\n *\n * Avoid including base.js more than once. This is strictly discouraged and not\n * supported. goog.require(...) won't work properly in that case.\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n/**\n * Reference to the global context.  In most cases this will be 'window'.\n * @const\n * @suppress {newCheckTypes}\n */\ngoog.global = this;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, `CLOSURE_UNCOMPILED_DEFINES` may be defined before\n * loading base.js.  If a key is defined in `CLOSURE_UNCOMPILED_DEFINES`,\n * `goog.define` will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Returns true if the specified value is not undefined.\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\ngoog.isDef = function(val) {\n  // void 0 always evaluates to undefined and hence we do not need to depend on\n  // the definition of the global variable named 'undefined'.\n  return val !== void 0;\n};\n\n/**\n * Returns true if the specified value is a string.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Returns true if the specified value is a boolean.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\ngoog.isBoolean = function(val) {\n  return typeof val == 'boolean';\n};\n\n\n/**\n * Returns true if the specified value is a number.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\ngoog.isNumber = function(val) {\n  return typeof val == 'number';\n};\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} opt_object the object to expose at the end of the path.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is `goog.global`.\n * @private\n */\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\n  var parts = name.split('.');\n  var cur = opt_objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && typeof cur.execScript != 'undefined') {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && goog.isDef(opt_object)) {\n      // last part and we have an object; use it\n      cur[part] = opt_object;\n    } else if (cur[part] && cur[part] !== Object.prototype[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retrieved from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled the default can be overridden using the compiler\n * options or the value set in the CLOSURE_DEFINES object.\n *\n * @param {string} name The distinguished name to provide.\n * @param {string|number|boolean} defaultValue\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;\n    var defines = goog.global.CLOSURE_DEFINES;\n    if (uncompiledDefines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (uncompiledDefines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {\n      value = uncompiledDefines[name];\n    } else if (\n        defines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (defines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(defines, name)) {\n      value = defines[name];\n    }\n  }\n  goog.exportPath_(name, value);\n};\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production. It can be easily stripped\n * by specifying --define goog.DEBUG=false to the Closure Compiler aka\n * JSCompiler. For example, most toString() methods should be declared inside an\n * \"if (goog.DEBUG)\" conditional because they are generally used for debugging\n * purposes and it is difficult for the JSCompiler to statically determine\n * whether they are used.\n */\ngoog.define('goog.DEBUG', true);\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as a compiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he).\n *\n */\ngoog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the compiler.\n */\ngoog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether a project is expected to be running in strict mode.\n *\n * This define can be used to trigger alternate implementations compatible with\n * running in EcmaScript Strict mode or warn about unavailable functionality.\n * @see https://goo.gl/PudQ4y\n *\n */\ngoog.define('goog.STRICT_MODE_COMPATIBLE', false);\n\n\n/**\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\n *     be disallowed in the compilation unit.\n */\ngoog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\n\n\n/**\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\n */\ngoog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\n\n\n/**\n * Defines a namespace in Closure.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * The presence of one or more goog.provide() calls in a file indicates\n * that the file defines the given objects/namespaces.\n * Provided symbols must not be null or undefined.\n *\n * In addition, goog.provide() creates the object stubs for a namespace\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\n * goog.foo.bar if it does not already exist).\n *\n * Build tools also scan for provide/require/module statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n *\n * @see goog.require\n * @see goog.module\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.provide can not be used within a module.');\n  }\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n  }\n\n  goog.constructNamespace_(name);\n};\n\n\n/**\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * @param {Object=} opt_obj The object to embed in the namespace.\n * @private\n */\ngoog.constructNamespace_ = function(name, opt_obj) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name, opt_obj);\n};\n\n\n/**\n * Module identifier validation regexp.\n * Note: This is a conservative check, it is very possible to be more lenient,\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\n *   restrictions are intended to leave the door open for using goog.require\n *   with relative file paths rather than module identifiers.\n * @private\n */\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\n\n/**\n * Defines a module in Closure.\n *\n * Marks that this file must be loaded as a module and claims the namespace.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * goog.module() has three requirements:\n * - goog.module may not be used in the same file as goog.provide.\n * - goog.module must be the first statement in the file.\n * - only one goog.module is allowed per file.\n *\n * When a goog.module annotated file is loaded, it is enclosed in\n * a strict function closure. This means that:\n * - any variables declared in a goog.module file are private to the file\n * (not global), though the compiler is expected to inline the module.\n * - The code must obey all the rules of \"strict\" JavaScript.\n * - the file will be marked as \"use strict\"\n *\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\n * itself. If declared symbols are desired, use\n * goog.module.declareLegacyNamespace().\n *\n *\n * See the public goog.module proposal: http://goo.gl/Va1hin\n *\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\", is expected but not required.\n * @return {void}\n */\ngoog.module = function(name) {\n  if (!goog.isString(name) || !name ||\n      name.search(goog.VALID_MODULE_RE_) == -1) {\n    throw new Error('Invalid module identifier');\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'Module ' + name + ' has been loaded incorrectly. Note, ' +\n        'modules cannot be loaded as normal scripts. They require some kind of ' +\n        'pre-processing step. You\\'re likely trying to load a module via a ' +\n        'script tag or as a part of a concatenated bundle without rewriting the ' +\n        'module. For more info see: ' +\n        'https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.');\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw new Error('goog.module may only be called once per module.');\n  }\n\n  // Store the module name for the loader.\n  goog.moduleLoaderState_.moduleName = name;\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n  }\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * Note: This is not an alternative to goog.require, it does not\n * indicate a hard dependency, instead it is used to indicate\n * an optional dependency or to access the exports of a module\n * that has already been loaded.\n * @suppress {missingProvide}\n */\ngoog.module.get = function(name) {\n  if (!COMPILED && name in goog.loadedModules_) {\n    if (goog.loadedModules_[name].type != goog.ModuleType.GOOG) {\n      throw new Error('Can only goog.module.get for goog.modules.');\n    }\n    if (goog.loadedModules_[name].moduleId != name) {\n      throw new Error('Cannot goog.module.get by path.');\n    }\n  }\n\n  return goog.module.getInternal_(name);\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n * @private\n */\ngoog.module.getInternal_ = function(name) {\n  if (!COMPILED) {\n    if (name in goog.loadedModules_) {\n      return goog.loadedModules_[name].exports;\n    } else if (!goog.implicitNamespaces_[name]) {\n      var ns = goog.getObjectByName(name);\n      return ns != null ? ns : null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Types of modules the debug loader can load.\n * @enum {string}\n */\ngoog.ModuleType = {\n  ES6: 'es6',\n  GOOG: 'goog'\n};\n\n\n/**\n * @private {?{\n *   moduleName: (string|undefined),\n *   declareLegacyNamespace:boolean,\n *   path:(string|undefined),\n *   type: goog.ModuleType\n * }}\n */\ngoog.moduleLoaderState_ = null;\n\n\n/**\n * @private\n * @return {boolean} Whether a is currently being initialized.\n */\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module is currently being initialized.\n */\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\n\n/**\n * @private\n * @return {boolean} Whether an es6 module is currently being initialized.\n */\ngoog.isInEs6ModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.ES6;\n};\n\n\n/**\n * @private\n * @return {?string|undefined} Path of the current module being initialized.\n */\ngoog.getModulePath_ = function() {\n  return goog.moduleLoaderState_ && goog.moduleLoaderState_.path;\n};\n\n\n/**\n * Provide the module's exports as a globally accessible object under the\n * module's declared name.  This is intended to ease migration to goog.module\n * for files that have existing usages.\n * @suppress {missingProvide}\n */\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'goog.module.declareLegacyNamespace must be called from ' +\n        'within a goog.module');\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw new Error(\n        'goog.module must be called prior to ' +\n        'goog.module.declareLegacyNamespace.');\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact namespace\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\n * provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    opt_message = opt_message || '';\n    throw new Error(\n        'Importing test-only code into non-debug environment' +\n        (opt_message ? ': ' + opt_message : '.'));\n  }\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n * Before using goog.forwardDeclare, please read the documentation at\n * https://github.com/google/closure-compiler/wiki/Bad-Type-Annotation to\n * understand the options and tradeoffs when working with forward declarations.\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n */\ngoog.forwardDeclare = function(name) {};\n\n\n/**\n * Forward declare type information. Used to assign types to goog.global\n * referenced object that would otherwise result in unknown type references\n * and thus block property disambiguation.\n */\ngoog.forwardDeclare('Document');\ngoog.forwardDeclare('HTMLScriptElement');\ngoog.forwardDeclare('XMLHttpRequest');\n\n\nif (!COMPILED) {\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (name in goog.loadedModules_) ||\n        (!goog.implicitNamespaces_[name] &&\n         goog.isDefAndNotNull(goog.getObjectByName(name)));\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {!Object<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {'goog.module': true};\n\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\n  // here and because the existing module package has not been moved yet out of\n  // the goog.module namespace. This satisifies both the debug loader and\n  // ahead-of-time dependency management.\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var i = 0; i < parts.length; i++) {\n    cur = cur[parts[i]];\n    if (!goog.isDefAndNotNull(cur)) {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {!Object} obj The namespace to globalize.\n * @param {Object=} opt_global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, opt_global) {\n  var global = opt_global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {!Array<string>} provides An array of strings with\n *     the names of the objects this file provides.\n * @param {!Array<string>} requires An array of strings with\n *     the names of the objects this file requires.\n * @param {boolean|!Object<string>=} opt_loadFlags Parameters indicating\n *     how the file must be loaded.  The boolean 'true' is equivalent\n *     to {'module': 'goog'} for backwards-compatibility.  Valid properties\n *     and values include {'module': 'goog'} and {'lang': 'es6'}.\n */\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n//\n// User-defined namespaces may need their own deps file. For a reference on\n// creating a deps file, see:\n// Externally: https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work was done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.define('goog.ENABLE_DEBUG_LOADER', true);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * @param {string} requireOrPath\n * @return {boolean}\n * @private\n */\ngoog.isPath_ = function(requireOrPath) {\n  // Paths must be relative.\n  return requireOrPath.indexOf('./') == 0 || requireOrPath.indexOf('../') == 0;\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system. Note that all calls to goog.require will be\n * stripped by the compiler.\n * @see goog.provide\n * @param {string} name Namespace to include (as was given in goog.provide()) in\n *     the form \"goog.package.part\".\n * @return {?} If called within a goog.module file, the associated namespace or\n *     module otherwise null.\n */\ngoog.require = function(name) {\n  if (goog.isPath_(name)) {\n    if (goog.isInGoogModuleLoader_()) {\n      if (!goog.getModulePath_()) {\n        throw new Error(\n            'Current module has no path information. Was it loaded via ' +\n            'goog.loadModule without a path argument?');\n      }\n\n      name = goog.normalizePath_(goog.getModulePath_() + '/../' + name);\n    } else {\n      throw new Error('Cannot require by path outside of goog.modules.');\n    }\n  }\n\n  if (!COMPILED) {\n    // Might need to lazy load on old IE.\n    if (goog.ENABLE_DEBUG_LOADER) {\n      goog.debugLoader_.requested(name);\n    }\n\n    // If the object already exists we do not need to do anything.\n    if (goog.isProvided_(name)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(name);\n      }\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var moduleLoaderState = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n      try {\n        goog.debugLoader_.load_(name);\n      } finally {\n        goog.moduleLoaderState_ = moduleLoaderState;\n      }\n    }\n\n    return null;\n  }\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to attempt to load Closure's deps file. By default, when uncompiled,\n * deps files will attempt to be loaded.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The first parameter the script source, which is a relative URI. The second,\n * optional parameter is the script contents, in the event the script needed\n * transformation. It should return true if the script was imported, false\n * otherwise.\n * @type {(function(string, string=): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n */\ngoog.abstractMethod = function() {\n  throw new Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a `getInstance` static method that always returns the same\n * instance object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n * @suppress {missingProperties} 'instance_' isn't a property on 'Function'\n *     but we don't have a better type to use here.\n */\ngoog.addSingletonGetter = function(ctor) {\n  // instance_ is immediately set to prevent issues with sealed constructors\n  // such as are encountered when a constructor is returned as the export object\n  // of a goog.module in unoptimized code.\n  ctor.instance_ = undefined;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    return ctor.instance_ = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the `goog.testing.singleton` module. The compiler\n * removes this variable if unused.\n * @type {!Array<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\n/**\n * @define {boolean} Whether to load goog.modules using `eval` when using\n * the debug loader.  This provides a better debugging experience as the\n * source is unmodified and can be edited using Chrome Workspaces or similar.\n * However in some environments the use of `eval` is banned\n * so we provide an alternative.\n */\ngoog.define('goog.LOAD_MODULE_USING_EVAL', true);\n\n\n/**\n * @define {boolean} Whether the exports of goog.modules should be sealed when\n * possible.\n */\ngoog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\n\n\n/**\n * The registry of initialized modules:\n * The module identifier or path to module exports map.\n * @private @const {!Object<string, {exports:?,type:string,moduleId:string}>}\n */\ngoog.loadedModules_ = {};\n\n\n/**\n * True if the debug loader enabled and used.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\n/**\n * @define {string} How to decide whether to transpile.  Valid values\n * are 'always', 'never', and 'detect'.  The default ('detect') is to\n * use feature detection to determine which language levels need\n * transpilation.\n */\n// NOTE(user): we could expand this to accept a language level to bypass\n// detection: e.g. goog.TRANSPILE == 'es5' would transpile ES6 files but\n// would leave ES3 and ES5 files alone.\ngoog.define('goog.TRANSPILE', 'detect');\n\n\n/**\n * @define {string} Path to the transpiler.  Executing the script at this\n * path (relative to base.js) should define a function $jscomp.transpile.\n */\ngoog.define('goog.TRANSPILER', 'transpile.js');\n\n\n/**\n * @package {?boolean}\n * Visible for testing.\n */\ngoog.hasBadLetScoping = null;\n\n\n/**\n * @return {boolean}\n * @package Visible for testing.\n */\ngoog.useSafari10Workaround = function() {\n  if (goog.hasBadLetScoping == null) {\n    var hasBadLetScoping;\n    try {\n      hasBadLetScoping = !eval(\n          '\"use strict\";' +\n          'let x = 1; function f() { return typeof x; };' +\n          'f() == \"number\";');\n    } catch (e) {\n      // Assume that ES6 syntax isn't supported.\n      hasBadLetScoping = false;\n    }\n    goog.hasBadLetScoping = hasBadLetScoping;\n  }\n  return goog.hasBadLetScoping;\n};\n\n\n/**\n * @param {string} moduleDef\n * @return {string}\n * @package Visible for testing.\n */\ngoog.workaroundSafari10EvalBug = function(moduleDef) {\n  return '(function(){' + moduleDef +\n      '\\n' +  // Terminate any trailing single line comment.\n      ';' +   // Terminate any trailing expression.\n      '})();\\n';\n};\n\n\n/**\n * @param {function(?):?|string} moduleDef The module definition.\n * @param {string=} opt_path Path of this module. Required to goog.require ES6\n *     modules by path.\n */\ngoog.loadModule = function(moduleDef, opt_path) {\n  // NOTE: we allow function definitions to be either in the from\n  // of a string to eval (which keeps the original source intact) or\n  // in a eval forbidden environment (CSP) we allow a function definition\n  // which in its body must call `goog.module`, and return the exports\n  // of the module.\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: '',\n      declareLegacyNamespace: false,\n      type: goog.ModuleType.GOOG,\n      path: opt_path\n    };\n    var exports;\n    if (goog.isFunction(moduleDef)) {\n      exports = moduleDef.call(undefined, {});\n    } else if (goog.isString(moduleDef)) {\n      if (goog.useSafari10Workaround()) {\n        moduleDef = goog.workaroundSafari10EvalBug(moduleDef);\n      }\n\n      exports = goog.loadModuleFromSource_.call(undefined, moduleDef);\n    } else {\n      throw new Error('Invalid module definition');\n    }\n\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (goog.isString(moduleName) && moduleName) {\n      // Don't seal legacy namespaces as they may be used as a parent of\n      // another namespace\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\n        goog.constructNamespace_(moduleName, exports);\n      } else if (\n          goog.SEAL_MODULE_EXPORTS && Object.seal &&\n          typeof exports == 'object' && exports != null) {\n        Object.seal(exports);\n      }\n\n      var data = {\n        exports: exports,\n        type: goog.ModuleType.GOOG,\n        moduleId: goog.moduleLoaderState_.moduleName\n      };\n      goog.loadedModules_[moduleName] = data;\n      opt_path && (goog.loadedModules_[opt_path] = data);\n    } else {\n      throw new Error('Invalid module name \\\"' + moduleName + '\\\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\n\n\n/**\n * @private @const\n */\ngoog.loadModuleFromSource_ = /** @type {function(string):?} */ (function() {\n  // NOTE: we avoid declaring parameters or local variables here to avoid\n  // masking globals or leaking values into the module definition.\n  'use strict';\n  var exports = {};\n  eval(arguments[0]);\n  return exports;\n});\n\n\n/**\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\n * path components.\n * @param {string} path\n * @return {string}\n * @private\n */\ngoog.normalizePath_ = function(path) {\n  var components = path.split('/');\n  var i = 0;\n  while (i < components.length) {\n    if (components[i] == '.') {\n      components.splice(i, 1);\n    } else if (\n        i && components[i] == '..' && components[i - 1] &&\n        components[i - 1] != '..') {\n      components.splice(--i, 2);\n    } else {\n      i++;\n    }\n  }\n  return components.join('/');\n};\n\n\n/**\n * Provides a hook for loading a file when using Closure's goog.require() API\n * with goog.modules.  In particular this hook is provided to support Node.js.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_LOAD_FILE_SYNC;\n\n\n/**\n * Loads file by synchronous XHR. Should not be used in production environments.\n * @param {string} src Source URL.\n * @return {?string} File contents, or null if load failed.\n * @private\n */\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  } else {\n    try {\n      /** @type {XMLHttpRequest} */\n      var xhr = new goog.global['XMLHttpRequest']();\n      xhr.open('get', src, false);\n      xhr.send();\n      // NOTE: Successful http: requests have a status of 200, but successful\n      // file: requests may have a status of zero.  Any other status, or a\n      // thrown exception (particularly in case of file: requests) indicates\n      // some sort of error, which we treat as a missing or unavailable file.\n      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;\n    } catch (err) {\n      // No need to rethrow or log, since errors should show up on their own.\n      return null;\n    }\n  }\n};\n\n\n/**\n * Lazily retrieves the transpiler and applies it to the source.\n * @param {string} code JS code.\n * @param {string} path Path to the code.\n * @return {string} The transpiled code.\n * @private\n */\ngoog.transpile_ = function(code, path) {\n  var jscomp = goog.global['$jscomp'];\n  if (!jscomp) {\n    goog.global['$jscomp'] = jscomp = {};\n  }\n  var transpile = jscomp.transpile;\n  if (!transpile) {\n    var transpilerPath = goog.basePath + goog.TRANSPILER;\n    var transpilerCode = goog.loadFileSync_(transpilerPath);\n    if (transpilerCode) {\n      // This must be executed synchronously, since by the time we know we\n      // need it, we're about to load and write the ES6 code synchronously,\n      // so a normal script-tag load will be too slow. Wrapped in a function\n      // so that code is eval'd in the global scope.\n      (function() {\n        eval(transpilerCode + '\\n//# sourceURL=' + transpilerPath);\n      }).call(goog.global);\n      // Even though the transpiler is optional, if $gwtExport is found, it's\n      // a sign the transpiler was loaded and the $jscomp.transpile *should*\n      // be there.\n      if (goog.global['$gwtExport'] && goog.global['$gwtExport']['$jscomp'] &&\n          !goog.global['$gwtExport']['$jscomp']['transpile']) {\n        throw new Error(\n            'The transpiler did not properly export the \"transpile\" ' +\n            'method. $gwtExport: ' + JSON.stringify(goog.global['$gwtExport']));\n      }\n      // transpile.js only exports a single $jscomp function, transpile. We\n      // grab just that and add it to the existing definition of $jscomp which\n      // contains the polyfills.\n      goog.global['$jscomp'].transpile =\n          goog.global['$gwtExport']['$jscomp']['transpile'];\n      jscomp = goog.global['$jscomp'];\n      transpile = jscomp.transpile;\n    }\n  }\n  if (!transpile) {\n    // The transpiler is an optional component.  If it's not available then\n    // replace it with a pass-through function that simply logs.\n    var suffix = ' requires transpilation but no transpiler was found.';\n    transpile = jscomp.transpile = function(code, path) {\n      // TODO(user): figure out some way to get this error to show up\n      // in test results, noting that the failure may occur in many\n      // different ways, including in loadModule() before the test\n      // runner even comes up.\n      goog.logToConsole_(path + suffix);\n      return code;\n    };\n  }\n  // Note: any transpilation errors/warnings will be logged to the console.\n  return transpile(code, path);\n};\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {?} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (value) {\n      // Check these first, so we can avoid calling Object.prototype.toString if\n      // possible.\n      //\n      // IE improperly marshals typeof across execution contexts, but a\n      // cross-context object will still return false for \"instanceof Object\".\n      if (value instanceof Array) {\n        return 'array';\n      } else if (value instanceof Object) {\n        return s;\n      }\n\n      // HACK: In order to use an Object prototype method on the arbitrary\n      //   value, the compiler requires the value be cast to type Object,\n      //   even though the ECMA spec explicitly allows it.\n      var className = Object.prototype.toString.call(\n          /** @type {!Object} */ (value));\n      // In Firefox 3.6, attempting to access iframe window objects' length\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\n      // here.\n      if (className == '[object Window]') {\n        return 'object';\n      }\n\n      // We cannot always use constructor == Array or instanceof Array because\n      // different frames have different Array objects. In IE6, if the iframe\n      // where the array was created is destroyed, the array loses its\n      // prototype. Then dereferencing val.splice here throws an exception, so\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\n      // so that will work. In this case, this function will return false and\n      // most array functions will still work because the array is still\n      // array-like (supports length and []) even though it has lost its\n      // prototype.\n      // Mark Miller noticed that Object.prototype.toString\n      // allows access to the unforgeable [[Class]] property.\n      //  15.2.4.2 Object.prototype.toString ( )\n      //  When the toString method is called, the following steps are taken:\n      //      1. Get the [[Class]] property of this object.\n      //      2. Compute a string value by concatenating the three strings\n      //         \"[object \", Result(1), and \"]\".\n      //      3. Return Result(2).\n      // and this behavior survives the destruction of the execution context.\n      if ((className == '[object Array]' ||\n           // In IE all non value types are wrapped as objects across window\n           // boundaries (not iframe though) so we have to do object detection\n           // for this edge case.\n           typeof value.length == 'number' &&\n               typeof value.splice != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('splice')\n\n               )) {\n        return 'array';\n      }\n      // HACK: There is still an array case that fails.\n      //     function ArrayImpostor() {}\n      //     ArrayImpostor.prototype = [];\n      //     var impostor = new ArrayImpostor;\n      // this can be fixed by getting rid of the fast path\n      // (value instanceof Array) and solely relying on\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\n      // but that would require many more function calls and is not warranted\n      // unless closure code is receiving objects from untrusted sources.\n\n      // IE in cross-window calls does not correctly marshal the function type\n      // (it appears just as an object) so we cannot use just typeof val ==\n      // 'function'. However, if the object has a call property, it is a\n      // function.\n      if ((className == '[object Function]' ||\n           typeof value.call != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('call'))) {\n        return 'function';\n      }\n\n    } else {\n      return 'null';\n    }\n\n  } else if (s == 'function' && typeof value.call == 'undefined') {\n    // In Safari typeof nodeList returns 'function', and on Firefox typeof\n    // behaves similarly for HTML{Applet,Embed,Object}, Elements and RegExps. We\n    // would like to return object for those and we can detect an invalid\n    // function by making sure that the function object has a call method.\n    return 'object';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the specified value is null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is null.\n */\ngoog.isNull = function(val) {\n  return val === null;\n};\n\n\n/**\n * Returns true if the specified value is defined and not null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is an array.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArray = function(val) {\n  return goog.typeOf(val) == 'array';\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property. Note that for this function neither strings nor functions are\n * considered \"array-like\".\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  // We do not use goog.isObject here in order to exclude function values.\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is a function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.isFunction = function(val) {\n  return goog.typeOf(val) == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. The unique ID is\n * guaranteed to be unique across the current session amongst objects that are\n * passed into `getUid`. There is no guarantee that the ID is unique or\n * consistent across sessions. It is unsafe to generate unique ID for function\n * prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\n  // and SubClass.prototype will be the same.\n  return obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Whether the given object is already assigned a unique ID.\n *\n * This does not modify the object.\n *\n * @param {!Object} obj The object to check.\n * @return {boolean} Whether there is an assigned unique id for the object.\n */\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using `goog.getUid` in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\n  // try to delete.  Instead we try to use removeAttribute.\n  if (obj !== null && 'removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure JavaScript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Adds a hash code field to an object. The hash code is unique for the\n * given object.\n * @param {Object} obj The object to get the hash code for.\n * @return {number} The hash code for the object.\n * @deprecated Use goog.getUid instead.\n */\ngoog.getHashCode = goog.getUid;\n\n\n/**\n * Removes the hash code field from an object.\n * @param {Object} obj The object to remove the field from.\n * @deprecated Use goog.removeUid instead.\n */\ngoog.removeHashCode = goog.removeUid;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (typeof obj.clone === 'function') {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of this 'pre-specified'.\n *\n * Remaining arguments specified at call-time are appended to the pre-specified\n * ones.\n *\n * Also see: {@link #partial}.\n *\n * Usage:\n * <pre>var barMethBound = goog.bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\n      // extension environment. This means that for Chrome extensions, they get\n      // the implementation of Function.prototype.bind that calls goog.bind\n      // instead of the native one. Even worse, we don't want to introduce a\n      // circular dependency between goog.bind and Function.prototype.bind, so\n      // we have to hack this to make sure it works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like goog.bind(), except that a 'this object' is not required. Useful when\n * the target function is already bound.\n *\n * Usage:\n * var g = goog.partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n * @param {Object} target Target.\n * @param {Object} source Source.\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n */\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\n             // Unary plus operator converts its operand to a number which in\n             // the case of\n             // a date is done by calling getTime().\n             return +new Date();\n           });\n\n\n/**\n * Evals JavaScript in the global scope.  In IE this uses execScript, other\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\n * global scope (for example, in Safari), appends a script tag instead.\n * Throws an exception if neither execScript or eval is defined.\n * @param {string} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  if (goog.global.execScript) {\n    goog.global.execScript(script, 'JavaScript');\n  } else if (goog.global.eval) {\n    // Test to see if eval works\n    if (goog.evalWorksForGlobals_ == null) {\n      try {\n        goog.global.eval('var _evalTest_ = 1;');\n      } catch (ignore) {\n      }\n      if (typeof goog.global['_evalTest_'] != 'undefined') {\n        try {\n          delete goog.global['_evalTest_'];\n        } catch (ignore) {\n          // Microsoft edge fails the deletion above in strict mode.\n        }\n        goog.evalWorksForGlobals_ = true;\n      } else {\n        goog.evalWorksForGlobals_ = false;\n      }\n    }\n\n    if (goog.evalWorksForGlobals_) {\n      goog.global.eval(script);\n    } else {\n      /** @type {!Document} */\n      var doc = goog.global.document;\n      var scriptElt =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('SCRIPT'));\n      scriptElt.type = 'text/javascript';\n      scriptElt.defer = false;\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\n      scriptElt.appendChild(doc.createTextNode(script));\n      doc.head.appendChild(scriptElt);\n      doc.head.removeChild(scriptElt);\n    }\n  } else {\n    throw new Error('goog.globalEval not available');\n  }\n};\n\n\n/**\n * Indicates whether or not we can call 'eval' directly to eval code in the\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\n * empirically tests whether eval works for globals). @see goog.globalEval\n * @type {?boolean}\n * @private\n */\ngoog.evalWorksForGlobals_ = null;\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @private {!Object<string, string>|undefined}\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n\n/**\n * A hook for modifying the default behavior goog.getCssName. The function\n * if present, will receive the standard output of the goog.getCssName as\n * its input.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAP_FN;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a hyphen and\n * passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which these\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\n * style, the full css name is looked up in the map directly. If a rewrite is\n * not specified by the map, the compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls to\n * goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x = 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed only the\n * modifier will be processed, as it is assumed the first argument was generated\n * as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  // String() is used for compatibility with compiled soy where the passed\n  // className can be non-string objects.\n  if (String(className).charAt(0) == '.') {\n    throw new Error(\n        'className passed in goog.getCssName must not start with \".\".' +\n        ' You passed: ' + className);\n  }\n\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename =\n        goog.cssNameMappingStyle_ == 'BY_WHOLE' ? getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  var result =\n      opt_modifier ? className + '-' + rename(opt_modifier) : rename(className);\n\n  // The special CLOSURE_CSS_NAME_MAP_FN allows users to specify further\n  // processing of the class name.\n  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {\n    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);\n  }\n\n  return result;\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --process_closure_primitives flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {!Object<string, string>|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * This function produces a string which should be treated as plain text. Use\n * {@link goog.html.SafeHtmlFormatter} in conjunction with goog.getMsg to\n * produce SafeHtml.\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object<string, string>=} opt_values Maps place holder name to value.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values) {\n  if (opt_values) {\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] :\n                                                         match;\n    });\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primitive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} superClass_ and base is not defined on\n *    Function.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var args = new Array(arguments.length - 2);\n    for (var i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/**\n * Call up to the superclass.\n *\n * If this is called from a constructor, then this calls the superclass\n * constructor with arguments 1-N.\n *\n * If this is called from a prototype method, then you must pass the name of the\n * method as the second argument to this function. If you do not, you will get a\n * runtime error. This calls the superclass' method with arguments 2-N.\n *\n * This function only works if you use goog.inherits to express inheritance\n * relationships between your classes.\n *\n * This function is a compiler primitive. At compile-time, the compiler will do\n * macro expansion to remove a lot of the extra overhead that this function\n * introduces. The compiler will also enforce a lot of the assumptions that this\n * function makes, and treat it as a compiler error if you break them.\n *\n * @param {!Object} me Should always be \"this\".\n * @param {*=} opt_methodName The method name if calling a super method.\n * @param {...*} var_args The rest of the arguments.\n * @return {*} The return value of the superclass method.\n * @suppress {es5Strict} This method can not be used in strict mode, but\n *     all Closure Library consumers must depend on this file.\n * @deprecated goog.base is not strict mode compatible.  Prefer the static\n *     \"base\" method added to the constructor by goog.inherits\n *     or ES6 classes and the \"super\" keyword.\n */\ngoog.base = function(me, opt_methodName, var_args) {\n  var caller = arguments.callee.caller;\n\n  if (goog.STRICT_MODE_COMPATIBLE || (goog.DEBUG && !caller)) {\n    throw new Error(\n        'arguments.caller not defined.  goog.base() cannot be used ' +\n        'with strict mode code. See ' +\n        'http://www.ecma-international.org/ecma-262/5.1/#sec-C');\n  }\n\n  if (typeof caller.superClass_ !== 'undefined') {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var ctorArgs = new Array(arguments.length - 1);\n    for (var i = 1; i < arguments.length; i++) {\n      ctorArgs[i - 1] = arguments[i];\n    }\n    // This is a constructor. Call the superclass constructor.\n    return caller.superClass_.constructor.apply(me, ctorArgs);\n  }\n\n  if (typeof opt_methodName != 'string' && typeof opt_methodName != 'symbol') {\n    throw new Error(\n        'method names provided to goog.base must be a string or a symbol');\n  }\n\n  // Copying using loop to avoid deop due to passing arguments object to\n  // function. This is faster in many JS engines as of late 2014.\n  var args = new Array(arguments.length - 2);\n  for (var i = 2; i < arguments.length; i++) {\n    args[i - 2] = arguments[i];\n  }\n  var foundCaller = false;\n  for (var ctor = me.constructor; ctor;\n       ctor = ctor.superClass_ && ctor.superClass_.constructor) {\n    if (ctor.prototype[opt_methodName] === caller) {\n      foundCaller = true;\n    } else if (foundCaller) {\n      return ctor.prototype[opt_methodName].apply(me, args);\n    }\n  }\n\n  // If we did not find the caller in the prototype chain, then one of two\n  // things happened:\n  // 1) The caller is an instance method.\n  // 2) This method was not called by the right caller.\n  if (me[opt_methodName] === caller) {\n    return me.constructor.prototype[opt_methodName].apply(me, args);\n  } else {\n    throw new Error(\n        'goog.base called from a method of one name ' +\n        'to a method of a different name');\n  }\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the aliases\n * applied.  In uncompiled code the function is simply run since the aliases as\n * written are valid JavaScript.\n *\n *\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *     (e.g. \"var Timer = goog.Timer\").\n */\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.scope is not supported within a module.');\n  }\n  fn.call(goog.global);\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n\n\n//==============================================================================\n// goog.defineClass implementation\n//==============================================================================\n\n\n/**\n * Creates a restricted form of a Closure \"class\":\n *   - from the compiler's perspective, the instance returned from the\n *     constructor is sealed (no new properties may be added).  This enables\n *     better checks.\n *   - the compiler will rewrite this definition to a form that is optimal\n *     for type checking and optimization (initially this will be a more\n *     traditional form).\n *\n * @param {Function} superClass The superclass, Object or null.\n * @param {goog.defineClass.ClassDescriptor} def\n *     An object literal describing\n *     the class.  It may have the following properties:\n *     \"constructor\": the constructor function\n *     \"statics\": an object literal containing methods to add to the constructor\n *        as \"static\" methods or a function that will receive the constructor\n *        function as its only parameter to which static properties can\n *        be added.\n *     all other properties are added to the prototype.\n * @return {!Function} The class constructor.\n */\ngoog.defineClass = function(superClass, def) {\n  // TODO(johnlenz): consider making the superClass an optional parameter.\n  var constructor = def.constructor;\n  var statics = def.statics;\n  // Wrap the constructor prior to setting up the prototype and static methods.\n  if (!constructor || constructor == Object.prototype.constructor) {\n    constructor = function() {\n      throw new Error(\n          'cannot instantiate an interface (no constructor defined).');\n    };\n  }\n\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  if (superClass) {\n    goog.inherits(cls, superClass);\n  }\n\n  // Remove all the properties that should not be copied to the prototype.\n  delete def.constructor;\n  delete def.statics;\n\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  if (statics != null) {\n    if (statics instanceof Function) {\n      statics(cls);\n    } else {\n      goog.defineClass.applyProperties_(cls, statics);\n    }\n  }\n\n  return cls;\n};\n\n\n/**\n * @typedef {{\n *   constructor: (!Function|undefined),\n *   statics: (Object|undefined|function(Function):void)\n * }}\n */\ngoog.defineClass.ClassDescriptor;\n\n\n/**\n * @define {boolean} Whether the instances returned by goog.defineClass should\n *     be sealed when possible.\n *\n * When sealing is disabled the constructor function will not be wrapped by\n * goog.defineClass, making it incompatible with ES6 class methods.\n */\ngoog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\n\n\n/**\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\n * defined, this function will wrap the constructor in a function that seals the\n * results of the provided constructor function.\n *\n * @param {!Function} ctr The constructor whose results maybe be sealed.\n * @param {Function} superClass The superclass constructor.\n * @return {!Function} The replacement constructor.\n * @private\n */\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    // Do now wrap the constructor when sealing is disabled. Angular code\n    // depends on this for injection to work properly.\n    return ctr;\n  }\n\n  // Compute whether the constructor is sealable at definition time, rather\n  // than when the instance is being constructed.\n  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);\n\n  /**\n   * @this {Object}\n   * @return {?}\n   */\n  var wrappedCtr = function() {\n    // Don't seal an instance of a subclass when it calls the constructor of\n    // its super class as there is most likely still setup to do.\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n\n    if (this.constructor === wrappedCtr && superclassSealable &&\n        Object.seal instanceof Function) {\n      Object.seal(instance);\n    }\n    return instance;\n  };\n\n  return wrappedCtr;\n};\n\n\n/**\n * @param {Function} ctr The constructor to test.\n * @return {boolean} Whether the constructor has been tagged as unsealable\n *     using goog.tagUnsealableClass.\n * @private\n */\ngoog.defineClass.isUnsealable_ = function(ctr) {\n  return ctr && ctr.prototype &&\n      ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];\n};\n\n\n// TODO(johnlenz): share these values with the goog.object\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n * @private\n * @const\n */\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n// TODO(johnlenz): share this function with the goog.object\n/**\n * @param {!Object} target The object to add properties to.\n * @param {!Object} source The object to copy properties from.\n * @private\n */\ngoog.defineClass.applyProperties_ = function(target, source) {\n  // TODO(johnlenz): update this to support ES5 getters/setters\n\n  var key;\n  for (key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  // For IE the for-in-loop does not contain any properties that are not\n  // enumerable on the prototype object (for example isPrototypeOf from\n  // Object.prototype) and it will also not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n\n\n/**\n * Sealing classes breaks the older idiom of assigning properties on the\n * prototype rather than in the constructor. As such, goog.defineClass\n * must not seal subclasses of these old-style classes until they are fixed.\n * Until then, this marks a class as \"broken\", instructing defineClass\n * not to seal subclasses.\n * @param {!Function} ctr The legacy constructor to tag as unsealable.\n */\ngoog.tagUnsealableClass = function(ctr) {\n  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {\n    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;\n  }\n};\n\n\n/**\n * Name for unsealable tag property.\n * @const @private {string}\n */\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = 'goog_defineClass_legacy_unsealable';\n\n\n// There's a bug in the compiler where without collapse properties the\n// Closure namespace defines do not guard code correctly. To help reduce code\n// size also check for !COMPILED even though it redundant until this is fixed.\nif (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    return doc != null && 'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * We'd like to check for if the document readyState is 'loading'; however\n   * there are bugs on IE 10 and below where the readyState being anything other\n   * than 'complete' is not reliable.\n   * @return {boolean}\n   * @private\n   */\n  goog.isDocumentLoading_ = function() {\n    // attachEvent is available on IE 6 thru 10 only, and thus can be used to\n    // detect those browsers.\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n    return doc.attachEvent ? doc.readyState != 'complete' :\n                             doc.readyState == 'loading';\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        goog.isString(goog.global.CLOSURE_BASE_PATH)) {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    // If we have a currentScript available, use it exclusively.\n    var currentScript = doc.currentScript;\n    if (currentScript) {\n      var scripts = [currentScript];\n    } else {\n      var scripts = doc.getElementsByTagName('SCRIPT');\n    }\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\n      var src = script.src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n  goog.findBasePath_();\n\n  /** @struct @constructor @final */\n  goog.Transpiler = function() {\n    /** @private {?Object<string, boolean>} */\n    this.requiresTranspilation_ = null;\n  };\n\n\n  /**\n   * Returns a newly created map from language mode string to a boolean\n   * indicating whether transpilation should be done for that mode.\n   *\n   * Guaranteed invariant:\n   * For any two modes, l1 and l2 where l2 is a newer mode than l1,\n   * `map[l1] == true` implies that `map[l2] == true`.\n   *\n   * Note this method is extracted and used elsewhere, so it cannot rely on\n   * anything external (it should easily be able to be transformed into a\n   * standalone, top level function).\n   *\n   * @private\n   * @return {!Object<string, boolean>}\n   */\n  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {\n    var /** !Object<string, boolean> */ requiresTranspilation = {'es3': false};\n    var transpilationRequiredForAllLaterModes = false;\n\n    /**\n     * Adds an entry to requiresTranspliation for the given language mode.\n     *\n     * IMPORTANT: Calls must be made in order from oldest to newest language\n     * mode.\n     * @param {string} modeName\n     * @param {function(): boolean} isSupported Returns true if the JS engine\n     *     supports the given mode.\n     */\n    function addNewerLanguageTranspilationCheck(modeName, isSupported) {\n      if (transpilationRequiredForAllLaterModes) {\n        requiresTranspilation[modeName] = true;\n      } else if (isSupported()) {\n        requiresTranspilation[modeName] = false;\n      } else {\n        requiresTranspilation[modeName] = true;\n        transpilationRequiredForAllLaterModes = true;\n      }\n    }\n\n    /**\n     * Does the given code evaluate without syntax errors and return a truthy\n     * result?\n     */\n    function /** boolean */ evalCheck(/** string */ code) {\n      try {\n        return !!eval(code);\n      } catch (ignored) {\n        return false;\n      }\n    }\n\n    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ?\n        goog.global.navigator.userAgent :\n        '';\n\n    // Identify ES3-only browsers by their incorrect treatment of commas.\n    addNewerLanguageTranspilationCheck('es5', function() {\n      return evalCheck('[1,].length==1');\n    });\n    addNewerLanguageTranspilationCheck('es6', function() {\n      // Edge has a non-deterministic (i.e., not reproducible) bug with ES6:\n      // https://github.com/Microsoft/ChakraCore/issues/1496.\n      var re = /Edge\\/(\\d+)(\\.\\d)*/i;\n      var edgeUserAgent = userAgent.match(re);\n      if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {\n        return false;\n      }\n      // Test es6: [FF50 (?), Edge 14 (?), Chrome 50]\n      //   (a) default params (specifically shadowing locals),\n      //   (b) destructuring, (c) block-scoped functions,\n      //   (d) for-of (const), (e) new.target/Reflect.construct\n      var es6fullTest =\n          'class X{constructor(){if(new.target!=String)throw 1;this.x=42}}' +\n          'let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof ' +\n          'String))throw 1;for(const a of[2,3]){if(a==2)continue;function ' +\n          'f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()' +\n          '==3}';\n\n      return evalCheck('(()=>{\"use strict\";' + es6fullTest + '})()');\n    });\n    // TODO(joeltine): Remove es6-impl references for b/31340605.\n    // Consider es6-impl (widely-implemented es6 features) to be supported\n    // whenever es6 is supported. Technically es6-impl is a lower level of\n    // support than es6, but we don't have tests specifically for it.\n    addNewerLanguageTranspilationCheck('es6-impl', function() {\n      return true;\n    });\n    // ** and **= are the only new features in 'es7'\n    addNewerLanguageTranspilationCheck('es7', function() {\n      return evalCheck('2 ** 2 == 4');\n    });\n    // async functions are the only new features in 'es8'\n    addNewerLanguageTranspilationCheck('es8', function() {\n      return evalCheck('async () => 1, true');\n    });\n    addNewerLanguageTranspilationCheck('es9', function() {\n      return evalCheck('({...rest} = {}), true');\n    });\n    addNewerLanguageTranspilationCheck('es_next', function() {\n      return evalCheck('({...rest} = {}), true');\n    });\n    return requiresTranspilation;\n  };\n\n\n  /**\n   * Determines whether the given language needs to be transpiled.\n   * @param {string} lang\n   * @param {string|undefined} module\n   * @return {boolean}\n   */\n  goog.Transpiler.prototype.needsTranspile = function(lang, module) {\n    // TODO(user): ES6 module support detection.\n    if (goog.TRANSPILE == 'always') {\n      return true;\n    } else if (goog.TRANSPILE == 'never') {\n      return false;\n    } else if (!this.requiresTranspilation_) {\n      this.requiresTranspilation_ = this.createRequiresTranspilation_();\n    }\n    if (lang in this.requiresTranspilation_) {\n      return this.requiresTranspilation_[lang];\n    } else {\n      throw new Error('Unknown language mode: ' + lang);\n    }\n  };\n\n\n  /**\n   * Lazily retrieves the transpiler and applies it to the source.\n   * @param {string} code JS code.\n   * @param {string} path Path to the code.\n   * @return {string} The transpiled code.\n   */\n  goog.Transpiler.prototype.transpile = function(code, path) {\n    // TODO(user): We should delete goog.transpile_ and just have this\n    // function. But there's some compile error atm where goog.global is being\n    // stripped incorrectly without this.\n    return goog.transpile_(code, path);\n  };\n\n\n  /** @private @final {!goog.Transpiler} */\n  goog.transpiler_ = new goog.Transpiler();\n\n  /**\n   * Rewrites closing script tags in input to avoid ending an enclosing script\n   * tag.\n   *\n   * @param {string} str\n   * @return {string}\n   * @private\n   */\n  goog.protectScriptTag_ = function(str) {\n    return str.replace(/<\\/(SCRIPT)/ig, '\\\\x3c/$1');\n  };\n\n\n  /**\n   * A debug loader is responsible for downloading and executing javascript\n   * files in an unbundled, uncompiled environment.\n   *\n   * This can be custimized via the setDependencyFactory method, or by\n   * CLOSURE_IMPORT_SCRIPT/CLOSURE_LOAD_FILE_SYNC.\n   *\n   * @struct @constructor @final @private\n   */\n  goog.DebugLoader_ = function() {\n    /** @private @const {!Object<string, !goog.Dependency>} */\n    this.dependencies_ = {};\n    /** @private @const {!Object<string, string>} */\n    this.idToPath_ = {};\n    /** @private @const {!Object<string, boolean>} */\n    this.written_ = {};\n    /** @private @const {!Array<!goog.Dependency>} */\n    this.loadingDeps_ = [];\n    /** @private {!Array<!goog.Dependency>} */\n    this.depsToLoad_ = [];\n    /** @private {boolean} */\n    this.paused_ = false;\n    /** @private {!goog.DependencyFactory} */\n    this.factory_ = new goog.DependencyFactory(goog.transpiler_);\n    /** @private @const {!Object<string, !Function>} */\n    this.deferredCallbacks_ = {};\n    /** @private @const {!Array<string>} */\n    this.deferredQueue_ = [];\n  };\n\n  /**\n   * @param {!Array<string>} namespaces\n   * @param {function(): undefined} callback Function to call once all the\n   *     namespaces have loaded.\n   */\n  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {\n    var cb = callback;\n    function resolve() {\n      if (cb) {\n        goog.global.setTimeout(cb, 0);\n        cb = null;\n      }\n    }\n\n    if (!namespaces.length) {\n      resolve();\n      return;\n    }\n\n    var deps = [];\n    for (var i = 0; i < namespaces.length; i++) {\n      var path = this.getPathFromDeps_(namespaces[i]);\n      if (!path) {\n        throw new Error('Unregonized namespace: ' + namespaces[i]);\n      }\n      deps.push(this.dependencies_[path]);\n    }\n\n    var require = goog.require;\n    var loaded = 0;\n    for (var i = 0; i < namespaces.length; i++) {\n      require(namespaces[i]);\n      deps[i].onLoad(function() {\n        if (++loaded == namespaces.length) {\n          resolve();\n        }\n      });\n    }\n  };\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.DebugLoader_.prototype.loadClosureDeps = function() {\n    // Circumvent addDependency, which would try to transpile deps.js if\n    // transpile is set to always.\n    var relPath = 'deps.js';\n    this.depsToLoad_.push(this.factory_.createDependency(\n        goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {},\n        false));\n    this.loadDeps_();\n  };\n\n\n  /**\n   * Notifies the debug loader when a dependency has been requested.\n   *\n   * @param {string} absPathOrId Path of the dependency or goog id.\n   * @param {boolean=} opt_force\n   */\n  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {\n    var path = this.getPathFromDeps_(absPathOrId);\n    if (path &&\n        (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {\n      var callback = this.deferredCallbacks_[path];\n      if (callback) {\n        delete this.deferredCallbacks_[path];\n        callback();\n      }\n    }\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {\n    this.factory_ = factory;\n  };\n\n\n  /**\n   * Travserses the dependency graph and queues the given dependency, and all of\n   * its transitive dependencies, for loading and then starts loading if not\n   * paused.\n   *\n   * @param {string} absPathOrId\n   * @private\n   */\n  goog.DebugLoader_.prototype.load_ = function(absPathOrId) {\n    if (!this.getPathFromDeps_(absPathOrId)) {\n      var errorMessage = 'goog.require could not find: ' + absPathOrId;\n\n      goog.logToConsole_(errorMessage);\n      throw Error(errorMessage);\n    } else {\n      var loader = this;\n\n      var deps = [];\n\n      /** @param {string} absPathOrId */\n      var visit = function(absPathOrId) {\n        var path = loader.getPathFromDeps_(absPathOrId);\n\n        if (!path) {\n          throw new Error('Bad dependency path or symbol: ' + absPathOrId);\n        }\n\n        if (loader.written_[path]) {\n          return;\n        }\n\n        loader.written_[path] = true;\n\n        var dep = loader.dependencies_[path];\n        for (var i = 0; i < dep.requires.length; i++) {\n          if (!goog.isProvided_(dep.requires[i])) {\n            visit(dep.requires[i]);\n          }\n        }\n\n        deps.push(dep);\n      };\n\n      visit(absPathOrId);\n\n      var wasLoading = !!this.depsToLoad_.length;\n      this.depsToLoad_ = this.depsToLoad_.concat(deps);\n\n      if (!this.paused_ && !wasLoading) {\n        this.loadDeps_();\n      }\n    }\n  };\n\n\n  /**\n   * Loads any queued dependencies until they are all loaded or paused.\n   *\n   * @private\n   */\n  goog.DebugLoader_.prototype.loadDeps_ = function() {\n    var loader = this;\n    var paused = this.paused_;\n\n    while (this.depsToLoad_.length && !paused) {\n      (function() {\n        var loadCallDone = false;\n        var dep = loader.depsToLoad_.shift();\n\n        var loaded = false;\n        loader.loading_(dep);\n\n        var controller = {\n          pause: function() {\n            if (loadCallDone) {\n              throw new Error('Cannot call pause after the call to load.');\n            } else {\n              paused = true;\n            }\n          },\n          resume: function() {\n            if (loadCallDone) {\n              loader.resume_();\n            } else {\n              // Some dep called pause and then resume in the same load call.\n              // Just keep running this same loop.\n              paused = false;\n            }\n          },\n          loaded: function() {\n            if (loaded) {\n              throw new Error('Double call to loaded.');\n            }\n\n            loaded = true;\n            loader.loaded_(dep);\n          },\n          pending: function() {\n            // Defensive copy.\n            var pending = [];\n            for (var i = 0; i < loader.loadingDeps_.length; i++) {\n              pending.push(loader.loadingDeps_[i]);\n            }\n            return pending;\n          },\n          /**\n           * @param {string} path\n           * @param {goog.ModuleType} type\n           */\n          setModuleState: function(path, type) {\n            goog.moduleLoaderState_ = {\n              path: path,\n              type: type,\n              moduleName: '',\n              declareLegacyNamespace: false\n            };\n          },\n          registerEs6ModuleExports: function(path, exports) {\n            goog.loadedModules_[path] = {\n              exports: exports,\n              type: goog.ModuleType.ES6,\n              moduleId: ''\n            };\n          },\n          registerGoogModuleExports: function(moduleId, exports) {\n            goog.loadedModules_[moduleId] = {\n              exports: exports,\n              type: goog.ModuleType.GOOG,\n              moduleId: moduleId\n            };\n          },\n          clearModuleState: function() {\n            goog.moduleLoaderState_ = null;\n          },\n          defer: function(callback) {\n            if (loadCallDone) {\n              throw new Error(\n                  'Cannot register with defer after the call to load.');\n            }\n            loader.defer_(dep, callback);\n          },\n          areDepsLoaded: function() {\n            return loader.areDepsLoaded_(dep.requires);\n          }\n        };\n\n        try {\n          dep.load(controller);\n        } finally {\n          loadCallDone = true;\n        }\n      })();\n    }\n\n    if (paused) {\n      this.pause_();\n    }\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.pause_ = function() {\n    this.paused_ = true;\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.resume_ = function() {\n    if (this.paused_) {\n      this.paused_ = false;\n      this.loadDeps_();\n    }\n  };\n\n\n  /**\n   * Marks the given dependency as loading (load has been called but it has not\n   * yet marked itself as finished). Useful for dependencies that want to know\n   * what else is loading. Example: goog.modules cannot eval if there are\n   * loading dependencies.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loading_ = function(dep) {\n    this.loadingDeps_.push(dep);\n  };\n\n\n  /**\n   * Marks the given dependency as having finished loading and being available\n   * for require.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loaded_ = function(dep) {\n    for (var i = 0; i < this.loadingDeps_.length; i++) {\n      if (this.loadingDeps_[i] == dep) {\n        this.loadingDeps_.splice(i, 1);\n        break;\n      }\n    }\n\n    for (var i = 0; i < this.deferredQueue_.length; i++) {\n      if (this.deferredQueue_[i] == dep.path) {\n        this.deferredQueue_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.loadingDeps_.length == this.deferredQueue_.length &&\n        !this.depsToLoad_.length) {\n      // Something has asked to load these, but they may not be directly\n      // required again later, so load them now that we know we're done loading\n      // everything else. e.g. a goog module entry point.\n      while (this.deferredQueue_.length) {\n        this.requested(this.deferredQueue_.shift(), true);\n      }\n    }\n\n    dep.loaded();\n  };\n\n\n  /**\n   * @param {!Array<string>} pathsOrIds\n   * @return {boolean}\n   * @private\n   */\n  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {\n    for (var i = 0; i < pathsOrIds.length; i++) {\n      var path = this.getPathFromDeps_(pathsOrIds[i]);\n      if (!path ||\n          (!(path in this.deferredCallbacks_) &&\n           !goog.isProvided_(pathsOrIds[i]))) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @param {string} absPathOrId\n   * @return {?string}\n   * @private\n   */\n  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {\n    if (absPathOrId in this.idToPath_) {\n      return this.idToPath_[absPathOrId];\n    } else if (absPathOrId in this.dependencies_) {\n      return absPathOrId;\n    } else {\n      return null;\n    }\n  };\n\n\n  /**\n   * @param {!goog.Dependency} dependency\n   * @param {!Function} callback\n   * @private\n   */\n  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {\n    this.deferredCallbacks_[dependency.path] = callback;\n    this.deferredQueue_.push(dependency.path);\n  };\n\n\n  /**\n   * Interface for goog.Dependency implementations to have some control over\n   * loading of dependencies.\n   *\n   * @record\n   */\n  goog.LoadController = function() {};\n\n\n  /**\n   * Tells the controller to halt loading of more dependencies.\n   */\n  goog.LoadController.prototype.pause = function() {};\n\n\n  /**\n   * Tells the controller to resume loading of more dependencies if paused.\n   */\n  goog.LoadController.prototype.resume = function() {};\n\n\n  /**\n   * Tells the controller that this dependency has finished loading.\n   *\n   * This causes this to be removed from pending() and any load callbacks to\n   * fire.\n   */\n  goog.LoadController.prototype.loaded = function() {};\n\n\n  /**\n   * List of dependencies on which load has been called but which have not\n   * called loaded on their controller. This includes the current dependency.\n   *\n   * @return {!Array<!goog.Dependency>}\n   */\n  goog.LoadController.prototype.pending = function() {};\n\n\n  /**\n   * Registers an object as an ES6 module's exports so that goog.modules may\n   * require it by path.\n   *\n   * @param {string} path Full path of the module.\n   * @param {?} exports\n   */\n  goog.LoadController.prototype.registerEs6ModuleExports = function(\n      path, exports) {};\n\n\n  /**\n   * Sets the current module state. Allows goog.modules to require by path\n   * and lets goog.require return values.\n   *\n   * @param {string} path Full path of the current module.\n   * @param {goog.ModuleType} type Type of module.\n   */\n  goog.LoadController.prototype.setModuleState = function(path, type) {};\n\n\n  /**\n   * Clears the current module state.\n   */\n  goog.LoadController.prototype.clearModuleState = function() {};\n\n\n  /**\n   * Registers a callback to call once the dependency is actually requested\n   * via goog.require + all of the immediate dependencies have been loaded or\n   * all other files have been loaded. Allows for lazy loading until\n   * require'd without pausing dependency loading, which is needed on old IE.\n   *\n   * @param {!Function} callback\n   */\n  goog.LoadController.prototype.defer = function(callback) {};\n\n\n  /**\n   * @return {boolean}\n   */\n  goog.LoadController.prototype.areDepsLoaded = function() {};\n\n\n  /**\n   * Basic super class for all dependencies Closure Library can load.\n   *\n   * This default implementation is designed to load untranspiled, non-module\n   * scripts in a web broswer.\n   *\n   * For transpiled non-goog.module files {@see goog.TranspiledDependency}.\n   * For goog.modules see {@see goog.GoogModuleDependency}.\n   * For untranspiled ES6 modules {@see goog.Es6ModuleDependency}.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   */\n  goog.Dependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    /** @const */\n    this.path = path;\n    /** @const */\n    this.relativePath = relativePath;\n    /** @const */\n    this.provides = provides;\n    /** @const */\n    this.requires = requires;\n    /** @const */\n    this.loadFlags = loadFlags;\n    /** @private {boolean} */\n    this.loaded_ = false;\n    /** @private {!Array<function()>} */\n    this.loadCallbacks_ = [];\n  };\n\n\n  /**\n   * @param {function()} callback Callback to fire as soon as this has loaded.\n   * @final\n   */\n  goog.Dependency.prototype.onLoad = function(callback) {\n    if (this.loaded_) {\n      callback();\n    } else {\n      this.loadCallbacks_.push(callback);\n    }\n  };\n\n\n  /**\n   * Marks this dependency as loaded and fires any callbacks registered with\n   * onLoad.\n   * @final\n   */\n  goog.Dependency.prototype.loaded = function() {\n    this.loaded_ = true;\n    var callbacks = this.loadCallbacks_;\n    this.loadCallbacks_ = [];\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n  };\n\n\n  /**\n   * Whether or not document.written / appended script tags should be deferred.\n   *\n   * @private {boolean}\n   */\n  goog.Dependency.defer_ = false;\n\n\n  /**\n   * Map of script ready / state change callbacks. Old IE cannot handle putting\n   * these properties on goog.global.\n   *\n   * @private @const {!Object<string, function(?):undefined>}\n   */\n  goog.Dependency.callbackMap_ = {};\n\n\n  /**\n   * @param {function(...?):?} callback\n   * @return {string}\n   * @private\n   */\n  goog.Dependency.registerCallback_ = function(callback) {\n    var key = Math.random().toString(32);\n    goog.Dependency.callbackMap_[key] = callback;\n    return key;\n  };\n\n\n  /**\n   * @param {string} key\n   * @private\n   */\n  goog.Dependency.unregisterCallback_ = function(key) {\n    delete goog.Dependency.callbackMap_[key];\n  };\n\n\n  /**\n   * @param {string} key\n   * @param {...?} var_args\n   * @private\n   * @suppress {unusedPrivateMembers}\n   */\n  goog.Dependency.callback_ = function(key, var_args) {\n    if (key in goog.Dependency.callbackMap_) {\n      var callback = goog.Dependency.callbackMap_[key];\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      callback.apply(undefined, args);\n    } else {\n      var errorMessage = 'Callback key ' + key +\n          ' does not exist (was base.js loaded more than once?).';\n      throw Error(errorMessage);\n    }\n  };\n\n\n  /**\n   * Starts loading this dependency. This dependency can pause loading if it\n   * needs to and resume it later via the controller interface.\n   *\n   * When this is loaded it should call controller.loaded(). Note that this will\n   * end up calling the loaded method of this dependency; there is no need to\n   * call it explicitly.\n   *\n   * @param {!goog.LoadController} controller\n   */\n  goog.Dependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      if (this.relativePath == 'deps.js') {\n        // Some old code is relying on base.js auto loading deps.js failing with\n        // no error before later setting CLOSURE_IMPORT_SCRIPT.\n        // CLOSURE_IMPORT_SCRIPT should be set *before* base.js is loaded, or\n        // CLOSURE_NO_DEPS set to true.\n        goog.logToConsole_(\n            'Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, ' +\n            'or seting CLOSURE_NO_DEPS to true.');\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    // If the user tries to require a new symbol after document load,\n    // something has gone terribly wrong. Doing a document.write would\n    // wipe out the page. This does not apply to the CSP-compliant method\n    // of writing script tags.\n    if (doc.readyState == 'complete' &&\n        !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      // Certain test frameworks load base.js multiple times, which tries\n      // to write deps.js each time. If that happens, just fail silently.\n      // These frameworks wipe the page between each load of base.js, so this\n      // is OK.\n      var isDeps = /\\bdeps.js$/.test(this.path);\n      if (isDeps) {\n        controller.loaded();\n        return;\n      } else {\n        throw Error('Cannot write \"' + this.path + '\" after document load');\n      }\n    }\n\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n        goog.isDocumentLoading_()) {\n      var key = goog.Dependency.registerCallback_(function(script) {\n        if (!goog.DebugLoader_.IS_OLD_IE_ || script.readyState == 'complete') {\n          goog.Dependency.unregisterCallback_(key);\n          controller.loaded();\n        }\n      });\n\n      var event =\n          goog.DebugLoader_.IS_OLD_IE_ ? 'onreadystatechange' : 'onload';\n      var defer = goog.Dependency.defer_ ? 'defer' : '';\n      doc.write(\n          '<script src=\"' + this.path + '\" ' + event +\n          '=\"goog.Dependency.callback_(\\'' + key +\n          '\\', this)\" type=\"text/javascript\" ' + defer + '><' +\n          '/script>');\n    } else {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = goog.Dependency.defer_;\n      scriptEl.async = false;\n      scriptEl.type = 'text/javascript';\n\n      if (goog.DebugLoader_.IS_OLD_IE_) {\n        // Execution order is not guaranteed on old IE, halt loading and write\n        // these scripts one at a time, after each loads.\n        controller.pause();\n        scriptEl.onreadystatechange = function() {\n          if (scriptEl.readyState == 'loaded' ||\n              scriptEl.readyState == 'complete') {\n            controller.loaded();\n            controller.resume();\n          }\n        };\n      } else {\n        scriptEl.onload = function() {\n          scriptEl.onload = null;\n          controller.loaded();\n        };\n      }\n\n      scriptEl.src = this.path;\n      doc.head.appendChild(scriptEl);\n    }\n  };\n\n\n  /**\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.Dependency}\n   */\n  goog.Es6ModuleDependency = function(path, relativePath, requires, loadFlags) {\n    goog.Es6ModuleDependency.base(\n        this, 'constructor', path, relativePath, [], requires, loadFlags);\n  };\n  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.Es6ModuleDependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      controller.pause();\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    var dep = this;\n\n    // TODO(user): Does document.writing really speed up anything? Any\n    // difference between this and just waiting for interactive mode and then\n    // appending?\n    function write(src, contents) {\n      if (contents) {\n        doc.write(\n            '<script type=\"module\" crossorigin>' + contents + '</' +\n            'script>');\n      } else {\n        doc.write(\n            '<script type=\"module\" crossorigin src=\"' + src + '\"></' +\n            'script>');\n      }\n    }\n\n    function append(src, contents) {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = true;\n      scriptEl.async = false;\n      scriptEl.type = 'module';\n      scriptEl.setAttribute('crossorigin', true);\n\n      if (contents) {\n        scriptEl.textContent = contents;\n      } else {\n        scriptEl.src = src;\n      }\n\n      doc.head.appendChild(scriptEl);\n    }\n\n    var create;\n\n    if (goog.isDocumentLoading_()) {\n      create = write;\n      // We can ONLY call document.write if we are guaranteed that any\n      // non-module script tags document.written after this are deferred.\n      // Small optimization, in theory document.writing is faster.\n      goog.Dependency.defer_ = true;\n    } else {\n      create = append;\n    }\n\n    // Write 4 separate tags here:\n    // 1) Sets the module state at the correct time (just before execution).\n    // 2) A src node for this, which just hopefully lets the browser load it a\n    //    little early (no need to parse #3).\n    // 3) Import the module and register it.\n    // 4) Clear the module state at the correct time. Guarnteed to run even\n    //    if there is an error in the module (#3 will not run if there is an\n    //    error in the module).\n    var beforeKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(beforeKey);\n      controller.setModuleState(dep.path, goog.ModuleType.ES6);\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + beforeKey + '\")');\n\n    // TODO(user): Does this really speed up anything?\n    create(this.path, undefined);\n\n    var registerKey = goog.Dependency.registerCallback_(function(exports) {\n      goog.Dependency.unregisterCallback_(registerKey);\n      controller.registerEs6ModuleExports(dep.path, exports);\n    });\n    create(\n        undefined,\n        'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' +\n            registerKey + '\", m)');\n\n    var afterKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(afterKey);\n      controller.clearModuleState();\n      controller.loaded();\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + afterKey + '\")');\n  };\n\n\n  /**\n   * Superclass of any dependency that needs to be loaded into memory,\n   * transformed, and then eval'd (goog.modules and transpiled files).\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor @abstract\n   * @extends {goog.Dependency}\n   */\n  goog.TransformedDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.TransformedDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private {?string} */\n    this.contents_ = null;\n  };\n  goog.inherits(goog.TransformedDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.TransformedDependency.prototype.load = function(controller) {\n    if (!goog.global.CLOSURE_IMPORT_SCRIPT && goog.inHtmlDocument_() &&\n        goog.isDocumentLoading_()) {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n      // Required on some older browsers to load the contents in its own script\n      // tag. Otherwise the document.write acts like an eval apparently?\n      var dep = this;\n\n      var key = goog.Dependency.registerCallback_(function() {\n        goog.Dependency.unregisterCallback_(key);\n        dep.loadImpl_(controller);\n      });\n\n      doc.write(\n          '<script type=\"text/javascript\">' +\n          goog.protectScriptTag_('goog.Dependency.callback_(\"' + key + '\");') +\n          '</' +\n          'script>');\n    } else {\n      this.loadImpl_(controller);\n    }\n  };\n\n\n  /**\n   * @param {!goog.LoadController} controller\n   * @private\n   */\n  goog.TransformedDependency.prototype.loadImpl_ = function(controller) {\n    this.contents_ = goog.loadFileSync_(this.path);\n\n    if (this.contents_) {\n      this.contents_ = this.transform(this.contents_);\n      if (this.contents_) {\n        this.contents_ += '\\n//# sourceURL=' + this.path;\n      }\n    }\n\n    if (!this.contents_) {\n      // loadFileSync_ or transform are responsible. Assume they logged an\n      // error.\n      controller.pause();\n      return;\n    }\n\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT('', this.contents_)) {\n        this.contents_ = null;\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    var dep = this;\n    var isEs6 = this.loadFlags['module'] == goog.ModuleType.ES6;\n\n    function load(shouldEval) {\n      if (!dep.contents_) {\n        return;\n      }\n\n      if (isEs6) {\n        controller.setModuleState(dep.path, goog.ModuleType.ES6);\n      }\n\n      try {\n        var contents = dep.contents_;\n        dep.contents_ = null;\n        if (shouldEval) {\n          goog.globalEval(contents);\n        } else {\n          /** @type {!HTMLDocument} */\n          var doc = goog.global.document;\n          doc.write(\n              '<script type=\"text/javascript\">' +\n              goog.protectScriptTag_(contents) + '</' +\n              'script>');\n        }\n      } finally {\n        if (isEs6) {\n          controller.clearModuleState();\n        }\n      }\n\n      if (isEs6) {\n        // Due to circular dependencies this may not be available for require\n        // right now.\n        goog.global['$jscomp']['require']['ensure']([dep.path], function() {\n          controller.registerEs6ModuleExports(\n              dep.path, goog.global['$jscomp']['require'](dep.path));\n        });\n      }\n\n      controller.loaded();\n    }\n\n    var pending = controller.pending();\n    // If one thing is pending it is this.\n    if (pending.length > 1 && goog.DebugLoader_.IS_OLD_IE_) {\n      // If anything else is loading we need to lazy load due to bugs in old IE.\n      // Do not pause here; it breaks old IE as well.\n      controller.defer(function() {\n        load(true);\n      });\n      return;\n    }\n\n    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_()) {\n      // TODO(user): Externs are missing onreadystatechange for\n      // HTMLDocument.\n      /** @type {?} */\n      var doc = goog.global.document;\n      // Transpiled ES6 modules still need to load like regular ES6 modules,\n      // aka only after the document is interactive.\n      controller.pause();\n      var oldCallback = doc.onreadystatechange;\n      doc.onreadystatechange = function() {\n        if (doc.attachEvent ? doc.readyState == 'complete' :\n                              doc.readyState == 'interactive') {\n          doc.onreadystatechange = oldCallback;\n          load(true);\n          controller.resume();\n        }\n        if (goog.isFunction(oldCallback)) {\n          oldCallback.apply(undefined, arguments);\n        }\n      };\n    } else {\n      // Always eval on old IE.\n      load(\n          goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() ||\n          !goog.isDocumentLoading_());\n    }\n  };\n\n\n  /**\n   * @param {string} contents\n   * @return {string}\n   * @abstract\n   */\n  goog.TransformedDependency.prototype.transform = function(contents) {};\n\n\n  /**\n   * Any non-goog.module dependency which needs to be transpiled before eval.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.TranspiledDependency = function(\n      path, relativePath, provides, requires, loadFlags, transpiler) {\n    goog.TranspiledDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @protected @const*/\n    this.transpiler = transpiler;\n  };\n  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.TranspiledDependency.prototype.transform = function(contents) {\n    return this.transpiler.transpile(contents, this.path);\n  };\n\n\n  /**\n   * A goog.module, transpiled or not. Will always perform some minimal\n   * transformation even when not transpiled to wrap in a goog.loadModule\n   * statement.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.GoogModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile,\n      transpiler) {\n    goog.GoogModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private @const */\n    this.needsTranspile_ = needsTranspile;\n    /** @private @const */\n    this.transpiler_ = transpiler;\n  };\n  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.GoogModuleDependency.prototype.transform = function(contents) {\n    if (this.needsTranspile_) {\n      contents = this.transpiler_.transpile(contents, this.path);\n    }\n\n    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {\n      return '' +\n          'goog.loadModule(function(exports) {' +\n          '\"use strict\";' + contents +\n          '\\n' +  // terminate any trailing single line comment.\n          ';return exports' +\n          '}, \"' + this.path + '\");' +\n          '\\n//# sourceURL=' + this.path + '\\n';\n    } else {\n      return '' +\n          'goog.loadModule(' +\n          goog.global.JSON.stringify(\n              contents + '\\n//# sourceURL=' + this.path + '\\n') +\n          ', \"' + this.path + '\");';\n    }\n  };\n\n\n  /**\n   * Whether the browser is IE9 or earlier, which needs special handling\n   * for deferred modules.\n   * @const @private {boolean}\n   */\n  goog.DebugLoader_.IS_OLD_IE_ =\n      !!(!goog.global.atob && goog.global.document && goog.global.document.all);\n\n\n  /**\n   * @param {string} relPath\n   * @param {!Array<string>|undefined} provides\n   * @param {!Array<string>} requires\n   * @param {boolean|!Object<string>=} opt_loadFlags\n   * @see goog.addDependency\n   */\n  goog.DebugLoader_.prototype.addDependency = function(\n      relPath, provides, requires, opt_loadFlags) {\n    provides = provides || [];\n    relPath = relPath.replace(/\\\\/g, '/');\n    var path = goog.normalizePath_(goog.basePath + relPath);\n    if (!opt_loadFlags || typeof opt_loadFlags === 'boolean') {\n      opt_loadFlags = opt_loadFlags ? {'module': goog.ModuleType.GOOG} : {};\n    }\n    var dep = this.factory_.createDependency(\n        path, relPath, provides, requires, opt_loadFlags,\n        goog.transpiler_.needsTranspile(\n            opt_loadFlags['lang'] || 'es3', opt_loadFlags['module']));\n    this.dependencies_[path] = dep;\n    for (var i = 0; i < provides.length; i++) {\n      this.idToPath_[provides[i]] = path;\n    }\n    this.idToPath_[relPath] = path;\n  };\n\n  /**\n   * Creates goog.Dependency instances for the debug loader to load.\n   *\n   * Should be overridden to have the debug loader use custom subclasses of\n   * goog.Dependency.\n   *\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   */\n  goog.DependencyFactory = function(transpiler) {\n    /** @protected @const */\n    this.transpiler = transpiler;\n  };\n\n\n  /**\n   * @param {string} path Absolute path of the file.\n   * @param {string} relativePath Path relative to closure’s base.js.\n   * @param {!Array<string>} provides Array of provided goog.provide/module ids.\n   * @param {!Array<string>} requires Array of required goog.provide/module /\n   *     relative ES6 module paths.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile True if the file needs to be transpiled\n   *     per the goog.Transpiler.\n   * @return {!goog.Dependency}\n   */\n  goog.DependencyFactory.prototype.createDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile) {\n    if (loadFlags['module'] == goog.ModuleType.ES6) {\n      throw new Error(\n          'ES6 modules are not currently supported by the debug loader.');\n    }\n\n    if (loadFlags['module'] == goog.ModuleType.GOOG) {\n      return new goog.GoogModuleDependency(\n          path, relativePath, provides, requires, loadFlags, needsTranspile,\n          this.transpiler);\n    } else if (needsTranspile) {\n      return new goog.TranspiledDependency(\n          path, relativePath, provides, requires, loadFlags, this.transpiler);\n    } else {\n      if (loadFlags['module'] == goog.ModuleType.ES6) {\n        return new goog.Es6ModuleDependency(\n            path, relativePath, requires, loadFlags);\n      } else {\n        return new goog.Dependency(\n            path, relativePath, provides, requires, loadFlags);\n      }\n    }\n  };\n\n\n  /** @private @const */\n  goog.debugLoader_ = new goog.DebugLoader_();\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.loadClosureDeps = function() {\n    goog.debugLoader_.loadClosureDeps();\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * Note: if you wish to call this function and provide your own implemnetation\n   * it is a wise idea to set CLOSURE_NO_DEPS to true, otherwise the dependency\n   * file and all of its goog.addDependency calls will use the default factory.\n   * You can call goog.loadClosureDeps to load the Closure dependency file\n   * later, after your factory is injected.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.setDependencyFactory = function(factory) {\n    goog.debugLoader_.setDependencyFactory(factory);\n  };\n\n\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.debugLoader_.loadClosureDeps();\n  }\n\n\n  /**\n   * Bootstraps the given namespaces and calls the callback once they are\n   * available either via goog.require. This is a replacement for using\n   * `goog.require` to bootstrap Closure Javascript. Previously a `goog.require`\n   * in an HTML file would guarantee that the require'd namespace was available\n   * in the next immediate script tag. With ES6 modules this no longer a\n   * guarantee.\n   *\n   * @param {!Array<string>} namespaces\n   * @param {function(): ?} callback Function to call once all the namespaces\n   *     have loaded. Always called asynchronously.\n   */\n  goog.bootstrap = function(namespaces, callback) {\n    goog.debugLoader_.bootstrap(namespaces, callback);\n  };\n}\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.Thenable');\n\n/** @suppress {extraRequire} */\ngoog.forwardDeclare('goog.Promise'); // for the type reference.\n\n\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see goog.Promise}.\n *\n * @interface\n * @extends {IThenable<TYPE>}\n * @template TYPE\n */\ngoog.Thenable = function() {};\n\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the `onFulfilled` callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the `onRejected` callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE): VALUE)=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fulfilled.\n * @param {?(function(this:THIS, *): *)=} opt_onRejected A function that will\n *     be invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n *\n * @return {RESULT} A new Promise that will receive the result\n *     of the fulfillment or rejection callback.\n * @template VALUE\n * @template THIS\n *\n * When a Promise (or thenable) is returned from the fulfilled callback,\n * the result is the payload of that promise, not the promise itself.\n *\n * @template RESULT := type('goog.Promise',\n *     cond(isUnknown(VALUE), unknown(),\n *       mapunion(VALUE, (V) =>\n *         cond(isTemplatized(V) && sub(rawTypeOf(V), 'IThenable'),\n *           templateTypeOf(V, 0),\n *           cond(sub(V, 'Thenable'),\n *              unknown(),\n *              V)))))\n *  =:\n *\n */\ngoog.Thenable.prototype.then = function(\n    opt_onFulfilled, opt_onRejected, opt_context) {};\n\n\n/**\n * An expando property to indicate that an object implements\n * `goog.Thenable`.\n *\n * {@see addImplementation}.\n *\n * @const\n */\ngoog.Thenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see goog.Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:goog.Thenable,...?)} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\ngoog.Thenable.addImplementation = function(ctor) {\n  // Use bracket notation instead of goog.exportSymbol() so that the compiler\n  // won't create a 'var ctor;' extern when the \"create externs from exports\"\n  // mode is enabled.\n  ctor.prototype['then'] = ctor.prototype.then;\n  if (COMPILED) {\n    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;\n  } else {\n    // Avoids dictionary access in uncompiled mode.\n    ctor.prototype.$goog_Thenable = true;\n  }\n};\n\n\n/**\n * @param {?} object\n * @return {boolean} Whether a given instance implements `goog.Thenable`.\n *     The class/superclass of the instance must call `addImplementation`.\n */\ngoog.Thenable.isImplementedBy = function(object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    if (COMPILED) {\n      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];\n    }\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Provides a base class for custom Error objects such that the\n * stack is correctly maintained.\n *\n * You should never need to throw goog.debug.Error(msg) directly, Error(msg) is\n * sufficient.\n *\n */\n\ngoog.provide('goog.debug.Error');\n\n\n\n/**\n * Base class for custom error objects.\n * @param {*=} opt_msg The message associated with the error.\n * @constructor\n * @extends {Error}\n */\ngoog.debug.Error = function(opt_msg) {\n\n  // Attempt to ensure there is a stack trace.\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, goog.debug.Error);\n  } else {\n    var stack = new Error().stack;\n    if (stack) {\n      /** @override */\n      this.stack = stack;\n    }\n  }\n\n  if (opt_msg) {\n    /** @override */\n    this.message = String(opt_msg);\n  }\n\n  /**\n   * Whether to report this error to the server. Setting this to false will\n   * cause the error reporter to not report the error back to the server,\n   * which can be useful if the client knows that the error has already been\n   * logged on the server.\n   * @type {boolean}\n   */\n  this.reportErrorToServer = true;\n};\ngoog.inherits(goog.debug.Error, Error);\n\n\n/** @override */\ngoog.debug.Error.prototype.name = 'CustomError';\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\ngoog.provide('goog.asserts');\ngoog.provide('goog.asserts.AssertionError');\n\ngoog.require('goog.debug.Error');\ngoog.require('goog.dom.NodeType');\n\n\n/**\n * @define {boolean} Whether to strip out asserts or to leave them in.\n */\ngoog.define('goog.asserts.ENABLE_ASSERTS', goog.DEBUG);\n\n\n\n/**\n * Error object for failed assertions.\n * @param {string} messagePattern The pattern that was used to form message.\n * @param {!Array<*>} messageArgs The items to substitute into the pattern.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.asserts.AssertionError = function(messagePattern, messageArgs) {\n  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));\n\n  /**\n   * The message pattern used to format the error message. Error handlers can\n   * use this to uniquely identify the assertion.\n   * @type {string}\n   */\n  this.messagePattern = messagePattern;\n};\ngoog.inherits(goog.asserts.AssertionError, goog.debug.Error);\n\n\n/** @override */\ngoog.asserts.AssertionError.prototype.name = 'AssertionError';\n\n\n/**\n * The default error handler.\n * @param {!goog.asserts.AssertionError} e The exception to be handled.\n */\ngoog.asserts.DEFAULT_ERROR_HANDLER = function(e) {\n  throw e;\n};\n\n\n/**\n * The handler responsible for throwing or logging assertion errors.\n * @private {function(!goog.asserts.AssertionError)}\n */\ngoog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} pattern The string containing the pattern.\n * @param {!Array<*>} subs The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n * @private\n */\ngoog.asserts.subs_ = function(pattern, subs) {\n  var splitParts = pattern.split('%s');\n  var returnString = '';\n\n  // Replace up to the last split part. We are inserting in the\n  // positions between split parts.\n  var subLast = splitParts.length - 1;\n  for (var i = 0; i < subLast; i++) {\n    // keep unsupplied as '%s'\n    var sub = (i < subs.length) ? subs[i] : '%s';\n    returnString += splitParts[i] + sub;\n  }\n  return returnString + splitParts[subLast];\n};\n\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\ngoog.asserts.doAssertFailure_ = function(\n    defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  var message = 'Assertion failed';\n  if (givenMessage) {\n    message += ': ' + givenMessage;\n    var args = givenArgs;\n  } else if (defaultMessage) {\n    message += ': ' + defaultMessage;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  var e = new goog.asserts.AssertionError('' + message, args || []);\n  goog.asserts.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\ngoog.asserts.setErrorHandler = function(errorHandler) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\ngoog.asserts.assert = function(condition, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !condition) {\n    goog.asserts.doAssertFailure_(\n        '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\ngoog.asserts.fail = function(opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_(\n        new goog.asserts.AssertionError(\n            'Failure' + (opt_message ? ': ' + opt_message : ''),\n            Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\ngoog.asserts.assertNumber = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected number but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\ngoog.asserts.assertString = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected string but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\ngoog.asserts.assertFunction = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected function but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\ngoog.asserts.assertObject = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected object but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\ngoog.asserts.assertArray = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected array but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\ngoog.asserts.assertBoolean = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\ngoog.asserts.assertElement = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    goog.asserts.doAssertFailure_(\n        'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\ngoog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {\n    goog.asserts.doAssertFailure_(\n        'Expected instanceof %s but got %s.',\n        [goog.asserts.getType_(type), goog.asserts.getType_(value)],\n        opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks whether the value is a finite number, if goog.asserts.ENABLE_ASSERTS\n * is true.\n *\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not a number, or is\n *     a non-finite number such as NaN, Infinity or -Infinity.\n * @return {number} The value initially passed in.\n */\ngoog.asserts.assertFinite = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS &&\n      (typeof value != 'number' || !isFinite(value))) {\n    goog.asserts.doAssertFailure_(\n        'Expected %s to be a finite number but it is not.', [value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\ngoog.asserts.assertObjectPrototypeIsIntact = function() {\n  for (var key in Object.prototype) {\n    goog.asserts.fail(key + ' should not be enumerable in Object.prototype.');\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\ngoog.asserts.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return /** @type {string} */ (value.constructor.displayName) ||\n        value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n","// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Simple freelist.\n *\n * An anterative to goog.structs.SimplePool, it imposes the requirement that the\n * objects in the list contain a \"next\" property that can be used to maintain\n * the pool.\n */\n\ngoog.provide('goog.async.FreeList');\n\n\n/**\n * @template ITEM\n */\ngoog.async.FreeList = goog.defineClass(null, {\n  /**\n   * @param {function():ITEM} create\n   * @param {function(ITEM):void} reset\n   * @param {number} limit\n   */\n  constructor: function(create, reset, limit) {\n    /** @private @const {number} */\n    this.limit_ = limit;\n    /** @private @const {function()} */\n    this.create_ = create;\n    /** @private @const {function(ITEM):void} */\n    this.reset_ = reset;\n\n    /** @private {number} */\n    this.occupants_ = 0;\n    /** @private {ITEM} */\n    this.head_ = null;\n  },\n\n  /**\n   * @return {ITEM}\n   */\n  get: function() {\n    var item;\n    if (this.occupants_ > 0) {\n      this.occupants_--;\n      item = this.head_;\n      this.head_ = item.next;\n      item.next = null;\n    } else {\n      item = this.create_();\n    }\n    return item;\n  },\n\n  /**\n   * @param {ITEM} item An item available for possible future reuse.\n   */\n  put: function(item) {\n    this.reset_(item);\n    if (this.occupants_ < this.limit_) {\n      this.occupants_++;\n      item.next = this.head_;\n      this.head_ = item;\n    }\n  },\n\n  /**\n   * Visible for testing.\n   * @package\n   * @return {number}\n   */\n  occupants: function() { return this.occupants_; }\n});\n","// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.async.WorkItem');\ngoog.provide('goog.async.WorkQueue');\n\ngoog.require('goog.asserts');\ngoog.require('goog.async.FreeList');\n\n\n// TODO(johnlenz): generalize the WorkQueue if this is used by more\n// than goog.async.run.\n\n\n\n/**\n * A low GC workqueue. The key elements of this design:\n *   - avoids the need for goog.bind or equivalent by carrying scope\n *   - avoids the need for array reallocation by using a linked list\n *   - minimizes work entry objects allocation by recycling objects\n * @constructor\n * @final\n * @struct\n */\ngoog.async.WorkQueue = function() {\n  this.workHead_ = null;\n  this.workTail_ = null;\n};\n\n\n/** @define {number} The maximum number of entries to keep for recycling. */\ngoog.define('goog.async.WorkQueue.DEFAULT_MAX_UNUSED', 100);\n\n\n/** @const @private {goog.async.FreeList<goog.async.WorkItem>} */\ngoog.async.WorkQueue.freelist_ = new goog.async.FreeList(\n    function() { return new goog.async.WorkItem(); },\n    function(item) { item.reset(); }, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);\n\n\n/**\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\ngoog.async.WorkQueue.prototype.add = function(fn, scope) {\n  var item = this.getUnusedItem_();\n  item.set(fn, scope);\n\n  if (this.workTail_) {\n    this.workTail_.next = item;\n    this.workTail_ = item;\n  } else {\n    goog.asserts.assert(!this.workHead_);\n    this.workHead_ = item;\n    this.workTail_ = item;\n  }\n};\n\n\n/**\n * @return {goog.async.WorkItem}\n */\ngoog.async.WorkQueue.prototype.remove = function() {\n  var item = null;\n\n  if (this.workHead_) {\n    item = this.workHead_;\n    this.workHead_ = this.workHead_.next;\n    if (!this.workHead_) {\n      this.workTail_ = null;\n    }\n    item.next = null;\n  }\n  return item;\n};\n\n\n/**\n * @param {goog.async.WorkItem} item\n */\ngoog.async.WorkQueue.prototype.returnUnused = function(item) {\n  goog.async.WorkQueue.freelist_.put(item);\n};\n\n\n/**\n * @return {goog.async.WorkItem}\n * @private\n */\ngoog.async.WorkQueue.prototype.getUnusedItem_ = function() {\n  return goog.async.WorkQueue.freelist_.get();\n};\n\n\n\n/**\n * @constructor\n * @final\n * @struct\n */\ngoog.async.WorkItem = function() {\n  /** @type {?function()} */\n  this.fn = null;\n  /** @type {Object|null|undefined} */\n  this.scope = null;\n  /** @type {?goog.async.WorkItem} */\n  this.next = null;\n};\n\n\n/**\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\ngoog.async.WorkItem.prototype.set = function(fn, scope) {\n  this.fn = fn;\n  this.scope = scope;\n  this.next = null;\n};\n\n\n/** Reset the work item so they don't prevent GC before reuse */\ngoog.async.WorkItem.prototype.reset = function() {\n  this.fn = null;\n  this.scope = null;\n  this.next = null;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.async.run');\n\ngoog.require('goog.async.WorkQueue');\ngoog.require('goog.async.nextTick');\ngoog.require('goog.async.throwException');\n\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\ngoog.async.run = function(callback, opt_context) {\n  if (!goog.async.run.schedule_) {\n    goog.async.run.initializeRunner_();\n  }\n  if (!goog.async.run.workQueueScheduled_) {\n    // Nothing is currently scheduled, schedule it now.\n    goog.async.run.schedule_();\n    goog.async.run.workQueueScheduled_ = true;\n  }\n\n  goog.async.run.workQueue_.add(callback, opt_context);\n};\n\n\n/**\n * Initializes the function to use to process the work queue.\n * @private\n */\ngoog.async.run.initializeRunner_ = function() {\n  // If Promises are available in the browser, just schedule the callback\n  // on a fulfilled promise, which is specified to be async, but as fast as\n  // possible.  Use goog.global.Promise instead of just Promise because the\n  // relevant externs may be missing, and don't alias it because this could\n  // confuse the compiler into thinking the polyfill is required when it should\n  // be treated as optional.\n  if (goog.global.Promise && goog.global.Promise.resolve) {\n    var promise = goog.global.Promise.resolve(undefined);\n    goog.async.run.schedule_ = function() {\n      promise.then(goog.async.run.processWorkQueue);\n    };\n  } else {\n    goog.async.run.schedule_ = function() {\n      goog.async.nextTick(goog.async.run.processWorkQueue);\n    };\n  }\n};\n\n\n/**\n * Forces goog.async.run to use nextTick instead of Promise.\n *\n * This should only be done in unit tests. It's useful because MockClock\n * replaces nextTick, but not the browser Promise implementation, so it allows\n * Promise-based code to be tested with MockClock.\n *\n * However, we also want to run promises if the MockClock is no longer in\n * control so we schedule a backup \"setTimeout\" to the unmocked timeout if\n * provided.\n *\n * @param {function(function())=} opt_realSetTimeout\n */\ngoog.async.run.forceNextTick = function(opt_realSetTimeout) {\n  goog.async.run.schedule_ = function() {\n    goog.async.nextTick(goog.async.run.processWorkQueue);\n    if (opt_realSetTimeout) {\n      opt_realSetTimeout(goog.async.run.processWorkQueue);\n    }\n  };\n};\n\n\n/**\n * The function used to schedule work asynchronousely.\n * @private {function()}\n */\ngoog.async.run.schedule_;\n\n\n/** @private {boolean} */\ngoog.async.run.workQueueScheduled_ = false;\n\n\n/** @private {!goog.async.WorkQueue} */\ngoog.async.run.workQueue_ = new goog.async.WorkQueue();\n\n\nif (goog.DEBUG) {\n  /**\n   * Reset the work queue. Only available for tests in debug mode.\n   */\n  goog.async.run.resetQueue = function() {\n    goog.async.run.workQueueScheduled_ = false;\n    goog.async.run.workQueue_ = new goog.async.WorkQueue();\n  };\n}\n\n\n/**\n * Run any pending goog.async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * goog.async.nextTick.\n */\ngoog.async.run.processWorkQueue = function() {\n  // NOTE: additional work queue items may be added while processing.\n  var item = null;\n  while (item = goog.async.run.workQueue_.remove()) {\n    try {\n      item.fn.call(item.scope);\n    } catch (e) {\n      goog.async.throwException(e);\n    }\n    goog.async.run.workQueue_.returnUnused(item);\n  }\n\n  // There are no more work items, allow processing to be scheduled again.\n  goog.async.run.workQueueScheduled_ = false;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating arrays.\n *\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.array');\n\ngoog.require('goog.asserts');\n\n\n/**\n * @define {boolean} NATIVE_ARRAY_PROTOTYPES indicates whether the code should\n * rely on Array.prototype functions, if available.\n *\n * The Array.prototype functions can be defined by external libraries like\n * Prototype and setting this flag to false forces closure to use its own\n * goog.array implementation.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on the prototype functions, specify\n * \"--define goog.NATIVE_ARRAY_PROTOTYPES=false\" to the JSCompiler.\n *\n * Setting goog.TRUSTED_SITE to false will automatically set\n * NATIVE_ARRAY_PROTOTYPES to false.\n */\ngoog.define('goog.NATIVE_ARRAY_PROTOTYPES', goog.TRUSTED_SITE);\n\n\n/**\n * @define {boolean} If true, JSCompiler will use the native implementation of\n * array functions where appropriate (e.g., `Array#filter`) and remove the\n * unused pure JS implementation.\n */\ngoog.define('goog.array.ASSUME_NATIVE_FUNCTIONS', false);\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as goog.array.last.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\ngoog.array.peek = function(array) {\n  return array[array.length - 1];\n};\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as goog.array.peek.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\ngoog.array.last = goog.array.peek;\n\n// NOTE(arv): Since most of the array functions are generic it allows you to\n// pass an array-like object. Strings have a length and are considered array-\n// like. However, the 'in' operator does not work on strings so we cannot just\n// use the array path even if the browser supports indexing into strings. We\n// therefore end up splitting the string.\n\n\n/**\n * Returns the index of the first element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-indexof}\n *\n * @param {IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at index 0.\n * @return {number} The index of the first matching array element.\n * @template T\n */\ngoog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      var fromIndex = opt_fromIndex == null ?\n          0 :\n          (opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) :\n                               opt_fromIndex);\n\n      if (goog.isString(arr)) {\n        // Array.prototype.indexOf uses === so only strings should be found.\n        if (!goog.isString(obj) || obj.length != 1) {\n          return -1;\n        }\n        return arr.indexOf(obj, fromIndex);\n      }\n\n      for (var i = fromIndex; i < arr.length; i++) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\n\n\n/**\n * Returns the index of the last element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-lastindexof}\n *\n * @param {!IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {?number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at the end of the array.\n * @return {number} The index of the last matching array element.\n * @template T\n */\ngoog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      goog.asserts.assert(arr.length != null);\n\n      // Firefox treats undefined and null as 0 in the fromIndex argument which\n      // leads it to always return -1\n      var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n      return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n\n      if (fromIndex < 0) {\n        fromIndex = Math.max(0, arr.length + fromIndex);\n      }\n\n      if (goog.isString(arr)) {\n        // Array.prototype.lastIndexOf uses === so only strings should be found.\n        if (!goog.isString(obj) || obj.length != 1) {\n          return -1;\n        }\n        return arr.lastIndexOf(obj, fromIndex);\n      }\n\n      for (var i = fromIndex; i >= 0; i--) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\n\n\n/**\n * Calls a function for each element in an array. Skips holes in the array.\n * See {@link http://tinyurl.com/developer-mozilla-org-array-foreach}\n *\n * @param {IArrayLike<T>|string} arr Array or array like object over\n *     which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function takes 3 arguments (the element, the index and the\n *     array). The return value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @template T,S\n */\ngoog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      Array.prototype.forEach.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n    };\n\n\n/**\n * Calls a function for each element in an array, starting from the last\n * element rather than the first.\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function\n *     takes 3 arguments (the element, the index and the array). The return\n *     value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @template T,S\n */\ngoog.array.forEachRight = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = goog.isString(arr) ? arr.split('') : arr;\n  for (var i = l - 1; i >= 0; --i) {\n    if (i in arr2) {\n      f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n    }\n  }\n};\n\n\n/**\n * Calls a function for each element in an array, and if the function returns\n * true adds the element to a new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-filter}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?):boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and must\n *     return a Boolean. If the return value is true the element is added to the\n *     result array. If it is false the element is not included.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {!Array<T>} a new array in which only elements that passed the test\n *     are present.\n * @template T,S\n */\ngoog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.filter.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var res = [];\n      var resLength = 0;\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          var val = arr2[i];  // in case f mutates arr2\n          if (f.call(/** @type {?} */ (opt_obj), val, i, arr)) {\n            res[resLength++] = val;\n          }\n        }\n      }\n      return res;\n    };\n\n\n/**\n * Calls a function for each element in an array and inserts the result into a\n * new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-map}\n *\n * @param {IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): RESULT} f The function to call\n *     for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return something. The result will be\n *     inserted into a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the results from f.\n * @template THIS, VALUE, RESULT\n */\ngoog.array.map = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.map.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var res = new Array(l);\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          res[i] = f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n      return res;\n    };\n\n\n/**\n * Passes every element of an array into a function and accumulates the result.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduce}\n *\n * For example:\n * var a = [1, 2, 3, 4];\n * goog.array.reduce(a, function(r, v, i, arr) {return r + v;}, 0);\n * returns 10\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {R} Result of evaluating f repeatedly across the values of the array.\n * @template T,S,R\n */\ngoog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ?\n    function(arr, f, val, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduce.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      var rval = val;\n      goog.array.forEach(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\n\n\n/**\n * Passes every element of an array into a function and accumulates the result,\n * starting from the last element and working towards the first.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduceright}\n *\n * For example:\n * var a = ['a', 'b', 'c'];\n * goog.array.reduceRight(a, function(r, v, i, arr) {return r + v;}, '');\n * returns 'cba'\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {R} Object returned as a result of evaluating f repeatedly across the\n *     values of the array.\n * @template T,S,R\n */\ngoog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ?\n    function(arr, f, val, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n      goog.asserts.assert(f != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduceRight.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      var rval = val;\n      goog.array.forEachRight(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\n\n\n/**\n * Calls f for each element of an array. If any call returns true, some()\n * returns true (without checking the remaining elements). If all calls\n * return false, some() returns false.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-some}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} true if any element passes the test.\n * @template T,S\n */\ngoog.array.some = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.some.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n\n/**\n * Call f for each element of an array. If all calls return true, every()\n * returns true. If any call returns false, every() returns false and\n * does not continue to check the remaining elements.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-every}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} false if any element fails the test.\n * @template T,S\n */\ngoog.array.every = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.every.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2 && !f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n\n/**\n * Counts the array elements that fulfill the predicate, i.e. for which the\n * callback function returns true. Skips holes in the array.\n *\n * @param {!IArrayLike<T>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this: S, T, number, ?): boolean} f The function to call for\n *     every element. Takes 3 arguments (the element, the index and the array).\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @return {number} The number of the matching elements.\n * @template T,S\n */\ngoog.array.count = function(arr, f, opt_obj) {\n  var count = 0;\n  goog.array.forEach(arr, function(element, index, arr) {\n    if (f.call(/** @type {?} */ (opt_obj), element, index, arr)) {\n      ++count;\n    }\n  }, opt_obj);\n  return count;\n};\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The first array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\ngoog.array.find = function(arr, f, opt_obj) {\n  var i = goog.array.findIndex(arr, f, opt_obj);\n  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];\n};\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the first array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\ngoog.array.findIndex = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = goog.isString(arr) ? arr.split('') : arr;\n  for (var i = 0; i < l; i++) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The last array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\ngoog.array.findRight = function(arr, f, opt_obj) {\n  var i = goog.array.findIndexRight(arr, f, opt_obj);\n  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];\n};\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the last array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\ngoog.array.findIndexRight = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = goog.isString(arr) ? arr.split('') : arr;\n  for (var i = l - 1; i >= 0; i--) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n/**\n * Whether the array contains the given object.\n * @param {IArrayLike<?>|string} arr The array to test for the presence of the\n *     element.\n * @param {*} obj The object for which to test.\n * @return {boolean} true if obj is present.\n */\ngoog.array.contains = function(arr, obj) {\n  return goog.array.indexOf(arr, obj) >= 0;\n};\n\n\n/**\n * Whether the array is empty.\n * @param {IArrayLike<?>|string} arr The array to test.\n * @return {boolean} true if empty.\n */\ngoog.array.isEmpty = function(arr) {\n  return arr.length == 0;\n};\n\n\n/**\n * Clears the array.\n * @param {IArrayLike<?>} arr Array or array like object to clear.\n */\ngoog.array.clear = function(arr) {\n  // For non real arrays we don't have the magic length so we delete the\n  // indices.\n  if (!goog.isArray(arr)) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n      delete arr[i];\n    }\n  }\n  arr.length = 0;\n};\n\n\n/**\n * Pushes an item into an array, if it's not already in the array.\n * @param {Array<T>} arr Array into which to insert the item.\n * @param {T} obj Value to add.\n * @template T\n */\ngoog.array.insert = function(arr, obj) {\n  if (!goog.array.contains(arr, obj)) {\n    arr.push(obj);\n  }\n};\n\n\n/**\n * Inserts an object at the given index of the array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {*} obj The object to insert.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\ngoog.array.insertAt = function(arr, obj, opt_i) {\n  goog.array.splice(arr, opt_i, 0, obj);\n};\n\n\n/**\n * Inserts at the given index of the array, all elements of another array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {IArrayLike<?>} elementsToAdd The array of elements to add.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\ngoog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {\n  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);\n};\n\n\n/**\n * Inserts an object into an array before a specified object.\n * @param {Array<T>} arr The array to modify.\n * @param {T} obj The object to insert.\n * @param {T=} opt_obj2 The object before which obj should be inserted. If obj2\n *     is omitted or not found, obj is inserted at the end of the array.\n * @template T\n */\ngoog.array.insertBefore = function(arr, obj, opt_obj2) {\n  var i;\n  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {\n    arr.push(obj);\n  } else {\n    goog.array.insertAt(arr, obj, i);\n  }\n};\n\n\n/**\n * Removes the first occurrence of a particular value from an array.\n * @param {IArrayLike<T>} arr Array from which to remove\n *     value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\ngoog.array.remove = function(arr, obj) {\n  var i = goog.array.indexOf(arr, obj);\n  var rv;\n  if ((rv = i >= 0)) {\n    goog.array.removeAt(arr, i);\n  }\n  return rv;\n};\n\n\n/**\n * Removes the last occurrence of a particular value from an array.\n * @param {!IArrayLike<T>} arr Array from which to remove value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\ngoog.array.removeLast = function(arr, obj) {\n  var i = goog.array.lastIndexOf(arr, obj);\n  if (i >= 0) {\n    goog.array.removeAt(arr, i);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes from an array the element at index i\n * @param {IArrayLike<?>} arr Array or array like object from which to\n *     remove value.\n * @param {number} i The index to remove.\n * @return {boolean} True if an element was removed.\n */\ngoog.array.removeAt = function(arr, i) {\n  goog.asserts.assert(arr.length != null);\n\n  // use generic form of splice\n  // splice returns the removed items and if successful the length of that\n  // will be 1\n  return Array.prototype.splice.call(arr, i, 1).length == 1;\n};\n\n\n/**\n * Removes the first value that satisfies the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {boolean} True if an element was removed.\n * @template T,S\n */\ngoog.array.removeIf = function(arr, f, opt_obj) {\n  var i = goog.array.findIndex(arr, f, opt_obj);\n  if (i >= 0) {\n    goog.array.removeAt(arr, i);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes all values that satisfy the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The number of items removed\n * @template T,S\n */\ngoog.array.removeAllIf = function(arr, f, opt_obj) {\n  var removedCount = 0;\n  goog.array.forEachRight(arr, function(val, index) {\n    if (f.call(/** @type {?} */ (opt_obj), val, index, arr)) {\n      if (goog.array.removeAt(arr, index)) {\n        removedCount++;\n      }\n    }\n  });\n  return removedCount;\n};\n\n\n/**\n * Returns a new array that is the result of joining the arguments.  If arrays\n * are passed then their items are added, however, if non-arrays are passed they\n * will be added to the return array as is.\n *\n * Note that ArrayLike objects will be added as is, rather than having their\n * items added.\n *\n * goog.array.concat([1, 2], [3, 4]) -> [1, 2, 3, 4]\n * goog.array.concat(0, [1, 2]) -> [0, 1, 2]\n * goog.array.concat([1, 2], null) -> [1, 2, null]\n *\n * There is bug in all current versions of IE (6, 7 and 8) where arrays created\n * in an iframe become corrupted soon (not immediately) after the iframe is\n * destroyed. This is common if loading data via goog.net.IframeIo, for example.\n * This corruption only affects the concat method which will start throwing\n * Catastrophic Errors (#-2147418113).\n *\n * See http://endoflow.com/scratch/corrupted-arrays.html for a test case.\n *\n * Internally goog.array should use this, so that all methods will continue to\n * work on these broken array objects.\n *\n * @param {...*} var_args Items to concatenate.  Arrays will have each item\n *     added, while primitives and objects will be added as is.\n * @return {!Array<?>} The new resultant array.\n */\ngoog.array.concat = function(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\n\n/**\n * Returns a new array that contains the contents of all the arrays passed.\n * @param {...!Array<T>} var_args\n * @return {!Array<T>}\n * @template T\n */\ngoog.array.join = function(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\n\n/**\n * Converts an object to an array.\n * @param {IArrayLike<T>|string} object  The object to convert to an\n *     array.\n * @return {!Array<T>} The object converted into an array. If object has a\n *     length property, every property indexed with a non-negative number\n *     less than length will be included in the result. If object does not\n *     have a length property, an empty array will be returned.\n * @template T\n */\ngoog.array.toArray = function(object) {\n  var length = object.length;\n\n  // If length is not a number the following it false. This case is kept for\n  // backwards compatibility since there are callers that pass objects that are\n  // not array like.\n  if (length > 0) {\n    var rv = new Array(length);\n    for (var i = 0; i < length; i++) {\n      rv[i] = object[i];\n    }\n    return rv;\n  }\n  return [];\n};\n\n\n/**\n * Does a shallow copy of an array.\n * @param {IArrayLike<T>|string} arr  Array or array-like object to\n *     clone.\n * @return {!Array<T>} Clone of the input array.\n * @template T\n */\ngoog.array.clone = goog.array.toArray;\n\n\n/**\n * Extends an array with another array, element, or \"array like\" object.\n * This function operates 'in-place', it does not create a new Array.\n *\n * Example:\n * var a = [];\n * goog.array.extend(a, [0, 1]);\n * a; // [0, 1]\n * goog.array.extend(a, 2);\n * a; // [0, 1, 2]\n *\n * @param {Array<VALUE>} arr1  The array to modify.\n * @param {...(IArrayLike<VALUE>|VALUE)} var_args The elements or arrays of\n *     elements to add to arr1.\n * @template VALUE\n */\ngoog.array.extend = function(arr1, var_args) {\n  for (var i = 1; i < arguments.length; i++) {\n    var arr2 = arguments[i];\n    if (goog.isArrayLike(arr2)) {\n      var len1 = arr1.length || 0;\n      var len2 = arr2.length || 0;\n      arr1.length = len1 + len2;\n      for (var j = 0; j < len2; j++) {\n        arr1[len1 + j] = arr2[j];\n      }\n    } else {\n      arr1.push(arr2);\n    }\n  }\n};\n\n\n/**\n * Adds or removes elements from an array. This is a generic version of Array\n * splice. This means that it might work on other objects similar to arrays,\n * such as the arguments object.\n *\n * @param {IArrayLike<T>} arr The array to modify.\n * @param {number|undefined} index The index at which to start changing the\n *     array. If not defined, treated as 0.\n * @param {number} howMany How many elements to remove (0 means no removal. A\n *     value below 0 is treated as zero and so is any other non number. Numbers\n *     are floored).\n * @param {...T} var_args Optional, additional elements to insert into the\n *     array.\n * @return {!Array<T>} the removed elements.\n * @template T\n */\ngoog.array.splice = function(arr, index, howMany, var_args) {\n  goog.asserts.assert(arr.length != null);\n\n  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));\n};\n\n\n/**\n * Returns a new array from a segment of an array. This is a generic version of\n * Array slice. This means that it might work on other objects similar to\n * arrays, such as the arguments object.\n *\n * @param {IArrayLike<T>|string} arr The array from\n * which to copy a segment.\n * @param {number} start The index of the first element to copy.\n * @param {number=} opt_end The index after the last element to copy.\n * @return {!Array<T>} A new array containing the specified segment of the\n *     original array.\n * @template T\n */\ngoog.array.slice = function(arr, start, opt_end) {\n  goog.asserts.assert(arr.length != null);\n\n  // passing 1 arg to slice is not the same as passing 2 where the second is\n  // null or undefined (in that case the second argument is treated as 0).\n  // we could use slice on the arguments object and then use apply instead of\n  // testing the length\n  if (arguments.length <= 2) {\n    return Array.prototype.slice.call(arr, start);\n  } else {\n    return Array.prototype.slice.call(arr, start, opt_end);\n  }\n};\n\n\n/**\n * Removes all duplicates from an array (retaining only the first\n * occurrence of each array element).  This function modifies the\n * array in place and doesn't change the order of the non-duplicate items.\n *\n * For objects, duplicates are identified as having the same unique ID as\n * defined by {@link goog.getUid}.\n *\n * Alternatively you can specify a custom hash function that returns a unique\n * value for each item in the array it should consider unique.\n *\n * Runtime: N,\n * Worstcase space: 2N (no dupes)\n *\n * @param {IArrayLike<T>} arr The array from which to remove\n *     duplicates.\n * @param {Array=} opt_rv An optional array in which to return the results,\n *     instead of performing the removal inplace.  If specified, the original\n *     array will remain unchanged.\n * @param {function(T):string=} opt_hashFn An optional function to use to\n *     apply to every item in the array. This function should return a unique\n *     value for each item in the array it should consider unique.\n * @template T\n */\ngoog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {\n  var returnArray = opt_rv || arr;\n  var defaultHashFn = function(item) {\n    // Prefix each type with a single character representing the type to\n    // prevent conflicting keys (e.g. true and 'true').\n    return goog.isObject(item) ? 'o' + goog.getUid(item) :\n                                 (typeof item).charAt(0) + item;\n  };\n  var hashFn = opt_hashFn || defaultHashFn;\n\n  var seen = {}, cursorInsert = 0, cursorRead = 0;\n  while (cursorRead < arr.length) {\n    var current = arr[cursorRead++];\n    var key = hashFn(current);\n    if (!Object.prototype.hasOwnProperty.call(seen, key)) {\n      seen[key] = true;\n      returnArray[cursorInsert++] = current;\n    }\n  }\n  returnArray.length = cursorInsert;\n};\n\n\n/**\n * Searches the specified array for the specified target using the binary\n * search algorithm.  If no opt_compareFn is specified, elements are compared\n * using <code>goog.array.defaultCompare</code>, which compares the elements\n * using the built in < and > operators.  This will produce the expected\n * behavior for homogeneous arrays of String(s) and Number(s). The array\n * specified <b>must</b> be sorted in ascending order (as defined by the\n * comparison function).  If the array is not sorted, results are undefined.\n * If the array contains multiple instances of the specified target value, any\n * of these instances may be found.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {TARGET} target The sought value.\n * @param {function(TARGET, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @template TARGET, VALUE\n */\ngoog.array.binarySearch = function(arr, target, opt_compareFn) {\n  return goog.array.binarySearch_(\n      arr, opt_compareFn || goog.array.defaultCompare, false /* isEvaluator */,\n      target);\n};\n\n\n/**\n * Selects an index in the specified array using the binary search algorithm.\n * The evaluator receives an element and determines whether the desired index\n * is before, at, or after it.  The evaluator must be consistent (formally,\n * goog.array.map(goog.array.map(arr, evaluator, opt_obj), goog.math.sign)\n * must be monotonically non-increasing).\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {function(this:THIS, VALUE, number, ?): number} evaluator\n *     Evaluator function that receives 3 arguments (the element, the index and\n *     the array). Should return a negative number, zero, or a positive number\n *     depending on whether the desired index is before, at, or after the\n *     element passed to it.\n * @param {THIS=} opt_obj The object to be used as the value of 'this'\n *     within evaluator.\n * @return {number} Index of the leftmost element matched by the evaluator, if\n *     such exists; otherwise (-(insertion point) - 1). The insertion point is\n *     the index of the first element for which the evaluator returns negative,\n *     or arr.length if no such element exists. The return value is non-negative\n *     iff a match is found.\n * @template THIS, VALUE\n */\ngoog.array.binarySelect = function(arr, evaluator, opt_obj) {\n  return goog.array.binarySearch_(\n      arr, evaluator, true /* isEvaluator */, undefined /* opt_target */,\n      opt_obj);\n};\n\n\n/**\n * Implementation of a binary search algorithm which knows how to use both\n * comparison functions and evaluators. If an evaluator is provided, will call\n * the evaluator with the given optional data object, conforming to the\n * interface defined in binarySelect. Otherwise, if a comparison function is\n * provided, will call the comparison function against the given data object.\n *\n * This implementation purposefully does not use goog.bind or goog.partial for\n * performance reasons.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<?>} arr The array to be searched.\n * @param {function(?, ?, ?): number | function(?, ?): number} compareFn\n *     Either an evaluator or a comparison function, as defined by binarySearch\n *     and binarySelect above.\n * @param {boolean} isEvaluator Whether the function is an evaluator or a\n *     comparison function.\n * @param {?=} opt_target If the function is a comparison function, then\n *     this is the target to binary search for.\n * @param {Object=} opt_selfObj If the function is an evaluator, this is an\n *     optional this object for the evaluator.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @private\n */\ngoog.array.binarySearch_ = function(\n    arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n  var left = 0;            // inclusive\n  var right = arr.length;  // exclusive\n  var found;\n  while (left < right) {\n    var middle = (left + right) >> 1;\n    var compareResult;\n    if (isEvaluator) {\n      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);\n    } else {\n      // NOTE(dimvar): To avoid this cast, we'd have to use function overloading\n      // for the type of binarySearch_, which the type system can't express yet.\n      compareResult = /** @type {function(?, ?): number} */ (compareFn)(\n          opt_target, arr[middle]);\n    }\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // We are looking for the lowest index so we can't return immediately.\n      found = !compareResult;\n    }\n  }\n  // left is the index if found, or the insertion point otherwise.\n  // ~left is a shorthand for -left - 1.\n  return found ? left : ~left;\n};\n\n\n/**\n * Sorts the specified array into ascending order.  If no opt_compareFn is\n * specified, elements are compared using\n * <code>goog.array.defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s), unlike the native sort,\n * but will give unpredictable results for heterogeneous lists of strings and\n * numbers with different numbers of digits.\n *\n * This sort is not guaranteed to be stable.\n *\n * Runtime: Same as <code>Array.prototype.sort</code>\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T,T):number=} opt_compareFn Optional comparison\n *     function by which the\n *     array is to be ordered. Should take 2 arguments to compare, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @template T\n */\ngoog.array.sort = function(arr, opt_compareFn) {\n  // TODO(arv): Update type annotation since null is not accepted.\n  arr.sort(opt_compareFn || goog.array.defaultCompare);\n};\n\n\n/**\n * Sorts the specified array into ascending order in a stable way.  If no\n * opt_compareFn is specified, elements are compared using\n * <code>goog.array.defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s).\n *\n * Runtime: Same as <code>Array.prototype.sort</code>, plus an additional\n * O(n) overhead of copying the array twice.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T, T): number=} opt_compareFn Optional comparison function\n *     by which the array is to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T\n */\ngoog.array.stableSort = function(arr, opt_compareFn) {\n  var compArr = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++) {\n    compArr[i] = {index: i, value: arr[i]};\n  }\n  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;\n  function stableCompareFn(obj1, obj2) {\n    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n  }\n  goog.array.sort(compArr, stableCompareFn);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = compArr[i].value;\n  }\n};\n\n\n/**\n * Sort the specified array into ascending order based on item keys\n * returned by the specified key function.\n * If no opt_compareFn is specified, the keys are compared in ascending order\n * using <code>goog.array.defaultCompare</code>.\n *\n * Runtime: O(S(f(n)), where S is runtime of <code>goog.array.sort</code>\n * and f(n) is runtime of the key function.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {function(T): K} keyFn Function taking array element and returning\n *     a key used for sorting this element.\n * @param {?function(K, K): number=} opt_compareFn Optional comparison function\n *     by which the keys are to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T,K\n */\ngoog.array.sortByKey = function(arr, keyFn, opt_compareFn) {\n  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;\n  goog.array.sort(\n      arr, function(a, b) { return keyCompareFn(keyFn(a), keyFn(b)); });\n};\n\n\n/**\n * Sorts an array of objects by the specified object key and compare\n * function. If no compare function is provided, the key values are\n * compared in ascending order using <code>goog.array.defaultCompare</code>.\n * This won't work for keys that get renamed by the compiler. So use\n * {'foo': 1, 'bar': 2} rather than {foo: 1, bar: 2}.\n * @param {Array<Object>} arr An array of objects to sort.\n * @param {string} key The object key to sort by.\n * @param {Function=} opt_compareFn The function to use to compare key\n *     values.\n */\ngoog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {\n  goog.array.sortByKey(arr, function(obj) { return obj[key]; }, opt_compareFn);\n};\n\n\n/**\n * Tells if the array is sorted.\n * @param {!IArrayLike<T>} arr The array.\n * @param {?function(T,T):number=} opt_compareFn Function to compare the\n *     array elements.\n *     Should take 2 arguments to compare, and return a negative number, zero,\n *     or a positive number depending on whether the first argument is less\n *     than, equal to, or greater than the second.\n * @param {boolean=} opt_strict If true no equal elements are allowed.\n * @return {boolean} Whether the array is sorted.\n * @template T\n */\ngoog.array.isSorted = function(arr, opt_compareFn, opt_strict) {\n  var compare = opt_compareFn || goog.array.defaultCompare;\n  for (var i = 1; i < arr.length; i++) {\n    var compareResult = compare(arr[i - 1], arr[i]);\n    if (compareResult > 0 || compareResult == 0 && opt_strict) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Compares two arrays for equality. Two arrays are considered equal if they\n * have the same length and their corresponding elements are equal according to\n * the comparison function.\n *\n * @param {IArrayLike<?>} arr1 The first array to compare.\n * @param {IArrayLike<?>} arr2 The second array to compare.\n * @param {Function=} opt_equalsFn Optional comparison function.\n *     Should take 2 arguments to compare, and return true if the arguments\n *     are equal. Defaults to {@link goog.array.defaultCompareEquality} which\n *     compares the elements using the built-in '===' operator.\n * @return {boolean} Whether the two arrays are equal.\n */\ngoog.array.equals = function(arr1, arr2, opt_equalsFn) {\n  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) ||\n      arr1.length != arr2.length) {\n    return false;\n  }\n  var l = arr1.length;\n  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;\n  for (var i = 0; i < l; i++) {\n    if (!equalsFn(arr1[i], arr2[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * 3-way array compare function.\n * @param {!IArrayLike<VALUE>} arr1 The first array to\n *     compare.\n * @param {!IArrayLike<VALUE>} arr2 The second array to\n *     compare.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is to be ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {number} Negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template VALUE\n */\ngoog.array.compare3 = function(arr1, arr2, opt_compareFn) {\n  var compare = opt_compareFn || goog.array.defaultCompare;\n  var l = Math.min(arr1.length, arr2.length);\n  for (var i = 0; i < l; i++) {\n    var result = compare(arr1[i], arr2[i]);\n    if (result != 0) {\n      return result;\n    }\n  }\n  return goog.array.defaultCompare(arr1.length, arr2.length);\n};\n\n\n/**\n * Compares its two arguments for order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second,\n *     respectively.\n * @template VALUE\n */\ngoog.array.defaultCompare = function(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n};\n\n\n/**\n * Compares its two arguments for inverse order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second,\n *     respectively.\n * @template VALUE\n */\ngoog.array.inverseDefaultCompare = function(a, b) {\n  return -goog.array.defaultCompare(a, b);\n};\n\n\n/**\n * Compares its two arguments for equality, using the built in === operator.\n * @param {*} a The first object to compare.\n * @param {*} b The second object to compare.\n * @return {boolean} True if the two arguments are equal, false otherwise.\n */\ngoog.array.defaultCompareEquality = function(a, b) {\n  return a === b;\n};\n\n\n/**\n * Inserts a value into a sorted array. The array is not modified if the\n * value is already present.\n * @param {IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to insert.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was inserted.\n * @template VALUE\n */\ngoog.array.binaryInsert = function(array, value, opt_compareFn) {\n  var index = goog.array.binarySearch(array, value, opt_compareFn);\n  if (index < 0) {\n    goog.array.insertAt(array, value, -(index + 1));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes a value from a sorted array.\n * @param {!IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to remove.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was removed.\n * @template VALUE\n */\ngoog.array.binaryRemove = function(array, value, opt_compareFn) {\n  var index = goog.array.binarySearch(array, value, opt_compareFn);\n  return (index >= 0) ? goog.array.removeAt(array, index) : false;\n};\n\n\n/**\n * Splits an array into disjoint buckets according to a splitting function.\n * @param {IArrayLike<T>} array The array.\n * @param {function(this:S, T, number, !IArrayLike<T>):?} sorter Function to\n *     call for every element.  This takes 3 arguments (the element, the index\n *     and the array) and must return a valid object key (a string, number,\n *     etc), or undefined, if that object should not be placed in a bucket.\n * @param {S=} opt_obj The object to be used as the value of 'this' within\n *     sorter.\n * @return {!Object<!Array<T>>} An object, with keys being all of the unique\n *     return values of sorter, and values being arrays containing the items for\n *     which the splitter returned that key.\n * @template T,S\n */\ngoog.array.bucket = function(array, sorter, opt_obj) {\n  var buckets = {};\n\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i];\n    var key = sorter.call(/** @type {?} */ (opt_obj), value, i, array);\n    if (goog.isDef(key)) {\n      // Push the value to the right bucket, creating it if necessary.\n      var bucket = buckets[key] || (buckets[key] = []);\n      bucket.push(value);\n    }\n  }\n\n  return buckets;\n};\n\n\n/**\n * Creates a new object built from the provided array and the key-generation\n * function.\n * @param {IArrayLike<T>} arr Array or array like object over\n *     which to iterate whose elements will be the values in the new object.\n * @param {?function(this:S, T, number, ?) : string} keyFunc The function to\n *     call for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a string that will be used as the\n *     key for the element in the new object. If the function returns the same\n *     key for more than one element, the value for that key is\n *     implementation-defined.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within keyFunc.\n * @return {!Object<T>} The new object.\n * @template T,S\n */\ngoog.array.toObject = function(arr, keyFunc, opt_obj) {\n  var ret = {};\n  goog.array.forEach(arr, function(element, index) {\n    ret[keyFunc.call(/** @type {?} */ (opt_obj), element, index, arr)] =\n        element;\n  });\n  return ret;\n};\n\n\n/**\n * Creates a range of numbers in an arithmetic progression.\n *\n * Range takes 1, 2, or 3 arguments:\n * <pre>\n * range(5) is the same as range(0, 5, 1) and produces [0, 1, 2, 3, 4]\n * range(2, 5) is the same as range(2, 5, 1) and produces [2, 3, 4]\n * range(-2, -5, -1) produces [-2, -3, -4]\n * range(-2, -5, 1) produces [], since stepping by 1 wouldn't ever reach -5.\n * </pre>\n *\n * @param {number} startOrEnd The starting value of the range if an end argument\n *     is provided. Otherwise, the start value is 0, and this is the end value.\n * @param {number=} opt_end The optional end value of the range.\n * @param {number=} opt_step The step size between range values. Defaults to 1\n *     if opt_step is undefined or 0.\n * @return {!Array<number>} An array of numbers for the requested range. May be\n *     an empty array if adding the step would not converge toward the end\n *     value.\n */\ngoog.array.range = function(startOrEnd, opt_end, opt_step) {\n  var array = [];\n  var start = 0;\n  var end = startOrEnd;\n  var step = opt_step || 1;\n  if (opt_end !== undefined) {\n    start = startOrEnd;\n    end = opt_end;\n  }\n\n  if (step * (end - start) < 0) {\n    // Sign mismatch: start + step will never reach the end value.\n    return [];\n  }\n\n  if (step > 0) {\n    for (var i = start; i < end; i += step) {\n      array.push(i);\n    }\n  } else {\n    for (var i = start; i > end; i += step) {\n      array.push(i);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Returns an array consisting of the given value repeated N times.\n *\n * @param {VALUE} value The value to repeat.\n * @param {number} n The repeat count.\n * @return {!Array<VALUE>} An array with the repeated value.\n * @template VALUE\n */\ngoog.array.repeat = function(value, n) {\n  var array = [];\n  for (var i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n};\n\n\n/**\n * Returns an array consisting of every argument with all arrays\n * expanded in-place recursively.\n *\n * @param {...*} var_args The values to flatten.\n * @return {!Array<?>} An array containing the flattened values.\n */\ngoog.array.flatten = function(var_args) {\n  var CHUNK_SIZE = 8192;\n\n  var result = [];\n  for (var i = 0; i < arguments.length; i++) {\n    var element = arguments[i];\n    if (goog.isArray(element)) {\n      for (var c = 0; c < element.length; c += CHUNK_SIZE) {\n        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);\n        var recurseResult = goog.array.flatten.apply(null, chunk);\n        for (var r = 0; r < recurseResult.length; r++) {\n          result.push(recurseResult[r]);\n        }\n      }\n    } else {\n      result.push(element);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Rotates an array in-place. After calling this method, the element at\n * index i will be the element previously at index (i - n) %\n * array.length, for all values of i between 0 and array.length - 1,\n * inclusive.\n *\n * For example, suppose list comprises [t, a, n, k, s]. After invoking\n * rotate(array, 1) (or rotate(array, -4)), array will comprise [s, t, a, n, k].\n *\n * @param {!Array<T>} array The array to rotate.\n * @param {number} n The amount to rotate.\n * @return {!Array<T>} The array.\n * @template T\n */\ngoog.array.rotate = function(array, n) {\n  goog.asserts.assert(array.length != null);\n\n  if (array.length) {\n    n %= array.length;\n    if (n > 0) {\n      Array.prototype.unshift.apply(array, array.splice(-n, n));\n    } else if (n < 0) {\n      Array.prototype.push.apply(array, array.splice(0, -n));\n    }\n  }\n  return array;\n};\n\n\n/**\n * Moves one item of an array to a new position keeping the order of the rest\n * of the items. Example use case: keeping a list of JavaScript objects\n * synchronized with the corresponding list of DOM elements after one of the\n * elements has been dragged to a new position.\n * @param {!IArrayLike<?>} arr The array to modify.\n * @param {number} fromIndex Index of the item to move between 0 and\n *     {@code arr.length - 1}.\n * @param {number} toIndex Target index between 0 and {@code arr.length - 1}.\n */\ngoog.array.moveItem = function(arr, fromIndex, toIndex) {\n  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);\n  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);\n  // Remove 1 item at fromIndex.\n  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);\n  // Insert the removed item at toIndex.\n  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n  // We don't use goog.array.insertAt and goog.array.removeAt, because they're\n  // significantly slower than splice.\n};\n\n\n/**\n * Creates a new array for which the element at position i is an array of the\n * ith element of the provided arrays.  The returned array will only be as long\n * as the shortest array provided; additional values are ignored.  For example,\n * the result of zipping [1, 2] and [3, 4, 5] is [[1,3], [2, 4]].\n *\n * This is similar to the zip() function in Python.  See {@link\n * http://docs.python.org/library/functions.html#zip}\n *\n * @param {...!IArrayLike<?>} var_args Arrays to be combined.\n * @return {!Array<!Array<?>>} A new array of arrays created from\n *     provided arrays.\n */\ngoog.array.zip = function(var_args) {\n  if (!arguments.length) {\n    return [];\n  }\n  var result = [];\n  var minLen = arguments[0].length;\n  for (var i = 1; i < arguments.length; i++) {\n    if (arguments[i].length < minLen) {\n      minLen = arguments[i].length;\n    }\n  }\n  for (var i = 0; i < minLen; i++) {\n    var value = [];\n    for (var j = 0; j < arguments.length; j++) {\n      value.push(arguments[j][i]);\n    }\n    result.push(value);\n  }\n  return result;\n};\n\n\n/**\n * Shuffles the values in the specified array using the Fisher-Yates in-place\n * shuffle (also known as the Knuth Shuffle). By default, calls Math.random()\n * and so resets the state of that random number generator. Similarly, may reset\n * the state of the any other specified random number generator.\n *\n * Runtime: O(n)\n *\n * @param {!Array<?>} arr The array to be shuffled.\n * @param {function():number=} opt_randFn Optional random function to use for\n *     shuffling.\n *     Takes no arguments, and returns a random number on the interval [0, 1).\n *     Defaults to Math.random() using JavaScript's built-in Math library.\n */\ngoog.array.shuffle = function(arr, opt_randFn) {\n  var randFn = opt_randFn || Math.random;\n\n  for (var i = arr.length - 1; i > 0; i--) {\n    // Choose a random array index in [0, i] (inclusive with i).\n    var j = Math.floor(randFn() * (i + 1));\n\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n};\n\n\n/**\n * Returns a new array of elements from arr, based on the indexes of elements\n * provided by index_arr. For example, the result of index copying\n * ['a', 'b', 'c'] with index_arr [1,0,0,2] is ['b', 'a', 'a', 'c'].\n *\n * @param {!IArrayLike<T>} arr The array to get a indexed copy from.\n * @param {!IArrayLike<number>} index_arr An array of indexes to get from arr.\n * @return {!Array<T>} A new array of elements from arr in index_arr order.\n * @template T\n */\ngoog.array.copyByIndex = function(arr, index_arr) {\n  var result = [];\n  goog.array.forEach(index_arr, function(index) { result.push(arr[index]); });\n  return result;\n};\n\n\n/**\n * Maps each element of the input array into zero or more elements of the output\n * array.\n *\n * @param {!IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): !Array<RESULT>} f The function\n *     to call for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return an array. The result will be\n *     used to extend a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the concatenation of all arrays\n *     returned from f.\n * @template THIS, VALUE, RESULT\n */\ngoog.array.concatMap = function(arr, f, opt_obj) {\n  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for string manipulation.\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\n/**\n * Namespace for string utilities\n */\ngoog.provide('goog.string');\ngoog.provide('goog.string.Unicode');\n\n\n/**\n * @define {boolean} Enables HTML escaping of lowercase letter \"e\" which helps\n * with detection of double-escaping as this letter is frequently used.\n */\ngoog.define('goog.string.DETECT_DOUBLE_ESCAPING', false);\n\n\n/**\n * @define {boolean} Whether to force non-dom html unescaping.\n */\ngoog.define('goog.string.FORCE_NON_DOM_HTML_UNESCAPING', false);\n\n\n/**\n * Common Unicode string characters.\n * @enum {string}\n */\ngoog.string.Unicode = {\n  NBSP: '\\xa0'\n};\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n */\ngoog.string.startsWith = function(str, prefix) {\n  return str.lastIndexOf(prefix, 0) == 0;\n};\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n */\ngoog.string.endsWith = function(str, suffix) {\n  var l = str.length - suffix.length;\n  return l >= 0 && str.indexOf(suffix, l) == l;\n};\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveStartsWith = function(str, prefix) {\n  return goog.string.caseInsensitiveCompare(\n             prefix, str.substr(0, prefix.length)) == 0;\n};\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveEndsWith = function(str, suffix) {\n  return (\n      goog.string.caseInsensitiveCompare(\n          suffix, str.substr(str.length - suffix.length, suffix.length)) == 0);\n};\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n */\ngoog.string.caseInsensitiveEquals = function(str1, str2) {\n  return str1.toLowerCase() == str2.toLowerCase();\n};\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} str The string containing the pattern.\n * @param {...*} var_args The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n */\ngoog.string.subs = function(str, var_args) {\n  var splitParts = str.split('%s');\n  var returnString = '';\n\n  var subsArguments = Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length &&\n         // Replace up to the last split part. We are inserting in the\n         // positions between split parts.\n         splitParts.length > 1) {\n    returnString += splitParts.shift() + subsArguments.shift();\n  }\n\n  return returnString + splitParts.join('%s');  // Join unused '%s'\n};\n\n\n/**\n * Converts multiple whitespace chars (spaces, non-breaking-spaces, new lines\n * and tabs) to a single space, and strips leading and trailing whitespace.\n * @param {string} str Input string.\n * @return {string} A copy of `str` with collapsed whitespace.\n */\ngoog.string.collapseWhitespace = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n */\ngoog.string.isEmptyOrWhitespace = function(str) {\n  // testing length == 0 first is actually slower in all browsers (about the\n  // same in Opera).\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return /^[\\s\\xa0]*$/.test(str);\n};\n\n\n/**\n * Checks if a string is empty.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty.\n */\ngoog.string.isEmptyString = function(str) {\n  return str.length == 0;\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n *\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))\n *     instead.\n */\ngoog.string.isEmptyOrWhitespaceSafe = function(str) {\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n *\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\n\n\n/**\n * Checks if a string is all breaking whitespace.\n * @param {string} str The string to check.\n * @return {boolean} Whether the string is all breaking whitespace.\n */\ngoog.string.isBreakingWhitespace = function(str) {\n  return !/[^\\t\\n\\r ]/.test(str);\n};\n\n\n/**\n * Checks if a string contains all letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` consists entirely of letters.\n */\ngoog.string.isAlpha = function(str) {\n  return !/[^a-zA-Z]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers.\n * @param {*} str string to check. If not a string, it will be\n *     casted to one.\n * @return {boolean} True if `str` is numeric.\n */\ngoog.string.isNumeric = function(str) {\n  return !/[^0-9]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers or letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` is alphanumeric.\n */\ngoog.string.isAlphaNumeric = function(str) {\n  return !/[^a-zA-Z0-9]/.test(str);\n};\n\n\n/**\n * Checks if a character is a space character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a space.\n */\ngoog.string.isSpace = function(ch) {\n  return ch == ' ';\n};\n\n\n/**\n * Checks if a character is a valid unicode character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a valid unicode character.\n */\ngoog.string.isUnicodeChar = function(ch) {\n  return ch.length == 1 && ch >= ' ' && ch <= '~' ||\n      ch >= '\\u0080' && ch <= '\\uFFFD';\n};\n\n\n/**\n * Takes a string and replaces newlines with a space. Multiple lines are\n * replaced with a single space.\n * @param {string} str The string from which to strip newlines.\n * @return {string} A copy of `str` stripped of newlines.\n */\ngoog.string.stripNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, ' ');\n};\n\n\n/**\n * Replaces Windows and Mac new lines with unix style: \\r or \\r\\n with \\n.\n * @param {string} str The string to in which to canonicalize newlines.\n * @return {string} `str` A copy of {@code} with canonicalized newlines.\n */\ngoog.string.canonicalizeNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n};\n\n\n/**\n * Normalizes whitespace in a string, replacing all whitespace chars with\n * a space.\n * @param {string} str The string in which to normalize whitespace.\n * @return {string} A copy of `str` with all whitespace normalized.\n */\ngoog.string.normalizeWhitespace = function(str) {\n  return str.replace(/\\xa0|\\s/g, ' ');\n};\n\n\n/**\n * Normalizes spaces in a string, replacing all consecutive spaces and tabs\n * with a single space. Replaces non-breaking space with a space.\n * @param {string} str The string in which to normalize spaces.\n * @return {string} A copy of `str` with all consecutive spaces and tabs\n *    replaced with a single space.\n */\ngoog.string.normalizeSpaces = function(str) {\n  return str.replace(/\\xa0|[ \\t]+/g, ' ');\n};\n\n\n/**\n * Removes the breaking spaces from the left and right of the string and\n * collapses the sequences of breaking spaces in the middle into single spaces.\n * The original and the result strings render the same way in HTML.\n * @param {string} str A string in which to collapse spaces.\n * @return {string} Copy of the string with normalized breaking spaces.\n */\ngoog.string.collapseBreakingSpaces = function(str) {\n  return str.replace(/[\\t\\r\\n ]+/g, ' ')\n      .replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trim =\n    (goog.TRUSTED_SITE && String.prototype.trim) ? function(str) {\n      return str.trim();\n    } : function(str) {\n      // Since IE doesn't include non-breaking-space (0xa0) in their \\s\n      // character class (as required by section 7.2 of the ECMAScript spec),\n      // we explicitly include it in the regexp to enforce consistent\n      // cross-browser behavior.\n      // NOTE: We don't use String#replace because it might have side effects\n      // causing this function to not compile to 0 bytes.\n      return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n    };\n\n\n/**\n * Trims whitespaces at the left end of a string.\n * @param {string} str The string to left trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimLeft = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/^[\\s\\xa0]+/, '');\n};\n\n\n/**\n * Trims whitespaces at the right end of a string.\n * @param {string} str The string to right trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimRight = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+$/, '');\n};\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n */\ngoog.string.caseInsensitiveCompare = function(str1, str2) {\n  var test1 = String(str1).toLowerCase();\n  var test2 = String(str2).toLowerCase();\n\n  if (test1 < test2) {\n    return -1;\n  } else if (test1 == test2) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\n\n/**\n * Compares two strings interpreting their numeric substrings as numbers.\n *\n * @param {string} str1 First string.\n * @param {string} str2 Second string.\n * @param {!RegExp} tokenizerRegExp Splits a string into substrings of\n *     non-negative integers, non-numeric characters and optionally fractional\n *     numbers starting with a decimal point.\n * @return {number} Negative if str1 < str2, 0 is str1 == str2, positive if\n *     str1 > str2.\n * @private\n */\ngoog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {\n  if (str1 == str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n\n  // Using match to split the entire string ahead of time turns out to be faster\n  // for most inputs than using RegExp.exec or iterating over each character.\n  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);\n  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);\n\n  var count = Math.min(tokens1.length, tokens2.length);\n\n  for (var i = 0; i < count; i++) {\n    var a = tokens1[i];\n    var b = tokens2[i];\n\n    // Compare pairs of tokens, returning if one token sorts before the other.\n    if (a != b) {\n      // Only if both tokens are integers is a special comparison required.\n      // Decimal numbers are sorted as strings (e.g., '.09' < '.1').\n      var num1 = parseInt(a, 10);\n      if (!isNaN(num1)) {\n        var num2 = parseInt(b, 10);\n        if (!isNaN(num2) && num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  // If one string is a substring of the other, the shorter string sorts first.\n  if (tokens1.length != tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n\n  // The two strings must be equivalent except for case (perfect equality is\n  // tested at the head of the function.) Revert to default ASCII string\n  // comparison to stabilize the sort.\n  return str1 < str2 ? -1 : 1;\n};\n\n\n/**\n * String comparison function that handles non-negative integer numbers in a\n * way humans might expect. Using this function, the string 'File 2.jpg' sorts\n * before 'File 10.jpg', and 'Version 1.9' before 'Version 1.10'. The comparison\n * is mostly case-insensitive, though strings that are identical except for case\n * are sorted with the upper-case strings before lower-case.\n *\n * This comparison function is up to 50x slower than either the default or the\n * case-insensitive compare. It should not be used in time-critical code, but\n * should be fast enough to sort several hundred short strings (like filenames)\n * with a reasonable delay.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.intAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\n\n\n/**\n * String comparison function that handles non-negative integer and fractional\n * numbers in a way humans might expect. Using this function, the string\n * 'File 2.jpg' sorts before 'File 10.jpg', and '3.14' before '3.2'. Equivalent\n * to {@link goog.string.intAwareCompare} apart from the way how it interprets\n * dots.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.floatAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\n\n\n/**\n * Alias for {@link goog.string.floatAwareCompare}.\n *\n * @param {string} str1\n * @param {string} str2\n * @return {number}\n */\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\n\n\n/**\n * URL-encodes a string\n * @param {*} str The string to url-encode.\n * @return {string} An encoded copy of `str` that is safe for urls.\n *     Note that '#', ':', and other characters used to delimit portions\n *     of URLs *will* be encoded.\n */\ngoog.string.urlEncode = function(str) {\n  return encodeURIComponent(String(str));\n};\n\n\n/**\n * URL-decodes the string. We need to specially handle '+'s because\n * the javascript library doesn't convert them to spaces.\n * @param {string} str The string to url decode.\n * @return {string} The decoded `str`.\n */\ngoog.string.urlDecode = function(str) {\n  return decodeURIComponent(str.replace(/\\+/g, ' '));\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n */\ngoog.string.newLineToBr = function(str, opt_xml) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? '<br />' : '<br>');\n};\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n *\n * It should be noted that > doesn't need to be escaped for the HTML or XML to\n * be valid, but it has been decided to escape it for consistency with other\n * implementations.\n *\n * With goog.string.DETECT_DOUBLE_ESCAPING, this function escapes also the\n * lowercase letter \"e\".\n *\n * NOTE(user):\n * HtmlEscape is often called during the generation of large blocks of HTML.\n * Using statics for the regular expressions and strings is an optimization\n * that can more than half the amount of time IE spends in this function for\n * large apps, since strings and regexes both contribute to GC allocations.\n *\n * Testing for the presence of a character before escaping increases the number\n * of function calls, but actually provides a speed increase for the average\n * case -- since the average case often doesn't require the escaping of all 4\n * characters and indexOf() is much cheaper than replace().\n * The worst case does suffer slightly from the additional calls, therefore the\n * opt_isLikelyToContainHtmlChars option has been included for situations\n * where all 4 HTML entities are very likely to be present and need escaping.\n *\n * Some benchmarks (times tended to fluctuate +-0.05ms):\n *                                     FireFox                     IE6\n * (no chars / average (mix of cases) / all 4 chars)\n * no checks                     0.13 / 0.22 / 0.22         0.23 / 0.53 / 0.80\n * indexOf                       0.08 / 0.17 / 0.26         0.22 / 0.54 / 0.84\n * indexOf + re test             0.07 / 0.17 / 0.28         0.19 / 0.50 / 0.85\n *\n * An additional advantage of checking if replace actually needs to be called\n * is a reduction in the number of object allocations, so as the size of the\n * application grows the difference between the various methods would increase.\n *\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars Don't perform a check to see\n *     if the character needs replacing - use this option if you expect each of\n *     the characters to appear often. Leave false if you expect few html\n *     characters to occur in your strings, such as if you are escaping HTML.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n\n  if (opt_isLikelyToContainHtmlChars) {\n    str = str.replace(goog.string.AMP_RE_, '&amp;')\n              .replace(goog.string.LT_RE_, '&lt;')\n              .replace(goog.string.GT_RE_, '&gt;')\n              .replace(goog.string.QUOT_RE_, '&quot;')\n              .replace(goog.string.SINGLE_QUOTE_RE_, '&#39;')\n              .replace(goog.string.NULL_RE_, '&#0;');\n    if (goog.string.DETECT_DOUBLE_ESCAPING) {\n      str = str.replace(goog.string.E_RE_, '&#101;');\n    }\n    return str;\n\n  } else {\n    // quick test helps in the case when there are no chars to replace, in\n    // worst case this makes barely a difference to the time taken\n    if (!goog.string.ALL_RE_.test(str)) return str;\n\n    // str.indexOf is faster than regex.test in this case\n    if (str.indexOf('&') != -1) {\n      str = str.replace(goog.string.AMP_RE_, '&amp;');\n    }\n    if (str.indexOf('<') != -1) {\n      str = str.replace(goog.string.LT_RE_, '&lt;');\n    }\n    if (str.indexOf('>') != -1) {\n      str = str.replace(goog.string.GT_RE_, '&gt;');\n    }\n    if (str.indexOf('\"') != -1) {\n      str = str.replace(goog.string.QUOT_RE_, '&quot;');\n    }\n    if (str.indexOf('\\'') != -1) {\n      str = str.replace(goog.string.SINGLE_QUOTE_RE_, '&#39;');\n    }\n    if (str.indexOf('\\x00') != -1) {\n      str = str.replace(goog.string.NULL_RE_, '&#0;');\n    }\n    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf('e') != -1) {\n      str = str.replace(goog.string.E_RE_, '&#101;');\n    }\n    return str;\n  }\n};\n\n\n/**\n * Regular expression that matches an ampersand, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.AMP_RE_ = /&/g;\n\n\n/**\n * Regular expression that matches a less than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.LT_RE_ = /</g;\n\n\n/**\n * Regular expression that matches a greater than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.GT_RE_ = />/g;\n\n\n/**\n * Regular expression that matches a double quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.QUOT_RE_ = /\"/g;\n\n\n/**\n * Regular expression that matches a single quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.SINGLE_QUOTE_RE_ = /'/g;\n\n\n/**\n * Regular expression that matches null character, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.NULL_RE_ = /\\x00/g;\n\n\n/**\n * Regular expression that matches a lowercase letter \"e\", for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.E_RE_ = /e/g;\n\n\n/**\n * Regular expression that matches any character that needs to be escaped.\n * @const {!RegExp}\n * @private\n */\ngoog.string.ALL_RE_ =\n    (goog.string.DETECT_DOUBLE_ESCAPING ? /[\\x00&<>\"'e]/ : /[\\x00&<>\"']/);\n\n\n/**\n * Unescapes an HTML string.\n *\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntities = function(str) {\n  if (goog.string.contains(str, '&')) {\n    // We are careful not to use a DOM if we do not have one or we explicitly\n    // requested non-DOM html unescaping.\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING &&\n        'document' in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      // Fall back on pure XML entities\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Unescapes a HTML string using the provided document.\n *\n * @param {string} str The string to unescape.\n * @param {!Document} document A document to use in escaping the string.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntitiesWithDocument = function(str, document) {\n  if (goog.string.contains(str, '&')) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\n\n\n/**\n * Unescapes an HTML string using a DOM to resolve non-XML, non-numeric\n * entities. This function is XSS-safe and whitespace-preserving.\n * @private\n * @param {string} str The string to unescape.\n * @param {Document=} opt_document An optional document to use for creating\n *     elements. If this is not specified then the default window.document\n *     will be used.\n * @return {string} The unescaped `str` string.\n */\ngoog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {\n  /** @type {!Object<string, string>} */\n  var seen = {'&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"'};\n  var div;\n  if (opt_document) {\n    div = opt_document.createElement('div');\n  } else {\n    div = goog.global.document.createElement('div');\n  }\n  // Match as many valid entity characters as possible. If the actual entity\n  // happens to be shorter, it will still work as innerHTML will return the\n  // trailing characters unchanged. Since the entity characters do not include\n  // open angle bracket, there is no chance of XSS from the innerHTML use.\n  // Since no whitespace is passed to innerHTML, whitespace is preserved.\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    // Check for cached entity.\n    var value = seen[s];\n    if (value) {\n      return value;\n    }\n    // Check for numeric entity.\n    if (entity.charAt(0) == '#') {\n      // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex numbers.\n      var n = Number('0' + entity.substr(1));\n      if (!isNaN(n)) {\n        value = String.fromCharCode(n);\n      }\n    }\n    // Fall back to innerHTML otherwise.\n    if (!value) {\n      // Append a non-entity character to avoid a bug in Webkit that parses\n      // an invalid entity at the end of innerHTML text as the empty string.\n      div.innerHTML = s + ' ';\n      // Then remove the trailing character from the result.\n      value = div.firstChild.nodeValue.slice(0, -1);\n    }\n    // Cache and return.\n    return seen[s] = value;\n  });\n};\n\n\n/**\n * Unescapes XML entities.\n * @private\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapePureXmlEntities_ = function(str) {\n  return str.replace(/&([^;]+);/g, function(s, entity) {\n    switch (entity) {\n      case 'amp':\n        return '&';\n      case 'lt':\n        return '<';\n      case 'gt':\n        return '>';\n      case 'quot':\n        return '\"';\n      default:\n        if (entity.charAt(0) == '#') {\n          // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex.\n          var n = Number('0' + entity.substr(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        // For invalid entities we just return the entity\n        return s;\n    }\n  });\n};\n\n\n/**\n * Regular expression that matches an HTML entity.\n * See also HTML5: Tokenization / Tokenizing character references.\n * @private\n * @type {!RegExp}\n */\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.whitespaceEscape = function(str, opt_xml) {\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.newLineToBr(str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Preserve spaces that would be otherwise collapsed in HTML by replacing them\n * with non-breaking space Unicode characters.\n * @param {string} str The string in which to preserve whitespace.\n * @return {string} A copy of `str` with preserved whitespace.\n */\ngoog.string.preserveSpaces = function(str) {\n  return str.replace(/(^|[\\n ]) /g, '$1' + goog.string.Unicode.NBSP);\n};\n\n\n/**\n * Strip quote characters around a string.  The second argument is a string of\n * characters to treat as quotes.  This can be a single character or a string of\n * multiple character and in that case each of those are treated as possible\n * quote characters. For example:\n *\n * <pre>\n * goog.string.stripQuotes('\"abc\"', '\"`') --> 'abc'\n * goog.string.stripQuotes('`abc`', '\"`') --> 'abc'\n * </pre>\n *\n * @param {string} str The string to strip.\n * @param {string} quoteChars The quote characters to strip.\n * @return {string} A copy of `str` without the quotes.\n */\ngoog.string.stripQuotes = function(str, quoteChars) {\n  var length = quoteChars.length;\n  for (var i = 0; i < length; i++) {\n    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Truncates a string to a certain length and adds '...' if necessary.  The\n * length also accounts for the ellipsis, so a maximum length of 10 and a string\n * 'Hello World!' produces 'Hello W...'.\n * @param {string} str The string to truncate.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cut off in the middle.\n * @return {string} The truncated `str` string.\n */\ngoog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (str.length > chars) {\n    str = str.substring(0, chars - 3) + '...';\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Truncate a string in the middle, adding \"...\" if necessary,\n * and favoring the beginning of the string.\n * @param {string} str The string to truncate the middle of.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cutoff in the middle.\n * @param {number=} opt_trailingChars Optional number of trailing characters to\n *     leave at the end of the string, instead of truncating as close to the\n *     middle as possible.\n * @return {string} A truncated copy of `str`.\n */\ngoog.string.truncateMiddle = function(\n    str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (opt_trailingChars && str.length > chars) {\n    if (opt_trailingChars > chars) {\n      opt_trailingChars = chars;\n    }\n    var endPoint = str.length - opt_trailingChars;\n    var startPoint = chars - opt_trailingChars;\n    str = str.substring(0, startPoint) + '...' + str.substring(endPoint);\n  } else if (str.length > chars) {\n    // Favor the beginning of the string:\n    var half = Math.floor(chars / 2);\n    var endPos = str.length - half;\n    half += chars % 2;\n    str = str.substring(0, half) + '...' + str.substring(endPos);\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Special chars that need to be escaped for goog.string.quote.\n * @private {!Object<string, string>}\n */\ngoog.string.specialEscapeChars_ = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\x0B': '\\\\x0B',  // '\\v' is not supported in JScript\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // To support the use case of embedding quoted strings inside of script\n  // tags, we have to make sure HTML comments and opening/closing script tags do\n  // not appear in the resulting string. The specific strings that must be\n  // escaped are documented at:\n  // http://www.w3.org/TR/html51/semantics.html#restrictions-for-contents-of-script-elements\n  '<': '\\x3c'\n};\n\n\n/**\n * Character mappings used internally for goog.string.escapeChar.\n * @private {!Object<string, string>}\n */\ngoog.string.jsEscapeCache_ = {\n  '\\'': '\\\\\\''\n};\n\n\n/**\n * Encloses a string in double quotes and escapes characters so that the\n * string is a valid JS string. The resulting string is safe to embed in\n * `<script>` tags as \"<\" is escaped.\n * @param {string} s The string to quote.\n * @return {string} A copy of `s` surrounded by double quotes.\n */\ngoog.string.quote = function(s) {\n  s = String(s);\n  var sb = ['\"'];\n  for (var i = 0; i < s.length; i++) {\n    var ch = s.charAt(i);\n    var cc = ch.charCodeAt(0);\n    sb[i + 1] = goog.string.specialEscapeChars_[ch] ||\n        ((cc > 31 && cc < 127) ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push('\"');\n  return sb.join('');\n};\n\n\n/**\n * Takes a string and returns the escaped string for that input string.\n * @param {string} str The string to escape.\n * @return {string} An escaped string representing `str`.\n */\ngoog.string.escapeString = function(str) {\n  var sb = [];\n  for (var i = 0; i < str.length; i++) {\n    sb[i] = goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join('');\n};\n\n\n/**\n * Takes a character and returns the escaped string for that character. For\n * example escapeChar(String.fromCharCode(15)) -> \"\\\\x0E\".\n * @param {string} c The character to escape.\n * @return {string} An escaped string representing `c`.\n */\ngoog.string.escapeChar = function(c) {\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];\n  }\n\n  var rv = c;\n  var cc = c.charCodeAt(0);\n  if (cc > 31 && cc < 127) {\n    rv = c;\n  } else {\n    // tab is 9 but handled above\n    if (cc < 256) {\n      rv = '\\\\x';\n      if (cc < 16 || cc > 256) {\n        rv += '0';\n      }\n    } else {\n      rv = '\\\\u';\n      if (cc < 4096) {  // \\u1000\n        rv += '0';\n      }\n    }\n    rv += cc.toString(16).toUpperCase();\n  }\n\n  return goog.string.jsEscapeCache_[c] = rv;\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.contains = function(str, subString) {\n  return str.indexOf(subString) != -1;\n};\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.caseInsensitiveContains = function(str, subString) {\n  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());\n};\n\n\n/**\n * Returns the non-overlapping occurrences of ss in s.\n * If either s or ss evalutes to false, then returns zero.\n * @param {string} s The string to look in.\n * @param {string} ss The string to look for.\n * @return {number} Number of occurrences of ss in s.\n */\ngoog.string.countOf = function(s, ss) {\n  return s && ss ? s.split(ss).length - 1 : 0;\n};\n\n\n/**\n * Removes a substring of a specified length at a specific\n * index in a string.\n * @param {string} s The base string from which to remove.\n * @param {number} index The index at which to remove the substring.\n * @param {number} stringLength The length of the substring to remove.\n * @return {string} A copy of `s` with the substring removed or the full\n *     string if nothing is removed or the input is invalid.\n */\ngoog.string.removeAt = function(s, index, stringLength) {\n  var resultStr = s;\n  // If the index is greater or equal to 0 then remove substring\n  if (index >= 0 && index < s.length && stringLength > 0) {\n    resultStr = s.substr(0, index) +\n        s.substr(index + stringLength, s.length - index - stringLength);\n  }\n  return resultStr;\n};\n\n\n/**\n * Removes the first occurrence of a substring from a string.\n * @param {string} str The base string from which to remove.\n * @param {string} substr The string to remove.\n * @return {string} A copy of `str` with `substr` removed or the\n *     full string if nothing is removed.\n */\ngoog.string.remove = function(str, substr) {\n  return str.replace(substr, '');\n};\n\n\n/**\n *  Removes all occurrences of a substring from a string.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to remove.\n *  @return {string} A copy of `s` with `ss` removed or the full\n *      string if nothing is removed.\n */\ngoog.string.removeAll = function(s, ss) {\n  var re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, '');\n};\n\n\n/**\n *  Replaces all occurrences of a substring of a string with a new substring.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to replace.\n *  @param {string} replacement The replacement string.\n *  @return {string} A copy of `s` with `ss` replaced by\n *      `replacement` or the original string if nothing is replaced.\n */\ngoog.string.replaceAll = function(s, ss, replacement) {\n  var re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, replacement.replace(/\\$/g, '$$$$'));\n};\n\n\n/**\n * Escapes characters in the string that are not safe to use in a RegExp.\n * @param {*} s The string to escape. If not a string, it will be casted\n *     to one.\n * @return {string} A RegExp safe, escaped copy of `s`.\n */\ngoog.string.regExpEscape = function(s) {\n  return String(s)\n      .replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n      .replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * Repeats a string n times.\n * @param {string} string The string to repeat.\n * @param {number} length The number of times to repeat.\n * @return {string} A string containing `length` repetitions of\n *     `string`.\n */\ngoog.string.repeat = (String.prototype.repeat) ? function(string, length) {\n  // The native method is over 100 times faster than the alternative.\n  return string.repeat(length);\n} : function(string, length) {\n  return new Array(length + 1).join(string);\n};\n\n\n/**\n * Pads number to given length and optionally rounds it to a given precision.\n * For example:\n * <pre>padNumber(1.25, 2, 3) -> '01.250'\n * padNumber(1.25, 2) -> '01.25'\n * padNumber(1.25, 2, 1) -> '01.3'\n * padNumber(1.25, 0) -> '1.25'</pre>\n *\n * @param {number} num The number to pad.\n * @param {number} length The desired length.\n * @param {number=} opt_precision The desired precision.\n * @return {string} `num` as a string with the given options.\n */\ngoog.string.padNumber = function(num, length, opt_precision) {\n  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);\n  var index = s.indexOf('.');\n  if (index == -1) {\n    index = s.length;\n  }\n  return goog.string.repeat('0', Math.max(0, length - index)) + s;\n};\n\n\n/**\n * Returns a string representation of the given object, with\n * null and undefined being returned as the empty string.\n *\n * @param {*} obj The object to convert.\n * @return {string} A string representation of the `obj`.\n */\ngoog.string.makeSafe = function(obj) {\n  return obj == null ? '' : String(obj);\n};\n\n\n/**\n * Concatenates string expressions. This is useful\n * since some browsers are very inefficient when it comes to using plus to\n * concat strings. Be careful when using null and undefined here since\n * these will not be included in the result. If you need to represent these\n * be sure to cast the argument to a String first.\n * For example:\n * <pre>buildString('a', 'b', 'c', 'd') -> 'abcd'\n * buildString(null, undefined) -> ''\n * </pre>\n * @param {...*} var_args A list of strings to concatenate. If not a string,\n *     it will be casted to one.\n * @return {string} The concatenation of `var_args`.\n */\ngoog.string.buildString = function(var_args) {\n  return Array.prototype.join.call(arguments, '');\n};\n\n\n/**\n * Returns a string with at least 64-bits of randomness.\n *\n * Doesn't trust Javascript's random function entirely. Uses a combination of\n * random and current timestamp, and then encodes the string in base-36 to\n * make it shorter.\n *\n * @return {string} A random string, e.g. sn1s7vb4gcic.\n */\ngoog.string.getRandomString = function() {\n  var x = 2147483648;\n  return Math.floor(Math.random() * x).toString(36) +\n      Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n */\ngoog.string.compareVersions = function(version1, version2) {\n  var order = 0;\n  // Trim leading and trailing whitespace and split the versions into\n  // subversions.\n  var v1Subs = goog.string.trim(String(version1)).split('.');\n  var v2Subs = goog.string.trim(String(version2)).split('.');\n  var subCount = Math.max(v1Subs.length, v2Subs.length);\n\n  // Iterate over the subversions, as long as they appear to be equivalent.\n  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {\n    var v1Sub = v1Subs[subIdx] || '';\n    var v2Sub = v2Subs[subIdx] || '';\n\n    do {\n      // Split the subversions into pairs of numbers and qualifiers (like 'b').\n      // Two different RegExp objects are use to make it clear the code\n      // is side-effect free\n      var v1Comp = /(\\d*)(\\D*)(.*)/.exec(v1Sub) || ['', '', '', ''];\n      var v2Comp = /(\\d*)(\\D*)(.*)/.exec(v2Sub) || ['', '', '', ''];\n      // Break if there are no more matches.\n      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {\n        break;\n      }\n\n      // Parse the numeric part of the subversion. A missing number is\n      // equivalent to 0.\n      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);\n      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);\n\n      // Compare the subversion components. The number has the highest\n      // precedence. Next, if the numbers are equal, a subversion without any\n      // qualifier is always higher than a subversion with any qualifier. Next,\n      // the qualifiers are compared as strings.\n      order = goog.string.compareElements_(v1CompNum, v2CompNum) ||\n          goog.string.compareElements_(\n              v1Comp[2].length == 0, v2Comp[2].length == 0) ||\n          goog.string.compareElements_(v1Comp[2], v2Comp[2]);\n      // Stop as soon as an inequality is discovered.\n\n      v1Sub = v1Comp[3];\n      v2Sub = v2Comp[3];\n    } while (order == 0);\n  }\n\n  return order;\n};\n\n\n/**\n * Compares elements of a version number.\n *\n * @param {string|number|boolean} left An element from a version number.\n * @param {string|number|boolean} right An element from a version number.\n *\n * @return {number}  1 if `left` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `right` is higher.\n * @private\n */\ngoog.string.compareElements_ = function(left, right) {\n  if (left < right) {\n    return -1;\n  } else if (left > right) {\n    return 1;\n  }\n  return 0;\n};\n\n\n/**\n * String hash function similar to java.lang.String.hashCode().\n * The hash code for a string is computed as\n * s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n * where s[i] is the ith character of the string and n is the length of\n * the string. We mod the result to make it between 0 (inclusive) and 2^32\n * (exclusive).\n * @param {string} str A string.\n * @return {number} Hash value for `str`, between 0 (inclusive) and 2^32\n *  (exclusive). The empty string returns 0.\n */\ngoog.string.hashCode = function(str) {\n  var result = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Normalize to 4 byte range, 0 ... 2^32.\n    result = (31 * result + str.charCodeAt(i)) >>> 0;\n  }\n  return result;\n};\n\n\n/**\n * The most recent unique ID. |0 is equivalent to Math.floor in this case.\n * @type {number}\n * @private\n */\ngoog.string.uniqueStringCounter_ = Math.random() * 0x80000000 | 0;\n\n\n/**\n * Generates and returns a string which is unique in the current document.\n * This is useful, for example, to create unique IDs for DOM elements.\n * @return {string} A unique id.\n */\ngoog.string.createUniqueString = function() {\n  return 'goog_' + goog.string.uniqueStringCounter_++;\n};\n\n\n/**\n * Converts the supplied string to a number, which may be Infinity or NaN.\n * This function strips whitespace: (toNumber(' 123') === 123)\n * This function accepts scientific notation: (toNumber('1e1') === 10)\n *\n * This is better than Javascript's built-in conversions because, sadly:\n *     (Number(' ') === 0) and (parseFloat('123a') === 123)\n *\n * @param {string} str The string to convert.\n * @return {number} The number the supplied string represents, or NaN.\n */\ngoog.string.toNumber = function(str) {\n  var num = Number(str);\n  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\n\n\n/**\n * Returns whether the given string is lower camel case (e.g. \"isFooBar\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is lower camel case.\n */\ngoog.string.isLowerCamelCase = function(str) {\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\n\n\n/**\n * Returns whether the given string is upper camel case (e.g. \"FooBarBaz\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is upper camel case.\n */\ngoog.string.isUpperCamelCase = function(str) {\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\n\n\n/**\n * Converts a string from selector-case to camelCase (e.g. from\n * \"multi-part-string\" to \"multiPartString\"), useful for converting\n * CSS selectors and HTML dataset keys to their equivalent JS properties.\n * @param {string} str The string in selector-case form.\n * @return {string} The string in camelCase form.\n */\ngoog.string.toCamelCase = function(str) {\n  return String(str).replace(\n      /\\-([a-z])/g, function(all, match) { return match.toUpperCase(); });\n};\n\n\n/**\n * Converts a string from camelCase to selector-case (e.g. from\n * \"multiPartString\" to \"multi-part-string\"), useful for converting JS\n * style and dataset properties to equivalent CSS selectors and HTML keys.\n * @param {string} str The string in camelCase form.\n * @return {string} The string in selector-case form.\n */\ngoog.string.toSelectorCase = function(str) {\n  return String(str).replace(/([A-Z])/g, '-$1').toLowerCase();\n};\n\n\n/**\n * Converts a string into TitleCase. First character of the string is always\n * capitalized in addition to the first letter of every subsequent word.\n * Words are delimited by one or more whitespaces by default. Custom delimiters\n * can optionally be specified to replace the default, which doesn't preserve\n * whitespace delimiters and instead must be explicitly included if needed.\n *\n * Default delimiter => \" \":\n *    goog.string.toTitleCase('oneTwoThree')    => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three')  => 'One Two Three'\n *    goog.string.toTitleCase('  one   two   ') => '  One   Two   '\n *    goog.string.toTitleCase('one_two_three')  => 'One_two_three'\n *    goog.string.toTitleCase('one-two-three')  => 'One-two-three'\n *\n * Custom delimiter => \"_-.\":\n *    goog.string.toTitleCase('oneTwoThree', '_-.')       => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three', '_-.')     => 'One two three'\n *    goog.string.toTitleCase('  one   two   ', '_-.')    => '  one   two   '\n *    goog.string.toTitleCase('one_two_three', '_-.')     => 'One_Two_Three'\n *    goog.string.toTitleCase('one-two-three', '_-.')     => 'One-Two-Three'\n *    goog.string.toTitleCase('one...two...three', '_-.') => 'One...Two...Three'\n *    goog.string.toTitleCase('one. two. three', '_-.')   => 'One. two. three'\n *    goog.string.toTitleCase('one-two.three', '_-.')     => 'One-Two.Three'\n *\n * @param {string} str String value in camelCase form.\n * @param {string=} opt_delimiters Custom delimiter character set used to\n *      distinguish words in the string value. Each character represents a\n *      single delimiter. When provided, default whitespace delimiter is\n *      overridden and must be explicitly included if needed.\n * @return {string} String value in TitleCase form.\n */\ngoog.string.toTitleCase = function(str, opt_delimiters) {\n  var delimiters = goog.isString(opt_delimiters) ?\n      goog.string.regExpEscape(opt_delimiters) :\n      '\\\\s';\n\n  // For IE8, we need to prevent using an empty character set. Otherwise,\n  // incorrect matching will occur.\n  delimiters = delimiters ? '|[' + delimiters + ']+' : '';\n\n  var regexp = new RegExp('(^' + delimiters + ')([a-z])', 'g');\n  return str.replace(\n      regexp, function(all, p1, p2) { return p1 + p2.toUpperCase(); });\n};\n\n\n/**\n * Capitalizes a string, i.e. converts the first letter to uppercase\n * and all other letters to lowercase, e.g.:\n *\n * goog.string.capitalize('one')     => 'One'\n * goog.string.capitalize('ONE')     => 'One'\n * goog.string.capitalize('one two') => 'One two'\n *\n * Note that this function does not trim initial whitespace.\n *\n * @param {string} str String value to capitalize.\n * @return {string} String value with first letter in uppercase.\n */\ngoog.string.capitalize = function(str) {\n  return String(str.charAt(0)).toUpperCase() +\n      String(str.substr(1)).toLowerCase();\n};\n\n\n/**\n * Parse a string in decimal or hexidecimal ('0xFFFF') form.\n *\n * To parse a particular radix, please use parseInt(string, radix) directly. See\n * https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\n *\n * This is a wrapper for the built-in parseInt function that will only parse\n * numbers as base 10 or base 16.  Some JS implementations assume strings\n * starting with \"0\" are intended to be octal. ES3 allowed but discouraged\n * this behavior. ES5 forbids it.  This function emulates the ES5 behavior.\n *\n * For more information, see Mozilla JS Reference: http://goo.gl/8RiFj\n *\n * @param {string|number|null|undefined} value The value to be parsed.\n * @return {number} The number, parsed. If the string failed to parse, this\n *     will be NaN.\n */\ngoog.string.parseInt = function(value) {\n  // Force finite numbers to strings.\n  if (isFinite(value)) {\n    value = String(value);\n  }\n\n  if (goog.isString(value)) {\n    // If the string starts with '0x' or '-0x', parse as hex.\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n\n  return NaN;\n};\n\n\n/**\n * Splits a string on a separator a limited number of times.\n *\n * This implementation is more similar to Python or Java, where the limit\n * parameter specifies the maximum number of splits rather than truncating\n * the number of results.\n *\n * See http://docs.python.org/2/library/stdtypes.html#str.split\n * See JavaDoc: http://goo.gl/F2AsY\n * See Mozilla reference: http://goo.gl/dZdZs\n *\n * @param {string} str String to split.\n * @param {string} separator The separator.\n * @param {number} limit The limit to the number of splits. The resulting array\n *     will have a maximum length of limit+1.  Negative numbers are the same\n *     as zero.\n * @return {!Array<string>} The string, split.\n */\ngoog.string.splitLimit = function(str, separator, limit) {\n  var parts = str.split(separator);\n  var returnVal = [];\n\n  // Only continue doing this while we haven't hit the limit and we have\n  // parts left.\n  while (limit > 0 && parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n\n  // If there are remaining parts, append them to the end.\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n\n  return returnVal;\n};\n\n\n/**\n * Finds the characters to the right of the last instance of any separator\n *\n * This function is similar to goog.string.path.baseName, except it can take a\n * list of characters to split the string on. It will return the rightmost\n * grouping of characters to the right of any separator as a left-to-right\n * oriented string.\n *\n * @see goog.string.path.baseName\n * @param {string} str The string\n * @param {string|!Array<string>} separators A list of separator characters\n * @return {string} The last part of the string with respect to the separators\n */\ngoog.string.lastComponent = function(str, separators) {\n  if (!separators) {\n    return str;\n  } else if (typeof separators == 'string') {\n    separators = [separators];\n  }\n\n  var lastSeparatorIndex = -1;\n  for (var i = 0; i < separators.length; i++) {\n    if (separators[i] == '') {\n      continue;\n    }\n    var currentSeparatorIndex = str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex > lastSeparatorIndex) {\n      lastSeparatorIndex = currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex == -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\n\n\n/**\n * Computes the Levenshtein edit distance between two strings.\n * @param {string} a\n * @param {string} b\n * @return {number} The edit distance between the two strings.\n */\ngoog.string.editDistance = function(a, b) {\n  var v0 = [];\n  var v1 = [];\n\n  if (a == b) {\n    return 0;\n  }\n\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n\n  for (var i = 0; i < b.length + 1; i++) {\n    v0[i] = i;\n  }\n\n  for (var i = 0; i < a.length; i++) {\n    v1[0] = i + 1;\n\n    for (var j = 0; j < b.length; j++) {\n      var cost = Number(a[i] != b[j]);\n      // Cost for the substring is the minimum of adding one character, removing\n      // one character, or a swap.\n      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n\n    for (var j = 0; j < v0.length; j++) {\n      v0[j] = v1[j];\n    }\n  }\n\n  return v1[b.length];\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities used by goog.labs.userAgent tools. These functions\n * should not be used outside of goog.labs.userAgent.*.\n *\n * @author nnaze@google.com (Nathan Naze)\n */\n\ngoog.provide('goog.labs.userAgent.util');\n\ngoog.require('goog.string');\n\n\n/**\n * Gets the native userAgent string from navigator if it exists.\n * If navigator or navigator.userAgent string is missing, returns an empty\n * string.\n * @return {string}\n * @private\n */\ngoog.labs.userAgent.util.getNativeUserAgentString_ = function() {\n  var navigator = goog.labs.userAgent.util.getNavigator_();\n  if (navigator) {\n    var userAgent = navigator.userAgent;\n    if (userAgent) {\n      return userAgent;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Getter for the native navigator.\n * This is a separate function so it can be stubbed out in testing.\n * @return {Navigator}\n * @private\n */\ngoog.labs.userAgent.util.getNavigator_ = function() {\n  return goog.global.navigator;\n};\n\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgent but use a specified value for detection instead.\n * @private {string}\n */\ngoog.labs.userAgent.util.userAgent_ =\n    goog.labs.userAgent.util.getNativeUserAgentString_();\n\n\n/**\n * Applications may override browser detection on the built in\n * navigator.userAgent object by setting this string. Set to null to use the\n * browser object instead.\n * @param {?string=} opt_userAgent The User-Agent override.\n */\ngoog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {\n  goog.labs.userAgent.util.userAgent_ =\n      opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();\n};\n\n\n/**\n * @return {string} The user agent string.\n */\ngoog.labs.userAgent.util.getUserAgent = function() {\n  return goog.labs.userAgent.util.userAgent_;\n};\n\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string.\n */\ngoog.labs.userAgent.util.matchUserAgent = function(str) {\n  var userAgent = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.contains(userAgent, str);\n};\n\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string, ignoring\n *     case.\n */\ngoog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {\n  var userAgent = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.caseInsensitiveContains(userAgent, str);\n};\n\n\n/**\n * Parses the user agent into tuples for each section.\n * @param {string} userAgent\n * @return {!Array<!Array<string>>} Tuples of key, version, and the contents\n *     of the parenthetical.\n */\ngoog.labs.userAgent.util.extractVersionTuples = function(userAgent) {\n  // Matches each section of a user agent string.\n  // Example UA:\n  // Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us)\n  // AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\n  // This has three version tuples: Mozilla, AppleWebKit, and Mobile.\n\n  var versionRegExp = new RegExp(\n      // Key. Note that a key may have a space.\n      // (i.e. 'Mobile Safari' in 'Mobile Safari/5.0')\n      '(\\\\w[\\\\w ]+)' +\n\n          '/' +                // slash\n          '([^\\\\s]+)' +        // version (i.e. '5.0b')\n          '\\\\s*' +             // whitespace\n          '(?:\\\\((.*?)\\\\))?',  // parenthetical info. parentheses not matched.\n      'g');\n\n  var data = [];\n  var match;\n\n  // Iterate and collect the version tuples.  Each iteration will be the\n  // next regex match.\n  while (match = versionRegExp.exec(userAgent)) {\n    data.push([\n      match[1],  // key\n      match[2],  // value\n      // || undefined as this is not undefined in IE7 and IE8\n      match[3] || undefined  // info\n    ]);\n  }\n\n  return data;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating objects/maps/hashes.\n * @author arv@google.com (Erik Arvidsson)\n */\n\ngoog.provide('goog.object');\n\n\n/**\n * Whether two values are not observably distinguishable. This\n * correctly detects that 0 is not the same as -0 and two NaNs are\n * practically equivalent.\n *\n * The implementation is as suggested by harmony:egal proposal.\n *\n * @param {*} v The first value to compare.\n * @param {*} v2 The second value to compare.\n * @return {boolean} Whether two values are not observably distinguishable.\n * @see http://wiki.ecmascript.org/doku.php?id=harmony:egal\n */\ngoog.object.is = function(v, v2) {\n  if (v === v2) {\n    // 0 === -0, but they are not identical.\n    // We need the cast because the compiler requires that v2 is a\n    // number (although 1/v2 works with non-number). We cast to ? to\n    // stop the compiler from type-checking this statement.\n    return v !== 0 || 1 / v === 1 / /** @type {?} */ (v2);\n  }\n\n  // NaN is non-reflexive: NaN !== NaN, although they are identical.\n  return v !== v && v2 !== v2;\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash.\n *\n * @param {Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,Object<K,V>):?} f The function to call\n *     for every element. This function takes 3 arguments (the value, the\n *     key and the object) and the return value is ignored.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @template T,K,V\n */\ngoog.object.forEach = function(obj, f, opt_obj) {\n  for (var key in obj) {\n    f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash. If that call returns\n * true, adds the element to a new object.\n *\n * @param {Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,Object<K,V>):boolean} f The function to call\n *     for every element. This\n *     function takes 3 arguments (the value, the key and the object)\n *     and should return a boolean. If the return value is true the\n *     element is added to the result object. If it is false the\n *     element is not included.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,V>} a new object in which only elements that passed the\n *     test are present.\n * @template T,K,V\n */\ngoog.object.filter = function(obj, f, opt_obj) {\n  var res = {};\n  for (var key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n};\n\n\n/**\n * For every element in an object/map/hash calls a function and inserts the\n * result into a new object.\n *\n * @param {Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,Object<K,V>):R} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the value, the key and the object)\n *     and should return something. The result will be inserted\n *     into a new object.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,R>} a new object with the results from f.\n * @template T,K,V,R\n */\ngoog.object.map = function(obj, f, opt_obj) {\n  var res = {};\n  for (var key in obj) {\n    res[key] = f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n  return res;\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash. If any\n * call returns true, returns true (without checking the rest). If\n * all calls return false, returns false.\n *\n * @param {Object<K,V>} obj The object to check.\n * @param {function(this:T,V,?,Object<K,V>):boolean} f The function to\n *     call for every element. This function\n *     takes 3 arguments (the value, the key and the object) and should\n *     return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} true if any element passes the test.\n * @template T,K,V\n */\ngoog.object.some = function(obj, f, opt_obj) {\n  for (var key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash. If\n * all calls return true, returns true. If any call returns false, returns\n * false at this point and does not continue to check the remaining elements.\n *\n * @param {Object<K,V>} obj The object to check.\n * @param {?function(this:T,V,?,Object<K,V>):boolean} f The function to\n *     call for every element. This function\n *     takes 3 arguments (the value, the key and the object) and should\n *     return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} false if any element fails the test.\n * @template T,K,V\n */\ngoog.object.every = function(obj, f, opt_obj) {\n  for (var key in obj) {\n    if (!f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Returns the number of key-value pairs in the object map.\n *\n * @param {Object} obj The object for which to get the number of key-value\n *     pairs.\n * @return {number} The number of key-value pairs in the object map.\n */\ngoog.object.getCount = function(obj) {\n  var rv = 0;\n  for (var key in obj) {\n    rv++;\n  }\n  return rv;\n};\n\n\n/**\n * Returns one key from the object map, if any exists.\n * For map literals the returned key will be the first one in most of the\n * browsers (a know exception is Konqueror).\n *\n * @param {Object} obj The object to pick a key from.\n * @return {string|undefined} The key or undefined if the object is empty.\n */\ngoog.object.getAnyKey = function(obj) {\n  for (var key in obj) {\n    return key;\n  }\n};\n\n\n/**\n * Returns one value from the object map, if any exists.\n * For map literals the returned value will be the first one in most of the\n * browsers (a know exception is Konqueror).\n *\n * @param {Object<K,V>} obj The object to pick a value from.\n * @return {V|undefined} The value or undefined if the object is empty.\n * @template K,V\n */\ngoog.object.getAnyValue = function(obj) {\n  for (var key in obj) {\n    return obj[key];\n  }\n};\n\n\n/**\n * Whether the object/hash/map contains the given object as a value.\n * An alias for goog.object.containsValue(obj, val).\n *\n * @param {Object<K,V>} obj The object in which to look for val.\n * @param {V} val The object for which to check.\n * @return {boolean} true if val is present.\n * @template K,V\n */\ngoog.object.contains = function(obj, val) {\n  return goog.object.containsValue(obj, val);\n};\n\n\n/**\n * Returns the values of the object/map/hash.\n *\n * @param {Object<K,V>} obj The object from which to get the values.\n * @return {!Array<V>} The values in the object/map/hash.\n * @template K,V\n */\ngoog.object.getValues = function(obj) {\n  var res = [];\n  var i = 0;\n  for (var key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n};\n\n\n/**\n * Returns the keys of the object/map/hash.\n *\n * @param {Object} obj The object from which to get the keys.\n * @return {!Array<string>} Array of property keys.\n */\ngoog.object.getKeys = function(obj) {\n  var res = [];\n  var i = 0;\n  for (var key in obj) {\n    res[i++] = key;\n  }\n  return res;\n};\n\n\n/**\n * Get a value from an object multiple levels deep.  This is useful for\n * pulling values from deeply nested objects, such as JSON responses.\n * Example usage: getValueByKeys(jsonObj, 'foo', 'entries', 3)\n *\n * @param {!Object} obj An object to get the value from.  Can be array-like.\n * @param {...(string|number|!IArrayLike<number|string>)}\n *     var_args A number of keys\n *     (as strings, or numbers, for array-like objects).  Can also be\n *     specified as a single array of keys.\n * @return {*} The resulting value.  If, at any point, the value for a key\n *     in the current object is null or undefined, returns undefined.\n */\ngoog.object.getValueByKeys = function(obj, var_args) {\n  var isArrayLike = goog.isArrayLike(var_args);\n  var keys = isArrayLike ?\n      /** @type {!IArrayLike<number|string>} */ (var_args) :\n      arguments;\n\n  // Start with the 2nd parameter for the variable parameters syntax.\n  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {\n    if (obj == null) return undefined;\n    obj = obj[keys[i]];\n  }\n\n  return obj;\n};\n\n\n/**\n * Whether the object/map/hash contains the given key.\n *\n * @param {Object} obj The object in which to look for key.\n * @param {?} key The key for which to check.\n * @return {boolean} true If the map contains the key.\n */\ngoog.object.containsKey = function(obj, key) {\n  return obj !== null && key in obj;\n};\n\n\n/**\n * Whether the object/map/hash contains the given value. This is O(n).\n *\n * @param {Object<K,V>} obj The object in which to look for val.\n * @param {V} val The value for which to check.\n * @return {boolean} true If the map contains the value.\n * @template K,V\n */\ngoog.object.containsValue = function(obj, val) {\n  for (var key in obj) {\n    if (obj[key] == val) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its key.\n * @param {Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,Object<K,V>):boolean} f The\n *      function to call for every element. Takes 3 arguments (the value,\n *     the key and the object) and should return a boolean.\n * @param {T=} opt_this An optional \"this\" context for the function.\n * @return {string|undefined} The key of an element for which the function\n *     returns true or undefined if no such element is found.\n * @template T,K,V\n */\ngoog.object.findKey = function(obj, f, opt_this) {\n  for (var key in obj) {\n    if (f.call(/** @type {?} */ (opt_this), obj[key], key, obj)) {\n      return key;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its value.\n * @param {Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,Object<K,V>):boolean} f The function\n *     to call for every element. Takes 3 arguments (the value, the key\n *     and the object) and should return a boolean.\n * @param {T=} opt_this An optional \"this\" context for the function.\n * @return {V} The value of an element for which the function returns true or\n *     undefined if no such element is found.\n * @template T,K,V\n */\ngoog.object.findValue = function(obj, f, opt_this) {\n  var key = goog.object.findKey(obj, f, opt_this);\n  return key && obj[key];\n};\n\n\n/**\n * Whether the object/map/hash is empty.\n *\n * @param {Object} obj The object to test.\n * @return {boolean} true if obj is empty.\n */\ngoog.object.isEmpty = function(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Removes all key value pairs from the object/map/hash.\n *\n * @param {Object} obj The object to clear.\n */\ngoog.object.clear = function(obj) {\n  for (var i in obj) {\n    delete obj[i];\n  }\n};\n\n\n/**\n * Removes a key-value pair based on the key.\n *\n * @param {Object} obj The object from which to remove the key.\n * @param {?} key The key to remove.\n * @return {boolean} Whether an element was removed.\n */\ngoog.object.remove = function(obj, key) {\n  var rv;\n  if (rv = key in /** @type {!Object} */ (obj)) {\n    delete obj[key];\n  }\n  return rv;\n};\n\n\n/**\n * Adds a key-value pair to the object. Throws an exception if the key is\n * already in use. Use set if you want to change an existing pair.\n *\n * @param {Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} val The value to add.\n * @template K,V\n */\ngoog.object.add = function(obj, key, val) {\n  if (obj !== null && key in obj) {\n    throw new Error('The object already contains the key \"' + key + '\"');\n  }\n  goog.object.set(obj, key, val);\n};\n\n\n/**\n * Returns the value for the given key.\n *\n * @param {Object<K,V>} obj The object from which to get the value.\n * @param {string} key The key for which to get the value.\n * @param {R=} opt_val The value to return if no item is found for the given\n *     key (default is undefined).\n * @return {V|R|undefined} The value for the given key.\n * @template K,V,R\n */\ngoog.object.get = function(obj, key, opt_val) {\n  if (obj !== null && key in obj) {\n    return obj[key];\n  }\n  return opt_val;\n};\n\n\n/**\n * Adds a key-value pair to the object/map/hash.\n *\n * @param {Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add.\n * @template K,V\n */\ngoog.object.set = function(obj, key, value) {\n  obj[key] = value;\n};\n\n\n/**\n * Adds a key-value pair to the object/map/hash if it doesn't exist yet.\n *\n * @param {Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\ngoog.object.setIfUndefined = function(obj, key, value) {\n  return key in /** @type {!Object} */ (obj) ? obj[key] : (obj[key] = value);\n};\n\n\n/**\n * Sets a key and value to an object if the key is not set. The value will be\n * the return value of the given function. If the key already exists, the\n * object will not be changed and the function will not be called (the function\n * will be lazily evaluated -- only called if necessary).\n *\n * This function is particularly useful for use with a map used a as a cache.\n *\n * @param {!Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {function():V} f The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\ngoog.object.setWithReturnValueIfNotSet = function(obj, key, f) {\n  if (key in obj) {\n    return obj[key];\n  }\n\n  var val = f();\n  obj[key] = val;\n  return val;\n};\n\n\n/**\n * Compares two objects for equality using === on the values.\n *\n * @param {!Object<K,V>} a\n * @param {!Object<K,V>} b\n * @return {boolean}\n * @template K,V\n */\ngoog.object.equals = function(a, b) {\n  for (var k in a) {\n    if (!(k in b) || a[k] !== b[k]) {\n      return false;\n    }\n  }\n  for (var k in b) {\n    if (!(k in a)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Returns a shallow clone of the object.\n *\n * @param {Object<K,V>} obj Object to clone.\n * @return {!Object<K,V>} Clone of the input object.\n * @template K,V\n */\ngoog.object.clone = function(obj) {\n  // We cannot use the prototype trick because a lot of methods depend on where\n  // the actual key is set.\n\n  var res = {};\n  for (var key in obj) {\n    res[key] = obj[key];\n  }\n  return res;\n  // We could also use goog.mixin but I wanted this to be independent from that.\n};\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.object.unsafeClone</code> does not detect reference loops. Objects\n * that refer to themselves will cause infinite recursion.\n *\n * <code>goog.object.unsafeClone</code> is unaware of unique identifiers, and\n * copies UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {T} obj The value to clone.\n * @return {T} A clone of the input value.\n * @template T\n */\ngoog.object.unsafeClone = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (goog.isFunction(obj.clone)) {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.object.unsafeClone(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * Returns a new object in which all the keys and values are interchanged\n * (keys become values and values become keys). If multiple keys map to the\n * same value, the chosen transposed value is implementation-dependent.\n *\n * @param {Object} obj The object to transpose.\n * @return {!Object} The transposed object.\n */\ngoog.object.transpose = function(obj) {\n  var transposed = {};\n  for (var key in obj) {\n    transposed[obj[key]] = key;\n  }\n  return transposed;\n};\n\n\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {Array<string>}\n * @private\n */\ngoog.object.PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n/**\n * Extends an object with another object.\n * This operates 'in-place'; it does not create a new Object.\n *\n * Example:\n * var o = {};\n * goog.object.extend(o, {a: 0, b: 1});\n * o; // {a: 0, b: 1}\n * goog.object.extend(o, {b: 2, c: 3});\n * o; // {a: 0, b: 2, c: 3}\n *\n * @param {Object} target The object to modify. Existing properties will be\n *     overwritten if they are also present in one of the objects in\n *     `var_args`.\n * @param {...Object} var_args The objects from which values will be copied.\n */\ngoog.object.extend = function(target, var_args) {\n  var key, source;\n  for (var i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      target[key] = source[key];\n    }\n\n    // For IE the for-in-loop does not contain any properties that are not\n    // enumerable on the prototype object (for example isPrototypeOf from\n    // Object.prototype) and it will also not include 'replace' on objects that\n    // extend String and change 'replace' (not that it is common for anyone to\n    // extend anything except Object).\n\n    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {\n      key = goog.object.PROTOTYPE_FIELDS_[j];\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n};\n\n\n/**\n * Creates a new object built from the key-value pairs provided as arguments.\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise even arguments are used as\n *     the property names and odd arguments are used as the property values.\n * @return {!Object} The new object.\n * @throws {Error} If there are uneven number of arguments or there is only one\n *     non array argument.\n */\ngoog.object.create = function(var_args) {\n  var argLength = arguments.length;\n  if (argLength == 1 && goog.isArray(arguments[0])) {\n    return goog.object.create.apply(null, arguments[0]);\n  }\n\n  if (argLength % 2) {\n    throw new Error('Uneven number of arguments');\n  }\n\n  var rv = {};\n  for (var i = 0; i < argLength; i += 2) {\n    rv[arguments[i]] = arguments[i + 1];\n  }\n  return rv;\n};\n\n\n/**\n * Creates a new object where the property names come from the arguments but\n * the value is always set to true\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise the arguments are used\n *     as the property names.\n * @return {!Object} The new object.\n */\ngoog.object.createSet = function(var_args) {\n  var argLength = arguments.length;\n  if (argLength == 1 && goog.isArray(arguments[0])) {\n    return goog.object.createSet.apply(null, arguments[0]);\n  }\n\n  var rv = {};\n  for (var i = 0; i < argLength; i++) {\n    rv[arguments[i]] = true;\n  }\n  return rv;\n};\n\n\n/**\n * Creates an immutable view of the underlying object, if the browser\n * supports immutable objects.\n *\n * In default mode, writes to this view will fail silently. In strict mode,\n * they will throw an error.\n *\n * @param {!Object<K,V>} obj An object.\n * @return {!Object<K,V>} An immutable view of that object, or the\n *     original object if this browser does not support immutables.\n * @template K,V\n */\ngoog.object.createImmutableView = function(obj) {\n  var result = obj;\n  if (Object.isFrozen && !Object.isFrozen(obj)) {\n    result = Object.create(obj);\n    Object.freeze(result);\n  }\n  return result;\n};\n\n\n/**\n * @param {!Object} obj An object.\n * @return {boolean} Whether this is an immutable view of the object.\n */\ngoog.object.isImmutableView = function(obj) {\n  return !!Object.isFrozen && Object.isFrozen(obj);\n};\n\n\n/**\n * Get all properties names on a given Object regardless of enumerability.\n *\n * <p> If the browser does not support `Object.getOwnPropertyNames` nor\n * `Object.getPrototypeOf` then this is equivalent to using\n * `goog.object.getKeys`\n *\n * @param {?Object} obj The object to get the properties of.\n * @param {boolean=} opt_includeObjectPrototype Whether properties defined on\n *     `Object.prototype` should be included in the result.\n * @param {boolean=} opt_includeFunctionPrototype Whether properties defined on\n *     `Function.prototype` should be included in the result.\n * @return {!Array<string>}\n * @public\n */\ngoog.object.getAllPropertyNames = function(\n    obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {\n  if (!obj) {\n    return [];\n  }\n\n  // Naively use a for..in loop to get the property names if the browser doesn't\n  // support any other APIs for getting it.\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n    return goog.object.getKeys(obj);\n  }\n\n  var visitedSet = {};\n\n  // Traverse the prototype chain and add all properties to the visited set.\n  var proto = obj;\n  while (proto &&\n         (proto !== Object.prototype || !!opt_includeObjectPrototype) &&\n         (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {\n    var names = Object.getOwnPropertyNames(proto);\n    for (var i = 0; i < names.length; i++) {\n      visitedSet[names[i]] = true;\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return goog.object.getKeys(visitedSet);\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Provides a function to schedule running a function as soon\n * as possible after the current JS execution stops and yields to the event\n * loop.\n *\n */\n\ngoog.provide('goog.async.nextTick');\ngoog.provide('goog.async.throwException');\n\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.functions');\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\n\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\ngoog.async.throwException = function(exception) {\n  // Each throw needs to be in its own context.\n  goog.global.setTimeout(function() { throw exception; }, 0);\n};\n\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) takes at least 4ms when called from\n * within another setTimeout(…, 0) for legacy reasons.\n *\n * This will not schedule the callback as a microtask (i.e. a task that can\n * preempt user input or networking callbacks). It is meant to emulate what\n * setTimeout(_, 0) would do if it were not throttled. If you desire microtask\n * behavior, use {@see goog.Promise} instead.\n *\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @param {boolean=} opt_useSetImmediate Avoid the IE workaround that\n *     ensures correctness at the cost of speed. See comments for details.\n * @template SCOPE\n */\ngoog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {\n  var cb = callback;\n  if (opt_context) {\n    cb = goog.bind(callback, opt_context);\n  }\n  cb = goog.async.nextTick.wrapCallback_(cb);\n  // Note we do allow callers to also request setImmediate if they are willing\n  // to accept the possible tradeoffs of incorrectness in exchange for speed.\n  // The IE fallback of readystate change is much slower. See useSetImmediate_\n  // for details.\n  if (goog.isFunction(goog.global.setImmediate) &&\n      (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {\n    goog.global.setImmediate(cb);\n    return;\n  }\n\n  // Look for and cache the custom fallback version of setImmediate.\n  if (!goog.async.nextTick.setImmediate_) {\n    goog.async.nextTick.setImmediate_ =\n        goog.async.nextTick.getSetImmediateEmulator_();\n  }\n  goog.async.nextTick.setImmediate_(cb);\n};\n\n\n/**\n * Returns whether should use setImmediate implementation currently on window.\n *\n * window.setImmediate was introduced and currently only supported by IE10+,\n * but due to a bug in the implementation it is not guaranteed that\n * setImmediate is faster than setTimeout nor that setImmediate N is before\n * setImmediate N+1. That is why we do not use the native version if\n * available. We do, however, call setImmediate if it is a non-native function\n * because that indicates that it has been replaced by goog.testing.MockClock\n * which we do want to support.\n * See\n * http://connect.microsoft.com/IE/feedback/details/801823/setimmediate-and-messagechannel-are-broken-in-ie10\n *\n * @return {boolean} Whether to use the implementation of setImmediate defined\n *     on Window.\n * @private\n * @suppress {missingProperties} For \"Window.prototype.setImmediate\"\n */\ngoog.async.nextTick.useSetImmediate_ = function() {\n  // Not a browser environment.\n  if (!goog.global.Window || !goog.global.Window.prototype) {\n    return true;\n  }\n\n  // MS Edge has window.setImmediate natively, but it's not on Window.prototype.\n  // Also, there's no clean way to detect if the goog.global.setImmediate has\n  // been replaced by mockClock as its replacement also shows up as \"[native\n  // code]\" when using toString. Therefore, just always use\n  // goog.global.setImmediate for Edge. It's unclear if it suffers the same\n  // issues as IE10/11, but based on\n  // https://dev.modern.ie/testdrive/demos/setimmediatesorting/\n  // it seems they've been working to ensure it's WAI.\n  if (goog.labs.userAgent.browser.isEdge() ||\n      goog.global.Window.prototype.setImmediate != goog.global.setImmediate) {\n    // Something redefined setImmediate in which case we decide to use it (This\n    // is so that we use the mockClock setImmediate).\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\ngoog.async.nextTick.setImmediate_;\n\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\ngoog.async.nextTick.getSetImmediateEmulator_ = function() {\n  // Create a private message channel and use it to postMessage empty messages\n  // to ourselves.\n  /** @type {!Function|undefined} */\n  var Channel = goog.global['MessageChannel'];\n  // If MessageChannel is not available and we are in a browser, implement\n  // an iframe based polyfill in browsers that have postMessage and\n  // document.addEventListener. The latter excludes IE8 because it has a\n  // synchronous postMessage implementation.\n  if (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n      window.postMessage && window.addEventListener &&\n      // Presto (The old pre-blink Opera engine) has problems with iframes\n      // and contentWindow.\n      !goog.labs.userAgent.engine.isPresto()) {\n    /** @constructor */\n    Channel = function() {\n      // Make an empty, invisible iframe.\n      var iframe = /** @type {!HTMLIFrameElement} */ (\n          document.createElement(String(goog.dom.TagName.IFRAME)));\n      iframe.style.display = 'none';\n      iframe.src = '';\n      document.documentElement.appendChild(iframe);\n      var win = iframe.contentWindow;\n      var doc = win.document;\n      doc.open();\n      doc.write('');\n      doc.close();\n      // Do not post anything sensitive over this channel, as the workaround for\n      // pages with file: origin could allow that information to be modified or\n      // intercepted.\n      var message = 'callImmediate' + Math.random();\n      // The same origin policy rejects attempts to postMessage from file: urls\n      // unless the origin is '*'.\n      var origin = win.location.protocol == 'file:' ?\n          '*' :\n          win.location.protocol + '//' + win.location.host;\n      var onmessage = goog.bind(function(e) {\n        // Validate origin and message to make sure that this message was\n        // intended for us. If the origin is set to '*' (see above) only the\n        // message needs to match since, for example, '*' != 'file://'. Allowing\n        // the wildcard is ok, as we are not concerned with security here.\n        if ((origin != '*' && e.origin != origin) || e.data != message) {\n          return;\n        }\n        this['port1'].onmessage();\n      }, this);\n      win.addEventListener('message', onmessage, false);\n      this['port1'] = {};\n      this['port2'] = {\n        postMessage: function() { win.postMessage(message, origin); }\n      };\n    };\n  }\n  if (typeof Channel !== 'undefined' && !goog.labs.userAgent.browser.isIE()) {\n    // Exclude all of IE due to\n    // http://codeforhire.com/2013/09/21/setimmediate-and-messagechannel-broken-on-internet-explorer-10/\n    // which allows starving postMessage with a busy setTimeout loop.\n    // This currently affects IE10 and IE11 which would otherwise be able\n    // to use the postMessage based fallbacks.\n    var channel = new Channel();\n    // Use a fifo linked list to call callbacks in the right order.\n    var head = {};\n    var tail = head;\n    channel['port1'].onmessage = function() {\n      if (goog.isDef(head.next)) {\n        head = head.next;\n        var cb = head.cb;\n        head.cb = null;\n        cb();\n      }\n    };\n    return function(cb) {\n      tail.next = {cb: cb};\n      tail = tail.next;\n      channel['port2'].postMessage(0);\n    };\n  }\n  // Implementation for IE6 to IE10: Script elements fire an asynchronous\n  // onreadystatechange event when inserted into the DOM.\n  if (typeof document !== 'undefined' &&\n      'onreadystatechange' in\n          document.createElement(String(goog.dom.TagName.SCRIPT))) {\n    return function(cb) {\n      var script = document.createElement(String(goog.dom.TagName.SCRIPT));\n      script.onreadystatechange = function() {\n        // Clean up and call the callback.\n        script.onreadystatechange = null;\n        script.parentNode.removeChild(script);\n        script = null;\n        cb();\n        cb = null;\n      };\n      document.documentElement.appendChild(script);\n    };\n  }\n  // Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n  // or more.\n  // NOTE(user): This fallback is used for IE11.\n  return function(cb) {\n    goog.global.setTimeout(/** @type {function()} */ (cb), 0);\n  };\n};\n\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\ngoog.async.nextTick.wrapCallback_ = goog.functions.identity;\n\n\n// Register the callback function as an entry point, so that it can be\n// monitored for exception handling, etc. This has to be done in this file\n// since it requires special code to handle all browsers.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) { goog.async.nextTick.wrapCallback_ = transformer; });\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent detection (Browser).\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on rendering engine, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent, goog.labs.userAgent.platform,\n * goog.labs.userAgent.device respectively.)\n *\n * @author martone@google.com (Andy Martone)\n */\n\ngoog.provide('goog.labs.userAgent.browser');\n\ngoog.require('goog.array');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.object');\ngoog.require('goog.string');\n\n\n// TODO(nnaze): Refactor to remove excessive exclusion logic in matching\n// functions.\n\n\n/**\n * @return {boolean} Whether the user's browser is Opera.  Note: Chromium\n *     based Opera (Opera 15+) is detected as Chrome to avoid unnecessary\n *     special casing.\n * @private\n */\ngoog.labs.userAgent.browser.matchOpera_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Opera');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is IE.\n * @private\n */\ngoog.labs.userAgent.browser.matchIE_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Trident') ||\n      goog.labs.userAgent.util.matchUserAgent('MSIE');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Edge.\n * @private\n */\ngoog.labs.userAgent.browser.matchEdge_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Edge');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Firefox.\n * @private\n */\ngoog.labs.userAgent.browser.matchFirefox_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Firefox');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Safari.\n * @private\n */\ngoog.labs.userAgent.browser.matchSafari_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Safari') &&\n      !(goog.labs.userAgent.browser.matchChrome_() ||\n        goog.labs.userAgent.browser.matchCoast_() ||\n        goog.labs.userAgent.browser.matchOpera_() ||\n        goog.labs.userAgent.browser.matchEdge_() ||\n        goog.labs.userAgent.browser.isSilk() ||\n        goog.labs.userAgent.util.matchUserAgent('Android'));\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n * @private\n */\ngoog.labs.userAgent.browser.matchCoast_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Coast');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is iOS Webview.\n * @private\n */\ngoog.labs.userAgent.browser.matchIosWebview_ = function() {\n  // iOS Webview does not show up as Chrome or Safari. Also check for Opera's\n  // WebKit-based iOS browser, Coast.\n  return (goog.labs.userAgent.util.matchUserAgent('iPad') ||\n          goog.labs.userAgent.util.matchUserAgent('iPhone')) &&\n      !goog.labs.userAgent.browser.matchSafari_() &&\n      !goog.labs.userAgent.browser.matchChrome_() &&\n      !goog.labs.userAgent.browser.matchCoast_() &&\n      goog.labs.userAgent.util.matchUserAgent('AppleWebKit');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Chrome.\n * @private\n */\ngoog.labs.userAgent.browser.matchChrome_ = function() {\n  return (goog.labs.userAgent.util.matchUserAgent('Chrome') ||\n          goog.labs.userAgent.util.matchUserAgent('CriOS')) &&\n      !goog.labs.userAgent.browser.matchEdge_();\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is the Android browser.\n * @private\n */\ngoog.labs.userAgent.browser.matchAndroidBrowser_ = function() {\n  // Android can appear in the user agent string for Chrome on Android.\n  // This is not the Android standalone browser if it does.\n  return goog.labs.userAgent.util.matchUserAgent('Android') &&\n      !(goog.labs.userAgent.browser.isChrome() ||\n        goog.labs.userAgent.browser.isFirefox() ||\n        goog.labs.userAgent.browser.isOpera() ||\n        goog.labs.userAgent.browser.isSilk());\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Opera.\n */\ngoog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;\n\n\n/**\n * @return {boolean} Whether the user's browser is IE.\n */\ngoog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Edge.\n */\ngoog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Firefox.\n */\ngoog.labs.userAgent.browser.isFirefox =\n    goog.labs.userAgent.browser.matchFirefox_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Safari.\n */\ngoog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n */\ngoog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;\n\n\n/**\n * @return {boolean} Whether the user's browser is iOS Webview.\n */\ngoog.labs.userAgent.browser.isIosWebview =\n    goog.labs.userAgent.browser.matchIosWebview_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Chrome.\n */\ngoog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;\n\n\n/**\n * @return {boolean} Whether the user's browser is the Android browser.\n */\ngoog.labs.userAgent.browser.isAndroidBrowser =\n    goog.labs.userAgent.browser.matchAndroidBrowser_;\n\n\n/**\n * For more information, see:\n * http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html\n * @return {boolean} Whether the user's browser is Silk.\n */\ngoog.labs.userAgent.browser.isSilk = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Silk');\n};\n\n\n/**\n * @return {string} The browser version or empty string if version cannot be\n *     determined. Note that for Internet Explorer, this returns the version of\n *     the browser, not the version of the rendering engine. (IE 8 in\n *     compatibility mode will return 8.0 rather than 7.0. To determine the\n *     rendering engine version, look at document.documentMode instead. See\n *     http://msdn.microsoft.com/en-us/library/cc196988(v=vs.85).aspx for more\n *     details.)\n */\ngoog.labs.userAgent.browser.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  // Special case IE since IE's version is inside the parenthesis and\n  // without the '/'.\n  if (goog.labs.userAgent.browser.isIE()) {\n    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);\n  }\n\n  var versionTuples =\n      goog.labs.userAgent.util.extractVersionTuples(userAgentString);\n\n  // Construct a map for easy lookup.\n  var versionMap = {};\n  goog.array.forEach(versionTuples, function(tuple) {\n    // Note that the tuple is of length three, but we only care about the\n    // first two.\n    var key = tuple[0];\n    var value = tuple[1];\n    versionMap[key] = value;\n  });\n\n  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);\n\n  // Gives the value with the first key it finds, otherwise empty string.\n  function lookUpValueWithKeys(keys) {\n    var key = goog.array.find(keys, versionMapHasKey);\n    return versionMap[key] || '';\n  }\n\n  // Check Opera before Chrome since Opera 15+ has \"Chrome\" in the string.\n  // See\n  // http://my.opera.com/ODIN/blog/2013/07/15/opera-user-agent-strings-opera-15-and-beyond\n  if (goog.labs.userAgent.browser.isOpera()) {\n    // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\" first.\n    // Opera uses 'OPR' for more recent UAs.\n    return lookUpValueWithKeys(['Version', 'Opera']);\n  }\n\n  // Check Edge before Chrome since it has Chrome in the string.\n  if (goog.labs.userAgent.browser.isEdge()) {\n    return lookUpValueWithKeys(['Edge']);\n  }\n\n  if (goog.labs.userAgent.browser.isChrome()) {\n    return lookUpValueWithKeys(['Chrome', 'CriOS']);\n  }\n\n  // Usually products browser versions are in the third tuple after \"Mozilla\"\n  // and the engine.\n  var tuple = versionTuples[2];\n  return tuple && tuple[1] || '';\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n */\ngoog.labs.userAgent.browser.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.browser.getVersion(), version) >= 0;\n};\n\n\n/**\n * Determines IE version. More information:\n * http://msdn.microsoft.com/en-us/library/ie/bg182625(v=vs.85).aspx#uaString\n * http://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx\n * http://blogs.msdn.com/b/ie/archive/2010/03/23/introducing-ie9-s-user-agent-string.aspx\n * http://blogs.msdn.com/b/ie/archive/2009/01/09/the-internet-explorer-8-user-agent-string-updated-edition.aspx\n *\n * @param {string} userAgent the User-Agent.\n * @return {string}\n * @private\n */\ngoog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {\n  // IE11 may identify itself as MSIE 9.0 or MSIE 10.0 due to an IE 11 upgrade\n  // bug. Example UA:\n  // Mozilla/5.0 (MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)\n  // like Gecko.\n  // See http://www.whatismybrowser.com/developers/unknown-user-agent-fragments.\n  var rv = /rv: *([\\d\\.]*)/.exec(userAgent);\n  if (rv && rv[1]) {\n    return rv[1];\n  }\n\n  var version = '';\n  var msie = /MSIE +([\\d\\.]+)/.exec(userAgent);\n  if (msie && msie[1]) {\n    // IE in compatibility mode usually identifies itself as MSIE 7.0; in this\n    // case, use the Trident version to determine the version of IE. For more\n    // details, see the links above.\n    var tridentVersion = /Trident\\/(\\d.\\d)/.exec(userAgent);\n    if (msie[1] == '7.0') {\n      if (tridentVersion && tridentVersion[1]) {\n        switch (tridentVersion[1]) {\n          case '4.0':\n            version = '8.0';\n            break;\n          case '5.0':\n            version = '9.0';\n            break;\n          case '6.0':\n            version = '10.0';\n            break;\n          case '7.0':\n            version = '11.0';\n            break;\n        }\n      } else {\n        version = '7.0';\n      }\n    } else {\n      version = msie[1];\n    }\n  }\n  return version;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent detection.\n * @see http://en.wikipedia.org/wiki/User_agent\n * For more information on browser brand, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent (browser, platform, and device).\n *\n */\n\ngoog.provide('goog.labs.userAgent.engine');\n\ngoog.require('goog.array');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.string');\n\n\n/**\n * @return {boolean} Whether the rendering engine is Presto.\n */\ngoog.labs.userAgent.engine.isPresto = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Presto');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Trident.\n */\ngoog.labs.userAgent.engine.isTrident = function() {\n  // IE only started including the Trident token in IE8.\n  return goog.labs.userAgent.util.matchUserAgent('Trident') ||\n      goog.labs.userAgent.util.matchUserAgent('MSIE');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Edge.\n */\ngoog.labs.userAgent.engine.isEdge = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Edge');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is WebKit.\n */\ngoog.labs.userAgent.engine.isWebKit = function() {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase('WebKit') &&\n      !goog.labs.userAgent.engine.isEdge();\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Gecko.\n */\ngoog.labs.userAgent.engine.isGecko = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Gecko') &&\n      !goog.labs.userAgent.engine.isWebKit() &&\n      !goog.labs.userAgent.engine.isTrident() &&\n      !goog.labs.userAgent.engine.isEdge();\n};\n\n\n/**\n * @return {string} The rendering engine's version or empty string if version\n *     can't be determined.\n */\ngoog.labs.userAgent.engine.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  if (userAgentString) {\n    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);\n\n    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);\n    if (engineTuple) {\n      // In Gecko, the version string is either in the browser info or the\n      // Firefox version.  See Gecko user agent string reference:\n      // http://goo.gl/mULqa\n      if (engineTuple[0] == 'Gecko') {\n        return goog.labs.userAgent.engine.getVersionForKey_(tuples, 'Firefox');\n      }\n\n      return engineTuple[1];\n    }\n\n    // MSIE has only one version identifier, and the Trident version is\n    // specified in the parenthetical. IE Edge is covered in the engine tuple\n    // detection.\n    var browserTuple = tuples[0];\n    var info;\n    if (browserTuple && (info = browserTuple[2])) {\n      var match = /Trident\\/([^\\s;]+)/.exec(info);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n  return '';\n};\n\n\n/**\n * @param {!Array<!Array<string>>} tuples Extracted version tuples.\n * @return {!Array<string>|undefined} The engine tuple or undefined if not\n *     found.\n * @private\n */\ngoog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {\n  if (!goog.labs.userAgent.engine.isEdge()) {\n    return tuples[1];\n  }\n  for (var i = 0; i < tuples.length; i++) {\n    var tuple = tuples[i];\n    if (tuple[0] == 'Edge') {\n      return tuple;\n    }\n  }\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the rendering engine version is higher or the same\n *     as the given version.\n */\ngoog.labs.userAgent.engine.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.engine.getVersion(), version) >= 0;\n};\n\n\n/**\n * @param {!Array<!Array<string>>} tuples Version tuples.\n * @param {string} key The key to look for.\n * @return {string} The version string of the given key, if present.\n *     Otherwise, the empty string.\n * @private\n */\ngoog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {\n  // TODO(nnaze): Move to util if useful elsewhere.\n\n  var pair = goog.array.find(tuples, function(pair) { return key == pair[0]; });\n\n  return pair && pair[1] || '';\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.Promise');\n\ngoog.require('goog.Thenable');\ngoog.require('goog.asserts');\ngoog.require('goog.async.FreeList');\ngoog.require('goog.async.run');\ngoog.require('goog.async.throwException');\ngoog.require('goog.debug.Error');\ngoog.require('goog.promise.Resolver');\n\n\n\n/**\n * NOTE: This class was created in anticipation of the built-in Promise type\n * being standardized and implemented across browsers. Now that Promise is\n * available in modern browsers, and is automatically polyfilled by the Closure\n * Compiler, by default, most new code should use native `Promise`\n * instead of `goog.Promise`. However, `goog.Promise` has the\n * concept of cancellation which native Promises do not yet have. So code\n * needing cancellation may still want to use `goog.Promise`.\n *\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled with a fulfillment value, rejected with a\n * rejection reason, or blocked by another Promise. A Promise is said to be\n * settled if it is either fulfilled or rejected. Once settled, the Promise\n * result is immutable.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling `then` and registering\n * `onFulfilled` and `onRejected` callbacks. Once the Promise\n * is settled, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional `then` calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering `then` invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is settled, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable<TYPE>|Thenable)=),\n *             function(*=)): void} resolver\n *     Initialization function that is invoked immediately with `resolve`\n *     and `reject` functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {goog.Thenable<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\ngoog.Promise = function(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {goog.Promise.State_}\n   */\n  this.state_ = goog.Promise.State_.PENDING;\n\n  /**\n   * The settled result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling `then()`, the originating parent.\n   * @private {goog.Promise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The linked list of `onFulfilled` and `onRejected` callbacks\n   * added to this Promise by calls to `then()`.\n   * @private {?goog.Promise.CallbackEntry_}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * The tail of the linked list of `onFulfilled` and `onRejected`\n   * callbacks added to this Promise by calls to `then()`.\n   * @private {?goog.Promise.CallbackEntry_}\n   */\n  this.callbackEntriesTail_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the `UNHANDLED_REJECTION_DELAY` is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an `onRejected` callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {\n    /**\n     * When the `UNHANDLED_REJECTION_DELAY` is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * `onRejected` callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  if (goog.Promise.LONG_STACK_TRACES) {\n    /**\n     * A list of stack trace frames pointing to the locations where this Promise\n     * was created or had callbacks added to it. Saved to add additional context\n     * to stack traces when an exception is thrown.\n     * @private {!Array<string>}\n     */\n    this.stack_ = [];\n    this.addStackTrace_(new Error('created'));\n\n    /**\n     * Index of the most recently executed stack frame entry.\n     * @private {number}\n     */\n    this.currentStep_ = 0;\n  }\n\n  // As an optimization, we can skip this if resolver is goog.nullFunction.\n  // This value is passed internally when creating a promise which will be\n  // resolved through a more optimized path.\n  if (resolver != goog.nullFunction) {\n    try {\n      var self = this;\n      resolver.call(\n          opt_context,\n          function(value) {\n            self.resolve_(goog.Promise.State_.FULFILLED, value);\n          },\n          function(reason) {\n            if (goog.DEBUG &&\n                !(reason instanceof goog.Promise.CancellationError)) {\n              try {\n                // Promise was rejected. Step up one call frame to see why.\n                if (reason instanceof Error) {\n                  throw reason;\n                } else {\n                  throw new Error('Promise rejected.');\n                }\n              } catch (e) {\n                // Only thrown so browser dev tools can catch rejections of\n                // promises when the option to break on caught exceptions is\n                // activated.\n              }\n            }\n            self.resolve_(goog.Promise.State_.REJECTED, reason);\n          });\n    } catch (e) {\n      this.resolve_(goog.Promise.State_.REJECTED, e);\n    }\n  }\n};\n\n\n/**\n * @define {boolean} Whether traces of `then` calls should be included in\n * exceptions thrown\n */\ngoog.define('goog.Promise.LONG_STACK_TRACES', false);\n\n\n/**\n * @define {number} The delay in milliseconds before a rejected Promise's reason\n * is passed to the rejection handler. By default, the rejection handler\n * rethrows the rejection reason so that it appears in the developer console or\n * `window.onerror` handler.\n *\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n */\ngoog.define('goog.Promise.UNHANDLED_REJECTION_DELAY', 0);\n\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\ngoog.Promise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n\n\n/**\n * Entries in the callback chain. Each call to `then`,\n * `thenCatch`, or `thenAlways` creates an entry containing the\n * functions that may be invoked once the Promise is settled.\n *\n * @private @final @struct @constructor\n */\ngoog.Promise.CallbackEntry_ = function() {\n  /** @type {?goog.Promise} */\n  this.child = null;\n  /** @type {Function} */\n  this.onFulfilled = null;\n  /** @type {Function} */\n  this.onRejected = null;\n  /** @type {?} */\n  this.context = null;\n  /** @type {?goog.Promise.CallbackEntry_} */\n  this.next = null;\n\n  /**\n   * A boolean value to indicate this is a \"thenAlways\" callback entry.\n   * Unlike a normal \"then/thenVoid\" a \"thenAlways doesn't participate\n   * in \"cancel\" considerations but is simply an observer and requires\n   * special handling.\n   * @type {boolean}\n   */\n  this.always = false;\n};\n\n\n/** clear the object prior to reuse */\ngoog.Promise.CallbackEntry_.prototype.reset = function() {\n  this.child = null;\n  this.onFulfilled = null;\n  this.onRejected = null;\n  this.context = null;\n  this.always = false;\n};\n\n\n/**\n * @define {number} The number of currently unused objects to keep around for\n *    reuse.\n */\ngoog.define('goog.Promise.DEFAULT_MAX_UNUSED', 100);\n\n\n/** @const @private {goog.async.FreeList<!goog.Promise.CallbackEntry_>} */\ngoog.Promise.freelist_ = new goog.async.FreeList(\n    function() { return new goog.Promise.CallbackEntry_(); },\n    function(item) { item.reset(); }, goog.Promise.DEFAULT_MAX_UNUSED);\n\n\n/**\n * @param {Function} onFulfilled\n * @param {Function} onRejected\n * @param {?} context\n * @return {!goog.Promise.CallbackEntry_}\n * @private\n */\ngoog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {\n  var entry = goog.Promise.freelist_.get();\n  entry.onFulfilled = onFulfilled;\n  entry.onRejected = onRejected;\n  entry.context = context;\n  return entry;\n};\n\n\n/**\n * @param {!goog.Promise.CallbackEntry_} entry\n * @private\n */\ngoog.Promise.returnEntry_ = function(entry) {\n  goog.Promise.freelist_.put(entry);\n};\n\n\n// NOTE: this is the same template expression as is used for\n// goog.IThenable.prototype.then\n\n\n/**\n * @param {VALUE=} opt_value\n * @return {RESULT} A new Promise that is immediately resolved\n *     with the given value. If the input value is already a goog.Promise, it\n *     will be returned immediately without creating a new instance.\n * @template VALUE\n * @template RESULT := type('goog.Promise',\n *     cond(isUnknown(VALUE), unknown(),\n *       mapunion(VALUE, (V) =>\n *         cond(isTemplatized(V) && sub(rawTypeOf(V), 'IThenable'),\n *           templateTypeOf(V, 0),\n *           cond(sub(V, 'Thenable'),\n *              unknown(),\n *              V)))))\n * =:\n */\ngoog.Promise.resolve = function(opt_value) {\n  if (opt_value instanceof goog.Promise) {\n    // Avoid creating a new object if we already have a promise object\n    // of the correct type.\n    return opt_value;\n  }\n\n  // Passing goog.nullFunction will cause the constructor to take an optimized\n  // path that skips calling the resolver function.\n  var promise = new goog.Promise(goog.nullFunction);\n  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);\n  return promise;\n};\n\n\n/**\n * @param {*=} opt_reason\n * @return {!goog.Promise} A new Promise that is immediately rejected with the\n *     given reason.\n */\ngoog.Promise.reject = function(opt_reason) {\n  return new goog.Promise(function(resolve, reject) { reject(opt_reason); });\n};\n\n\n/**\n * This is identical to\n * {@code goog.Promise.resolve(value).then(onFulfilled, onRejected)}, but it\n * avoids creating an unnecessary wrapper Promise when `value` is already\n * thenable.\n *\n * @param {?(goog.Thenable<TYPE>|Thenable|TYPE)} value\n * @param {function(TYPE): ?} onFulfilled\n * @param {function(*): *} onRejected\n * @template TYPE\n * @private\n */\ngoog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {\n  var isThenable =\n      goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);\n  if (!isThenable) {\n    goog.async.run(goog.partial(onFulfilled, value));\n  }\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to settle immediately after it\n *     settles.\n * @template TYPE\n */\ngoog.Promise.race = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    if (!promises.length) {\n      resolve(undefined);\n    }\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(promise, resolve, reject);\n    }\n  });\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<!Array<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected with the first rejection reason\n *     immediately after it is rejected.\n * @template TYPE\n */\ngoog.Promise.all = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toFulfill = promises.length;\n    var values = [];\n\n    if (!toFulfill) {\n      resolve(values);\n      return;\n    }\n\n    var onFulfill = function(index, value) {\n      toFulfill--;\n      values[index] = value;\n      if (toFulfill == 0) {\n        resolve(values);\n      }\n    };\n\n    var onReject = function(reason) { reject(reason); };\n\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);\n    }\n  });\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<!Array<{\n *     fulfilled: boolean,\n *     value: (TYPE|undefined),\n *     reason: (*|undefined)}>>} A Promise that resolves with a list of\n *         result objects once all input Promises (or Promise-like) have\n *         settled. Each result object contains a 'fulfilled' boolean indicating\n *         whether an input Promise was fulfilled or rejected. For fulfilled\n *         Promises, the resulting value is stored in the 'value' field. For\n *         rejected Promises, the rejection reason is stored in the 'reason'\n *         field.\n * @template TYPE\n */\ngoog.Promise.allSettled = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toSettle = promises.length;\n    var results = [];\n\n    if (!toSettle) {\n      resolve(results);\n      return;\n    }\n\n    var onSettled = function(index, fulfilled, result) {\n      toSettle--;\n      results[index] = fulfilled ? {fulfilled: true, value: result} :\n                                   {fulfilled: false, reason: result};\n      if (toSettle == 0) {\n        resolve(results);\n      }\n    };\n\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(\n          promise, goog.partial(onSettled, i, true /* fulfilled */),\n          goog.partial(onSettled, i, false /* fulfilled */));\n    }\n  });\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<TYPE>} A Promise that receives the value of the first\n *     input to be fulfilled, or is rejected with a list of every rejection\n *     reason if all inputs are rejected.\n * @template TYPE\n */\ngoog.Promise.firstFulfilled = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toReject = promises.length;\n    var reasons = [];\n\n    if (!toReject) {\n      resolve(undefined);\n      return;\n    }\n\n    var onFulfill = function(value) { resolve(value); };\n\n    var onReject = function(index, reason) {\n      toReject--;\n      reasons[index] = reason;\n      if (toReject == 0) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));\n    }\n  });\n};\n\n\n/**\n * @return {!goog.promise.Resolver<TYPE>} Resolver wrapping the promise and its\n *     resolve / reject functions. Resolving or rejecting the resolver\n *     resolves or rejects the promise.\n * @template TYPE\n */\ngoog.Promise.withResolver = function() {\n  var resolve, reject;\n  var promise = new goog.Promise(function(rs, rj) {\n    resolve = rs;\n    reject = rj;\n  });\n  return new goog.Promise.Resolver_(promise, resolve, reject);\n};\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the `onFulfilled` callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the `onRejected` callback will be invoked\n * with the rejection reason as argument, and the child Promise will be resolved\n * with the return value or rejected with the thrown value of the callback.\n *\n * @override\n */\ngoog.Promise.prototype.then = function(\n    opt_onFulfilled, opt_onRejected, opt_context) {\n\n  if (opt_onFulfilled != null) {\n    goog.asserts.assertFunction(\n        opt_onFulfilled, 'opt_onFulfilled should be a function.');\n  }\n  if (opt_onRejected != null) {\n    goog.asserts.assertFunction(\n        opt_onRejected,\n        'opt_onRejected should be a function. Did you pass opt_context ' +\n            'as the second argument instead of the third?');\n  }\n\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('then'));\n  }\n\n  return this.addChildPromise_(\n      goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null,\n      goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);\n};\ngoog.Thenable.addImplementation(goog.Promise);\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise without\n * returning a child Promise (unlike \"then\").\n *\n * If the Promise is fulfilled, the `onFulfilled` callback will be invoked\n * with the fulfillment value as argument.\n *\n * If the Promise is rejected, the `onRejected` callback will be invoked\n * with the rejection reason as argument.\n *\n * @param {?(function(this:THIS, TYPE):?)=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fulfilled.\n * @param {?(function(this:THIS, *): *)=} opt_onRejected A function that will\n *     be invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @package\n * @template THIS\n */\ngoog.Promise.prototype.thenVoid = function(\n    opt_onFulfilled, opt_onRejected, opt_context) {\n\n  if (opt_onFulfilled != null) {\n    goog.asserts.assertFunction(\n        opt_onFulfilled, 'opt_onFulfilled should be a function.');\n  }\n  if (opt_onRejected != null) {\n    goog.asserts.assertFunction(\n        opt_onRejected,\n        'opt_onRejected should be a function. Did you pass opt_context ' +\n            'as the second argument instead of the third?');\n  }\n\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('then'));\n  }\n\n  // Note: no default rejection handler is provided here as we need to\n  // distinguish unhandled rejections.\n  this.addCallbackEntry_(\n      goog.Promise.getCallbackEntry_(\n          opt_onFulfilled || goog.nullFunction, opt_onRejected || null,\n          opt_context));\n};\n\n\n/**\n * Adds a callback that will be invoked when the Promise is settled (fulfilled\n * or rejected). The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with `thenAlways` will be\n * executed in the same order with other calls to `then`,\n * `thenAlways`, or `thenCatch`.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with `thenAlways`. A Promise that has\n * a cleanup handler added with `thenAlways` will be canceled if all of\n * its children created by `then` (or `thenCatch`) are canceled.\n * Additionally, since any rejections are not passed to the callback, it does\n * not stop the unhandled rejection handler from running.\n *\n * @param {function(this:THIS): void} onSettled A function that will be invoked\n *     when the Promise is settled (fulfilled or rejected).\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!goog.Promise<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\ngoog.Promise.prototype.thenAlways = function(onSettled, opt_context) {\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('thenAlways'));\n  }\n\n  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);\n  entry.always = true;\n  this.addCallbackEntry_(entry);\n  return this;\n};\n\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!goog.Promise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\ngoog.Promise.prototype.thenCatch = function(onRejected, opt_context) {\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('thenCatch'));\n  }\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\ngoog.Promise.prototype.cancel = function(opt_message) {\n  if (this.state_ == goog.Promise.State_.PENDING) {\n    goog.async.run(function() {\n      var err = new goog.Promise.CancellationError(opt_message);\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\ngoog.Promise.prototype.cancelInternal_ = function(err) {\n  if (this.state_ == goog.Promise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n      this.parent_ = null;\n    } else {\n      this.resolve_(goog.Promise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!goog.Promise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\ngoog.Promise.prototype.cancelChild_ = function(childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childEntry = null;\n  var beforeChildEntry = null;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var entry = this.callbackEntries_; entry; entry = entry.next) {\n    if (!entry.always) {\n      childCount++;\n      if (entry.child == childPromise) {\n        childEntry = entry;\n      }\n      if (childEntry && childCount > 1) {\n        break;\n      }\n    }\n    if (!childEntry) {\n      beforeChildEntry = entry;\n    }\n  }\n\n  // Can a child entry be missing?\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childEntry) {\n    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {\n      this.cancelInternal_(err);\n    } else {\n      if (beforeChildEntry) {\n        this.removeEntryAfter_(beforeChildEntry);\n      } else {\n        this.popEntry_();\n      }\n\n      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been settled.\n *\n * @param {goog.Promise.CallbackEntry_} callbackEntry Record containing\n *     `onFulfilled` and `onRejected` callbacks to execute after\n *     the Promise is settled.\n * @private\n */\ngoog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {\n  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED ||\n                            this.state_ == goog.Promise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  this.queueEntry_(callbackEntry);\n};\n\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the `onFulfilled` or `onRejected` callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|goog.Promise<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fulfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!goog.Promise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\ngoog.Promise.prototype.addChildPromise_ = function(\n    onFulfilled, onRejected, opt_context) {\n\n  /** @type {goog.Promise.CallbackEntry_} */\n  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);\n\n  callbackEntry.child = new goog.Promise(function(resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function(value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function(reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!goog.isDef(result) &&\n            reason instanceof goog.Promise.CancellationError) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(callbackEntry);\n  return callbackEntry.child;\n};\n\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\ngoog.Promise.prototype.unblockAndFulfill_ = function(value) {\n  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);\n  this.state_ = goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.FULFILLED, value);\n};\n\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\ngoog.Promise.prototype.unblockAndReject_ = function(reason) {\n  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);\n  this.state_ = goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.REJECTED, reason);\n};\n\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be settled with the same state and result as the Thenable once it is itself\n * settled.\n *\n * If the given result is not a Thenable, the Promise will be settled (fulfilled\n * or rejected) with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {goog.Promise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\ngoog.Promise.prototype.resolve_ = function(state, x) {\n  if (this.state_ != goog.Promise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = goog.Promise.State_.REJECTED;\n    x = new TypeError('Promise cannot resolve to itself');\n  }\n\n  this.state_ = goog.Promise.State_.BLOCKED;\n  var isThenable = goog.Promise.maybeThen_(\n      x, this.unblockAndFulfill_, this.unblockAndReject_, this);\n  if (isThenable) {\n    return;\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  // Since we can no longer be canceled, remove link to parent, so that the\n  // child promise does not keep the parent promise alive.\n  this.parent_ = null;\n  this.scheduleCallbacks_();\n\n  if (state == goog.Promise.State_.REJECTED &&\n      !(x instanceof goog.Promise.CancellationError)) {\n    goog.Promise.addUnhandledRejection_(this, x);\n  }\n};\n\n\n/**\n * Invokes the \"then\" method of an input value if that value is a Thenable. This\n * is a no-op if the value is not thenable.\n *\n * @param {?} value A potentially thenable value.\n * @param {!Function} onFulfilled\n * @param {!Function} onRejected\n * @param {?} context\n * @return {boolean} Whether the input value was thenable.\n * @private\n */\ngoog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {\n  if (value instanceof goog.Promise) {\n    value.thenVoid(onFulfilled, onRejected, context);\n    return true;\n  } else if (goog.Thenable.isImplementedBy(value)) {\n    value = /** @type {!goog.Thenable} */ (value);\n    value.then(onFulfilled, onRejected, context);\n    return true;\n  } else if (goog.isObject(value)) {\n    try {\n      var then = value['then'];\n      if (goog.isFunction(then)) {\n        goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);\n        return true;\n      }\n    } catch (e) {\n      onRejected.call(context, e);\n      return true;\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Attempts to call the `then` method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the `then` method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a `then` method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The `then` method of the Thenable object.\n * @param {!Function} onFulfilled\n * @param {!Function} onRejected\n * @param {*} context\n * @private\n */\ngoog.Promise.tryThen_ = function(\n    thenable, then, onFulfilled, onRejected, context) {\n\n  var called = false;\n  var resolve = function(value) {\n    if (!called) {\n      called = true;\n      onFulfilled.call(context, value);\n    }\n  };\n\n  var reject = function(reason) {\n    if (!called) {\n      called = true;\n      onRejected.call(context, reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n\n/**\n * Executes the pending callbacks of a settled Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If `startExecution_` is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\ngoog.Promise.prototype.scheduleCallbacks_ = function() {\n  if (!this.executing_) {\n    this.executing_ = true;\n    goog.async.run(this.executeCallbacks_, this);\n  }\n};\n\n\n/**\n * @return {boolean} Whether there are any pending callbacks queued.\n * @private\n */\ngoog.Promise.prototype.hasEntry_ = function() {\n  return !!this.callbackEntries_;\n};\n\n\n/**\n * @param {goog.Promise.CallbackEntry_} entry\n * @private\n */\ngoog.Promise.prototype.queueEntry_ = function(entry) {\n  goog.asserts.assert(entry.onFulfilled != null);\n\n  if (this.callbackEntriesTail_) {\n    this.callbackEntriesTail_.next = entry;\n    this.callbackEntriesTail_ = entry;\n  } else {\n    // It the work queue was empty set the head too.\n    this.callbackEntries_ = entry;\n    this.callbackEntriesTail_ = entry;\n  }\n};\n\n\n/**\n * @return {goog.Promise.CallbackEntry_} entry\n * @private\n */\ngoog.Promise.prototype.popEntry_ = function() {\n  var entry = null;\n  if (this.callbackEntries_) {\n    entry = this.callbackEntries_;\n    this.callbackEntries_ = entry.next;\n    entry.next = null;\n  }\n  // It the work queue is empty clear the tail too.\n  if (!this.callbackEntries_) {\n    this.callbackEntriesTail_ = null;\n  }\n\n  if (entry != null) {\n    goog.asserts.assert(entry.onFulfilled != null);\n  }\n  return entry;\n};\n\n\n/**\n * @param {goog.Promise.CallbackEntry_} previous\n * @private\n */\ngoog.Promise.prototype.removeEntryAfter_ = function(previous) {\n  goog.asserts.assert(this.callbackEntries_);\n  goog.asserts.assert(previous != null);\n  // If the last entry is being removed, update the tail\n  if (previous.next == this.callbackEntriesTail_) {\n    this.callbackEntriesTail_ = previous;\n  }\n\n  previous.next = previous.next.next;\n};\n\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\ngoog.Promise.prototype.executeCallbacks_ = function() {\n  var entry = null;\n  while (entry = this.popEntry_()) {\n    if (goog.Promise.LONG_STACK_TRACES) {\n      this.currentStep_++;\n    }\n    this.executeCallback_(entry, this.state_, this.result_);\n  }\n  this.executing_ = false;\n};\n\n\n/**\n * Executes a pending callback for this Promise. Invokes an `onFulfilled`\n * or `onRejected` callback based on the settled state of the Promise.\n *\n * @param {!goog.Promise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {goog.Promise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The settled result of the Promise.\n * @private\n */\ngoog.Promise.prototype.executeCallback_ = function(\n    callbackEntry, state, result) {\n  // Cancel an unhandled rejection if the then/thenVoid call had an onRejected.\n  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected &&\n      !callbackEntry.always) {\n    this.removeUnhandledRejection_();\n  }\n\n  if (callbackEntry.child) {\n    // When the parent is settled, the child no longer needs to hold on to it,\n    // as the parent can no longer be canceled.\n    callbackEntry.child.parent_ = null;\n    goog.Promise.invokeCallback_(callbackEntry, state, result);\n  } else {\n    // Callbacks created with thenAlways or thenVoid do not have the rejection\n    // handling code normally set up in the child Promise.\n    try {\n      callbackEntry.always ?\n          callbackEntry.onFulfilled.call(callbackEntry.context) :\n          goog.Promise.invokeCallback_(callbackEntry, state, result);\n    } catch (err) {\n      goog.Promise.handleRejection_.call(null, err);\n    }\n  }\n  goog.Promise.returnEntry_(callbackEntry);\n};\n\n\n/**\n * Executes the onFulfilled or onRejected callback for a callbackEntry.\n *\n * @param {!goog.Promise.CallbackEntry_} callbackEntry\n * @param {goog.Promise.State_} state\n * @param {*} result\n * @private\n */\ngoog.Promise.invokeCallback_ = function(callbackEntry, state, result) {\n  if (state == goog.Promise.State_.FULFILLED) {\n    callbackEntry.onFulfilled.call(callbackEntry.context, result);\n  } else if (callbackEntry.onRejected) {\n    callbackEntry.onRejected.call(callbackEntry.context, result);\n  }\n};\n\n\n/**\n * Records a stack trace entry for functions that call `then` or the\n * Promise constructor. May be disabled by unsetting `LONG_STACK_TRACES`.\n *\n * @param {!Error} err An Error object created by the calling function for\n *     providing a stack trace.\n * @private\n */\ngoog.Promise.prototype.addStackTrace_ = function(err) {\n  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {\n    // Extract the third line of the stack trace, which is the entry for the\n    // user function that called into Promise code.\n    var trace = err.stack.split('\\n', 4)[3];\n    var message = err.message;\n\n    // Pad the message to align the traces.\n    message += Array(11 - message.length).join(' ');\n    this.stack_.push(message + trace);\n  }\n};\n\n\n/**\n * Adds extra stack trace information to an exception for the list of\n * asynchronous `then` calls that have been run for this Promise. Stack\n * trace information is recorded in {@see #addStackTrace_}, and appended to\n * rethrown errors when `LONG_STACK_TRACES` is enabled.\n *\n * @param {*} err An unhandled exception captured during callback execution.\n * @private\n */\ngoog.Promise.prototype.appendLongStack_ = function(err) {\n  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) &&\n      this.stack_.length) {\n    var longTrace = ['Promise trace:'];\n\n    for (var promise = this; promise; promise = promise.parent_) {\n      for (var i = this.currentStep_; i >= 0; i--) {\n        longTrace.push(promise.stack_[i]);\n      }\n      longTrace.push(\n          'Value: ' +\n          '[' + (promise.state_ == goog.Promise.State_.REJECTED ? 'REJECTED' :\n                                                                  'FULFILLED') +\n          '] ' +\n          '<' + String(promise.result_) + '>');\n    }\n    err.stack += '\\n\\n' + longTrace.join('\\n');\n  }\n};\n\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\ngoog.Promise.prototype.removeUnhandledRejection_ = function() {\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (var p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      goog.global.clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {\n    for (var p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n\n/**\n * Marks this rejected Promise as unhandled. If no `onRejected` callback\n * is called for this Promise before the `UNHANDLED_REJECTION_DELAY`\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!goog.Promise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\ngoog.Promise.addUnhandledRejection_ = function(promise, reason) {\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {\n      promise.appendLongStack_(reason);\n      goog.Promise.handleRejection_.call(null, reason);\n    }, goog.Promise.UNHANDLED_REJECTION_DELAY);\n\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {\n    promise.hadUnhandledRejection_ = true;\n    goog.async.run(function() {\n      if (promise.hadUnhandledRejection_) {\n        promise.appendLongStack_(reason);\n        goog.Promise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no `onRejected` callbacks registered yet.\n * @type {function(*)}\n * @private\n */\ngoog.Promise.handleRejection_ = goog.async.throwException;\n\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * `onRejected` callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a `window.onerror` handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to `goog.async.throwException`.\n */\ngoog.Promise.setUnhandledRejectionHandler = function(handler) {\n  goog.Promise.handleRejection_ = handler;\n};\n\n\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.Promise.CancellationError = function(opt_message) {\n  goog.Promise.CancellationError.base(this, 'constructor', opt_message);\n};\ngoog.inherits(goog.Promise.CancellationError, goog.debug.Error);\n\n\n/** @override */\ngoog.Promise.CancellationError.prototype.name = 'cancel';\n\n\n\n/**\n * Internal implementation of the resolver interface.\n *\n * @param {!goog.Promise<TYPE>} promise\n * @param {function((TYPE|goog.Promise<TYPE>|Thenable)=)} resolve\n * @param {function(*=): void} reject\n * @implements {goog.promise.Resolver<TYPE>}\n * @final @struct\n * @constructor\n * @private\n * @template TYPE\n */\ngoog.Promise.Resolver_ = function(promise, resolve, reject) {\n  /** @const */\n  this.promise = promise;\n\n  /** @const */\n  this.resolve = resolve;\n\n  /** @const */\n  this.reject = reject;\n};\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Implements the disposable interface. The dispose method is used\n * to clean up references and resources.\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.Disposable');\ngoog.provide('goog.dispose');\ngoog.provide('goog.disposeAll');\n\ngoog.require('goog.disposable.IDisposable');\n\n\n\n/**\n * Class that provides the basic implementation for disposable objects. If your\n * class holds one or more references to COM objects, DOM nodes, or other\n * disposable objects, it should extend this class or implement the disposable\n * interface (defined in goog.disposable.IDisposable).\n * @constructor\n * @implements {goog.disposable.IDisposable}\n */\ngoog.Disposable = function() {\n  /**\n   * If monitoring the goog.Disposable instances is enabled, stores the creation\n   * stack trace of the Disposable instance.\n   * @type {string|undefined}\n   */\n  this.creationStack;\n\n  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {\n      this.creationStack = new Error().stack;\n    }\n    goog.Disposable.instances_[goog.getUid(this)] = this;\n  }\n  // Support sealing\n  this.disposed_ = this.disposed_;\n  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;\n};\n\n\n/**\n * @enum {number} Different monitoring modes for Disposable.\n */\ngoog.Disposable.MonitoringMode = {\n  /**\n   * No monitoring.\n   */\n  OFF: 0,\n  /**\n   * Creating and disposing the goog.Disposable instances is monitored. All\n   * disposable objects need to call the `goog.Disposable` base\n   * constructor. The PERMANENT mode must be switched on before creating any\n   * goog.Disposable instances.\n   */\n  PERMANENT: 1,\n  /**\n   * INTERACTIVE mode can be switched on and off on the fly without producing\n   * errors. It also doesn't warn if the disposable objects don't call the\n   * `goog.Disposable` base constructor.\n   */\n  INTERACTIVE: 2\n};\n\n\n/**\n * @define {number} The monitoring mode of the goog.Disposable\n *     instances. Default is OFF. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.define('goog.Disposable.MONITORING_MODE', 0);\n\n\n/**\n * @define {boolean} Whether to attach creation stack to each created disposable\n *     instance; This is only relevant for when MonitoringMode != OFF.\n */\ngoog.define('goog.Disposable.INCLUDE_STACK_ON_CREATION', true);\n\n\n/**\n * Maps the unique ID of every undisposed `goog.Disposable` object to\n * the object itself.\n * @type {!Object<number, !goog.Disposable>}\n * @private\n */\ngoog.Disposable.instances_ = {};\n\n\n/**\n * @return {!Array<!goog.Disposable>} All `goog.Disposable` objects that\n *     haven't been disposed of.\n */\ngoog.Disposable.getUndisposedObjects = function() {\n  var ret = [];\n  for (var id in goog.Disposable.instances_) {\n    if (goog.Disposable.instances_.hasOwnProperty(id)) {\n      ret.push(goog.Disposable.instances_[Number(id)]);\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Clears the registry of undisposed objects but doesn't dispose of them.\n */\ngoog.Disposable.clearUndisposedObjects = function() {\n  goog.Disposable.instances_ = {};\n};\n\n\n/**\n * Whether the object has been disposed of.\n * @type {boolean}\n * @private\n */\ngoog.Disposable.prototype.disposed_ = false;\n\n\n/**\n * Callbacks to invoke when this object is disposed.\n * @type {Array<!Function>}\n * @private\n */\ngoog.Disposable.prototype.onDisposeCallbacks_;\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @override\n */\ngoog.Disposable.prototype.isDisposed = function() {\n  return this.disposed_;\n};\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @deprecated Use {@link #isDisposed} instead.\n */\ngoog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;\n\n\n/**\n * Disposes of the object. If the object hasn't already been disposed of, calls\n * {@link #disposeInternal}. Classes that extend `goog.Disposable` should\n * override {@link #disposeInternal} in order to delete references to COM\n * objects, DOM nodes, and other disposable objects. Reentrant.\n *\n * @return {void} Nothing.\n * @override\n */\ngoog.Disposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    // Set disposed_ to true first, in case during the chain of disposal this\n    // gets disposed recursively.\n    this.disposed_ = true;\n    this.disposeInternal();\n    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n      var uid = goog.getUid(this);\n      if (goog.Disposable.MONITORING_MODE ==\n              goog.Disposable.MonitoringMode.PERMANENT &&\n          !goog.Disposable.instances_.hasOwnProperty(uid)) {\n        throw new Error(\n            this + ' did not call the goog.Disposable base ' +\n            'constructor or was disposed of after a clearUndisposedObjects ' +\n            'call');\n      }\n      if (goog.Disposable.MONITORING_MODE !=\n              goog.Disposable.MonitoringMode.OFF &&\n          this.onDisposeCallbacks_ && this.onDisposeCallbacks_.length > 0) {\n        throw new Error(\n            this + ' did not empty its onDisposeCallbacks queue. This ' +\n            'probably means it overrode dispose() or disposeInternal() ' +\n            'without calling the superclass\\' method.');\n      }\n      delete goog.Disposable.instances_[uid];\n    }\n  }\n};\n\n\n/**\n * Associates a disposable object with this object so that they will be disposed\n * together.\n * @param {goog.disposable.IDisposable} disposable that will be disposed when\n *     this object is disposed.\n */\ngoog.Disposable.prototype.registerDisposable = function(disposable) {\n  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));\n};\n\n\n/**\n * Invokes a callback function when this object is disposed. Callbacks are\n * invoked in the order in which they were added. If a callback is added to\n * an already disposed Disposable, it will be called immediately.\n * @param {function(this:T):?} callback The callback function.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @template T\n */\ngoog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {\n  if (this.disposed_) {\n    goog.isDef(opt_scope) ? callback.call(opt_scope) : callback();\n    return;\n  }\n  if (!this.onDisposeCallbacks_) {\n    this.onDisposeCallbacks_ = [];\n  }\n\n  this.onDisposeCallbacks_.push(\n      goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);\n};\n\n\n/**\n * Deletes or nulls out any references to COM objects, DOM nodes, or other\n * disposable objects. Classes that extend `goog.Disposable` should\n * override this method.\n * Not reentrant. To avoid calling it twice, it must only be called from the\n * subclass' `disposeInternal` method. Everywhere else the public\n * `dispose` method must be used.\n * For example:\n * <pre>\n *   mypackage.MyClass = function() {\n *     mypackage.MyClass.base(this, 'constructor');\n *     // Constructor logic specific to MyClass.\n *     ...\n *   };\n *   goog.inherits(mypackage.MyClass, goog.Disposable);\n *\n *   mypackage.MyClass.prototype.disposeInternal = function() {\n *     // Dispose logic specific to MyClass.\n *     ...\n *     // Call superclass's disposeInternal at the end of the subclass's, like\n *     // in C++, to avoid hard-to-catch issues.\n *     mypackage.MyClass.base(this, 'disposeInternal');\n *   };\n * </pre>\n * @protected\n */\ngoog.Disposable.prototype.disposeInternal = function() {\n  if (this.onDisposeCallbacks_) {\n    while (this.onDisposeCallbacks_.length) {\n      this.onDisposeCallbacks_.shift()();\n    }\n  }\n};\n\n\n/**\n * Returns True if we can verify the object is disposed.\n * Calls `isDisposed` on the argument if it supports it.  If obj\n * is not an object with an isDisposed() method, return false.\n * @param {*} obj The object to investigate.\n * @return {boolean} True if we can verify the object is disposed.\n */\ngoog.Disposable.isDisposed = function(obj) {\n  if (obj && typeof obj.isDisposed == 'function') {\n    return obj.isDisposed();\n  }\n  return false;\n};\n\n\n/**\n * Calls `dispose` on the argument if it supports it. If obj is not an\n *     object with a dispose() method, this is a no-op.\n * @param {*} obj The object to dispose of.\n */\ngoog.dispose = function(obj) {\n  if (obj && typeof obj.dispose == 'function') {\n    obj.dispose();\n  }\n};\n\n\n/**\n * Calls `dispose` on each member of the list that supports it. (If the\n * member is an ArrayLike, then `goog.disposeAll()` will be called\n * recursively on each of its members.) If the member is not an object with a\n * `dispose()` method, then it is ignored.\n * @param {...*} var_args The list.\n */\ngoog.disposeAll = function(var_args) {\n  for (var i = 0, len = arguments.length; i < len; ++i) {\n    var disposable = arguments[i];\n    if (goog.isArrayLike(disposable)) {\n      goog.disposeAll.apply(null, disposable);\n    } else {\n      goog.dispose(disposable);\n    }\n  }\n};\n","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Useful compiler idioms.\n *\n * @author johnlenz@google.com (John Lenz)\n */\n\ngoog.provide('goog.reflect');\n\n\n/**\n * Syntax for object literal casts.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an object literal whose keys need to have the same names\n * as the properties of some class even after they are renamed by the compiler.\n *\n * @param {!Function} type Type to cast to.\n * @param {Object} object Object literal to cast.\n * @return {Object} The object literal.\n */\ngoog.reflect.object = function(type, object) {\n  return object;\n};\n\n/**\n * Syntax for renaming property strings.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an need to access a property as a string, but want\n * to also have the property renamed by the compiler. In contrast to\n * goog.reflect.object, this method takes an instance of an object.\n *\n * Properties must be simple names (not qualified names).\n *\n * @param {string} prop Name of the property\n * @param {!Object} object Instance of the object whose type will be used\n *     for renaming\n * @return {string} The renamed property.\n */\ngoog.reflect.objectProperty = function(prop, object) {\n  return prop;\n};\n\n/**\n * To assert to the compiler that an operation is needed when it would\n * otherwise be stripped. For example:\n * <code>\n *     // Force a layout\n *     goog.reflect.sinkValue(dialog.offsetHeight);\n * </code>\n * @param {T} x\n * @return {T}\n * @template T\n */\ngoog.reflect.sinkValue = function(x) {\n  goog.reflect.sinkValue[' '](x);\n  return x;\n};\n\n\n/**\n * The compiler should optimize this function away iff no one ever uses\n * goog.reflect.sinkValue.\n */\ngoog.reflect.sinkValue[' '] = goog.nullFunction;\n\n\n/**\n * Check if a property can be accessed without throwing an exception.\n * @param {Object} obj The owner of the property.\n * @param {string} prop The property name.\n * @return {boolean} Whether the property is accessible. Will also return true\n *     if obj is null.\n */\ngoog.reflect.canAccessProperty = function(obj, prop) {\n\n  try {\n    goog.reflect.sinkValue(obj[prop]);\n    return true;\n  } catch (e) {\n  }\n  return false;\n};\n\n\n/**\n * Retrieves a value from a cache given a key. The compiler provides special\n * consideration for this call such that it is generally considered side-effect\n * free. However, if the `opt_keyFn` or `valueFn` have side-effects\n * then the entire call is considered to have side-effects.\n *\n * Conventionally storing the value on the cache would be considered a\n * side-effect and preclude unused calls from being pruned, ie. even if\n * the value was never used, it would still always be stored in the cache.\n *\n * Providing a side-effect free `valueFn` and `opt_keyFn`\n * allows unused calls to `goog.reflect.cache` to be pruned.\n *\n * @param {!Object<K, V>} cacheObj The object that contains the cached values.\n * @param {?} key The key to lookup in the cache. If it is not string or number\n *     then a `opt_keyFn` should be provided. The key is also used as the\n *     parameter to the `valueFn`.\n * @param {function(?):V} valueFn The value provider to use to calculate the\n *     value to store in the cache. This function should be side-effect free\n *     to take advantage of the optimization.\n * @param {function(?):K=} opt_keyFn The key provider to determine the cache\n *     map key. This should be used if the given key is not a string or number.\n *     If not provided then the given key is used. This function should be\n *     side-effect free to take advantage of the optimization.\n * @return {V} The cached or calculated value.\n * @template K\n * @template V\n */\ngoog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {\n  var storedKey = opt_keyFn ? opt_keyFn(key) : key;\n\n  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {\n    return cacheObj[storedKey];\n  }\n\n  return (cacheObj[storedKey] = valueFn(key));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Rendering engine detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For information on the browser brand (such as Safari versus Chrome), see\n * goog.userAgent.product.\n * @author arv@google.com (Erik Arvidsson)\n * @see ../demos/useragent.html\n */\n\ngoog.provide('goog.userAgent');\n\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.reflect');\ngoog.require('goog.string');\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is IE.\n */\ngoog.define('goog.userAgent.ASSUME_IE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is EDGE.\n */\ngoog.define('goog.userAgent.ASSUME_EDGE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is GECKO.\n */\ngoog.define('goog.userAgent.ASSUME_GECKO', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is WEBKIT.\n */\ngoog.define('goog.userAgent.ASSUME_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is a\n *     mobile device running WebKit e.g. iPhone or Android.\n */\ngoog.define('goog.userAgent.ASSUME_MOBILE_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is OPERA.\n */\ngoog.define('goog.userAgent.ASSUME_OPERA', false);\n\n\n/**\n * @define {boolean} Whether the\n *     `goog.userAgent.isVersionOrHigher`\n *     function will return true for any version.\n */\ngoog.define('goog.userAgent.ASSUME_ANY_VERSION', false);\n\n\n/**\n * Whether we know the browser engine at compile-time.\n * @type {boolean}\n * @private\n */\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE ||\n    goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO ||\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT ||\n    goog.userAgent.ASSUME_OPERA;\n\n\n/**\n * Returns the userAgent string for the current browser.\n *\n * @return {string} The userAgent string.\n */\ngoog.userAgent.getUserAgentString = function() {\n  return goog.labs.userAgent.util.getUserAgent();\n};\n\n\n/**\n * @return {?Navigator} The native navigator object.\n */\ngoog.userAgent.getNavigatorTyped = function() {\n  // Need a local navigator reference instead of using the global one,\n  // to avoid the rare case where they reference different objects.\n  // (in a WorkerPool, for example).\n  return goog.global['navigator'] || null;\n};\n\n\n/**\n * TODO(nnaze): Change type to \"Navigator\" and update compilation targets.\n * @return {?Object} The native navigator object.\n */\ngoog.userAgent.getNavigator = function() {\n  return goog.userAgent.getNavigatorTyped();\n};\n\n\n/**\n * Whether the user agent is Opera.\n * @type {boolean}\n */\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_OPERA :\n    goog.labs.userAgent.browser.isOpera();\n\n\n/**\n * Whether the user agent is Internet Explorer.\n * @type {boolean}\n */\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_IE :\n    goog.labs.userAgent.browser.isIE();\n\n\n/**\n * Whether the user agent is Microsoft Edge.\n * @type {boolean}\n */\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_EDGE :\n    goog.labs.userAgent.engine.isEdge();\n\n\n/**\n * Whether the user agent is MS Internet Explorer or MS Edge.\n * @type {boolean}\n */\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\n\n\n/**\n * Whether the user agent is Gecko. Gecko is the rendering engine used by\n * Mozilla, Firefox, and others.\n * @type {boolean}\n */\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_GECKO :\n    goog.labs.userAgent.engine.isGecko();\n\n\n/**\n * Whether the user agent is WebKit. WebKit is the rendering engine that\n * Safari, Android and others use.\n * @type {boolean}\n */\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT :\n    goog.labs.userAgent.engine.isWebKit();\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * This is a separate function so that the logic can be tested.\n *\n * TODO(nnaze): Investigate swapping in goog.labs.userAgent.device.isMobile().\n *\n * @return {boolean} Whether the user agent is running on a mobile device.\n * @private\n */\ngoog.userAgent.isMobile_ = function() {\n  return goog.userAgent.WEBKIT &&\n      goog.labs.userAgent.util.matchUserAgent('Mobile');\n};\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * TODO(nnaze): Consider deprecating MOBILE when labs.userAgent\n *   is promoted as the gecko/webkit logic is likely inaccurate.\n *\n * @type {boolean}\n */\ngoog.userAgent.MOBILE =\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\n\n\n/**\n * Used while transitioning code to use WEBKIT instead.\n * @type {boolean}\n * @deprecated Use {@link goog.userAgent.product.SAFARI} instead.\n * TODO(nicksantos): Delete this from goog.userAgent.\n */\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\n\n\n/**\n * @return {string} the platform (operating system) the user agent is running\n *     on. Default to empty string because navigator.platform may not be defined\n *     (on Rhino, for example).\n * @private\n */\ngoog.userAgent.determinePlatform_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return navigator && navigator.platform || '';\n};\n\n\n/**\n * The platform (operating system) the user agent is running on. Default to\n * empty string because navigator.platform may not be defined (on Rhino, for\n * example).\n * @type {string}\n */\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Macintosh operating\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_MAC', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Windows operating\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_WINDOWS', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Linux operating\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_LINUX', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a X11 windowing\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_X11', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on Android.\n */\ngoog.define('goog.userAgent.ASSUME_ANDROID', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPhone.\n */\ngoog.define('goog.userAgent.ASSUME_IPHONE', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPad.\n */\ngoog.define('goog.userAgent.ASSUME_IPAD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPod.\n */\ngoog.define('goog.userAgent.ASSUME_IPOD', false);\n\n\n/**\n * @type {boolean}\n * @private\n */\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC ||\n    goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX ||\n    goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID ||\n    goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n    goog.userAgent.ASSUME_IPOD;\n\n\n/**\n * Whether the user agent is running on a Macintosh operating system.\n * @type {boolean}\n */\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_MAC :\n    goog.labs.userAgent.platform.isMacintosh();\n\n\n/**\n * Whether the user agent is running on a Windows operating system.\n * @type {boolean}\n */\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_WINDOWS :\n    goog.labs.userAgent.platform.isWindows();\n\n\n/**\n * Whether the user agent is Linux per the legacy behavior of\n * goog.userAgent.LINUX, which considered ChromeOS to also be\n * Linux.\n * @return {boolean}\n * @private\n */\ngoog.userAgent.isLegacyLinux_ = function() {\n  return goog.labs.userAgent.platform.isLinux() ||\n      goog.labs.userAgent.platform.isChromeOS();\n};\n\n\n/**\n * Whether the user agent is running on a Linux operating system.\n *\n * Note that goog.userAgent.LINUX considers ChromeOS to be Linux,\n * while goog.labs.userAgent.platform considers ChromeOS and\n * Linux to be different OSes.\n *\n * @type {boolean}\n */\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_LINUX :\n    goog.userAgent.isLegacyLinux_();\n\n\n/**\n * @return {boolean} Whether the user agent is an X11 windowing system.\n * @private\n */\ngoog.userAgent.isX11_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return !!navigator &&\n      goog.string.contains(navigator['appVersion'] || '', 'X11');\n};\n\n\n/**\n * Whether the user agent is running on a X11 windowing system.\n * @type {boolean}\n */\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_X11 :\n    goog.userAgent.isX11_();\n\n\n/**\n * Whether the user agent is running on Android.\n * @type {boolean}\n */\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_ANDROID :\n    goog.labs.userAgent.platform.isAndroid();\n\n\n/**\n * Whether the user agent is running on an iPhone.\n * @type {boolean}\n */\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPHONE :\n    goog.labs.userAgent.platform.isIphone();\n\n\n/**\n * Whether the user agent is running on an iPad.\n * @type {boolean}\n */\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPAD :\n    goog.labs.userAgent.platform.isIpad();\n\n\n/**\n * Whether the user agent is running on an iPod.\n * @type {boolean}\n */\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPOD :\n    goog.labs.userAgent.platform.isIpod();\n\n\n/**\n * Whether the user agent is running on iOS.\n * @type {boolean}\n */\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n     goog.userAgent.ASSUME_IPOD) :\n    goog.labs.userAgent.platform.isIos();\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent.\n * @private\n */\ngoog.userAgent.determineVersion_ = function() {\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n  // version is a string rather than a number because it may contain 'b', 'a',\n  // and so on.\n  var version = '';\n  var arr = goog.userAgent.getVersionRegexResult_();\n  if (arr) {\n    version = arr ? arr[1] : '';\n  }\n\n  if (goog.userAgent.IE) {\n    // IE9 can be in document mode 9 but be reporting an inconsistent user agent\n    // version.  If it is identifying as a version lower than 9 we take the\n    // documentMode as the version instead.  IE8 has similar behavior.\n    // It is recommended to set the X-UA-Compatible header to ensure that IE9\n    // uses documentMode 9.\n    var docMode = goog.userAgent.getDocumentMode_();\n    if (docMode != null && docMode > parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n\n  return version;\n};\n\n\n/**\n * @return {?Array|undefined} The version regex matches from parsing the user\n *     agent string. These regex statements must be executed inline so they can\n *     be compiled out by the closure compiler with the rest of the useragent\n *     detection logic when ASSUME_* is specified.\n * @private\n */\ngoog.userAgent.getVersionRegexResult_ = function() {\n  var userAgent = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv\\:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    // WebKit/125.4\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    // If none of the above browsers were detected but the browser is Opera, the\n    // only string that is of interest is 'Version/<number>'.\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n  return undefined;\n};\n\n\n/**\n * @return {number|undefined} Returns the document mode (for testing).\n * @private\n */\ngoog.userAgent.getDocumentMode_ = function() {\n  // NOTE(user): goog.userAgent may be used in context where there is no DOM.\n  var doc = goog.global['document'];\n  return doc ? doc['documentMode'] : undefined;\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string} v1 Version of first item.\n * @param {string} v2 Version of second item.\n *\n * @return {number}  1 if first argument is higher\n *                   0 if arguments are equal\n *                  -1 if second argument is higher.\n * @deprecated Use goog.string.compareVersions.\n */\ngoog.userAgent.compare = function(v1, v2) {\n  return goog.string.compareVersions(v1, v2);\n};\n\n\n/**\n * Cache for {@link goog.userAgent.isVersionOrHigher}.\n * Calls to compareVersions are surprisingly expensive and, as a browser's\n * version number is unlikely to change during a session, we cache the results.\n * @const\n * @private\n */\ngoog.userAgent.isVersionOrHigherCache_ = {};\n\n\n/**\n * Whether the user agent version is higher or the same as the given version.\n * NOTE: When checking the version numbers for Firefox and Safari, be sure to\n * use the engine's version, not the browser's version number.  For example,\n * Firefox 3.0 corresponds to Gecko 1.9 and Safari 3.0 to Webkit 522.11.\n * Opera and Internet Explorer versions match the product release number.<br>\n * @see <a href=\"http://en.wikipedia.org/wiki/Safari_version_history\">\n *     Webkit</a>\n * @see <a href=\"http://en.wikipedia.org/wiki/Gecko_engine\">Gecko</a>\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n */\ngoog.userAgent.isVersionOrHigher = function(version) {\n  return goog.userAgent.ASSUME_ANY_VERSION ||\n      goog.reflect.cache(\n          goog.userAgent.isVersionOrHigherCache_, version, function() {\n            return goog.string.compareVersions(\n                       goog.userAgent.VERSION, version) >= 0;\n          });\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isVersionOrHigher`.\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n * @deprecated Use goog.userAgent.isVersionOrHigher().\n */\ngoog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;\n\n\n/**\n * Whether the IE effective document mode is higher or the same as the given\n * document mode version.\n * NOTE: Only for IE, return false for another browser.\n *\n * @param {number} documentMode The document mode version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *     same as the given version.\n */\ngoog.userAgent.isDocumentModeOrHigher = function(documentMode) {\n  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isDocumentModeOrHigher`.\n * @param {number} version The version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *      same as the given version.\n * @deprecated Use goog.userAgent.isDocumentModeOrHigher().\n */\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\n\n\n/**\n * For IE version < 7, documentMode is undefined, so attempt to use the\n * CSS1Compat property to see if we are in standards mode. If we are in\n * standards mode, treat the browser version as the document mode. Otherwise,\n * IE is emulating version 5.\n * @type {number|undefined}\n * @const\n */\ngoog.userAgent.DOCUMENT_MODE = (function() {\n  var doc = goog.global['document'];\n  var mode = goog.userAgent.getDocumentMode_();\n  if (!doc || !goog.userAgent.IE) {\n    return undefined;\n  }\n  return mode || (doc['compatMode'] == 'CSS1Compat' ?\n                      parseInt(goog.userAgent.VERSION, 10) :\n                      5);\n})();\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Logging and debugging utilities.\n *\n * @see ../demos/debug.html\n */\n\ngoog.provide('goog.debug');\n\ngoog.require('goog.array');\ngoog.require('goog.debug.errorcontext');\ngoog.require('goog.userAgent');\n\n\n/** @define {boolean} Whether logging should be enabled. */\ngoog.define('goog.debug.LOGGING_ENABLED', goog.DEBUG);\n\n\n/** @define {boolean} Whether to force \"sloppy\" stack building. */\ngoog.define('goog.debug.FORCE_SLOPPY_STACKS', false);\n\n\n/**\n * Catches onerror events fired by windows and similar objects.\n * @param {function(Object)} logFunc The function to call with the error\n *    information.\n * @param {boolean=} opt_cancel Whether to stop the error from reaching the\n *    browser.\n * @param {Object=} opt_target Object that fires onerror events.\n * @suppress {strictMissingProperties} onerror is not defined as a property\n *    on Object.\n */\ngoog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {\n  var target = opt_target || goog.global;\n  var oldErrorHandler = target.onerror;\n  var retVal = !!opt_cancel;\n\n  // Chrome interprets onerror return value backwards (http://crbug.com/92062)\n  // until it was fixed in webkit revision r94061 (Webkit 535.3). This\n  // workaround still needs to be skipped in Safari after the webkit change\n  // gets pushed out in Safari.\n  // See https://bugs.webkit.org/show_bug.cgi?id=67119\n  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher('535.3')) {\n    retVal = !retVal;\n  }\n\n  /**\n   * New onerror handler for this target. This onerror handler follows the spec\n   * according to\n   * http://www.whatwg.org/specs/web-apps/current-work/#runtime-script-errors\n   * The spec was changed in August 2013 to support receiving column information\n   * and an error object for all scripts on the same origin or cross origin\n   * scripts with the proper headers. See\n   * https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n   *\n   * @param {string} message The error message. For cross-origin errors, this\n   *     will be scrubbed to just \"Script error.\". For new browsers that have\n   *     updated to follow the latest spec, errors that come from origins that\n   *     have proper cross origin headers will not be scrubbed.\n   * @param {string} url The URL of the script that caused the error. The URL\n   *     will be scrubbed to \"\" for cross origin scripts unless the script has\n   *     proper cross origin headers and the browser has updated to the latest\n   *     spec.\n   * @param {number} line The line number in the script that the error\n   *     occurred on.\n   * @param {number=} opt_col The optional column number that the error\n   *     occurred on. Only browsers that have updated to the latest spec will\n   *     include this.\n   * @param {Error=} opt_error The optional actual error object for this\n   *     error that should include the stack. Only browsers that have updated\n   *     to the latest spec will inlude this parameter.\n   * @return {boolean} Whether to prevent the error from reaching the browser.\n   */\n  target.onerror = function(message, url, line, opt_col, opt_error) {\n    if (oldErrorHandler) {\n      oldErrorHandler(message, url, line, opt_col, opt_error);\n    }\n    logFunc({\n      message: message,\n      fileName: url,\n      line: line,\n      lineNumber: line,\n      col: opt_col,\n      error: opt_error\n    });\n    return retVal;\n  };\n};\n\n\n/**\n * Creates a string representing an object and all its properties.\n * @param {Object|null|undefined} obj Object to expose.\n * @param {boolean=} opt_showFn Show the functions as well as the properties,\n *     default is false.\n * @return {string} The string representation of `obj`.\n */\ngoog.debug.expose = function(obj, opt_showFn) {\n  if (typeof obj == 'undefined') {\n    return 'undefined';\n  }\n  if (obj == null) {\n    return 'NULL';\n  }\n  var str = [];\n\n  for (var x in obj) {\n    if (!opt_showFn && goog.isFunction(obj[x])) {\n      continue;\n    }\n    var s = x + ' = ';\n\n    try {\n      s += obj[x];\n    } catch (e) {\n      s += '*** ' + e + ' ***';\n    }\n    str.push(s);\n  }\n  return str.join('\\n');\n};\n\n\n/**\n * Creates a string representing a given primitive or object, and for an\n * object, all its properties and nested objects. NOTE: The output will include\n * Uids on all objects that were exposed. Any added Uids will be removed before\n * returning.\n * @param {*} obj Object to expose.\n * @param {boolean=} opt_showFn Also show properties that are functions (by\n *     default, functions are omitted).\n * @return {string} A string representation of `obj`.\n */\ngoog.debug.deepExpose = function(obj, opt_showFn) {\n  var str = [];\n\n  // Track any objects where deepExpose added a Uid, so they can be cleaned up\n  // before return. We do this globally, rather than only on ancestors so that\n  // if the same object appears in the output, you can see it.\n  var uidsToCleanup = [];\n  var ancestorUids = {};\n\n  var helper = function(obj, space) {\n    var nestspace = space + '  ';\n\n    var indentMultiline = function(str) {\n      return str.replace(/\\n/g, '\\n' + space);\n    };\n\n\n    try {\n      if (!goog.isDef(obj)) {\n        str.push('undefined');\n      } else if (goog.isNull(obj)) {\n        str.push('NULL');\n      } else if (goog.isString(obj)) {\n        str.push('\"' + indentMultiline(obj) + '\"');\n      } else if (goog.isFunction(obj)) {\n        str.push(indentMultiline(String(obj)));\n      } else if (goog.isObject(obj)) {\n        // Add a Uid if needed. The struct calls implicitly adds them.\n        if (!goog.hasUid(obj)) {\n          uidsToCleanup.push(obj);\n        }\n        var uid = goog.getUid(obj);\n        if (ancestorUids[uid]) {\n          str.push('*** reference loop detected (id=' + uid + ') ***');\n        } else {\n          ancestorUids[uid] = true;\n          str.push('{');\n          for (var x in obj) {\n            if (!opt_showFn && goog.isFunction(obj[x])) {\n              continue;\n            }\n            str.push('\\n');\n            str.push(nestspace);\n            str.push(x + ' = ');\n            helper(obj[x], nestspace);\n          }\n          str.push('\\n' + space + '}');\n          delete ancestorUids[uid];\n        }\n      } else {\n        str.push(obj);\n      }\n    } catch (e) {\n      str.push('*** ' + e + ' ***');\n    }\n  };\n\n  helper(obj, '');\n\n  // Cleanup any Uids that were added by the deepExpose.\n  for (var i = 0; i < uidsToCleanup.length; i++) {\n    goog.removeUid(uidsToCleanup[i]);\n  }\n\n  return str.join('');\n};\n\n\n/**\n * Recursively outputs a nested array as a string.\n * @param {Array<?>} arr The array.\n * @return {string} String representing nested array.\n */\ngoog.debug.exposeArray = function(arr) {\n  var str = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (goog.isArray(arr[i])) {\n      str.push(goog.debug.exposeArray(arr[i]));\n    } else {\n      str.push(arr[i]);\n    }\n  }\n  return '[ ' + str.join(', ') + ' ]';\n};\n\n\n/**\n * Normalizes the error/exception object between browsers.\n * @param {*} err Raw error object.\n * @return {{\n *    message: (?|undefined),\n *    name: (?|undefined),\n *    lineNumber: (?|undefined),\n *    fileName: (?|undefined),\n *    stack: (?|undefined)\n * }} Normalized error object.\n * @suppress {strictMissingProperties} properties not defined on err\n */\ngoog.debug.normalizeErrorObject = function(err) {\n  var href = goog.getObjectByName('window.location.href');\n  if (goog.isString(err)) {\n    return {\n      'message': err,\n      'name': 'Unknown error',\n      'lineNumber': 'Not available',\n      'fileName': href,\n      'stack': 'Not available'\n    };\n  }\n\n  var lineNumber, fileName;\n  var threwError = false;\n\n  try {\n    lineNumber = err.lineNumber || err.line || 'Not available';\n  } catch (e) {\n    // Firefox 2 sometimes throws an error when accessing 'lineNumber':\n    // Message: Permission denied to get property UnnamedClass.lineNumber\n    lineNumber = 'Not available';\n    threwError = true;\n  }\n\n  try {\n    fileName = err.fileName || err.filename || err.sourceURL ||\n        // $googDebugFname may be set before a call to eval to set the filename\n        // that the eval is supposed to present.\n        goog.global['$googDebugFname'] || href;\n  } catch (e) {\n    // Firefox 2 may also throw an error when accessing 'filename'.\n    fileName = 'Not available';\n    threwError = true;\n  }\n\n  // The IE Error object contains only the name and the message.\n  // The Safari Error object uses the line and sourceURL fields.\n  if (threwError || !err.lineNumber || !err.fileName || !err.stack ||\n      !err.message || !err.name) {\n    return {\n      'message': err.message || 'Not available',\n      'name': err.name || 'UnknownError',\n      'lineNumber': lineNumber,\n      'fileName': fileName,\n      'stack': err.stack || 'Not available'\n    };\n  }\n\n  // Standards error object\n  // Typed !Object. Should be a subtype of the return type, but it's not.\n  return /** @type {?} */ (err);\n};\n\n\n/**\n * Converts an object to an Error using the object's toString if it's not\n * already an Error, adds a stacktrace if there isn't one, and optionally adds\n * an extra message.\n * @param {*} err The original thrown error, object, or string.\n * @param {string=} opt_message  optional additional message to add to the\n *     error.\n * @return {!Error} If err is an Error, it is enhanced and returned. Otherwise,\n *     it is converted to an Error which is enhanced and returned.\n */\ngoog.debug.enhanceError = function(err, opt_message) {\n  var error;\n  if (!(err instanceof Error)) {\n    error = Error(err);\n    if (Error.captureStackTrace) {\n      // Trim this function off the call stack, if we can.\n      Error.captureStackTrace(error, goog.debug.enhanceError);\n    }\n  } else {\n    error = err;\n  }\n\n  if (!error.stack) {\n    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);\n  }\n  if (opt_message) {\n    // find the first unoccupied 'messageX' property\n    var x = 0;\n    while (error['message' + x]) {\n      ++x;\n    }\n    error['message' + x] = String(opt_message);\n  }\n  return error;\n};\n\n\n/**\n * Converts an object to an Error using the object's toString if it's not\n * already an Error, adds a stacktrace if there isn't one, and optionally adds\n * context to the Error, which is reported by the closure error reporter.\n * @param {*} err The original thrown error, object, or string.\n * @param {!Object<string, string>=} opt_context Key-value context to add to the\n *     Error.\n * @return {!Error} If err is an Error, it is enhanced and returned. Otherwise,\n *     it is converted to an Error which is enhanced and returned.\n */\ngoog.debug.enhanceErrorWithContext = function(err, opt_context) {\n  var error = goog.debug.enhanceError(err);\n  if (opt_context) {\n    for (var key in opt_context) {\n      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);\n    }\n  }\n  return error;\n};\n\n\n/**\n * Gets the current stack trace. Simple and iterative - doesn't worry about\n * catching circular references or getting the args.\n * @param {number=} opt_depth Optional maximum depth to trace back to.\n * @return {string} A string with the function names of all functions in the\n *     stack, separated by \\n.\n * @suppress {es5Strict}\n */\ngoog.debug.getStacktraceSimple = function(opt_depth) {\n  if (!goog.debug.FORCE_SLOPPY_STACKS) {\n    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);\n    if (stack) {\n      return stack;\n    }\n    // NOTE: browsers that have strict mode support also have native \"stack\"\n    // properties.  Fall-through for legacy browser support.\n  }\n\n  var sb = [];\n  var fn = arguments.callee.caller;\n  var depth = 0;\n\n  while (fn && (!opt_depth || depth < opt_depth)) {\n    sb.push(goog.debug.getFunctionName(fn));\n    sb.push('()\\n');\n\n    try {\n      fn = fn.caller;\n    } catch (e) {\n      sb.push('[exception trying to get caller]\\n');\n      break;\n    }\n    depth++;\n    if (depth >= goog.debug.MAX_STACK_DEPTH) {\n      sb.push('[...long stack...]');\n      break;\n    }\n  }\n  if (opt_depth && depth >= opt_depth) {\n    sb.push('[...reached max depth limit...]');\n  } else {\n    sb.push('[end]');\n  }\n\n  return sb.join('');\n};\n\n\n/**\n * Max length of stack to try and output\n * @type {number}\n */\ngoog.debug.MAX_STACK_DEPTH = 50;\n\n\n/**\n * @param {Function} fn The function to start getting the trace from.\n * @return {?string}\n * @private\n */\ngoog.debug.getNativeStackTrace_ = function(fn) {\n  var tempErr = new Error();\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(tempErr, fn);\n    return String(tempErr.stack);\n  } else {\n    // IE10, only adds stack traces when an exception is thrown.\n    try {\n      throw tempErr;\n    } catch (e) {\n      tempErr = e;\n    }\n    var stack = tempErr.stack;\n    if (stack) {\n      return String(stack);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Gets the current stack trace, either starting from the caller or starting\n * from a specified function that's currently on the call stack.\n * @param {?Function=} fn If provided, when collecting the stack trace all\n *     frames above the topmost call to this function, including that call,\n *     will be left out of the stack trace.\n * @return {string} Stack trace.\n * @suppress {es5Strict}\n */\ngoog.debug.getStacktrace = function(fn) {\n  var stack;\n  if (!goog.debug.FORCE_SLOPPY_STACKS) {\n    // Try to get the stack trace from the environment if it is available.\n    var contextFn = fn || goog.debug.getStacktrace;\n    stack = goog.debug.getNativeStackTrace_(contextFn);\n  }\n  if (!stack) {\n    // NOTE: browsers that have strict mode support also have native \"stack\"\n    // properties. This function will throw in strict mode.\n    stack = goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []);\n  }\n  return stack;\n};\n\n\n/**\n * Private helper for getStacktrace().\n * @param {?Function} fn If provided, when collecting the stack trace all\n *     frames above the topmost call to this function, including that call,\n *     will be left out of the stack trace.\n * @param {Array<!Function>} visited List of functions visited so far.\n * @return {string} Stack trace starting from function fn.\n * @suppress {es5Strict}\n * @private\n */\ngoog.debug.getStacktraceHelper_ = function(fn, visited) {\n  var sb = [];\n\n  // Circular reference, certain functions like bind seem to cause a recursive\n  // loop so we need to catch circular references\n  if (goog.array.contains(visited, fn)) {\n    sb.push('[...circular reference...]');\n\n    // Traverse the call stack until function not found or max depth is reached\n  } else if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {\n    sb.push(goog.debug.getFunctionName(fn) + '(');\n    var args = fn.arguments;\n    // Args may be null for some special functions such as host objects or eval.\n    for (var i = 0; args && i < args.length; i++) {\n      if (i > 0) {\n        sb.push(', ');\n      }\n      var argDesc;\n      var arg = args[i];\n      switch (typeof arg) {\n        case 'object':\n          argDesc = arg ? 'object' : 'null';\n          break;\n\n        case 'string':\n          argDesc = arg;\n          break;\n\n        case 'number':\n          argDesc = String(arg);\n          break;\n\n        case 'boolean':\n          argDesc = arg ? 'true' : 'false';\n          break;\n\n        case 'function':\n          argDesc = goog.debug.getFunctionName(arg);\n          argDesc = argDesc ? argDesc : '[fn]';\n          break;\n\n        case 'undefined':\n        default:\n          argDesc = typeof arg;\n          break;\n      }\n\n      if (argDesc.length > 40) {\n        argDesc = argDesc.substr(0, 40) + '...';\n      }\n      sb.push(argDesc);\n    }\n    visited.push(fn);\n    sb.push(')\\n');\n\n    try {\n      sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));\n    } catch (e) {\n      sb.push('[exception trying to get caller]\\n');\n    }\n\n  } else if (fn) {\n    sb.push('[...long stack...]');\n  } else {\n    sb.push('[end]');\n  }\n  return sb.join('');\n};\n\n\n/**\n * Set a custom function name resolver.\n * @param {function(Function): string} resolver Resolves functions to their\n *     names.\n */\ngoog.debug.setFunctionResolver = function(resolver) {\n  goog.debug.fnNameResolver_ = resolver;\n};\n\n\n/**\n * Gets a function name\n * @param {Function} fn Function to get name of.\n * @return {string} Function's name.\n */\ngoog.debug.getFunctionName = function(fn) {\n  if (goog.debug.fnNameCache_[fn]) {\n    return goog.debug.fnNameCache_[fn];\n  }\n  if (goog.debug.fnNameResolver_) {\n    var name = goog.debug.fnNameResolver_(fn);\n    if (name) {\n      goog.debug.fnNameCache_[fn] = name;\n      return name;\n    }\n  }\n\n  // Heuristically determine function name based on code.\n  var functionSource = String(fn);\n  if (!goog.debug.fnNameCache_[functionSource]) {\n    var matches = /function ([^\\(]+)/.exec(functionSource);\n    if (matches) {\n      var method = matches[1];\n      goog.debug.fnNameCache_[functionSource] = method;\n    } else {\n      goog.debug.fnNameCache_[functionSource] = '[Anonymous]';\n    }\n  }\n\n  return goog.debug.fnNameCache_[functionSource];\n};\n\n\n/**\n * Makes whitespace visible by replacing it with printable characters.\n * This is useful in finding diffrences between the expected and the actual\n * output strings of a testcase.\n * @param {string} string whose whitespace needs to be made visible.\n * @return {string} string whose whitespace is made visible.\n */\ngoog.debug.makeWhitespaceVisible = function(string) {\n  return string.replace(/ /g, '[_]')\n      .replace(/\\f/g, '[f]')\n      .replace(/\\n/g, '[n]\\n')\n      .replace(/\\r/g, '[r]')\n      .replace(/\\t/g, '[t]');\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n *\n * <p>Forked rather than moved from {@link goog.asserts.getType_}\n * to avoid adding a dependency to goog.asserts.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n */\ngoog.debug.runtimeType = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return /** @type {string} */ (value.constructor.displayName) ||\n        value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\n/**\n * Hash map for storing function names that have already been looked up.\n * @type {Object}\n * @private\n */\ngoog.debug.fnNameCache_ = {};\n\n\n/**\n * Resolves functions to their names.  Resolved function names will be cached.\n * @type {function(Function):string}\n * @private\n */\ngoog.debug.fnNameResolver_;\n\n\n/**\n * Private internal function to support goog.debug.freeze.\n * @param {T} arg\n * @return {T}\n * @template T\n * @private\n */\ngoog.debug.freezeInternal_ = goog.DEBUG && Object.freeze || function(arg) {\n  return arg;\n};\n\n\n/**\n * Freezes the given object, but only in debug mode (and in browsers that\n * support it).  Note that this is a shallow freeze, so for deeply nested\n * objects it must be called at every level to ensure deep immutability.\n * @param {T} arg\n * @return {T}\n * @template T\n */\ngoog.debug.freeze = function(arg) {\n  // NOTE: this compiles to nothing, but hides the possible side effect of\n  // freezeInternal_ from the compiler so that the entire call can be\n  // removed if the result is not used.\n  return {\n    valueOf: function() {\n      return goog.debug.freezeInternal_(arg);\n    }\n  }.valueOf();\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Browser capability checks for the events package.\n *\n */\n\n\ngoog.provide('goog.events.BrowserFeature');\n\ngoog.require('goog.userAgent');\ngoog.scope(function() {\n\n\n\n/**\n * Enum of browser capabilities.\n * @enum {boolean}\n */\ngoog.events.BrowserFeature = {\n  /**\n   * Whether the button attribute of the event is W3C compliant.  False in\n   * Internet Explorer prior to version 9; document-version dependent.\n   */\n  HAS_W3C_BUTTON:\n      !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9),\n\n  /**\n   * Whether the browser supports full W3C event model.\n   */\n  HAS_W3C_EVENT_SUPPORT:\n      !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9),\n\n  /**\n   * To prevent default in IE7-8 for certain keydown events we need set the\n   * keyCode to -1.\n   */\n  SET_KEY_CODE_TO_PREVENT_DEFAULT:\n      goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9'),\n\n  /**\n   * Whether the `navigator.onLine` property is supported.\n   */\n  HAS_NAVIGATOR_ONLINE_PROPERTY:\n      !goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher('528'),\n\n  /**\n   * Whether HTML5 network online/offline events are supported.\n   */\n  HAS_HTML5_NETWORK_EVENT_SUPPORT:\n      goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher('1.9b') ||\n      goog.userAgent.IE && goog.userAgent.isVersionOrHigher('8') ||\n      goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher('9.5') ||\n      goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher('528'),\n\n  /**\n   * Whether HTML5 network events fire on document.body, or otherwise the\n   * window.\n   */\n  HTML5_NETWORK_EVENTS_FIRE_ON_BODY:\n      goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher('8') ||\n      goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9'),\n\n  /**\n   * Whether touch is enabled in the browser.\n   */\n  TOUCH_ENABLED:\n      ('ontouchstart' in goog.global ||\n       !!(goog.global['document'] && document.documentElement &&\n          'ontouchstart' in document.documentElement) ||\n       // IE10 uses non-standard touch events, so it has a different check.\n       !!(goog.global['navigator'] &&\n          (goog.global['navigator']['maxTouchPoints'] ||\n           goog.global['navigator']['msMaxTouchPoints']))),\n\n  /**\n   * Whether addEventListener supports W3C standard pointer events.\n   * http://www.w3.org/TR/pointerevents/\n   */\n  POINTER_EVENTS: ('PointerEvent' in goog.global),\n\n  /**\n   * Whether addEventListener supports MSPointer events (only used in IE10).\n   * http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n   * http://msdn.microsoft.com/library/hh673557(v=vs.85).aspx\n   */\n  MSPOINTER_EVENTS:\n      ('MSPointerEvent' in goog.global &&\n       !!(goog.global['navigator'] &&\n          goog.global['navigator']['msPointerEnabled'])),\n\n  /**\n   * Whether addEventListener supports {passive: true}.\n   * https://developers.google.com/web/updates/2016/06/passive-event-listeners\n   */\n  PASSIVE_EVENTS: purify(function() {\n    // If we're in a web worker or other custom environment, we can't tell.\n    if (!goog.global.addEventListener || !Object.defineProperty) {  // IE 8\n      return false;\n    }\n\n    var passive = false;\n    var options = Object.defineProperty({}, 'passive', {\n      get: function() {\n        passive = true;\n      }\n    });\n    goog.global.addEventListener('test', goog.nullFunction, options);\n    goog.global.removeEventListener('test', goog.nullFunction, options);\n\n    return passive;\n  })\n};\n\n\n/**\n * Tricks Closure Compiler into believing that a function is pure.  The compiler\n * assumes that any `valueOf` function is pure, without analyzing its contents.\n *\n * @param {function(): T} fn\n * @return {T}\n * @template T\n */\nfunction purify(fn) {\n  return ({valueOf: fn}).valueOf();\n}\n});  // goog.scope\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A base class for event objects.\n *\n */\n\n\ngoog.provide('goog.events.Event');\ngoog.provide('goog.events.EventLike');\n\n/**\n * goog.events.Event no longer depends on goog.Disposable. Keep requiring\n * goog.Disposable here to not break projects which assume this dependency.\n * @suppress {extraRequire}\n */\ngoog.require('goog.Disposable');\ngoog.require('goog.events.EventId');\n\n\n/**\n * A typedef for event like objects that are dispatchable via the\n * goog.events.dispatchEvent function. strings are treated as the type for a\n * goog.events.Event. Objects are treated as an extension of a new\n * goog.events.Event with the type property of the object being used as the type\n * of the Event.\n * @typedef {string|Object|goog.events.Event|goog.events.EventId}\n */\ngoog.events.EventLike;\n\n\n\n/**\n * A base class for event objects, so that they can support preventDefault and\n * stopPropagation.\n *\n * @suppress {underscore} Several properties on this class are technically\n *     public, but referencing these properties outside this package is strongly\n *     discouraged.\n *\n * @param {string|!goog.events.EventId} type Event Type.\n * @param {Object=} opt_target Reference to the object that is the target of\n *     this event. It has to implement the `EventTarget` interface\n *     declared at {@link http://developer.mozilla.org/en/DOM/EventTarget}.\n * @constructor\n */\ngoog.events.Event = function(type, opt_target) {\n  /**\n   * Event type.\n   * @type {string}\n   */\n  this.type = type instanceof goog.events.EventId ? String(type) : type;\n\n  /**\n   * TODO(tbreisacher): The type should probably be\n   * EventTarget|goog.events.EventTarget.\n   *\n   * Target of the event.\n   * @type {Object|undefined}\n   */\n  this.target = opt_target;\n\n  /**\n   * Object that had the listener attached.\n   * @type {Object|undefined}\n   */\n  this.currentTarget = this.target;\n\n  /**\n   * Whether to cancel the event in internal capture/bubble processing for IE.\n   * @type {boolean}\n   * @public\n   */\n  this.propagationStopped_ = false;\n\n  /**\n   * Whether the default action has been prevented.\n   * This is a property to match the W3C specification at\n   * {@link http://www.w3.org/TR/DOM-Level-3-Events/\n   * #events-event-type-defaultPrevented}.\n   * Must be treated as read-only outside the class.\n   * @type {boolean}\n   */\n  this.defaultPrevented = false;\n\n  /**\n   * Return value for in internal capture/bubble processing for IE.\n   * @type {boolean}\n   * @public\n   */\n  this.returnValue_ = true;\n};\n\n\n/**\n * Stops event propagation.\n */\ngoog.events.Event.prototype.stopPropagation = function() {\n  this.propagationStopped_ = true;\n};\n\n\n/**\n * Prevents the default action, for example a link redirecting to a url.\n */\ngoog.events.Event.prototype.preventDefault = function() {\n  this.defaultPrevented = true;\n  this.returnValue_ = false;\n};\n\n\n/**\n * Stops the propagation of the event. It is equivalent to\n * `e.stopPropagation()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n */\ngoog.events.Event.stopPropagation = function(e) {\n  e.stopPropagation();\n};\n\n\n/**\n * Prevents the default action. It is equivalent to\n * `e.preventDefault()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n */\ngoog.events.Event.preventDefault = function(e) {\n  e.preventDefault();\n};\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A patched, standardized event object for browser events.\n *\n * <pre>\n * The patched event object contains the following members:\n * - type           {string}    Event type, e.g. 'click'\n * - target         {Object}    The element that actually triggered the event\n * - currentTarget  {Object}    The element the listener is attached to\n * - relatedTarget  {Object}    For mouseover and mouseout, the previous object\n * - offsetX        {number}    X-coordinate relative to target\n * - offsetY        {number}    Y-coordinate relative to target\n * - clientX        {number}    X-coordinate relative to viewport\n * - clientY        {number}    Y-coordinate relative to viewport\n * - screenX        {number}    X-coordinate relative to the edge of the screen\n * - screenY        {number}    Y-coordinate relative to the edge of the screen\n * - button         {number}    Mouse button. Use isButton() to test.\n * - keyCode        {number}    Key-code\n * - ctrlKey        {boolean}   Was ctrl key depressed\n * - altKey         {boolean}   Was alt key depressed\n * - shiftKey       {boolean}   Was shift key depressed\n * - metaKey        {boolean}   Was meta key depressed\n * - pointerId      {number}    Pointer ID\n * - pointerType    {string}    Pointer type, e.g. 'mouse', 'pen', or 'touch'\n * - defaultPrevented {boolean} Whether the default action has been prevented\n * - state          {Object}    History state object\n *\n * NOTE: The keyCode member contains the raw browser keyCode. For normalized\n * key and character code use {@link goog.events.KeyHandler}.\n * </pre>\n *\n * @author arv@google.com (Erik Arvidsson)\n */\n\ngoog.provide('goog.events.BrowserEvent');\ngoog.provide('goog.events.BrowserEvent.MouseButton');\ngoog.provide('goog.events.BrowserEvent.PointerType');\n\ngoog.require('goog.debug');\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventType');\ngoog.require('goog.reflect');\ngoog.require('goog.userAgent');\n\n\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * The content of this object will not be initialized if no event object is\n * provided. If this is the case, init() needs to be invoked separately.\n * @param {Event=} opt_e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.events.BrowserEvent = function(opt_e, opt_currentTarget) {\n  goog.events.BrowserEvent.base(this, 'constructor', opt_e ? opt_e.type : '');\n\n  /**\n   * Target that fired the event.\n   * @override\n   * @type {Node}\n   */\n  this.target = null;\n\n  /**\n   * Node that had the listener attached.\n   * @override\n   * @type {Node|undefined}\n   */\n  this.currentTarget = null;\n\n  /**\n   * For mouseover and mouseout events, the related object for the event.\n   * @type {Node}\n   */\n  this.relatedTarget = null;\n\n  /**\n   * X-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetX = 0;\n\n  /**\n   * Y-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetY = 0;\n\n  /**\n   * X-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientX = 0;\n\n  /**\n   * Y-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientY = 0;\n\n  /**\n   * X-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenX = 0;\n\n  /**\n   * Y-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenY = 0;\n\n  /**\n   * Which mouse button was pressed.\n   * @type {number}\n   */\n  this.button = 0;\n\n  /**\n   * Key of key press.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.keyCode = 0;\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.charCode = 0;\n\n  /**\n   * Whether control was pressed at time of event.\n   * @type {boolean}\n   */\n  this.ctrlKey = false;\n\n  /**\n   * Whether alt was pressed at time of event.\n   * @type {boolean}\n   */\n  this.altKey = false;\n\n  /**\n   * Whether shift was pressed at time of event.\n   * @type {boolean}\n   */\n  this.shiftKey = false;\n\n  /**\n   * Whether the meta key was pressed at time of event.\n   * @type {boolean}\n   */\n  this.metaKey = false;\n\n  /**\n   * History state object, only set for PopState events where it's a copy of the\n   * state object provided to pushState or replaceState.\n   * @type {Object}\n   */\n  this.state = null;\n\n  /**\n   * Whether the default platform modifier key was pressed at time of event.\n   * (This is control for all platforms except Mac, where it's Meta.)\n   * @type {boolean}\n   */\n  this.platformModifierKey = false;\n\n  /**\n   * @type {number}\n   */\n  this.pointerId = 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = '';\n\n  /**\n   * The browser event object.\n   * @private {Event}\n   */\n  this.event_ = null;\n\n  if (opt_e) {\n    this.init(opt_e, opt_currentTarget);\n  }\n};\ngoog.inherits(goog.events.BrowserEvent, goog.events.Event);\n\n\n/**\n * Normalized button constants for the mouse.\n * @enum {number}\n */\ngoog.events.BrowserEvent.MouseButton = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n};\n\n\n/**\n * Normalized pointer type constants for pointer events.\n * @enum {string}\n */\ngoog.events.BrowserEvent.PointerType = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch'\n};\n\n\n/**\n * Static data for mapping mouse buttons.\n * @type {!Array<number>}\n * @deprecated Use `goog.events.BrowserEvent.IE_BUTTON_MAP` instead.\n */\ngoog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([\n  1,  // LEFT\n  4,  // MIDDLE\n  2   // RIGHT\n]);\n\n\n/**\n * Static data for mapping mouse buttons.\n * @const {!Array<number>}\n */\ngoog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;\n\n\n/**\n * Static data for mapping MSPointerEvent types to PointerEvent types.\n * @const {!Object<number, goog.events.BrowserEvent.PointerType>}\n */\ngoog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({\n  2: goog.events.BrowserEvent.PointerType.TOUCH,\n  3: goog.events.BrowserEvent.PointerType.PEN,\n  4: goog.events.BrowserEvent.PointerType.MOUSE\n});\n\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * @param {Event} e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n */\ngoog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {\n  var type = this.type = e.type;\n\n  /**\n   * On touch devices use the first \"changed touch\" as the relevant touch.\n   * @type {Touch}\n   */\n  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;\n\n  // TODO(nicksantos): Change this.target to type EventTarget.\n  this.target = /** @type {Node} */ (e.target) || e.srcElement;\n\n  // TODO(nicksantos): Change this.currentTarget to type EventTarget.\n  this.currentTarget = /** @type {Node} */ (opt_currentTarget);\n\n  var relatedTarget = /** @type {Node} */ (e.relatedTarget);\n  if (relatedTarget) {\n    // There's a bug in FireFox where sometimes, relatedTarget will be a\n    // chrome element, and accessing any property of it will get a permission\n    // denied exception. See:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=497780\n    if (goog.userAgent.GECKO) {\n      if (!goog.reflect.canAccessProperty(relatedTarget, 'nodeName')) {\n        relatedTarget = null;\n      }\n    }\n  } else if (type == goog.events.EventType.MOUSEOVER) {\n    relatedTarget = e.fromElement;\n  } else if (type == goog.events.EventType.MOUSEOUT) {\n    relatedTarget = e.toElement;\n  }\n\n  this.relatedTarget = relatedTarget;\n\n  if (!goog.isNull(relevantTouch)) {\n    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX :\n                                                         relevantTouch.pageX;\n    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY :\n                                                         relevantTouch.pageY;\n    this.screenX = relevantTouch.screenX || 0;\n    this.screenY = relevantTouch.screenY || 0;\n  } else {\n    // Webkit emits a lame warning whenever layerX/layerY is accessed.\n    // http://code.google.com/p/chromium/issues/detail?id=101733\n    this.offsetX = (goog.userAgent.WEBKIT || e.offsetX !== undefined) ?\n        e.offsetX :\n        e.layerX;\n    this.offsetY = (goog.userAgent.WEBKIT || e.offsetY !== undefined) ?\n        e.offsetY :\n        e.layerY;\n    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;\n    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;\n    this.screenX = e.screenX || 0;\n    this.screenY = e.screenY || 0;\n  }\n\n  this.button = e.button;\n\n  this.keyCode = e.keyCode || 0;\n  this.key = e.key || '';\n  this.charCode = e.charCode || (type == 'keypress' ? e.keyCode : 0);\n  this.ctrlKey = e.ctrlKey;\n  this.altKey = e.altKey;\n  this.shiftKey = e.shiftKey;\n  this.metaKey = e.metaKey;\n  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;\n  this.pointerId = e.pointerId || 0;\n  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);\n  this.state = e.state;\n  this.event_ = e;\n  if (e.defaultPrevented) {\n    this.preventDefault();\n  }\n};\n\n\n/**\n * Tests to see which button was pressed during the event. This is really only\n * useful in IE and Gecko browsers. And in IE, it's only useful for\n * mousedown/mouseup events, because click only fires for the left mouse button.\n *\n * Safari 2 only reports the left button being clicked, and uses the value '1'\n * instead of 0. Opera only reports a mousedown event for the middle button, and\n * no mouse events for the right button. Opera has default behavior for left and\n * middle click that can only be overridden via a configuration setting.\n *\n * There's a nice table of this mess at http://www.unixpapa.com/js/mouse.html.\n *\n * @param {goog.events.BrowserEvent.MouseButton} button The button\n *     to test for.\n * @return {boolean} True if button was pressed.\n */\ngoog.events.BrowserEvent.prototype.isButton = function(button) {\n  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {\n    if (this.type == 'click') {\n      return button == goog.events.BrowserEvent.MouseButton.LEFT;\n    } else {\n      return !!(\n          this.event_.button & goog.events.BrowserEvent.IE_BUTTON_MAP[button]);\n    }\n  } else {\n    return this.event_.button == button;\n  }\n};\n\n\n/**\n * Whether this has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @return {boolean} The result.\n */\ngoog.events.BrowserEvent.prototype.isMouseActionButton = function() {\n  // Webkit does not ctrl+click to be a right-click, so we\n  // normalize it to behave like Gecko and Opera.\n  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) &&\n      !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.stopPropagation = function() {\n  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);\n  if (this.event_.stopPropagation) {\n    this.event_.stopPropagation();\n  } else {\n    this.event_.cancelBubble = true;\n  }\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.preventDefault = function() {\n  goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  var be = this.event_;\n  if (!be.preventDefault) {\n    be.returnValue = false;\n    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {\n\n      try {\n        // Most keys can be prevented using returnValue. Some special keys\n        // require setting the keyCode to -1 as well:\n        //\n        // In IE7:\n        // F3, F5, F10, F11, Ctrl+P, Crtl+O, Ctrl+F (these are taken from IE6)\n        //\n        // In IE8:\n        // Ctrl+P, Crtl+O, Ctrl+F (F1-F12 cannot be stopped through the event)\n        //\n        // We therefore do this for all function keys as well as when Ctrl key\n        // is pressed.\n        var VK_F1 = 112;\n        var VK_F12 = 123;\n        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {\n          be.keyCode = -1;\n        }\n      } catch (ex) {\n        // IE throws an 'access denied' exception when trying to change\n        // keyCode in some situations (e.g. srcElement is input[type=file],\n        // or srcElement is an anchor tag rewritten by parent's innerHTML).\n        // Do nothing in this case.\n      }\n    }\n  } else {\n    be.preventDefault();\n  }\n};\n\n\n/**\n * @return {Event} The underlying browser event object.\n */\ngoog.events.BrowserEvent.prototype.getBrowserEvent = function() {\n  return this.event_;\n};\n\n\n/**\n * Extracts the pointer type from the given event.\n * @param {!Event} e\n * @return {string} The pointer type, e.g. 'mouse', 'pen', or 'touch'.\n * @private\n */\ngoog.events.BrowserEvent.getPointerType_ = function(e) {\n  if (goog.isString(e.pointerType)) {\n    return e.pointerType;\n  }\n  // IE10 uses integer codes for pointer type.\n  // https://msdn.microsoft.com/en-us/library/hh772359(v=vs.85).aspx\n  return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || '';\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Event Types.\n *\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.events.EventType');\ngoog.provide('goog.events.PointerFallbackEventType');\n\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.userAgent');\n\n\n/**\n * Returns a prefixed event name for the current browser.\n * @param {string} eventName The name of the event.\n * @return {string} The prefixed event name.\n * @suppress {missingRequire|missingProvide}\n * @private\n */\ngoog.events.getVendorPrefixedName_ = function(eventName) {\n  return goog.userAgent.WEBKIT ?\n      'webkit' + eventName :\n      (goog.userAgent.OPERA ? 'o' + eventName.toLowerCase() :\n                              eventName.toLowerCase());\n};\n\n\n/**\n * Constants for event names.\n * @enum {string}\n */\ngoog.events.EventType = {\n  // Mouse events\n  CLICK: 'click',\n  RIGHTCLICK: 'rightclick',\n  DBLCLICK: 'dblclick',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  MOUSEOVER: 'mouseover',\n  MOUSEOUT: 'mouseout',\n  MOUSEMOVE: 'mousemove',\n  MOUSEENTER: 'mouseenter',\n  MOUSELEAVE: 'mouseleave',\n\n  // Selection events.\n  // https://www.w3.org/TR/selection-api/\n  SELECTIONCHANGE: 'selectionchange',\n  SELECTSTART: 'selectstart',  // IE, Safari, Chrome\n\n  // Wheel events\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n  WHEEL: 'wheel',\n\n  // Key events\n  KEYPRESS: 'keypress',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n\n  // Focus\n  BLUR: 'blur',\n  FOCUS: 'focus',\n  DEACTIVATE: 'deactivate',  // IE only\n  FOCUSIN: 'focusin',\n  FOCUSOUT: 'focusout',\n\n  // Forms\n  CHANGE: 'change',\n  RESET: 'reset',\n  SELECT: 'select',\n  SUBMIT: 'submit',\n  INPUT: 'input',\n  PROPERTYCHANGE: 'propertychange',  // IE only\n\n  // Drag and drop\n  DRAGSTART: 'dragstart',\n  DRAG: 'drag',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DRAGLEAVE: 'dragleave',\n  DROP: 'drop',\n  DRAGEND: 'dragend',\n\n  // Touch events\n  // Note that other touch events exist, but we should follow the W3C list here.\n  // http://www.w3.org/TR/touch-events/#list-of-touchevent-types\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  TOUCHCANCEL: 'touchcancel',\n\n  // Misc\n  BEFOREUNLOAD: 'beforeunload',\n  CONSOLEMESSAGE: 'consolemessage',\n  CONTEXTMENU: 'contextmenu',\n  DEVICECHANGE: 'devicechange',\n  DEVICEMOTION: 'devicemotion',\n  DEVICEORIENTATION: 'deviceorientation',\n  DOMCONTENTLOADED: 'DOMContentLoaded',\n  ERROR: 'error',\n  HELP: 'help',\n  LOAD: 'load',\n  LOSECAPTURE: 'losecapture',\n  ORIENTATIONCHANGE: 'orientationchange',\n  READYSTATECHANGE: 'readystatechange',\n  RESIZE: 'resize',\n  SCROLL: 'scroll',\n  UNLOAD: 'unload',\n\n  // Media events\n  CANPLAY: 'canplay',\n  CANPLAYTHROUGH: 'canplaythrough',\n  DURATIONCHANGE: 'durationchange',\n  EMPTIED: 'emptied',\n  ENDED: 'ended',\n  LOADEDDATA: 'loadeddata',\n  LOADEDMETADATA: 'loadedmetadata',\n  PAUSE: 'pause',\n  PLAY: 'play',\n  PLAYING: 'playing',\n  RATECHANGE: 'ratechange',\n  SEEKED: 'seeked',\n  SEEKING: 'seeking',\n  STALLED: 'stalled',\n  SUSPEND: 'suspend',\n  TIMEUPDATE: 'timeupdate',\n  VOLUMECHANGE: 'volumechange',\n  WAITING: 'waiting',\n\n  // Media Source Extensions events\n  // https://www.w3.org/TR/media-source/#mediasource-events\n  SOURCEOPEN: 'sourceopen',\n  SOURCEENDED: 'sourceended',\n  SOURCECLOSED: 'sourceclosed',\n  // https://www.w3.org/TR/media-source/#sourcebuffer-events\n  ABORT: 'abort',\n  UPDATE: 'update',\n  UPDATESTART: 'updatestart',\n  UPDATEEND: 'updateend',\n\n  // HTML 5 History events\n  // See http://www.w3.org/TR/html5/browsers.html#event-definitions-0\n  HASHCHANGE: 'hashchange',\n  PAGEHIDE: 'pagehide',\n  PAGESHOW: 'pageshow',\n  POPSTATE: 'popstate',\n\n  // Copy and Paste\n  // Support is limited. Make sure it works on your favorite browser\n  // before using.\n  // http://www.quirksmode.org/dom/events/cutcopypaste.html\n  COPY: 'copy',\n  PASTE: 'paste',\n  CUT: 'cut',\n  BEFORECOPY: 'beforecopy',\n  BEFORECUT: 'beforecut',\n  BEFOREPASTE: 'beforepaste',\n\n  // HTML5 online/offline events.\n  // http://www.w3.org/TR/offline-webapps/#related\n  ONLINE: 'online',\n  OFFLINE: 'offline',\n\n  // HTML 5 worker events\n  MESSAGE: 'message',\n  CONNECT: 'connect',\n\n  // Service Worker Events - ServiceWorkerGlobalScope context\n  // See https://w3c.github.io/ServiceWorker/#execution-context-events\n  // Note: message event defined in worker events section\n  INSTALL: 'install',\n  ACTIVATE: 'activate',\n  FETCH: 'fetch',\n  FOREIGNFETCH: 'foreignfetch',\n  MESSAGEERROR: 'messageerror',\n\n  // Service Worker Events - Document context\n  // See https://w3c.github.io/ServiceWorker/#document-context-events\n  STATECHANGE: 'statechange',\n  UPDATEFOUND: 'updatefound',\n  CONTROLLERCHANGE: 'controllerchange',\n\n  // CSS animation events.\n  /** @suppress {missingRequire} */\n  ANIMATIONSTART: goog.events.getVendorPrefixedName_('AnimationStart'),\n  /** @suppress {missingRequire} */\n  ANIMATIONEND: goog.events.getVendorPrefixedName_('AnimationEnd'),\n  /** @suppress {missingRequire} */\n  ANIMATIONITERATION: goog.events.getVendorPrefixedName_('AnimationIteration'),\n\n  // CSS transition events. Based on the browser support described at:\n  // https://developer.mozilla.org/en/css/css_transitions#Browser_compatibility\n  /** @suppress {missingRequire} */\n  TRANSITIONEND: goog.events.getVendorPrefixedName_('TransitionEnd'),\n\n  // W3C Pointer Events\n  // http://www.w3.org/TR/pointerevents/\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTERCANCEL: 'pointercancel',\n  POINTERMOVE: 'pointermove',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  GOTPOINTERCAPTURE: 'gotpointercapture',\n  LOSTPOINTERCAPTURE: 'lostpointercapture',\n\n  // IE specific events.\n  // See http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n  // Note: these events will be supplanted in IE11.\n  MSGESTURECHANGE: 'MSGestureChange',\n  MSGESTUREEND: 'MSGestureEnd',\n  MSGESTUREHOLD: 'MSGestureHold',\n  MSGESTURESTART: 'MSGestureStart',\n  MSGESTURETAP: 'MSGestureTap',\n  MSGOTPOINTERCAPTURE: 'MSGotPointerCapture',\n  MSINERTIASTART: 'MSInertiaStart',\n  MSLOSTPOINTERCAPTURE: 'MSLostPointerCapture',\n  MSPOINTERCANCEL: 'MSPointerCancel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  MSPOINTERENTER: 'MSPointerEnter',\n  MSPOINTERHOVER: 'MSPointerHover',\n  MSPOINTERLEAVE: 'MSPointerLeave',\n  MSPOINTERMOVE: 'MSPointerMove',\n  MSPOINTEROUT: 'MSPointerOut',\n  MSPOINTEROVER: 'MSPointerOver',\n  MSPOINTERUP: 'MSPointerUp',\n\n  // Native IMEs/input tools events.\n  TEXT: 'text',\n  // The textInput event is supported in IE9+, but only in lower case. All other\n  // browsers use the camel-case event name.\n  TEXTINPUT: goog.userAgent.IE ? 'textinput' : 'textInput',\n  COMPOSITIONSTART: 'compositionstart',\n  COMPOSITIONUPDATE: 'compositionupdate',\n  COMPOSITIONEND: 'compositionend',\n\n  // The beforeinput event is initially only supported in Safari. See\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=342670 for Chrome\n  // implementation tracking.\n  BEFOREINPUT: 'beforeinput',\n\n  // Webview tag events\n  // See https://developer.chrome.com/apps/tags/webview\n  EXIT: 'exit',\n  LOADABORT: 'loadabort',\n  LOADCOMMIT: 'loadcommit',\n  LOADREDIRECT: 'loadredirect',\n  LOADSTART: 'loadstart',\n  LOADSTOP: 'loadstop',\n  RESPONSIVE: 'responsive',\n  SIZECHANGED: 'sizechanged',\n  UNRESPONSIVE: 'unresponsive',\n\n  // HTML5 Page Visibility API.  See details at\n  // `goog.labs.dom.PageVisibilityMonitor`.\n  VISIBILITYCHANGE: 'visibilitychange',\n\n  // LocalStorage event.\n  STORAGE: 'storage',\n\n  // DOM Level 2 mutation events (deprecated).\n  DOMSUBTREEMODIFIED: 'DOMSubtreeModified',\n  DOMNODEINSERTED: 'DOMNodeInserted',\n  DOMNODEREMOVED: 'DOMNodeRemoved',\n  DOMNODEREMOVEDFROMDOCUMENT: 'DOMNodeRemovedFromDocument',\n  DOMNODEINSERTEDINTODOCUMENT: 'DOMNodeInsertedIntoDocument',\n  DOMATTRMODIFIED: 'DOMAttrModified',\n  DOMCHARACTERDATAMODIFIED: 'DOMCharacterDataModified',\n\n  // Print events.\n  BEFOREPRINT: 'beforeprint',\n  AFTERPRINT: 'afterprint',\n\n  // Web app manifest events.\n  BEFOREINSTALLPROMPT: 'beforeinstallprompt',\n  APPINSTALLED: 'appinstalled'\n};\n\n\n/**\n * Returns one of the given pointer fallback event names in order of preference:\n *   1. pointerEventName\n *   2. msPointerEventName\n *   3. mouseEventName\n * @param {string} pointerEventName\n * @param {string} msPointerEventName\n * @param {string} mouseEventName\n * @return {string} The supported pointer or mouse event name.\n * @private\n */\ngoog.events.getPointerFallbackEventName_ = function(\n    pointerEventName, msPointerEventName, mouseEventName) {\n  if (goog.events.BrowserFeature.POINTER_EVENTS) {\n    return pointerEventName;\n  }\n  if (goog.events.BrowserFeature.MSPOINTER_EVENTS) {\n    return msPointerEventName;\n  }\n  return mouseEventName;\n};\n\n\n/**\n * Constants for pointer event names that fall back to corresponding mouse event\n * names on unsupported platforms. These are intended to be drop-in replacements\n * for corresponding values in `goog.events.EventType`.\n * @enum {string}\n */\ngoog.events.PointerFallbackEventType = {\n  POINTERDOWN: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN,\n      goog.events.EventType.MOUSEDOWN),\n  POINTERUP: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP,\n      goog.events.EventType.MOUSEUP),\n  POINTERCANCEL: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERCANCEL,\n      goog.events.EventType.MSPOINTERCANCEL,\n      // When falling back to mouse events, there is no MOUSECANCEL equivalent\n      // of POINTERCANCEL. In this case POINTERUP already falls back to MOUSEUP\n      // which represents both UP and CANCEL. POINTERCANCEL does not fall back\n      // to MOUSEUP to prevent listening twice on the same event.\n      'mousecancel'),  // non-existent event; will never fire\n  POINTERMOVE: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE,\n      goog.events.EventType.MOUSEMOVE),\n  POINTEROVER: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTEROVER, goog.events.EventType.MSPOINTEROVER,\n      goog.events.EventType.MOUSEOVER),\n  POINTEROUT: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTEROUT, goog.events.EventType.MSPOINTEROUT,\n      goog.events.EventType.MOUSEOUT),\n  POINTERENTER: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERENTER, goog.events.EventType.MSPOINTERENTER,\n      goog.events.EventType.MOUSEENTER),\n  POINTERLEAVE: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERLEAVE, goog.events.EventType.MSPOINTERLEAVE,\n      goog.events.EventType.MOUSELEAVE)\n};\n","// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview An interface for a listenable JavaScript object.\n * @author chrishenry@google.com (Chris Henry)\n */\n\ngoog.provide('goog.events.Listenable');\ngoog.provide('goog.events.ListenableKey');\n\n/** @suppress {extraRequire} */\ngoog.require('goog.events.EventId');\n\ngoog.forwardDeclare('goog.events.EventLike');\ngoog.forwardDeclare('goog.events.EventTarget');\n\n\n\n/**\n * A listenable interface. A listenable is an object with the ability\n * to dispatch/broadcast events to \"event listeners\" registered via\n * listen/listenOnce.\n *\n * The interface allows for an event propagation mechanism similar\n * to one offered by native browser event targets, such as\n * capture/bubble mechanism, stopping propagation, and preventing\n * default actions. Capture/bubble mechanism depends on the ancestor\n * tree constructed via `#getParentEventTarget`; this tree\n * must be directed acyclic graph. The meaning of default action(s)\n * in preventDefault is specific to a particular use case.\n *\n * Implementations that do not support capture/bubble or can not have\n * a parent listenable can simply not implement any ability to set the\n * parent listenable (and have `#getParentEventTarget` return\n * null).\n *\n * Implementation of this class can be used with or independently from\n * goog.events.\n *\n * Implementation must call `#addImplementation(implClass)`.\n *\n * @interface\n * @see goog.events\n * @see http://www.w3.org/TR/DOM-Level-2-Events/events.html\n */\ngoog.events.Listenable = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * goog.events.Listenable.\n *\n * See addImplementation/isImplementedBy.\n *\n * @type {string}\n * @const\n */\ngoog.events.Listenable.IMPLEMENTED_BY_PROP =\n    'closure_listenable_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * Marks a given class (constructor) as an implementation of\n * Listenable, so that we can query that fact at runtime. The class\n * must have already implemented the interface.\n * @param {function(new:goog.events.Listenable,...)} cls The class constructor.\n *     The corresponding class must have already implemented the interface.\n */\ngoog.events.Listenable.addImplementation = function(cls) {\n  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;\n};\n\n\n/**\n * @param {Object} obj The object to check.\n * @return {boolean} Whether a given instance implements Listenable. The\n *     class/superclass of the instance must call addImplementation.\n */\ngoog.events.Listenable.isImplementedBy = function(obj) {\n  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listen;\n\n\n/**\n * Adds an event listener that is removed automatically after the\n * listener fired once.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listenOnce;\n\n\n/**\n * Removes an event listener which was added with listen() or listenOnce().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call\n *     the listener.\n * @return {boolean} Whether any listener was removed.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.unlisten;\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {!goog.events.ListenableKey} key The key returned by\n *     listen() or listenOnce().\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.Listenable.prototype.unlistenByKey;\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n */\ngoog.events.Listenable.prototype.dispatchEvent;\n\n\n/**\n * Removes all listeners from this listenable. If type is specified,\n * it will only remove listeners of the particular type. otherwise all\n * registered listeners will be removed.\n *\n * @param {string=} opt_type Type of event to remove, default is to\n *     remove all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.Listenable.prototype.removeAllListeners;\n\n\n/**\n * Returns the parent of this event target to use for capture/bubble\n * mechanism.\n *\n * NOTE(chrishenry): The name reflects the original implementation of\n * custom event target (`goog.events.EventTarget`). We decided\n * that changing the name is not worth it.\n *\n * @return {goog.events.Listenable} The parent EventTarget or null if\n *     there is no parent.\n */\ngoog.events.Listenable.prototype.getParentEventTarget;\n\n\n/**\n * Fires all registered listeners in this listenable for the given\n * type and capture mode, passing them the given eventObject. This\n * does not perform actual capture/bubble. Only implementors of the\n * interface should be using this.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The type of the\n *     listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @param {EVENTOBJ} eventObject The event object to fire.\n * @return {boolean} Whether all listeners succeeded without\n *     attempting to prevent default behavior. If any listener returns\n *     false or called goog.events.Event#preventDefault, this returns\n *     false.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.fireListeners;\n\n\n/**\n * Gets all listeners in this listenable for the given type and\n * capture mode.\n *\n * @param {string|!goog.events.EventId} type The type of the listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @return {!Array<!goog.events.ListenableKey>} An array of registered\n *     listeners.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListeners;\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The name of the event\n *     without the 'on' prefix.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener The\n *     listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListener;\n\n\n/**\n * Whether there is any active listeners matching the specified\n * signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble\n *     listeners.\n * @return {boolean} Whether there is any active listeners matching\n *     the requested type and/or capture phase.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.hasListener;\n\n\n\n/**\n * An interface that describes a single registered listener.\n * @interface\n */\ngoog.events.ListenableKey = function() {};\n\n\n/**\n * Counter used to create a unique key\n * @type {number}\n * @private\n */\ngoog.events.ListenableKey.counter_ = 0;\n\n\n/**\n * Reserves a key to be used for ListenableKey#key field.\n * @return {number} A number to be used to fill ListenableKey#key\n *     field.\n */\ngoog.events.ListenableKey.reserveKey = function() {\n  return ++goog.events.ListenableKey.counter_;\n};\n\n\n/**\n * The source event target.\n * @type {Object|goog.events.Listenable|goog.events.EventTarget}\n */\ngoog.events.ListenableKey.prototype.src;\n\n\n/**\n * The event type the listener is listening to.\n * @type {string}\n */\ngoog.events.ListenableKey.prototype.type;\n\n\n/**\n * The listener function.\n * @type {function(?):?|{handleEvent:function(?):?}|null}\n */\ngoog.events.ListenableKey.prototype.listener;\n\n\n/**\n * Whether the listener works on capture phase.\n * @type {boolean}\n */\ngoog.events.ListenableKey.prototype.capture;\n\n\n/**\n * The 'this' object for the listener function's scope.\n * @type {Object|undefined}\n */\ngoog.events.ListenableKey.prototype.handler;\n\n\n/**\n * A globally unique number to identify the key.\n * @type {number}\n */\ngoog.events.ListenableKey.prototype.key;\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Listener object.\n * @see ../demos/events.html\n */\n\ngoog.provide('goog.events.Listener');\n\ngoog.require('goog.events.ListenableKey');\n\n\n\n/**\n * Simple class that stores information about a listener\n * @param {function(?):?} listener Callback function.\n * @param {Function} proxy Wrapper for the listener that patches the event.\n * @param {EventTarget|goog.events.Listenable} src Source object for\n *     the event.\n * @param {string} type Event type.\n * @param {boolean} capture Whether in capture or bubble phase.\n * @param {Object=} opt_handler Object in whose context to execute the callback.\n * @implements {goog.events.ListenableKey}\n * @constructor\n */\ngoog.events.Listener = function(\n    listener, proxy, src, type, capture, opt_handler) {\n  if (goog.events.Listener.ENABLE_MONITORING) {\n    this.creationStack = new Error().stack;\n  }\n\n  /** @override */\n  this.listener = listener;\n\n  /**\n   * A wrapper over the original listener. This is used solely to\n   * handle native browser events (it is used to simulate the capture\n   * phase and to patch the event object).\n   * @type {Function}\n   */\n  this.proxy = proxy;\n\n  /**\n   * Object or node that callback is listening to\n   * @type {EventTarget|goog.events.Listenable}\n   */\n  this.src = src;\n\n  /**\n   * The event type.\n   * @const {string}\n   */\n  this.type = type;\n\n  /**\n   * Whether the listener is being called in the capture or bubble phase\n   * @const {boolean}\n   */\n  this.capture = !!capture;\n\n  /**\n   * Optional object whose context to execute the listener in\n   * @type {Object|undefined}\n   */\n  this.handler = opt_handler;\n\n  /**\n   * The key of the listener.\n   * @const {number}\n   * @override\n   */\n  this.key = goog.events.ListenableKey.reserveKey();\n\n  /**\n   * Whether to remove the listener after it has been called.\n   * @type {boolean}\n   */\n  this.callOnce = false;\n\n  /**\n   * Whether the listener has been removed.\n   * @type {boolean}\n   */\n  this.removed = false;\n};\n\n\n/**\n * @define {boolean} Whether to enable the monitoring of the\n *     goog.events.Listener instances. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.define('goog.events.Listener.ENABLE_MONITORING', false);\n\n\n/**\n * If monitoring the goog.events.Listener instances is enabled, stores the\n * creation stack trace of the Disposable instance.\n * @type {string}\n */\ngoog.events.Listener.prototype.creationStack;\n\n\n/**\n * Marks this listener as removed. This also remove references held by\n * this listener object (such as listener and event source).\n */\ngoog.events.Listener.prototype.markAsRemoved = function() {\n  this.removed = true;\n  this.listener = null;\n  this.proxy = null;\n  this.src = null;\n  this.handler = null;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A map of listeners that provides utility functions to\n * deal with listeners on an event target. Used by\n * `goog.events.EventTarget`.\n *\n * WARNING: Do not use this class from outside goog.events package.\n */\n\ngoog.provide('goog.events.ListenerMap');\n\ngoog.require('goog.array');\ngoog.require('goog.events.Listener');\ngoog.require('goog.object');\n\n\n\n/**\n * Creates a new listener map.\n * @param {EventTarget|goog.events.Listenable} src The src object.\n * @constructor\n * @final\n */\ngoog.events.ListenerMap = function(src) {\n  /** @type {EventTarget|goog.events.Listenable} */\n  this.src = src;\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @type {!Object<string, !Array<!goog.events.Listener>>}\n   */\n  this.listeners = {};\n\n  /**\n   * The count of types in this map that have registered listeners.\n   * @private {number}\n   */\n  this.typeCount_ = 0;\n};\n\n\n/**\n * @return {number} The count of event types in this map that actually\n *     have registered listeners.\n */\ngoog.events.ListenerMap.prototype.getTypeCount = function() {\n  return this.typeCount_;\n};\n\n\n/**\n * @return {number} Total number of registered listeners.\n */\ngoog.events.ListenerMap.prototype.getListenerCount = function() {\n  var count = 0;\n  for (var type in this.listeners) {\n    count += this.listeners[type].length;\n  }\n  return count;\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n */\ngoog.events.ListenerMap.prototype.add = function(\n    type, listener, callOnce, opt_useCapture, opt_listenerScope) {\n  var typeStr = type.toString();\n  var listenerArray = this.listeners[typeStr];\n  if (!listenerArray) {\n    listenerArray = this.listeners[typeStr] = [];\n    this.typeCount_++;\n  }\n\n  var listenerObj;\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    listenerObj = listenerArray[index];\n    if (!callOnce) {\n      // Ensure that, if there is an existing callOnce listener, it is no\n      // longer a callOnce listener.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = new goog.events.Listener(\n        listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);\n    listenerObj.callOnce = callOnce;\n    listenerArray.push(listenerObj);\n  }\n  return listenerObj;\n};\n\n\n/**\n * Removes a matching listener.\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.ListenerMap.prototype.remove = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  var typeStr = type.toString();\n  if (!(typeStr in this.listeners)) {\n    return false;\n  }\n\n  var listenerArray = this.listeners[typeStr];\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    var listenerObj = listenerArray[index];\n    listenerObj.markAsRemoved();\n    goog.array.removeAt(listenerArray, index);\n    if (listenerArray.length == 0) {\n      delete this.listeners[typeStr];\n      this.typeCount_--;\n    }\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes the given listener object.\n * @param {!goog.events.ListenableKey} listener The listener to remove.\n * @return {boolean} Whether the listener is removed.\n */\ngoog.events.ListenerMap.prototype.removeByKey = function(listener) {\n  var type = listener.type;\n  if (!(type in this.listeners)) {\n    return false;\n  }\n\n  var removed = goog.array.remove(this.listeners[type], listener);\n  if (removed) {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n    if (this.listeners[type].length == 0) {\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Removes all listeners from this map. If opt_type is provided, only\n * listeners that match the given type are removed.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n * @return {number} Number of listeners removed.\n */\ngoog.events.ListenerMap.prototype.removeAll = function(opt_type) {\n  var typeStr = opt_type && opt_type.toString();\n  var count = 0;\n  for (var type in this.listeners) {\n    if (!typeStr || type == typeStr) {\n      var listenerArray = this.listeners[type];\n      for (var i = 0; i < listenerArray.length; i++) {\n        ++count;\n        listenerArray[i].markAsRemoved();\n      }\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets all listeners that match the given type and capture mode. The\n * returned array is a copy (but the listener objects are not).\n * @param {string|!goog.events.EventId} type The type of the listeners\n *     to retrieve.\n * @param {boolean} capture The capture mode of the listeners to retrieve.\n * @return {!Array<!goog.events.ListenableKey>} An array of matching\n *     listeners.\n */\ngoog.events.ListenerMap.prototype.getListeners = function(type, capture) {\n  var listenerArray = this.listeners[type.toString()];\n  var rv = [];\n  if (listenerArray) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      var listenerObj = listenerArray[i];\n      if (listenerObj.capture == capture) {\n        rv.push(listenerObj);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId} type The type of the listener\n *     to retrieve.\n * @param {!Function} listener The listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n */\ngoog.events.ListenerMap.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  var listenerArray = this.listeners[type.toString()];\n  var i = -1;\n  if (listenerArray) {\n    i = goog.events.ListenerMap.findListenerIndex_(\n        listenerArray, listener, capture, opt_listenerScope);\n  }\n  return i > -1 ? listenerArray[i] : null;\n};\n\n\n/**\n * Whether there is a matching listener. If either the type or capture\n * parameters are unspecified, the function will match on the\n * remaining criteria.\n *\n * @param {string|!goog.events.EventId=} opt_type The type of the listener.\n * @param {boolean=} opt_capture The capture mode of the listener.\n * @return {boolean} Whether there is an active listener matching\n *     the requested type and/or capture phase.\n */\ngoog.events.ListenerMap.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  var hasType = goog.isDef(opt_type);\n  var typeStr = hasType ? opt_type.toString() : '';\n  var hasCapture = goog.isDef(opt_capture);\n\n  return goog.object.some(this.listeners, function(listenerArray, type) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      if ((!hasType || listenerArray[i].type == typeStr) &&\n          (!hasCapture || listenerArray[i].capture == opt_capture)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\n\n\n/**\n * Finds the index of a matching goog.events.Listener in the given\n * listenerArray.\n * @param {!Array<!goog.events.Listener>} listenerArray Array of listener.\n * @param {!Function} listener The listener function.\n * @param {boolean=} opt_useCapture The capture flag for the listener.\n * @param {Object=} opt_listenerScope The listener scope.\n * @return {number} The index of the matching listener within the\n *     listenerArray.\n * @private\n */\ngoog.events.ListenerMap.findListenerIndex_ = function(\n    listenerArray, listener, opt_useCapture, opt_listenerScope) {\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listenerObj = listenerArray[i];\n    if (!listenerObj.removed && listenerObj.listener == listener &&\n        listenerObj.capture == !!opt_useCapture &&\n        listenerObj.handler == opt_listenerScope) {\n      return i;\n    }\n  }\n  return -1;\n};\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview An event manager for both native browser event\n * targets and custom JavaScript event targets\n * (`goog.events.Listenable`). This provides an abstraction\n * over browsers' event systems.\n *\n * It also provides a simulation of W3C event model's capture phase in\n * Internet Explorer (IE 8 and below). Caveat: the simulation does not\n * interact well with listeners registered directly on the elements\n * (bypassing goog.events) or even with listeners registered via\n * goog.events in a separate JS binary. In these cases, we provide\n * no ordering guarantees.\n *\n * The listeners will receive a \"patched\" event object. Such event object\n * contains normalized values for certain event properties that differs in\n * different browsers.\n *\n * Example usage:\n * <pre>\n * goog.events.listen(myNode, 'click', function(e) { alert('woo') });\n * goog.events.listen(myNode, 'mouseover', mouseHandler, true);\n * goog.events.unlisten(myNode, 'mouseover', mouseHandler, true);\n * goog.events.removeAll(myNode);\n * </pre>\n *\n *                                            in IE and event object patching]\n * @author arv@google.com (Erik Arvidsson)\n *\n * @see ../demos/events.html\n * @see ../demos/event-propagation.html\n * @see ../demos/stopevent.html\n */\n\n// IMPLEMENTATION NOTES:\n// goog.events stores an auxiliary data structure on each EventTarget\n// source being listened on. This allows us to take advantage of GC,\n// having the data structure GC'd when the EventTarget is GC'd. This\n// GC behavior is equivalent to using W3C DOM Events directly.\n\ngoog.provide('goog.events');\ngoog.provide('goog.events.CaptureSimulationMode');\ngoog.provide('goog.events.Key');\ngoog.provide('goog.events.ListenableType');\n\ngoog.require('goog.asserts');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.BrowserEvent');\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\n\ngoog.forwardDeclare('goog.debug.ErrorHandler');\ngoog.forwardDeclare('goog.events.EventWrapper');\n\n\n/**\n * @typedef {number|goog.events.ListenableKey}\n */\ngoog.events.Key;\n\n\n/**\n * @typedef {EventTarget|goog.events.Listenable}\n */\ngoog.events.ListenableType;\n\n\n/**\n * Property name on a native event target for the listener map\n * associated with the event target.\n * @private @const {string}\n */\ngoog.events.LISTENER_MAP_PROP_ = 'closure_lm_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * String used to prepend to IE event types.\n * @const\n * @private\n */\ngoog.events.onString_ = 'on';\n\n\n/**\n * Map of computed \"on<eventname>\" strings for IE event types. Caching\n * this removes an extra object allocation in goog.events.listen which\n * improves IE6 performance.\n * @const\n * @dict\n * @private\n */\ngoog.events.onStringMap_ = {};\n\n\n/**\n * @enum {number} Different capture simulation mode for IE8-.\n */\ngoog.events.CaptureSimulationMode = {\n  /**\n   * Does not perform capture simulation. Will asserts in IE8- when you\n   * add capture listeners.\n   */\n  OFF_AND_FAIL: 0,\n\n  /**\n   * Does not perform capture simulation, silently ignore capture\n   * listeners.\n   */\n  OFF_AND_SILENT: 1,\n\n  /**\n   * Performs capture simulation.\n   */\n  ON: 2\n};\n\n\n/**\n * @define {number} The capture simulation mode for IE8-. By default,\n *     this is ON.\n */\ngoog.define('goog.events.CAPTURE_SIMULATION_MODE', 2);\n\n\n/**\n * Estimated count of total native listeners.\n * @private {number}\n */\ngoog.events.listenerCountEstimate_ = 0;\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. A listener can only be added once\n * to an object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method, or an object with a handleEvent function.\n *     WARNING: passing an Object is now softly deprecated.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n */\ngoog.events.listen = function(src, type, listener, opt_options, opt_handler) {\n  if (opt_options && opt_options.once) {\n    return goog.events.listenOnce(\n        src, type, listener, opt_options, opt_handler);\n  }\n  if (goog.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listen(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listen(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ false, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target. A listener can only be added once to an object and if it\n * is added again the key for the listener is returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {EventTarget} src The node to listen to events on.\n * @param {string|?goog.events.EventId<EVENTOBJ>} type Event type.\n * @param {!Function} listener Callback function.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener or otherwise.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} Unique key for the listener.\n * @template EVENTOBJ\n * @private\n */\ngoog.events.listen_ = function(\n    src, type, listener, callOnce, opt_options, opt_handler) {\n  if (!type) {\n    throw new Error('Invalid event type');\n  }\n\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {\n    if (goog.events.CAPTURE_SIMULATION_MODE ==\n        goog.events.CaptureSimulationMode.OFF_AND_FAIL) {\n      goog.asserts.fail('Can not register capture listener in IE8-.');\n      return null;\n    } else if (\n        goog.events.CAPTURE_SIMULATION_MODE ==\n        goog.events.CaptureSimulationMode.OFF_AND_SILENT) {\n      return null;\n    }\n  }\n\n  var listenerMap = goog.events.getListenerMap_(src);\n  if (!listenerMap) {\n    src[goog.events.LISTENER_MAP_PROP_] = listenerMap =\n        new goog.events.ListenerMap(src);\n  }\n\n  var listenerObj = /** @type {goog.events.Listener} */ (\n      listenerMap.add(type, listener, callOnce, capture, opt_handler));\n\n  // If the listenerObj already has a proxy, it has been set up\n  // previously. We simply return.\n  if (listenerObj.proxy) {\n    return listenerObj;\n  }\n\n  var proxy = goog.events.getProxy();\n  listenerObj.proxy = proxy;\n\n  proxy.src = src;\n  proxy.listener = listenerObj;\n\n  // Attach the proxy through the browser's API\n  if (src.addEventListener) {\n    // Don't pass an object as `capture` if the browser doesn't support that.\n    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {\n      opt_options = capture;\n    }\n    // Don't break tests that expect a boolean.\n    if (opt_options === undefined) opt_options = false;\n    src.addEventListener(type.toString(), proxy, opt_options);\n  } else if (src.attachEvent) {\n    // The else if above used to be an unconditional else. It would call\n    // exception on IE11, spoiling the day of some callers. The previous\n    // incarnation of this code, from 2007, indicates that it replaced an\n    // earlier still version that caused excess allocations on IE6.\n    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);\n  } else if (src.addListener && src.removeListener) {\n    // In IE, MediaQueryList uses addListener() insteadd of addEventListener. In\n    // Safari, there is no global for the MediaQueryList constructor, so we just\n    // check whether the object \"looks like\" MediaQueryList.\n    goog.asserts.assert(\n        type === 'change', 'MediaQueryList only has a change event');\n    src.addListener(proxy);\n  } else {\n    throw new Error('addEventListener and attachEvent are unavailable.');\n  }\n\n  goog.events.listenerCountEstimate_++;\n  return listenerObj;\n};\n\n\n/**\n * Helper function for returning a proxy function.\n * @return {!Function} A new or reused function object.\n */\ngoog.events.getProxy = function() {\n  var proxyCallbackFunction = goog.events.handleBrowserEvent_;\n  // Use a local var f to prevent one allocation.\n  var f =\n      goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {\n        return proxyCallbackFunction.call(f.src, f.listener, eventObject);\n      } : function(eventObject) {\n        var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);\n        // NOTE(chrishenry): In IE, we hack in a capture phase. However, if\n        // there is inline event handler which tries to prevent default (for\n        // example <a href=\"...\" onclick=\"return false\">...</a>) in a\n        // descendant element, the prevent default will be overridden\n        // by this listener if this listener were to return true. Hence, we\n        // return undefined.\n        if (!v) return v;\n      };\n  return f;\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. After the event has fired the event\n * listener is removed from the target.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n */\ngoog.events.listenOnce = function(\n    src, type, listener, opt_options, opt_handler) {\n  if (goog.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listenOnce(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ true, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.Listenable}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.Listenable} src The target to\n *     listen to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:T, ?):?|{handleEvent:function(?):?}|null} listener\n *     Callback method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @template T\n */\ngoog.events.listenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.listen(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes an event listener which was added with listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types to unlisten to.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {(boolean|!EventListenerOptions)=} opt_options\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {?boolean} indicating whether the listener was there to remove.\n * @template EVENTOBJ\n */\ngoog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {\n  if (goog.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlisten(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return false;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    var listenerObj = listenerMap.getListener(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n    if (listenerObj) {\n      return goog.events.unlistenByKey(listenerObj);\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {goog.events.Key} key The key returned by listen() for this\n *     event listener.\n * @return {boolean} indicating whether the listener was there to remove.\n */\ngoog.events.unlistenByKey = function(key) {\n  // TODO(chrishenry): Remove this check when tests that rely on this\n  // are fixed.\n  if (goog.isNumber(key)) {\n    return false;\n  }\n\n  var listener = key;\n  if (!listener || listener.removed) {\n    return false;\n  }\n\n  var src = listener.src;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return /** @type {!goog.events.Listenable} */ (src).unlistenByKey(listener);\n  }\n\n  var type = listener.type;\n  var proxy = listener.proxy;\n  if (src.removeEventListener) {\n    src.removeEventListener(type, proxy, listener.capture);\n  } else if (src.detachEvent) {\n    src.detachEvent(goog.events.getOnString_(type), proxy);\n  } else if (src.addListener && src.removeListener) {\n    src.removeListener(proxy);\n  }\n  goog.events.listenerCountEstimate_--;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  // TODO(chrishenry): Try to remove this conditional and execute the\n  // first branch always. This should be safe.\n  if (listenerMap) {\n    listenerMap.removeByKey(listener);\n    if (listenerMap.getTypeCount() == 0) {\n      // Null the src, just because this is simple to do (and useful\n      // for IE <= 7).\n      listenerMap.src = null;\n      // We don't use delete here because IE does not allow delete\n      // on a window object.\n      src[goog.events.LISTENER_MAP_PROP_] = null;\n    }\n  } else {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n  }\n\n  return true;\n};\n\n\n/**\n * Removes an event listener which was added with listenWithWrapper().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n */\ngoog.events.unlistenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.unlisten(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes all listeners from an object. You can also optionally\n * remove listeners of a particular type.\n *\n * @param {Object|undefined} obj Object to remove listeners from. Must be an\n *     EventTarget or a goog.events.Listenable.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n *     Default is all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.removeAll = function(obj, opt_type) {\n  // TODO(chrishenry): Change the type of obj to\n  // (!EventTarget|!goog.events.Listenable).\n\n  if (!obj) {\n    return 0;\n  }\n\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {?} */ (obj).removeAllListeners(opt_type);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  if (!listenerMap) {\n    return 0;\n  }\n\n  var count = 0;\n  var typeStr = opt_type && opt_type.toString();\n  for (var type in listenerMap.listeners) {\n    if (!typeStr || type == typeStr) {\n      // Clone so that we don't need to worry about unlistenByKey\n      // changing the content of the ListenerMap.\n      var listeners = listenerMap.listeners[type].concat();\n      for (var i = 0; i < listeners.length; ++i) {\n        if (goog.events.unlistenByKey(listeners[i])) {\n          ++count;\n        }\n      }\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets the listeners for a given object, type and capture phase.\n *\n * @param {Object} obj Object to get listeners for.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Capture phase?.\n * @return {Array<!goog.events.Listener>} Array of listener objects.\n */\ngoog.events.getListeners = function(obj, type, capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).getListeners(\n        type, capture);\n  } else {\n    if (!obj) {\n      // TODO(chrishenry): We should tighten the API to accept\n      // !EventTarget|goog.events.Listenable, and add an assertion here.\n      return [];\n    }\n\n    var listenerMap = goog.events.getListenerMap_(\n        /** @type {!EventTarget} */ (obj));\n    return listenerMap ? listenerMap.getListeners(type, capture) : [];\n  }\n};\n\n\n/**\n * Gets the goog.events.Listener for the event or null if no such listener is\n * in use.\n *\n * @param {EventTarget|goog.events.Listenable} src The target from\n *     which to get listeners.\n * @param {?string|!goog.events.EventId<EVENTOBJ>} type The type of the event.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to get.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *                            whether the listener is fired during the\n *                            capture or bubble phase of the event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n * @template EVENTOBJ\n */\ngoog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {\n  // TODO(chrishenry): Change type from ?string to string, or add assertion.\n  type = /** @type {string} */ (type);\n  listener = goog.events.wrapListener(listener);\n  var capture = !!opt_capt;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.getListener(type, listener, capture, opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return null;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    return listenerMap.getListener(type, listener, capture, opt_handler);\n  }\n  return null;\n};\n\n\n/**\n * Returns whether an event target has any active listeners matching the\n * specified signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {EventTarget|goog.events.Listenable} obj Target to get\n *     listeners for.\n * @param {string|!goog.events.EventId=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble-phase\n *     listeners.\n * @return {boolean} Whether an event target has one or more listeners matching\n *     the requested type and/or capture phase.\n */\ngoog.events.hasListener = function(obj, opt_type, opt_capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.hasListener(opt_type, opt_capture);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);\n};\n\n\n/**\n * Provides a nice string showing the normalized event objects public members\n * @param {Object} e Event Object.\n * @return {string} String of the public members of the normalized event object.\n */\ngoog.events.expose = function(e) {\n  var str = [];\n  for (var key in e) {\n    if (e[key] && e[key].id) {\n      str.push(key + ' = ' + e[key] + ' (' + e[key].id + ')');\n    } else {\n      str.push(key + ' = ' + e[key]);\n    }\n  }\n  return str.join('\\n');\n};\n\n\n/**\n * Returns a string with on prepended to the specified type. This is used for IE\n * which expects \"on\" to be prepended. This function caches the string in order\n * to avoid extra allocations in steady state.\n * @param {string} type Event type.\n * @return {string} The type string with 'on' prepended.\n * @private\n */\ngoog.events.getOnString_ = function(type) {\n  if (type in goog.events.onStringMap_) {\n    return goog.events.onStringMap_[type];\n  }\n  return goog.events.onStringMap_[type] = goog.events.onString_ + type;\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase\n *\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n */\ngoog.events.fireListeners = function(obj, type, capture, eventObject) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).fireListeners(\n        type, capture, eventObject);\n  }\n\n  return goog.events.fireListeners_(obj, type, capture, eventObject);\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase.\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n * @private\n */\ngoog.events.fireListeners_ = function(obj, type, capture, eventObject) {\n  /** @type {boolean} */\n  var retval = true;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {EventTarget} */ (obj));\n  if (listenerMap) {\n    // TODO(chrishenry): Original code avoids array creation when there\n    // is no listener, so we do the same. If this optimization turns\n    // out to be not required, we can replace this with\n    // listenerMap.getListeners(type, capture) instead, which is simpler.\n    var listenerArray = listenerMap.listeners[type.toString()];\n    if (listenerArray) {\n      listenerArray = listenerArray.concat();\n      for (var i = 0; i < listenerArray.length; i++) {\n        var listener = listenerArray[i];\n        // We might not have a listener if the listener was removed.\n        if (listener && listener.capture == capture && !listener.removed) {\n          var result = goog.events.fireListener(listener, eventObject);\n          retval = retval && (result !== false);\n        }\n      }\n    }\n  }\n  return retval;\n};\n\n\n/**\n * Fires a listener with a set of arguments\n *\n * @param {goog.events.Listener} listener The listener object to call.\n * @param {Object} eventObject The event object to pass to the listener.\n * @return {*} Result of listener.\n */\ngoog.events.fireListener = function(listener, eventObject) {\n  var listenerFn = listener.listener;\n  var listenerHandler = listener.handler || listener.src;\n\n  if (listener.callOnce) {\n    goog.events.unlistenByKey(listener);\n  }\n  return listenerFn.call(listenerHandler, eventObject);\n};\n\n\n/**\n * Gets the total number of listeners currently in the system.\n * @return {number} Number of listeners.\n * @deprecated This returns estimated count, now that Closure no longer\n * stores a central listener registry. We still return an estimation\n * to keep existing listener-related tests passing. In the near future,\n * this function will be removed.\n */\ngoog.events.getTotalListenerCount = function() {\n  return goog.events.listenerCountEstimate_;\n};\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {goog.events.Listenable} src The event target.\n * @param {goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the handlers returns false) this will also return false.\n *     If there are no handlers, or if all handlers return true, this returns\n *     true.\n */\ngoog.events.dispatchEvent = function(src, e) {\n  goog.asserts.assert(\n      goog.events.Listenable.isImplementedBy(src),\n      'Can not use goog.events.dispatchEvent with ' +\n          'non-goog.events.Listenable instance.');\n  return src.dispatchEvent(e);\n};\n\n\n/**\n * Installs exception protection for the browser event entry point using the\n * given error handler.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point.\n */\ngoog.events.protectBrowserEventEntryPoint = function(errorHandler) {\n  goog.events.handleBrowserEvent_ =\n      errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);\n};\n\n\n/**\n * Handles an event and dispatches it to the correct listeners. This\n * function is a proxy for the real listener the user specified.\n *\n * @param {goog.events.Listener} listener The listener object.\n * @param {Event=} opt_evt Optional event object that gets passed in via the\n *     native event handlers.\n * @return {*} Result of the event handler.\n * @this {EventTarget} The object or Element that fired the event.\n * @private\n */\ngoog.events.handleBrowserEvent_ = function(listener, opt_evt) {\n  if (listener.removed) {\n    return true;\n  }\n\n  // Synthesize event propagation if the browser does not support W3C\n  // event model.\n  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {\n    var ieEvent = opt_evt ||\n        /** @type {Event} */ (goog.getObjectByName('window.event'));\n    var evt = new goog.events.BrowserEvent(ieEvent, this);\n    /** @type {*} */\n    var retval = true;\n\n    if (goog.events.CAPTURE_SIMULATION_MODE ==\n        goog.events.CaptureSimulationMode.ON) {\n      // If we have not marked this event yet, we should perform capture\n      // simulation.\n      if (!goog.events.isMarkedIeEvent_(ieEvent)) {\n        goog.events.markIeEvent_(ieEvent);\n\n        var ancestors = [];\n        for (var parent = evt.currentTarget; parent;\n             parent = parent.parentNode) {\n          ancestors.push(parent);\n        }\n\n        // Fire capture listeners.\n        var type = listener.type;\n        for (var i = ancestors.length - 1; !evt.propagationStopped_ && i >= 0;\n             i--) {\n          evt.currentTarget = ancestors[i];\n          var result =\n              goog.events.fireListeners_(ancestors[i], type, true, evt);\n          retval = retval && result;\n        }\n\n        // Fire bubble listeners.\n        //\n        // We can technically rely on IE to perform bubble event\n        // propagation. However, it turns out that IE fires events in\n        // opposite order of attachEvent registration, which broke\n        // some code and tests that rely on the order. (While W3C DOM\n        // Level 2 Events TR leaves the event ordering unspecified,\n        // modern browsers and W3C DOM Level 3 Events Working Draft\n        // actually specify the order as the registration order.)\n        for (var i = 0; !evt.propagationStopped_ && i < ancestors.length; i++) {\n          evt.currentTarget = ancestors[i];\n          var result =\n              goog.events.fireListeners_(ancestors[i], type, false, evt);\n          retval = retval && result;\n        }\n      }\n    } else {\n      retval = goog.events.fireListener(listener, evt);\n    }\n    return retval;\n  }\n\n  // Otherwise, simply fire the listener.\n  return goog.events.fireListener(\n      listener, new goog.events.BrowserEvent(opt_evt, this));\n};\n\n\n/**\n * This is used to mark the IE event object so we do not do the Closure pass\n * twice for a bubbling event.\n * @param {Event} e The IE browser event.\n * @private\n */\ngoog.events.markIeEvent_ = function(e) {\n  // Only the keyCode and the returnValue can be changed. We use keyCode for\n  // non keyboard events.\n  // event.returnValue is a bit more tricky. It is undefined by default. A\n  // boolean false prevents the default action. In a window.onbeforeunload and\n  // the returnValue is non undefined it will be alerted. However, we will only\n  // modify the returnValue for keyboard events. We can get a problem if non\n  // closure events sets the keyCode or the returnValue\n\n  var useReturnValue = false;\n\n  if (e.keyCode == 0) {\n    // We cannot change the keyCode in case that srcElement is input[type=file].\n    // We could test that that is the case but that would allocate 3 objects.\n    // If we use try/catch we will only allocate extra objects in the case of a\n    // failure.\n\n    try {\n      e.keyCode = -1;\n      return;\n    } catch (ex) {\n      useReturnValue = true;\n    }\n  }\n\n  if (useReturnValue ||\n      /** @type {boolean|undefined} */ (e.returnValue) == undefined) {\n    e.returnValue = true;\n  }\n};\n\n\n/**\n * This is used to check if an IE event has already been handled by the Closure\n * system so we do not do the Closure pass twice for a bubbling event.\n * @param {Event} e  The IE browser event.\n * @return {boolean} True if the event object has been marked.\n * @private\n */\ngoog.events.isMarkedIeEvent_ = function(e) {\n  return e.keyCode < 0 || e.returnValue != undefined;\n};\n\n\n/**\n * Counter to create unique event ids.\n * @private {number}\n */\ngoog.events.uniqueIdCounter_ = 0;\n\n\n/**\n * Creates a unique event id.\n *\n * @param {string} identifier The identifier.\n * @return {string} A unique identifier.\n * @idGenerator {unique}\n */\ngoog.events.getUniqueId = function(identifier) {\n  return identifier + '_' + goog.events.uniqueIdCounter_++;\n};\n\n\n/**\n * @param {EventTarget} src The source object.\n * @return {goog.events.ListenerMap} A listener map for the given\n *     source object, or null if none exists.\n * @private\n */\ngoog.events.getListenerMap_ = function(src) {\n  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];\n  // IE serializes the property as well (e.g. when serializing outer\n  // HTML). So we must check that the value is of the correct type.\n  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;\n};\n\n\n/**\n * Expando property for listener function wrapper for Object with\n * handleEvent.\n * @private @const {string}\n */\ngoog.events.LISTENER_WRAPPER_PROP_ =\n    '__closure_events_fn_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * @param {Object|Function} listener The listener function or an\n *     object that contains handleEvent method.\n * @return {!Function} Either the original function or a function that\n *     calls obj.handleEvent. If the same listener is passed to this\n *     function more than once, the same function is guaranteed to be\n *     returned.\n */\ngoog.events.wrapListener = function(listener) {\n  goog.asserts.assert(listener, 'Listener can not be null.');\n\n  if (goog.isFunction(listener)) {\n    return listener;\n  }\n\n  goog.asserts.assert(\n      listener.handleEvent, 'An object listener must have handleEvent method.');\n  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {\n    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {\n      return /** @type {?} */ (listener).handleEvent(e);\n    };\n  }\n  return listener[goog.events.LISTENER_WRAPPER_PROP_];\n};\n\n\n// Register the browser event handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      goog.events.handleBrowserEvent_ =\n          transformer(goog.events.handleBrowserEvent_);\n    });\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A disposable implementation of a custom\n * listenable/event target. See also: documentation for\n * `goog.events.Listenable`.\n *\n * @author arv@google.com (Erik Arvidsson) [Original implementation]\n * @see ../demos/eventtarget.html\n * @see goog.events.Listenable\n */\n\ngoog.provide('goog.events.EventTarget');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.asserts');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.require('goog.object');\n\n\n\n/**\n * An implementation of `goog.events.Listenable` with full W3C\n * EventTarget-like support (capture/bubble mechanism, stopping event\n * propagation, preventing default actions).\n *\n * You may subclass this class to turn your class into a Listenable.\n *\n * Unless propagation is stopped, an event dispatched by an\n * EventTarget will bubble to the parent returned by\n * `getParentEventTarget`. To set the parent, call\n * `setParentEventTarget`. Subclasses that don't support\n * changing the parent can override the setter to throw an error.\n *\n * Example usage:\n * <pre>\n *   var source = new goog.events.EventTarget();\n *   function handleEvent(e) {\n *     alert('Type: ' + e.type + '; Target: ' + e.target);\n *   }\n *   source.listen('foo', handleEvent);\n *   // Or: goog.events.listen(source, 'foo', handleEvent);\n *   ...\n *   source.dispatchEvent('foo');  // will call handleEvent\n *   ...\n *   source.unlisten('foo', handleEvent);\n *   // Or: goog.events.unlisten(source, 'foo', handleEvent);\n * </pre>\n *\n * @constructor\n * @extends {goog.Disposable}\n * @implements {goog.events.Listenable}\n */\ngoog.events.EventTarget = function() {\n  goog.Disposable.call(this);\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @private {!goog.events.ListenerMap}\n   */\n  this.eventTargetListeners_ = new goog.events.ListenerMap(this);\n\n  /**\n   * The object to use for event.target. Useful when mixing in an\n   * EventTarget to another object.\n   * @private {!Object}\n   */\n  this.actualEventTarget_ = this;\n\n  /**\n   * Parent event target, used during event bubbling.\n   *\n   * TODO(chrishenry): Change this to goog.events.Listenable. This\n   * currently breaks people who expect getParentEventTarget to return\n   * goog.events.EventTarget.\n   *\n   * @private {goog.events.EventTarget}\n   */\n  this.parentEventTarget_ = null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\n\n\n/**\n * An artificial cap on the number of ancestors you can have. This is mainly\n * for loop detection.\n * @const {number}\n * @private\n */\ngoog.events.EventTarget.MAX_ANCESTORS_ = 1000;\n\n\n/**\n * Returns the parent of this event target to use for bubbling.\n *\n * @return {goog.events.EventTarget} The parent EventTarget or null if\n *     there is no parent.\n * @override\n */\ngoog.events.EventTarget.prototype.getParentEventTarget = function() {\n  return this.parentEventTarget_;\n};\n\n\n/**\n * Sets the parent of this event target to use for capture/bubble\n * mechanism.\n * @param {goog.events.EventTarget} parent Parent listenable (null if none).\n */\ngoog.events.EventTarget.prototype.setParentEventTarget = function(parent) {\n  this.parentEventTarget_ = parent;\n};\n\n\n/**\n * Adds an event listener to the event target. The same handler can only be\n * added once per the type. Even if you add the same handler multiple times\n * using the same type then it will only be called once when the event is\n * dispatched.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#listen` instead, when possible. Otherwise, use\n *     `goog.events.listen` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.addEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * Removes an event listener from the event target. The handler must be the\n * same object as the one added. If the handler has not been added then\n * nothing is done.\n *\n * @param {string} type The type of the event to listen for.\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#unlisten` instead, when possible. Otherwise, use\n *     `goog.events.unlisten` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.removeEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.dispatchEvent = function(e) {\n  this.assertInitialized_();\n\n  var ancestorsTree, ancestor = this.getParentEventTarget();\n  if (ancestor) {\n    ancestorsTree = [];\n    var ancestorCount = 1;\n    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor);\n      goog.asserts.assert(\n          (++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_),\n          'infinite loop');\n    }\n  }\n\n  return goog.events.EventTarget.dispatchEventInternal_(\n      this.actualEventTarget_, e, ancestorsTree);\n};\n\n\n/**\n * Removes listeners from this object.  Classes that extend EventTarget may\n * need to override this method in order to remove references to DOM Elements\n * and additional listeners.\n * @override\n */\ngoog.events.EventTarget.prototype.disposeInternal = function() {\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n\n  this.removeAllListeners();\n  this.parentEventTarget_ = null;\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(\n      String(type), listener, false /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.add(\n      String(type), listener, true /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.remove(\n      String(type), listener, opt_useCapture, opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.unlistenByKey = function(key) {\n  return this.eventTargetListeners_.removeByKey(key);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {\n  // TODO(chrishenry): Previously, removeAllListeners can be called on\n  // uninitialized EventTarget, so we preserve that behavior. We\n  // should remove this when usages that rely on that fact are purged.\n  if (!this.eventTargetListeners_) {\n    return 0;\n  }\n  return this.eventTargetListeners_.removeAll(opt_type);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.fireListeners = function(\n    type, capture, eventObject) {\n  // TODO(chrishenry): Original code avoids array creation when there\n  // is no listener, so we do the same. If this optimization turns\n  // out to be not required, we can replace this with\n  // getListeners(type, capture) instead, which is simpler.\n  var listenerArray = this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return true;\n  }\n  listenerArray = listenerArray.concat();\n\n  var rv = true;\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listener = listenerArray[i];\n    // We might not have a listener if the listener was removed.\n    if (listener && !listener.removed && listener.capture == capture) {\n      var listenerFn = listener.listener;\n      var listenerHandler = listener.handler || listener.src;\n\n      if (listener.callOnce) {\n        this.unlistenByKey(listener);\n      }\n      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;\n    }\n  }\n\n  return rv && eventObject.returnValue_ != false;\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.getListeners = function(type, capture) {\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  return this.eventTargetListeners_.getListener(\n      String(type), listener, capture, opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;\n  return this.eventTargetListeners_.hasListener(id, opt_capture);\n};\n\n\n/**\n * Sets the target to be used for `event.target` when firing\n * event. Mainly used for testing. For example, see\n * `goog.testing.events.mixinListenable`.\n * @param {!Object} target The target.\n */\ngoog.events.EventTarget.prototype.setTargetForTesting = function(target) {\n  this.actualEventTarget_ = target;\n};\n\n\n/**\n * Asserts that the event target instance is initialized properly.\n * @private\n */\ngoog.events.EventTarget.prototype.assertInitialized_ = function() {\n  goog.asserts.assert(\n      this.eventTargetListeners_,\n      'Event target is not initialized. Did you call the superclass ' +\n          '(goog.events.EventTarget) constructor?');\n};\n\n\n/**\n * Dispatches the given event on the ancestorsTree.\n *\n * @param {!Object} target The target to dispatch on.\n * @param {goog.events.Event|Object|string} e The event object.\n * @param {Array<goog.events.Listenable>=} opt_ancestorsTree The ancestors\n *     tree of the target, in reverse order from the closest ancestor\n *     to the root event target. May be null if the target has no ancestor.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @private\n */\ngoog.events.EventTarget.dispatchEventInternal_ = function(\n    target, e, opt_ancestorsTree) {\n  /** @suppress {missingProperties} */\n  var type = e.type || /** @type {string} */ (e);\n\n  // If accepting a string or object, create a custom event object so that\n  // preventDefault and stopPropagation work with the event.\n  if (goog.isString(e)) {\n    e = new goog.events.Event(e, target);\n  } else if (!(e instanceof goog.events.Event)) {\n    var oldEvent = e;\n    e = new goog.events.Event(type, target);\n    goog.object.extend(e, oldEvent);\n  } else {\n    e.target = e.target || target;\n  }\n\n  var rv = true, currentTarget;\n\n  // Executes all capture listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (var i = opt_ancestorsTree.length - 1; !e.propagationStopped_ && i >= 0;\n         i--) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, true, e) && rv;\n    }\n  }\n\n  // Executes capture and bubble listeners on the target.\n  if (!e.propagationStopped_) {\n    currentTarget = /** @type {?} */ (e.currentTarget = target);\n    rv = currentTarget.fireListeners(type, true, e) && rv;\n    if (!e.propagationStopped_) {\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  // Executes all bubble listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (i = 0; !e.propagationStopped_ && i < opt_ancestorsTree.length; i++) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  return rv;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A timer class to which other classes and objects can listen on.\n * This is only an abstraction above `setInterval`.\n *\n * @see ../demos/timers.html\n */\n\ngoog.provide('goog.Timer');\n\ngoog.require('goog.Promise');\ngoog.require('goog.events.EventTarget');\n\n\n\n/**\n * Class for handling timing events.\n *\n * @param {number=} opt_interval Number of ms between ticks (default: 1ms).\n * @param {Object=} opt_timerObject  An object that has `setTimeout`,\n *     `setInterval`, `clearTimeout` and `clearInterval`\n *     (e.g., `window`).\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.Timer = function(opt_interval, opt_timerObject) {\n  goog.events.EventTarget.call(this);\n\n  /**\n   * Number of ms between ticks\n   * @private {number}\n   */\n  this.interval_ = opt_interval || 1;\n\n  /**\n   * An object that implements `setTimeout`, `setInterval`,\n   * `clearTimeout` and `clearInterval`. We default to the window\n   * object. Changing this on {@link goog.Timer.prototype} changes the object\n   * for all timer instances which can be useful if your environment has some\n   * other implementation of timers than the `window` object.\n   * @private {{setTimeout:!Function, clearTimeout:!Function}}\n   */\n  this.timerObject_ = /** @type {{setTimeout, clearTimeout}} */ (\n      opt_timerObject || goog.Timer.defaultTimerObject);\n\n  /**\n   * Cached `tick_` bound to the object for later use in the timer.\n   * @private {Function}\n   * @const\n   */\n  this.boundTick_ = goog.bind(this.tick_, this);\n\n  /**\n   * Firefox browser often fires the timer event sooner (sometimes MUCH sooner)\n   * than the requested timeout. So we compare the time to when the event was\n   * last fired, and reschedule if appropriate. See also\n   * {@link goog.Timer.intervalScale}.\n   * @private {number}\n   */\n  this.last_ = goog.now();\n};\ngoog.inherits(goog.Timer, goog.events.EventTarget);\n\n\n/**\n * Maximum timeout value.\n *\n * Timeout values too big to fit into a signed 32-bit integer may cause overflow\n * in FF, Safari, and Chrome, resulting in the timeout being scheduled\n * immediately. It makes more sense simply not to schedule these timeouts, since\n * 24.8 days is beyond a reasonable expectation for the browser to stay open.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.MAX_TIMEOUT_ = 2147483647;\n\n\n/**\n * A timer ID that cannot be returned by any known implementation of\n * `window.setTimeout`. Passing this value to `window.clearTimeout`\n * should therefore be a no-op.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.INVALID_TIMEOUT_ID_ = -1;\n\n\n/**\n * Whether this timer is enabled\n * @type {boolean}\n */\ngoog.Timer.prototype.enabled = false;\n\n\n/**\n * An object that implements `setTimeout`, `setInterval`,\n * `clearTimeout` and `clearInterval`. We default to the global\n * object. Changing `goog.Timer.defaultTimerObject` changes the object for\n * all timer instances which can be useful if your environment has some other\n * implementation of timers you'd like to use.\n * @type {{setTimeout, clearTimeout}}\n */\ngoog.Timer.defaultTimerObject = goog.global;\n\n\n/**\n * Variable that controls the timer error correction. If the timer is called\n * before the requested interval times `intervalScale`, which often\n * happens on Mozilla, the timer is rescheduled.\n * @see {@link #last_}\n * @type {number}\n */\ngoog.Timer.intervalScale = 0.8;\n\n\n/**\n * Variable for storing the result of `setInterval`.\n * @private {?number}\n */\ngoog.Timer.prototype.timer_ = null;\n\n\n/**\n * Gets the interval of the timer.\n * @return {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.getInterval = function() {\n  return this.interval_;\n};\n\n\n/**\n * Sets the interval of the timer.\n * @param {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.setInterval = function(interval) {\n  this.interval_ = interval;\n  if (this.timer_ && this.enabled) {\n    // Stop and then start the timer to reset the interval.\n    this.stop();\n    this.start();\n  } else if (this.timer_) {\n    this.stop();\n  }\n};\n\n\n/**\n * Callback for the `setTimeout` used by the timer.\n * @private\n */\ngoog.Timer.prototype.tick_ = function() {\n  if (this.enabled) {\n    var elapsed = goog.now() - this.last_;\n    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {\n      this.timer_ = this.timerObject_.setTimeout(\n          this.boundTick_, this.interval_ - elapsed);\n      return;\n    }\n\n    // Prevents setInterval from registering a duplicate timeout when called\n    // in the timer event handler.\n    if (this.timer_) {\n      this.timerObject_.clearTimeout(this.timer_);\n      this.timer_ = null;\n    }\n\n    this.dispatchTick();\n    // The timer could be stopped in the timer event handler.\n    if (this.enabled) {\n      this.timer_ =\n          this.timerObject_.setTimeout(this.boundTick_, this.interval_);\n      this.last_ = goog.now();\n    }\n  }\n};\n\n\n/**\n * Dispatches the TICK event. This is its own method so subclasses can override.\n */\ngoog.Timer.prototype.dispatchTick = function() {\n  this.dispatchEvent(goog.Timer.TICK);\n};\n\n\n/**\n * Starts the timer.\n */\ngoog.Timer.prototype.start = function() {\n  this.enabled = true;\n\n  // If there is no interval already registered, start it now\n  if (!this.timer_) {\n    // IMPORTANT!\n    // window.setInterval in FireFox has a bug - it fires based on\n    // absolute time, rather than on relative time. What this means\n    // is that if a computer is sleeping/hibernating for 24 hours\n    // and the timer interval was configured to fire every 1000ms,\n    // then after the PC wakes up the timer will fire, in rapid\n    // succession, 3600*24 times.\n    // This bug is described here and is already fixed, but it will\n    // take time to propagate, so for now I am switching this over\n    // to setTimeout logic.\n    //     https://bugzilla.mozilla.org/show_bug.cgi?id=376643\n    //\n    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);\n    this.last_ = goog.now();\n  }\n};\n\n\n/**\n * Stops the timer.\n */\ngoog.Timer.prototype.stop = function() {\n  this.enabled = false;\n  if (this.timer_) {\n    this.timerObject_.clearTimeout(this.timer_);\n    this.timer_ = null;\n  }\n};\n\n\n/** @override */\ngoog.Timer.prototype.disposeInternal = function() {\n  goog.Timer.superClass_.disposeInternal.call(this);\n  this.stop();\n  delete this.timerObject_;\n};\n\n\n/**\n * Constant for the timer's event type.\n * @const\n */\ngoog.Timer.TICK = 'tick';\n\n\n/**\n * Calls the given function once, after the optional pause.\n * <p>\n * The function is always called asynchronously, even if the delay is 0. This\n * is a common trick to schedule a function to run after a batch of browser\n * event processing.\n *\n * @param {function(this:SCOPE)|{handleEvent:function()}|null} listener Function\n *     or object that has a handleEvent method.\n * @param {number=} opt_delay Milliseconds to wait; default is 0.\n * @param {SCOPE=} opt_handler Object in whose scope to call the listener.\n * @return {number} A handle to the timer ID.\n * @template SCOPE\n */\ngoog.Timer.callOnce = function(listener, opt_delay, opt_handler) {\n  if (goog.isFunction(listener)) {\n    if (opt_handler) {\n      listener = goog.bind(listener, opt_handler);\n    }\n  } else if (listener && typeof listener.handleEvent == 'function') {\n    // using typeof to prevent strict js warning\n    listener = goog.bind(listener.handleEvent, listener);\n  } else {\n    throw new Error('Invalid listener argument');\n  }\n\n  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {\n    // Timeouts greater than MAX_INT return immediately due to integer\n    // overflow in many browsers.  Since MAX_INT is 24.8 days, just don't\n    // schedule anything at all.\n    return goog.Timer.INVALID_TIMEOUT_ID_;\n  } else {\n    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);\n  }\n};\n\n\n/**\n * Clears a timeout initiated by {@link #callOnce}.\n * @param {?number} timerId A timer ID.\n */\ngoog.Timer.clear = function(timerId) {\n  goog.Timer.defaultTimerObject.clearTimeout(timerId);\n};\n\n\n/**\n * @param {number} delay Milliseconds to wait.\n * @param {(RESULT|goog.Thenable<RESULT>|Thenable)=} opt_result The value\n *     with which the promise will be resolved.\n * @return {!goog.Promise<RESULT>} A promise that will be resolved after\n *     the specified delay, unless it is canceled first.\n * @template RESULT\n */\ngoog.Timer.promise = function(delay, opt_result) {\n  var timerKey = null;\n  return new goog\n      .Promise(function(resolve, reject) {\n        timerKey =\n            goog.Timer.callOnce(function() { resolve(opt_result); }, delay);\n        if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {\n          reject(new Error('Failed to schedule timer.'));\n        }\n      })\n      .thenCatch(function(error) {\n        // Clear the timer. The most likely reason is \"cancel\" signal.\n        goog.Timer.clear(timerKey);\n        throw error;\n      });\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Generics method for collection-like classes and objects.\n *\n * @author arv@google.com (Erik Arvidsson)\n *\n * This file contains functions to work with collections. It supports using\n * Map, Set, Array and Object and other classes that implement collection-like\n * methods.\n * @suppress {strictMissingProperties}\n */\n\n\ngoog.provide('goog.structs');\n\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n// We treat an object as a dictionary if it has getKeys or it is an object that\n// isn't arrayLike.\n\n\n/**\n * Returns the number of values in the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {number} The number of values in the collection-like object.\n */\ngoog.structs.getCount = function(col) {\n  if (col.getCount && typeof col.getCount == 'function') {\n    return col.getCount();\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return col.length;\n  }\n  return goog.object.getCount(col);\n};\n\n\n/**\n * Returns the values of the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {!Array<?>} The values in the collection-like object.\n */\ngoog.structs.getValues = function(col) {\n  if (col.getValues && typeof col.getValues == 'function') {\n    return col.getValues();\n  }\n  if (goog.isString(col)) {\n    return col.split('');\n  }\n  if (goog.isArrayLike(col)) {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(col[i]);\n    }\n    return rv;\n  }\n  return goog.object.getValues(col);\n};\n\n\n/**\n * Returns the keys of the collection. Some collections have no notion of\n * keys/indexes and this function will return undefined in those cases.\n * @param {Object} col The collection-like object.\n * @return {!Array|undefined} The keys in the collection.\n */\ngoog.structs.getKeys = function(col) {\n  if (col.getKeys && typeof col.getKeys == 'function') {\n    return col.getKeys();\n  }\n  // if we have getValues but no getKeys we know this is a key-less collection\n  if (col.getValues && typeof col.getValues == 'function') {\n    return undefined;\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(i);\n    }\n    return rv;\n  }\n\n  return goog.object.getKeys(col);\n};\n\n\n/**\n * Whether the collection contains the given value. This is O(n) and uses\n * equals (==) to test the existence.\n * @param {Object} col The collection-like object.\n * @param {*} val The value to check for.\n * @return {boolean} True if the map contains the value.\n */\ngoog.structs.contains = function(col, val) {\n  if (col.contains && typeof col.contains == 'function') {\n    return col.contains(val);\n  }\n  if (col.containsValue && typeof col.containsValue == 'function') {\n    return col.containsValue(val);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.contains(/** @type {!Array<?>} */ (col), val);\n  }\n  return goog.object.containsValue(col, val);\n};\n\n\n/**\n * Whether the collection is empty.\n * @param {Object} col The collection-like object.\n * @return {boolean} True if empty.\n */\ngoog.structs.isEmpty = function(col) {\n  if (col.isEmpty && typeof col.isEmpty == 'function') {\n    return col.isEmpty();\n  }\n\n  // We do not use goog.string.isEmptyOrWhitespace because here we treat the\n  // string as\n  // collection and as such even whitespace matters\n\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.isEmpty(/** @type {!Array<?>} */ (col));\n  }\n  return goog.object.isEmpty(col);\n};\n\n\n/**\n * Removes all the elements from the collection.\n * @param {Object} col The collection-like object.\n */\ngoog.structs.clear = function(col) {\n  // NOTE(arv): This should not contain strings because strings are immutable\n  if (col.clear && typeof col.clear == 'function') {\n    col.clear();\n  } else if (goog.isArrayLike(col)) {\n    goog.array.clear(/** @type {IArrayLike<?>} */ (col));\n  } else {\n    goog.object.clear(col);\n  }\n};\n\n\n/**\n * Calls a function for each value in a collection. The function takes\n * three arguments; the value, the key and the collection.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):?} f The function to call for every value.\n *     This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and the return value is irrelevant.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @template T,S\n * @deprecated Use a more specific method, e.g. goog.array.forEach,\n *     goog.object.forEach, or for-of.\n */\ngoog.structs.forEach = function(col, f, opt_obj) {\n  if (col.forEach && typeof col.forEach == 'function') {\n    col.forEach(f, opt_obj);\n  } else if (goog.isArrayLike(col) || goog.isString(col)) {\n    goog.array.forEach(/** @type {!Array<?>} */ (col), f, opt_obj);\n  } else {\n    var keys = goog.structs.getKeys(col);\n    var values = goog.structs.getValues(col);\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n      f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col);\n    }\n  }\n};\n\n\n/**\n * Calls a function for every value in the collection. When a call returns true,\n * adds the value to a new collection (Array is returned by default).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and should return a Boolean. If the\n *     return value is true the value is added to the result collection. If it\n *     is false the value is not included.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object|!Array<?>} A new collection where the passed values are\n *     present. If col is a key-less collection an array is returned.  If col\n *     has keys and values a plain old JS object is returned.\n * @template T,S\n */\ngoog.structs.filter = function(col, f, opt_obj) {\n  if (typeof col.filter == 'function') {\n    return col.filter(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.filter(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      if (f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col)) {\n        rv[keys[i]] = values[i];\n      }\n    }\n  } else {\n    // We should not use goog.array.filter here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      if (f.call(opt_obj, values[i], undefined, col)) {\n        rv.push(values[i]);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls a function for every value in the collection and adds the result into a\n * new collection (defaults to creating a new Array).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):V} f The function to call for every value.\n *     This function takes 3 arguments (the value, the key or undefined if the\n *     collection has no notion of keys, and the collection) and should return\n *     something. The result will be used as the value in the new collection.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object<V>|!Array<V>} A new collection with the new values.  If\n *     col is a key-less collection an array is returned.  If col has keys and\n *     values a plain old JS object is returned.\n * @template T,S,V\n */\ngoog.structs.map = function(col, f, opt_obj) {\n  if (typeof col.map == 'function') {\n    return col.map(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.map(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      rv[keys[i]] = f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col);\n    }\n  } else {\n    // We should not use goog.array.map here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      rv[i] = f.call(/** @type {?} */ (opt_obj), values[i], undefined, col);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls f for each value in a collection. If any call returns true this returns\n * true (without checking the rest). If all returns false this returns false.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or undefined\n *     if the collection has no notion of keys, and the collection) and should\n *     return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if any value passes the test.\n * @template T,S\n */\ngoog.structs.some = function(col, f, opt_obj) {\n  if (typeof col.some == 'function') {\n    return col.some(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.some(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Calls f for each value in a collection. If all calls return true this return\n * true this returns true. If any returns false this returns false at this point\n *  and does not continue to check the remaining values.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or\n *     undefined if the collection has no notion of keys, and the collection)\n *     and should return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if all key-value pairs pass the test.\n * @template T,S\n */\ngoog.structs.every = function(col, f, opt_obj) {\n  if (typeof col.every == 'function') {\n    return col.every(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.every(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (!f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return false;\n    }\n  }\n  return true;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Datastructure: Hash Map.\n *\n * @author arv@google.com (Erik Arvidsson)\n *\n * This file contains an implementation of a Map structure. It implements a lot\n * of the methods used in goog.structs so those functions work on hashes. This\n * is best suited for complex key types. For simple keys such as numbers and\n * strings consider using the lighter-weight utilities in goog.object.\n */\n\n\ngoog.provide('goog.structs.Map');\n\ngoog.require('goog.iter.Iterator');\ngoog.require('goog.iter.StopIteration');\n\n\n\n/**\n * Class for Hash Map datastructure.\n * @param {*=} opt_map Map or Object to initialize the map with.\n * @param {...*} var_args If 2 or more arguments are present then they\n *     will be used as key-value pairs.\n * @constructor\n * @template K, V\n * @deprecated This type is misleading: use ES6 Map instead.\n */\ngoog.structs.Map = function(opt_map, var_args) {\n\n  /**\n   * Underlying JS object used to implement the map.\n   * @private {!Object}\n   */\n  this.map_ = {};\n\n  /**\n   * An array of keys. This is necessary for two reasons:\n   *   1. Iterating the keys using for (var key in this.map_) allocates an\n   *      object for every key in IE which is really bad for IE6 GC perf.\n   *   2. Without a side data structure, we would need to escape all the keys\n   *      as that would be the only way we could tell during iteration if the\n   *      key was an internal key or a property of the object.\n   *\n   * This array can contain deleted keys so it's necessary to check the map\n   * as well to see if the key is still in the map (this doesn't require a\n   * memory allocation in IE).\n   * @private {!Array<string>}\n   */\n  this.keys_ = [];\n\n  /**\n   * The number of key value pairs in the map.\n   * @private {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * Version used to detect changes while iterating.\n   * @private {number}\n   */\n  this.version_ = 0;\n\n  var argLength = arguments.length;\n\n  if (argLength > 1) {\n    if (argLength % 2) {\n      throw new Error('Uneven number of arguments');\n    }\n    for (var i = 0; i < argLength; i += 2) {\n      this.set(arguments[i], arguments[i + 1]);\n    }\n  } else if (opt_map) {\n    this.addAll(/** @type {!Object} */ (opt_map));\n  }\n};\n\n\n/**\n * @return {number} The number of key-value pairs in the map.\n */\ngoog.structs.Map.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * Returns the values of the map.\n * @return {!Array<V>} The values in the map.\n */\ngoog.structs.Map.prototype.getValues = function() {\n  this.cleanupKeysArray_();\n\n  var rv = [];\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    rv.push(this.map_[key]);\n  }\n  return rv;\n};\n\n\n/**\n * Returns the keys of the map.\n * @return {!Array<string>} Array of string values.\n */\ngoog.structs.Map.prototype.getKeys = function() {\n  this.cleanupKeysArray_();\n  return /** @type {!Array<string>} */ (this.keys_.concat());\n};\n\n\n/**\n * Whether the map contains the given key.\n * @param {*} key The key to check for.\n * @return {boolean} Whether the map contains the key.\n */\ngoog.structs.Map.prototype.containsKey = function(key) {\n  return goog.structs.Map.hasKey_(this.map_, key);\n};\n\n\n/**\n * Whether the map contains the given value. This is O(n).\n * @param {V} val The value to check for.\n * @return {boolean} Whether the map contains the value.\n */\ngoog.structs.Map.prototype.containsValue = function(val) {\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Whether this map is equal to the argument map.\n * @param {goog.structs.Map} otherMap The map against which to test equality.\n * @param {function(V, V): boolean=} opt_equalityFn Optional equality function\n *     to test equality of values. If not specified, this will test whether\n *     the values contained in each map are identical objects.\n * @return {boolean} Whether the maps are equal.\n */\ngoog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {\n  if (this === otherMap) {\n    return true;\n  }\n\n  if (this.count_ != otherMap.getCount()) {\n    return false;\n  }\n\n  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;\n\n  this.cleanupKeysArray_();\n  for (var key, i = 0; key = this.keys_[i]; i++) {\n    if (!equalityFn(this.get(key), otherMap.get(key))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Default equality test for values.\n * @param {*} a The first value.\n * @param {*} b The second value.\n * @return {boolean} Whether a and b reference the same object.\n */\ngoog.structs.Map.defaultEquals = function(a, b) {\n  return a === b;\n};\n\n\n/**\n * @return {boolean} Whether the map is empty.\n */\ngoog.structs.Map.prototype.isEmpty = function() {\n  return this.count_ == 0;\n};\n\n\n/**\n * Removes all key-value pairs from the map.\n */\ngoog.structs.Map.prototype.clear = function() {\n  this.map_ = {};\n  this.keys_.length = 0;\n  this.count_ = 0;\n  this.version_ = 0;\n};\n\n\n/**\n * Removes a key-value pair based on the key. This is O(logN) amortized due to\n * updating the keys array whenever the count becomes half the size of the keys\n * in the keys array.\n * @param {*} key  The key to remove.\n * @return {boolean} Whether object was removed.\n */\ngoog.structs.Map.prototype.remove = function(key) {\n  if (goog.structs.Map.hasKey_(this.map_, key)) {\n    delete this.map_[key];\n    this.count_--;\n    this.version_++;\n\n    // clean up the keys array if the threshold is hit\n    if (this.keys_.length > 2 * this.count_) {\n      this.cleanupKeysArray_();\n    }\n\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Cleans up the temp keys array by removing entries that are no longer in the\n * map.\n * @private\n */\ngoog.structs.Map.prototype.cleanupKeysArray_ = function() {\n  if (this.count_ != this.keys_.length) {\n    // First remove keys that are no longer in the map.\n    var srcIndex = 0;\n    var destIndex = 0;\n    while (srcIndex < this.keys_.length) {\n      var key = this.keys_[srcIndex];\n      if (goog.structs.Map.hasKey_(this.map_, key)) {\n        this.keys_[destIndex++] = key;\n      }\n      srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n\n  if (this.count_ != this.keys_.length) {\n    // If the count still isn't correct, that means we have duplicates. This can\n    // happen when the same key is added and removed multiple times. Now we have\n    // to allocate one extra Object to remove the duplicates. This could have\n    // been done in the first pass, but in the common case, we can avoid\n    // allocating an extra object by only doing this when necessary.\n    var seen = {};\n    var srcIndex = 0;\n    var destIndex = 0;\n    while (srcIndex < this.keys_.length) {\n      var key = this.keys_[srcIndex];\n      if (!(goog.structs.Map.hasKey_(seen, key))) {\n        this.keys_[destIndex++] = key;\n        seen[key] = 1;\n      }\n      srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n};\n\n\n/**\n * Returns the value for the given key.  If the key is not found and the default\n * value is not given this will return `undefined`.\n * @param {*} key The key to get the value for.\n * @param {DEFAULT=} opt_val The value to return if no item is found for the\n *     given key, defaults to undefined.\n * @return {V|DEFAULT} The value for the given key.\n * @template DEFAULT\n */\ngoog.structs.Map.prototype.get = function(key, opt_val) {\n  if (goog.structs.Map.hasKey_(this.map_, key)) {\n    return this.map_[key];\n  }\n  return opt_val;\n};\n\n\n/**\n * Adds a key-value pair to the map.\n * @param {*} key The key.\n * @param {V} value The value to add.\n * @return {*} Some subclasses return a value.\n */\ngoog.structs.Map.prototype.set = function(key, value) {\n  if (!(goog.structs.Map.hasKey_(this.map_, key))) {\n    this.count_++;\n    // TODO(johnlenz): This class lies, it claims to return an array of string\n    // keys, but instead returns the original object used.\n    this.keys_.push(/** @type {?} */ (key));\n    // Only change the version if we add a new key.\n    this.version_++;\n  }\n  this.map_[key] = value;\n};\n\n\n/**\n * Adds multiple key-value pairs from another goog.structs.Map or Object.\n * @param {?Object} map Object containing the data to add.\n */\ngoog.structs.Map.prototype.addAll = function(map) {\n  if (map instanceof goog.structs.Map) {\n    var keys = map.getKeys();\n    for (var i = 0; i < keys.length; i++) {\n      this.set(keys[i], map.get(keys[i]));\n    }\n  } else {\n    for (var key in map) {\n      this.set(key, map[key]);\n    }\n  }\n};\n\n\n/**\n * Calls the given function on each entry in the map.\n * @param {function(this:T, V, K, goog.structs.Map<K,V>)} f\n * @param {T=} opt_obj The value of \"this\" inside f.\n * @template T\n */\ngoog.structs.Map.prototype.forEach = function(f, opt_obj) {\n  var keys = this.getKeys();\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = this.get(key);\n    f.call(opt_obj, value, key, this);\n  }\n};\n\n\n/**\n * Clones a map and returns a new map.\n * @return {!goog.structs.Map} A new map with the same key-value pairs.\n */\ngoog.structs.Map.prototype.clone = function() {\n  return new goog.structs.Map(this);\n};\n\n\n/**\n * Returns a new map in which all the keys and values are interchanged\n * (keys become values and values become keys). If multiple keys map to the\n * same value, the chosen transposed value is implementation-dependent.\n *\n * It acts very similarly to {goog.object.transpose(Object)}.\n *\n * @return {!goog.structs.Map} The transposed map.\n */\ngoog.structs.Map.prototype.transpose = function() {\n  var transposed = new goog.structs.Map();\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    var value = this.map_[key];\n    transposed.set(value, key);\n  }\n\n  return transposed;\n};\n\n\n/**\n * @return {!Object} Object representation of the map.\n */\ngoog.structs.Map.prototype.toObject = function() {\n  this.cleanupKeysArray_();\n  var obj = {};\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    obj[key] = this.map_[key];\n  }\n  return obj;\n};\n\n\n/**\n * Returns an iterator that iterates over the keys in the map.  Removal of keys\n * while iterating might have undesired side effects.\n * @return {!goog.iter.Iterator} An iterator over the keys in the map.\n */\ngoog.structs.Map.prototype.getKeyIterator = function() {\n  return this.__iterator__(true);\n};\n\n\n/**\n * Returns an iterator that iterates over the values in the map.  Removal of\n * keys while iterating might have undesired side effects.\n * @return {!goog.iter.Iterator} An iterator over the values in the map.\n */\ngoog.structs.Map.prototype.getValueIterator = function() {\n  return this.__iterator__(false);\n};\n\n\n/**\n * Returns an iterator that iterates over the values or the keys in the map.\n * This throws an exception if the map was mutated since the iterator was\n * created.\n * @param {boolean=} opt_keys True to iterate over the keys. False to iterate\n *     over the values.  The default value is false.\n * @return {!goog.iter.Iterator} An iterator over the values or keys in the map.\n */\ngoog.structs.Map.prototype.__iterator__ = function(opt_keys) {\n  // Clean up keys to minimize the risk of iterating over dead keys.\n  this.cleanupKeysArray_();\n\n  var i = 0;\n  var version = this.version_;\n  var selfObj = this;\n\n  var newIter = new goog.iter.Iterator;\n  newIter.next = function() {\n    if (version != selfObj.version_) {\n      throw new Error('The map has changed since the iterator was created');\n    }\n    if (i >= selfObj.keys_.length) {\n      throw goog.iter.StopIteration;\n    }\n    var key = selfObj.keys_[i++];\n    return opt_keys ? key : selfObj.map_[key];\n  };\n  return newIter;\n};\n\n\n/**\n * Safe way to test for hasOwnProperty.  It even allows testing for\n * 'hasOwnProperty'.\n * @param {!Object} obj The object to test for presence of the given key.\n * @param {*} key The key to check for.\n * @return {boolean} Whether the object has the key.\n * @private\n */\ngoog.structs.Map.hasKey_ = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Simple utilities for dealing with URI strings.\n *\n * This is intended to be a lightweight alternative to constructing goog.Uri\n * objects.  Whereas goog.Uri adds several kilobytes to the binary regardless\n * of how much of its functionality you use, this is designed to be a set of\n * mostly-independent utilities so that the compiler includes only what is\n * necessary for the task.  Estimated savings of porting is 5k pre-gzip and\n * 1.5k post-gzip.  To ensure the savings remain, future developers should\n * avoid adding new functionality to existing functions, but instead create\n * new ones and factor out shared code.\n *\n * Many of these utilities have limited functionality, tailored to common\n * cases.  The query parameter utilities assume that the parameter keys are\n * already encoded, since most keys are compile-time alphanumeric strings.  The\n * query parameter mutation utilities also do not tolerate fragment identifiers.\n *\n * By design, these functions can be slower than goog.Uri equivalents.\n * Repeated calls to some of functions may be quadratic in behavior for IE,\n * although the effect is somewhat limited given the 2kb limit.\n *\n * One advantage of the limited functionality here is that this approach is\n * less sensitive to differences in URI encodings than goog.Uri, since these\n * functions operate on strings directly, rather than decoding them and\n * then re-encoding.\n *\n * Uses features of RFC 3986 for parsing/formatting URIs:\n *   http://www.ietf.org/rfc/rfc3986.txt\n *\n * @author gboyer@google.com (Garrett Boyer) - The \"lightened\" design.\n * @author msamuel@google.com (Mike Samuel) - Domain knowledge and regexes.\n */\n\ngoog.provide('goog.uri.utils');\ngoog.provide('goog.uri.utils.ComponentIndex');\ngoog.provide('goog.uri.utils.QueryArray');\ngoog.provide('goog.uri.utils.QueryValue');\ngoog.provide('goog.uri.utils.StandardQueryParam');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.string');\n\n\n/**\n * Character codes inlined to avoid object allocations due to charCode.\n * @enum {number}\n * @private\n */\ngoog.uri.utils.CharCode_ = {\n  AMPERSAND: 38,\n  EQUAL: 61,\n  HASH: 35,\n  QUESTION: 63\n};\n\n\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?string=} opt_scheme The scheme such as 'http'.\n * @param {?string=} opt_userInfo The user name before the '@'.\n * @param {?string=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {(string|number|null)=} opt_port The port number.\n * @param {?string=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?string=} opt_queryData The URI-encoded query data.\n * @param {?string=} opt_fragment The URI-encoded fragment identifier.\n * @return {string} The fully combined URI.\n */\ngoog.uri.utils.buildFromEncodedParts = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData,\n    opt_fragment) {\n  var out = '';\n\n  if (opt_scheme) {\n    out += opt_scheme + ':';\n  }\n\n  if (opt_domain) {\n    out += '//';\n\n    if (opt_userInfo) {\n      out += opt_userInfo + '@';\n    }\n\n    out += opt_domain;\n\n    if (opt_port) {\n      out += ':' + opt_port;\n    }\n  }\n\n  if (opt_path) {\n    out += opt_path;\n  }\n\n  if (opt_queryData) {\n    out += '?' + opt_queryData;\n  }\n\n  if (opt_fragment) {\n    out += '#' + opt_fragment;\n  }\n\n  return out;\n};\n\n\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.ietf.org/rfc/rfc3986.txt} says in Appendix B\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @type {!RegExp}\n * @private\n */\ngoog.uri.utils.splitRe_ = new RegExp(\n    '^' +\n    '(?:' +\n    '([^:/?#.]+)' +  // scheme - ignore special characters\n                     // used by other URL parts such as :,\n                     // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +  // userInfo\n    '([^/#?]*?)' +       // domain\n    '(?::([0-9]+))?' +   // port\n    '(?=[/#?]|$)' +      // authority-terminating character\n    ')?' +\n    '([^?#]+)?' +          // path\n    '(?:\\\\?([^#]*))?' +    // query\n    '(?:#([\\\\s\\\\S]*))?' +  // fragment\n    '$');\n\n\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\ngoog.uri.utils.ComponentIndex = {\n  SCHEME: 1,\n  USER_INFO: 2,\n  DOMAIN: 3,\n  PORT: 4,\n  PATH: 5,\n  QUERY_DATA: 6,\n  FRAGMENT: 7\n};\n\n\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.ComponentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {string} uri The URI string to examine.\n * @return {!Array<string|undefined>} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\ngoog.uri.utils.split = function(uri) {\n  // See @return comment -- never null.\n  return /** @type {!Array<string|undefined>} */ (\n      uri.match(goog.uri.utils.splitRe_));\n};\n\n\n/**\n * @param {?string} uri A possibly null string.\n * @param {boolean=} opt_preserveReserved If true, percent-encoding of RFC-3986\n *     reserved characters will not be removed.\n * @return {?string} The string URI-decoded, or null if uri is null.\n * @private\n */\ngoog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {\n  if (!uri) {\n    return uri;\n  }\n\n  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);\n};\n\n\n/**\n * Gets a URI component by index.\n *\n * It is preferred to use the getPathEncoded() variety of functions ahead,\n * since they are more readable.\n *\n * @param {goog.uri.utils.ComponentIndex} componentIndex The component index.\n * @param {string} uri The URI to examine.\n * @return {?string} The still-encoded component, or null if the component\n *     is not present.\n * @private\n */\ngoog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {\n  // Convert undefined, null, and empty string into null.\n  return goog.uri.utils.split(uri)[componentIndex] || null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The protocol or scheme, or null if none.  Does not\n *     include trailing colons or slashes.\n */\ngoog.uri.utils.getScheme = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.SCHEME, uri);\n};\n\n\n/**\n * Gets the effective scheme for the URL.  If the URL is relative then the\n * scheme is derived from the page's location.\n * @param {string} uri The URI to examine.\n * @return {string} The protocol or scheme, always lower case.\n */\ngoog.uri.utils.getEffectiveScheme = function(uri) {\n  var scheme = goog.uri.utils.getScheme(uri);\n  if (!scheme && goog.global.self && goog.global.self.location) {\n    var protocol = goog.global.self.location.protocol;\n    scheme = protocol.substr(0, protocol.length - 1);\n  }\n  // NOTE: When called from a web worker in Firefox 3.5, location maybe null.\n  // All other browsers with web workers support self.location from the worker.\n  return scheme ? scheme.toLowerCase() : '';\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The user name still encoded, or null if none.\n */\ngoog.uri.utils.getUserInfoEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.USER_INFO, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded user info, or null if none.\n */\ngoog.uri.utils.getUserInfo = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getUserInfoEncoded(uri));\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The domain name still encoded, or null if none.\n */\ngoog.uri.utils.getDomainEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.DOMAIN, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded domain, or null if none.\n */\ngoog.uri.utils.getDomain = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getDomainEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?number} The port number, or null if none.\n */\ngoog.uri.utils.getPort = function(uri) {\n  // Coerce to a number.  If the result of getComponentByIndex_ is null or\n  // non-numeric, the number coersion yields NaN.  This will then return\n  // null for all non-numeric cases (though also zero, which isn't a relevant\n  // port number).\n  return Number(\n             goog.uri.utils.getComponentByIndex_(\n                 goog.uri.utils.ComponentIndex.PORT, uri)) ||\n      null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The path still encoded, or null if none. Includes the\n *     leading slash, if any.\n */\ngoog.uri.utils.getPathEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.PATH, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded path, or null if none.  Includes the leading\n *     slash, if any.\n */\ngoog.uri.utils.getPath = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getPathEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The query data still encoded, or null if none.  Does not\n *     include the question mark itself.\n */\ngoog.uri.utils.getQueryData = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.QUERY_DATA, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The fragment identifier, or null if none.  Does not\n *     include the hash mark itself.\n */\ngoog.uri.utils.getFragmentEncoded = function(uri) {\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @param {?string} fragment The encoded fragment identifier, or null if none.\n *     Does not include the hash mark itself.\n * @return {string} The URI with the fragment set.\n */\ngoog.uri.utils.setFragmentEncoded = function(uri, fragment) {\n  return goog.uri.utils.removeFragment(uri) + (fragment ? '#' + fragment : '');\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded fragment identifier, or null if none.  Does\n *     not include the hash mark.\n */\ngoog.uri.utils.getFragment = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getFragmentEncoded(uri));\n};\n\n\n/**\n * Extracts everything up to the port of the URI.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getHost = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME],\n      pieces[goog.uri.utils.ComponentIndex.USER_INFO],\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Returns the origin for a given URL.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getOrigin = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME], null /* opt_userInfo */,\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Extracts the path of the URL and everything after.\n * @param {string} uri The URI string.\n * @return {string} The URI, starting at the path and including the query\n *     parameters and fragment identifier.\n */\ngoog.uri.utils.getPathAndAfter = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH],\n      pieces[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Gets the URI with the fragment identifier removed.\n * @param {string} uri The URI to examine.\n * @return {string} Everything preceding the hash mark.\n */\ngoog.uri.utils.removeFragment = function(uri) {\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);\n};\n\n\n/**\n * Ensures that two URI's have the exact same domain, scheme, and port.\n *\n * Unlike the version in goog.Uri, this checks protocol, and therefore is\n * suitable for checking against the browser's same-origin policy.\n *\n * @param {string} uri1 The first URI.\n * @param {string} uri2 The second URI.\n * @return {boolean} Whether they have the same scheme, domain and port.\n */\ngoog.uri.utils.haveSameDomain = function(uri1, uri2) {\n  var pieces1 = goog.uri.utils.split(uri1);\n  var pieces2 = goog.uri.utils.split(uri2);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.SCHEME] ==\n      pieces2[goog.uri.utils.ComponentIndex.SCHEME] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n/**\n * Asserts that there are no fragment or query identifiers, only in uncompiled\n * mode.\n * @param {string} uri The URI to examine.\n * @private\n */\ngoog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {\n  goog.asserts.assert(\n      uri.indexOf('#') < 0 && uri.indexOf('?') < 0,\n      'goog.uri.utils: Fragment or query identifiers are not supported: [%s]',\n      uri);\n};\n\n\n/**\n * Supported query parameter values by the parameter serializing utilities.\n *\n * If a value is null or undefined, the key-value pair is skipped, as an easy\n * way to omit parameters conditionally.  Non-array parameters are converted\n * to a string and URI encoded.  Array values are expanded into multiple\n * &key=value pairs, with each element stringized and URI-encoded.\n *\n * @typedef {*}\n */\ngoog.uri.utils.QueryValue;\n\n\n/**\n * An array representing a set of query parameters with alternating keys\n * and values.\n *\n * Keys are assumed to be URI encoded already and live at even indices.  See\n * goog.uri.utils.QueryValue for details on how parameter values are encoded.\n *\n * Example:\n * <pre>\n * var data = [\n *   // Simple param: ?name=BobBarker\n *   'name', 'BobBarker',\n *   // Conditional param -- may be omitted entirely.\n *   'specialDietaryNeeds', hasDietaryNeeds() ? getDietaryNeeds() : null,\n *   // Multi-valued param: &house=LosAngeles&house=NewYork&house=null\n *   'house', ['LosAngeles', 'NewYork', null]\n * ];\n * </pre>\n *\n * @typedef {!Array<string|goog.uri.utils.QueryValue>}\n */\ngoog.uri.utils.QueryArray;\n\n\n/**\n * Parses encoded query parameters and calls callback function for every\n * parameter found in the string.\n *\n * Missing value of parameter (e.g. “…&key&…”) is treated as if the value was an\n * empty string.  Keys may be empty strings (e.g. “…&=value&…”) which also means\n * that “…&=&…” and “…&&…” will result in an empty key and value.\n *\n * @param {string} encodedQuery Encoded query string excluding question mark at\n *     the beginning.\n * @param {function(string, string)} callback Function called for every\n *     parameter found in query string.  The first argument (name) will not be\n *     urldecoded (so the function is consistent with buildQueryData), but the\n *     second will.  If the parameter has no value (i.e. “=” was not present)\n *     the second argument (value) will be an empty string.\n */\ngoog.uri.utils.parseQueryData = function(encodedQuery, callback) {\n  if (!encodedQuery) {\n    return;\n  }\n  var pairs = encodedQuery.split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    var indexOfEquals = pairs[i].indexOf('=');\n    var name = null;\n    var value = null;\n    if (indexOfEquals >= 0) {\n      name = pairs[i].substring(0, indexOfEquals);\n      value = pairs[i].substring(indexOfEquals + 1);\n    } else {\n      name = pairs[i];\n    }\n    callback(name, value ? goog.string.urlDecode(value) : '');\n  }\n};\n\n\n/**\n * Split the URI into 3 parts where the [1] is the queryData without a leading\n * '?'. For example, the URI http://foo.com/bar?a=b#abc returns\n * ['http://foo.com/bar','a=b','#abc'].\n * @param {string} uri The URI to parse.\n * @return {!Array<string>} An array representation of uri of length 3 where the\n *     middle value is the queryData without a leading '?'.\n * @private\n */\ngoog.uri.utils.splitQueryData_ = function(uri) {\n  // Find the query data and and hash.\n  var hashIndex = uri.indexOf('#');\n  if (hashIndex < 0) {\n    hashIndex = uri.length;\n  }\n  var questionIndex = uri.indexOf('?');\n  var queryData;\n  if (questionIndex < 0 || questionIndex > hashIndex) {\n    questionIndex = hashIndex;\n    queryData = '';\n  } else {\n    queryData = uri.substring(questionIndex + 1, hashIndex);\n  }\n  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];\n};\n\n\n/**\n * Join an array created by splitQueryData_ back into a URI.\n * @param {!Array<string>} parts A URI in the form generated by splitQueryData_.\n * @return {string} The joined URI.\n * @private\n */\ngoog.uri.utils.joinQueryData_ = function(parts) {\n  return parts[0] + (parts[1] ? '?' + parts[1] : '') + parts[2];\n};\n\n\n/**\n * @param {string} queryData\n * @param {string} newData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryData_ = function(queryData, newData) {\n  if (!newData) {\n    return queryData;\n  }\n  return queryData ? queryData + '&' + newData : newData;\n};\n\n\n/**\n * @param {string} uri\n * @param {string} queryData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {\n  if (!queryData) {\n    return uri;\n  }\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Appends key=value pairs to an array, supporting multi-valued objects.\n * @param {*} key The key prefix.\n * @param {goog.uri.utils.QueryValue} value The value to serialize.\n * @param {!Array<string>} pairs The array to which the 'key=value' strings\n *     should be appended.\n * @private\n */\ngoog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {\n  goog.asserts.assertString(key);\n  if (goog.isArray(value)) {\n    // Convince the compiler it's an array.\n    goog.asserts.assertArray(value);\n    for (var j = 0; j < value.length; j++) {\n      // Convert to string explicitly, to short circuit the null and array\n      // logic in this function -- this ensures that null and undefined get\n      // written as literal 'null' and 'undefined', and arrays don't get\n      // expanded out but instead encoded in the default way.\n      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);\n    }\n  } else if (value != null) {\n    // Skip a top-level null or undefined entirely.\n    pairs.push(\n        key +\n        // Check for empty string. Zero gets encoded into the url as literal\n        // strings.  For empty string, skip the equal sign, to be consistent\n        // with UriBuilder.java.\n        (value === '' ? '' : '=' + goog.string.urlEncode(value)));\n  }\n};\n\n\n/**\n * Builds a query data string from a sequence of alternating keys and values.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!IArrayLike<string|goog.uri.utils.QueryValue>} keysAndValues\n *     Alternating keys and values. See the QueryArray typedef.\n * @param {number=} opt_startIndex A start offset into the arary, defaults to 0.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {\n  goog.asserts.assert(\n      Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0,\n      'goog.uri.utils: Key/value lists must be even in length.');\n\n  var params = [];\n  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {\n    var key = /** @type {string} */ (keysAndValues[i]);\n    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Builds a query data string from a map.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!Object<string, goog.uri.utils.QueryValue>} map An object where keys\n *     are URI-encoded parameter keys, and the values are arbitrary types\n *     or arrays. Keys with a null value are dropped.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryDataFromMap = function(map) {\n  var params = [];\n  for (var key in map) {\n    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Appends URI parameters to an existing URI.\n *\n * The variable arguments may contain alternating keys and values.  Keys are\n * assumed to be already URI encoded.  The values should not be URI-encoded,\n * and will instead be encoded by this function.\n * <pre>\n * appendParams('http://www.foo.com?existing=true',\n *     'key1', 'value1',\n *     'key2', 'value?willBeEncoded',\n *     'key3', ['valueA', 'valueB', 'valueC'],\n *     'key4', null);\n * result: 'http://www.foo.com?existing=true&' +\n *     'key1=value1&' +\n *     'key2=value%3FwillBeEncoded&' +\n *     'key3=valueA&key3=valueB&key3=valueC'\n * </pre>\n *\n * A single call to this function will not exhibit quadratic behavior in IE,\n * whereas multiple repeated calls may, although the effect is limited by\n * fact that URL's generally can't exceed 2kb.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {...(goog.uri.utils.QueryArray|goog.uri.utils.QueryValue)}\n * var_args\n *     An array or argument list conforming to goog.uri.utils.QueryArray.\n * @return {string} The URI with all query parameters added.\n */\ngoog.uri.utils.appendParams = function(uri, var_args) {\n  var queryData = arguments.length == 2 ?\n      goog.uri.utils.buildQueryData(arguments[1], 0) :\n      goog.uri.utils.buildQueryData(arguments, 1);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends query parameters from a map.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object<goog.uri.utils.QueryValue>} map An object where keys are\n *     URI-encoded parameter keys, and the values are arbitrary types or arrays.\n *     Keys with a null value are dropped.\n * @return {string} The new parameters.\n */\ngoog.uri.utils.appendParamsFromMap = function(uri, map) {\n  var queryData = goog.uri.utils.buildQueryDataFromMap(map);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends a single URI parameter.\n *\n * Repeated calls to this can exhibit quadratic behavior in IE6 due to the\n * way string append works, though it should be limited given the 2kb limit.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} key The key, which must already be URI encoded.\n * @param {*=} opt_value The value, which will be stringized and encoded\n *     (assumed not already to be encoded).  If omitted, undefined, or null, the\n *     key will be added as a valueless parameter.\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.appendParam = function(uri, key, opt_value) {\n  var value = goog.isDefAndNotNull(opt_value) ?\n      '=' + goog.string.urlEncode(opt_value) :\n      '';\n  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);\n};\n\n\n/**\n * Finds the next instance of a query parameter with the specified name.\n *\n * Does not instantiate any objects.\n *\n * @param {string} uri The URI to search.  May contain a fragment identifier\n *     if opt_hashIndex is specified.\n * @param {number} startIndex The index to begin searching for the key at.  A\n *     match may be found even if this is one character after the ampersand.\n * @param {string} keyEncoded The URI-encoded key.\n * @param {number} hashOrEndIndex Index to stop looking at.  If a hash\n *     mark is present, it should be its index, otherwise it should be the\n *     length of the string.\n * @return {number} The position of the first character in the key's name,\n *     immediately after either a question mark or a dot.\n * @private\n */\ngoog.uri.utils.findParam_ = function(\n    uri, startIndex, keyEncoded, hashOrEndIndex) {\n  var index = startIndex;\n  var keyLength = keyEncoded.length;\n\n  // Search for the key itself and post-filter for surronuding punctuation,\n  // rather than expensively building a regexp.\n  while ((index = uri.indexOf(keyEncoded, index)) >= 0 &&\n         index < hashOrEndIndex) {\n    var precedingChar = uri.charCodeAt(index - 1);\n    // Ensure that the preceding character is '&' or '?'.\n    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n        precedingChar == goog.uri.utils.CharCode_.QUESTION) {\n      // Ensure the following character is '&', '=', '#', or NaN\n      // (end of string).\n      var followingChar = uri.charCodeAt(index + keyLength);\n      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL ||\n          followingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n          followingChar == goog.uri.utils.CharCode_.HASH) {\n        return index;\n      }\n    }\n    index += keyLength + 1;\n  }\n\n  return -1;\n};\n\n\n/**\n * Regular expression for finding a hash mark or end of string.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.hashOrEndRe_ = /#|$/;\n\n\n/**\n * Determines if the URI contains a specific key.\n *\n * Performs no object instantiations.\n *\n * @param {string} uri The URI to process.  May contain a fragment\n *     identifier.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {boolean} Whether the key is present.\n */\ngoog.uri.utils.hasParam = function(uri, keyEncoded) {\n  return goog.uri.utils.findParam_(\n             uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;\n};\n\n\n/**\n * Gets the first value of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {?string} The first value of the parameter (URI-decoded), or null\n *     if the parameter is not found.\n */\ngoog.uri.utils.getParamValue = function(uri, keyEncoded) {\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var foundIndex =\n      goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);\n\n  if (foundIndex < 0) {\n    return null;\n  } else {\n    var endPosition = uri.indexOf('&', foundIndex);\n    if (endPosition < 0 || endPosition > hashOrEndIndex) {\n      endPosition = hashOrEndIndex;\n    }\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    // Use substr, because it (unlike substring) will return empty string\n    // if foundIndex > endPosition.\n    return goog.string.urlDecode(\n        uri.substr(foundIndex, endPosition - foundIndex));\n  }\n};\n\n\n/**\n * Gets all values of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {!Array<string>} All URI-decoded values with the given key.\n *     If the key is not found, this will have length 0, but never be null.\n */\ngoog.uri.utils.getParamValues = function(uri, keyEncoded) {\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var result = [];\n\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Find where this parameter ends, either the '&' or the end of the\n    // query parameters.\n    position = uri.indexOf('&', foundIndex);\n    if (position < 0 || position > hashOrEndIndex) {\n      position = hashOrEndIndex;\n    }\n\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    // Use substr, because it (unlike substring) will return empty string\n    // if foundIndex > position.\n    result.push(\n        goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));\n  }\n\n  return result;\n};\n\n\n/**\n * Regexp to find trailing question marks and ampersands.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;\n\n\n/**\n * Removes all instances of a query parameter.\n * @param {string} uri The URI to process.  Must not contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.\n * @return {string} The URI with all instances of the parameter removed.\n */\ngoog.uri.utils.removeParam = function(uri, keyEncoded) {\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var buffer = [];\n\n  // Look for a query parameter.\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Get the portion of the query string up to, but not including, the ?\n    // or & starting the parameter.\n    buffer.push(uri.substring(position, foundIndex));\n    // Progress to immediately after the '&'.  If not found, go to the end.\n    // Avoid including the hash mark.\n    position = Math.min(\n        (uri.indexOf('&', foundIndex) + 1) || hashOrEndIndex, hashOrEndIndex);\n  }\n\n  // Append everything that is remaining.\n  buffer.push(uri.substr(position));\n\n  // Join the buffer, and remove trailing punctuation that remains.\n  return buffer.join('').replace(\n      goog.uri.utils.trailingQueryPunctuationRe_, '$1');\n};\n\n\n/**\n * Replaces all existing definitions of a parameter with a single definition.\n *\n * Repeated calls to this can exhibit quadratic behavior due to the need to\n * find existing instances and reconstruct the string, though it should be\n * limited given the 2kb limit.  Consider using appendParams or setParamsFromMap\n * to update multiple parameters in bulk.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} keyEncoded The key, which must already be URI encoded.\n * @param {*} value The value, which will be stringized and encoded (assumed\n *     not already to be encoded).\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.setParam = function(uri, keyEncoded, value) {\n  return goog.uri.utils.appendParam(\n      goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);\n};\n\n\n/**\n * Effeciently set or remove multiple query parameters in a URI. Order of\n * unchanged parameters will not be modified, all updated parameters will be\n * appended to the end of the query. Params with values of null or undefined are\n * removed.\n *\n * @param {string} uri The URI to process.\n * @param {!Object<string, goog.uri.utils.QueryValue>} params A list of\n *     parameters to update. If null or undefined, the param will be removed.\n * @return {string} An updated URI where the query data has been updated with\n *     the params.\n */\ngoog.uri.utils.setParamsFromMap = function(uri, params) {\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  var queryData = parts[1];\n  var buffer = [];\n  if (queryData) {\n    goog.array.forEach(queryData.split('&'), function(pair) {\n      var indexOfEquals = pair.indexOf('=');\n      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;\n      if (!params.hasOwnProperty(name)) {\n        buffer.push(pair);\n      }\n    });\n  }\n  parts[1] = goog.uri.utils.appendQueryData_(\n      buffer.join('&'), goog.uri.utils.buildQueryDataFromMap(params));\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Generates a URI path using a given URI and a path with checks to\n * prevent consecutive \"//\". The baseUri passed in must not contain\n * query or fragment identifiers. The path to append may not contain query or\n * fragment identifiers.\n *\n * @param {string} baseUri URI to use as the base.\n * @param {string} path Path to append.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.appendPath = function(baseUri, path) {\n  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);\n\n  // Remove any trailing '/'\n  if (goog.string.endsWith(baseUri, '/')) {\n    baseUri = baseUri.substr(0, baseUri.length - 1);\n  }\n  // Remove any leading '/'\n  if (goog.string.startsWith(path, '/')) {\n    path = path.substr(1);\n  }\n  return goog.string.buildString(baseUri, '/', path);\n};\n\n\n/**\n * Replaces the path.\n * @param {string} uri URI to use as the base.\n * @param {string} path New path.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.setPath = function(uri, path) {\n  // Add any missing '/'.\n  if (!goog.string.startsWith(path, '/')) {\n    path = '/' + path;\n  }\n  var parts = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      parts[goog.uri.utils.ComponentIndex.SCHEME],\n      parts[goog.uri.utils.ComponentIndex.USER_INFO],\n      parts[goog.uri.utils.ComponentIndex.DOMAIN],\n      parts[goog.uri.utils.ComponentIndex.PORT], path,\n      parts[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      parts[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Standard supported query parameters.\n * @enum {string}\n */\ngoog.uri.utils.StandardQueryParam = {\n\n  /** Unused parameter for unique-ifying. */\n  RANDOM: 'zx'\n};\n\n\n/**\n * Sets the zx parameter of a URI to a random value.\n * @param {string} uri Any URI.\n * @return {string} That URI with the \"zx\" parameter added or replaced to\n *     contain a random string.\n */\ngoog.uri.utils.makeUnique = function(uri) {\n  return goog.uri.utils.setParam(\n      uri, goog.uri.utils.StandardQueryParam.RANDOM,\n      goog.string.getRandomString());\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Class for parsing and formatting URIs.\n *\n * Use goog.Uri(string) to parse a URI string.  Use goog.Uri.create(...) to\n * create a new instance of the goog.Uri object from Uri parts.\n *\n * e.g: <code>var myUri = new goog.Uri(window.location);</code>\n *\n * Implements RFC 3986 for parsing/formatting URIs.\n * http://www.ietf.org/rfc/rfc3986.txt\n *\n * Some changes have been made to the interface (more like .NETs), though the\n * internal representation is now of un-encoded parts, this will change the\n * behavior slightly.\n *\n * @author msamuel@google.com (Mike Samuel)\n */\n\ngoog.provide('goog.Uri');\ngoog.provide('goog.Uri.QueryData');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.string');\ngoog.require('goog.structs');\ngoog.require('goog.structs.Map');\ngoog.require('goog.uri.utils');\ngoog.require('goog.uri.utils.ComponentIndex');\ngoog.require('goog.uri.utils.StandardQueryParam');\n\n\n\n/**\n * This class contains setters and getters for the parts of the URI.\n * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part\n * -- so<code>goog.Uri.parse('/foo%20bar').getPath()</code> will return the\n * decoded path, <code>/foo bar</code>.\n *\n * Reserved characters (see RFC 3986 section 2.2) can be present in\n * their percent-encoded form in scheme, domain, and path URI components and\n * will not be auto-decoded. For example:\n * <code>goog.Uri.parse('rel%61tive/path%2fto/resource').getPath()</code> will\n * return <code>relative/path%2fto/resource</code>.\n *\n * The constructor accepts an optional unparsed, raw URI string.  The parser\n * is relaxed, so special characters that aren't escaped but don't cause\n * ambiguities will not cause parse failures.\n *\n * All setters return <code>this</code> and so may be chained, a la\n * <code>goog.Uri.parse('/foo').setFragment('part').toString()</code>.\n *\n * @param {*=} opt_uri Optional string URI to parse\n *        (use goog.Uri.create() to create a URI from parts), or if\n *        a goog.Uri is passed, a clone is created.\n * @param {boolean=} opt_ignoreCase If true, #getParameterValue will ignore\n * the case of the parameter name.\n *\n * @throws URIError If opt_uri is provided and URI is malformed (that is,\n *     if decodeURIComponent fails on any of the URI components).\n * @constructor\n * @struct\n */\ngoog.Uri = function(opt_uri, opt_ignoreCase) {\n  /**\n   * Scheme such as \"http\".\n   * @private {string}\n   */\n  this.scheme_ = '';\n\n  /**\n   * User credentials in the form \"username:password\".\n   * @private {string}\n   */\n  this.userInfo_ = '';\n\n  /**\n   * Domain part, e.g. \"www.google.com\".\n   * @private {string}\n   */\n  this.domain_ = '';\n\n  /**\n   * Port, e.g. 8080.\n   * @private {?number}\n   */\n  this.port_ = null;\n\n  /**\n   * Path, e.g. \"/tests/img.png\".\n   * @private {string}\n   */\n  this.path_ = '';\n\n  /**\n   * The fragment without the #.\n   * @private {string}\n   */\n  this.fragment_ = '';\n\n  /**\n   * Whether or not this Uri should be treated as Read Only.\n   * @private {boolean}\n   */\n  this.isReadOnly_ = false;\n\n  /**\n   * Whether or not to ignore case when comparing query params.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = false;\n\n  /**\n   * Object representing query data.\n   * @private {!goog.Uri.QueryData}\n   */\n  this.queryData_;\n\n  // Parse in the uri string\n  var m;\n  if (opt_uri instanceof goog.Uri) {\n    this.ignoreCase_ =\n        goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();\n    this.setScheme(opt_uri.getScheme());\n    this.setUserInfo(opt_uri.getUserInfo());\n    this.setDomain(opt_uri.getDomain());\n    this.setPort(opt_uri.getPort());\n    this.setPath(opt_uri.getPath());\n    this.setQueryData(opt_uri.getQueryData().clone());\n    this.setFragment(opt_uri.getFragment());\n  } else if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {\n    this.ignoreCase_ = !!opt_ignoreCase;\n\n    // Set the parts -- decoding as we do so.\n    // COMPATIBILITY NOTE - In IE, unmatched fields may be empty strings,\n    // whereas in other browsers they will be undefined.\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || '', true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || '', true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || '', true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || '', true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || '', true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || '', true);\n\n  } else {\n    this.ignoreCase_ = !!opt_ignoreCase;\n    this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);\n  }\n};\n\n\n/**\n * If true, we preserve the type of query parameters set programmatically.\n *\n * This means that if you set a parameter to a boolean, and then call\n * getParameterValue, you will get a boolean back.\n *\n * If false, we will coerce parameters to strings, just as they would\n * appear in real URIs.\n *\n * TODO(nicksantos): Remove this once people have time to fix all tests.\n *\n * @type {boolean}\n */\ngoog.Uri.preserveParameterTypesCompatibilityFlag = false;\n\n\n/**\n * Parameter name added to stop caching.\n * @type {string}\n */\ngoog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;\n\n\n/**\n * @return {string} The string form of the url.\n * @override\n */\ngoog.Uri.prototype.toString = function() {\n  var out = [];\n\n  var scheme = this.getScheme();\n  if (scheme) {\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n        ':');\n  }\n\n  var domain = this.getDomain();\n  if (domain || scheme == 'file') {\n    out.push('//');\n\n    var userInfo = this.getUserInfo();\n    if (userInfo) {\n      out.push(\n          goog.Uri.encodeSpecialChars_(\n              userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n          '@');\n    }\n\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n\n    var port = this.getPort();\n    if (port != null) {\n      out.push(':', String(port));\n    }\n  }\n\n  var path = this.getPath();\n  if (path) {\n    if (this.hasDomain() && path.charAt(0) != '/') {\n      out.push('/');\n    }\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            path, path.charAt(0) == '/' ? goog.Uri.reDisallowedInAbsolutePath_ :\n                                          goog.Uri.reDisallowedInRelativePath_,\n            true));\n  }\n\n  var query = this.getEncodedQuery();\n  if (query) {\n    out.push('?', query);\n  }\n\n  var fragment = this.getFragment();\n  if (fragment) {\n    out.push(\n        '#', goog.Uri.encodeSpecialChars_(\n                 fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join('');\n};\n\n\n/**\n * Resolves the given relative URI (a goog.Uri object), using the URI\n * represented by this instance as the base URI.\n *\n * There are several kinds of relative URIs:<br>\n * 1. foo - replaces the last part of the path, the whole query and fragment<br>\n * 2. /foo - replaces the the path, the query and fragment<br>\n * 3. //foo - replaces everything from the domain on.  foo is a domain name<br>\n * 4. ?foo - replace the query and fragment<br>\n * 5. #foo - replace the fragment only\n *\n * Additionally, if relative URI has a non-empty path, all \"..\" and \".\"\n * segments will be resolved, as described in RFC 3986.\n *\n * @param {!goog.Uri} relativeUri The relative URI to resolve.\n * @return {!goog.Uri} The resolved URI.\n */\ngoog.Uri.prototype.resolve = function(relativeUri) {\n\n  var absoluteUri = this.clone();\n\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden = relativeUri.hasUserInfo();\n  }\n\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var path = relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden = relativeUri.hasPath();\n    if (overridden) {\n      // resolve path properly\n      if (path.charAt(0) != '/') {\n        // path is relative\n        if (this.hasDomain() && !this.hasPath()) {\n          // RFC 3986, section 5.2.3, case 1\n          path = '/' + path;\n        } else {\n          // RFC 3986, section 5.2.3, case 2\n          var lastSlashIndex = absoluteUri.getPath().lastIndexOf('/');\n          if (lastSlashIndex != -1) {\n            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path = goog.Uri.removeDotSegments(path);\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n\n  return absoluteUri;\n};\n\n\n/**\n * Clones the URI instance.\n * @return {!goog.Uri} New instance of the URI object.\n */\ngoog.Uri.prototype.clone = function() {\n  return new goog.Uri(this);\n};\n\n\n/**\n * @return {string} The encoded scheme/protocol for the URI.\n */\ngoog.Uri.prototype.getScheme = function() {\n  return this.scheme_;\n};\n\n\n/**\n * Sets the scheme/protocol.\n * @throws URIError If opt_decode is true and newScheme is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newScheme New scheme value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setScheme = function(newScheme, opt_decode) {\n  this.enforceReadOnly();\n  this.scheme_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;\n\n  // remove an : at the end of the scheme so somebody can pass in\n  // window.location.protocol\n  if (this.scheme_) {\n    this.scheme_ = this.scheme_.replace(/:$/, '');\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the scheme has been set.\n */\ngoog.Uri.prototype.hasScheme = function() {\n  return !!this.scheme_;\n};\n\n\n/**\n * @return {string} The decoded user info.\n */\ngoog.Uri.prototype.getUserInfo = function() {\n  return this.userInfo_;\n};\n\n\n/**\n * Sets the userInfo.\n * @throws URIError If opt_decode is true and newUserInfo is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newUserInfo New userInfo value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {\n  this.enforceReadOnly();\n  this.userInfo_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the user info has been set.\n */\ngoog.Uri.prototype.hasUserInfo = function() {\n  return !!this.userInfo_;\n};\n\n\n/**\n * @return {string} The decoded domain.\n */\ngoog.Uri.prototype.getDomain = function() {\n  return this.domain_;\n};\n\n\n/**\n * Sets the domain.\n * @throws URIError If opt_decode is true and newDomain is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newDomain New domain value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setDomain = function(newDomain, opt_decode) {\n  this.enforceReadOnly();\n  this.domain_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the domain has been set.\n */\ngoog.Uri.prototype.hasDomain = function() {\n  return !!this.domain_;\n};\n\n\n/**\n * @return {?number} The port number.\n */\ngoog.Uri.prototype.getPort = function() {\n  return this.port_;\n};\n\n\n/**\n * Sets the port number.\n * @param {*} newPort Port number. Will be explicitly casted to a number.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPort = function(newPort) {\n  this.enforceReadOnly();\n\n  if (newPort) {\n    newPort = Number(newPort);\n    if (isNaN(newPort) || newPort < 0) {\n      throw new Error('Bad port number ' + newPort);\n    }\n    this.port_ = newPort;\n  } else {\n    this.port_ = null;\n  }\n\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the port has been set.\n */\ngoog.Uri.prototype.hasPort = function() {\n  return this.port_ != null;\n};\n\n\n/**\n  * @return {string} The decoded path.\n */\ngoog.Uri.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Sets the path.\n * @throws URIError If opt_decode is true and newPath is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newPath New path value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPath = function(newPath, opt_decode) {\n  this.enforceReadOnly();\n  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the path has been set.\n */\ngoog.Uri.prototype.hasPath = function() {\n  return !!this.path_;\n};\n\n\n/**\n * @return {boolean} Whether the query string has been set.\n */\ngoog.Uri.prototype.hasQuery = function() {\n  return this.queryData_.toString() !== '';\n};\n\n\n/**\n * Sets the query data.\n * @param {goog.Uri.QueryData|string|undefined} queryData QueryData object.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n *     Applies only if queryData is a string.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQueryData = function(queryData, opt_decode) {\n  this.enforceReadOnly();\n\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ = queryData;\n    this.queryData_.setIgnoreCase(this.ignoreCase_);\n  } else {\n    if (!opt_decode) {\n      // QueryData accepts encoded query string, so encode it if\n      // opt_decode flag is not true.\n      queryData = goog.Uri.encodeSpecialChars_(\n          queryData, goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);\n  }\n\n  return this;\n};\n\n\n/**\n * Sets the URI query.\n * @param {string} newQuery New query value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQuery = function(newQuery, opt_decode) {\n  return this.setQueryData(newQuery, opt_decode);\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getEncodedQuery = function() {\n  return this.queryData_.toString();\n};\n\n\n/**\n * @return {string} The decoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getDecodedQuery = function() {\n  return this.queryData_.toDecodedString();\n};\n\n\n/**\n * Returns the query data.\n * @return {!goog.Uri.QueryData} QueryData object.\n */\ngoog.Uri.prototype.getQueryData = function() {\n  return this.queryData_;\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n *\n * Warning: This method, unlike other getter methods, returns encoded\n * value, instead of decoded one.\n */\ngoog.Uri.prototype.getQuery = function() {\n  return this.getEncodedQuery();\n};\n\n\n/**\n * Sets the value of the named query parameters, clearing previous values for\n * that key.\n *\n * @param {string} key The parameter to set.\n * @param {*} value The new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValue = function(key, value) {\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\n\n\n/**\n * Sets the values of the named query parameters, clearing previous values for\n * that key.  Not new values will currently be moved to the end of the query\n * string.\n *\n * So, <code>goog.Uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])\n * </code> yields <tt>foo?a=b&e=f&c=new</tt>.</p>\n *\n * @param {string} key The parameter to set.\n * @param {*} values The new values. If values is a single\n *     string then it will be treated as the sole value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValues = function(key, values) {\n  this.enforceReadOnly();\n\n  if (!goog.isArray(values)) {\n    values = [String(values)];\n  }\n\n  this.queryData_.setValues(key, values);\n\n  return this;\n};\n\n\n/**\n * Returns the value<b>s</b> for a given cgi parameter as a list of decoded\n * query parameter values.\n * @param {string} name The parameter to get values for.\n * @return {!Array<?>} The values for a given cgi parameter as a list of\n *     decoded query parameter values.\n */\ngoog.Uri.prototype.getParameterValues = function(name) {\n  return this.queryData_.getValues(name);\n};\n\n\n/**\n * Returns the first value for a given cgi parameter or undefined if the given\n * parameter name does not appear in the query string.\n * @param {string} paramName Unescaped parameter name.\n * @return {string|undefined} The first value for a given cgi parameter or\n *     undefined if the given parameter name does not appear in the query\n *     string.\n */\ngoog.Uri.prototype.getParameterValue = function(paramName) {\n  // NOTE(nicksantos): This type-cast is a lie when\n  // preserveParameterTypesCompatibilityFlag is set to true.\n  // But this should only be set to true in tests.\n  return /** @type {string|undefined} */ (this.queryData_.get(paramName));\n};\n\n\n/**\n * @return {string} The URI fragment, not including the #.\n */\ngoog.Uri.prototype.getFragment = function() {\n  return this.fragment_;\n};\n\n\n/**\n * Sets the URI fragment.\n * @throws URIError If opt_decode is true and newFragment is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newFragment New fragment value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setFragment = function(newFragment, opt_decode) {\n  this.enforceReadOnly();\n  this.fragment_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI has a fragment set.\n */\ngoog.Uri.prototype.hasFragment = function() {\n  return !!this.fragment_;\n};\n\n\n/**\n * Returns true if this has the same domain as that of uri2.\n * @param {!goog.Uri} uri2 The URI object to compare to.\n * @return {boolean} true if same domain; false otherwise.\n */\ngoog.Uri.prototype.hasSameDomainAs = function(uri2) {\n  return ((!this.hasDomain() && !uri2.hasDomain()) ||\n          this.getDomain() == uri2.getDomain()) &&\n      ((!this.hasPort() && !uri2.hasPort()) ||\n       this.getPort() == uri2.getPort());\n};\n\n\n/**\n * Adds a random parameter to the Uri.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.makeUnique = function() {\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n\n  return this;\n};\n\n\n/**\n * Removes the named query parameter.\n *\n * @param {string} key The parameter to remove.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.removeParameter = function(key) {\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\n\n\n/**\n * Sets whether Uri is read only. If this goog.Uri is read-only,\n * enforceReadOnly_ will be called at the start of any function that may modify\n * this Uri.\n * @param {boolean} isReadOnly whether this goog.Uri should be read only.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setReadOnly = function(isReadOnly) {\n  this.isReadOnly_ = isReadOnly;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI is read only.\n */\ngoog.Uri.prototype.isReadOnly = function() {\n  return this.isReadOnly_;\n};\n\n\n/**\n * Checks if this Uri has been marked as read only, and if so, throws an error.\n * This should be called whenever any modifying function is called.\n */\ngoog.Uri.prototype.enforceReadOnly = function() {\n  if (this.isReadOnly_) {\n    throw new Error('Tried to modify a read-only Uri');\n  }\n};\n\n\n/**\n * Sets whether to ignore case.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setIgnoreCase = function(ignoreCase) {\n  this.ignoreCase_ = ignoreCase;\n  if (this.queryData_) {\n    this.queryData_.setIgnoreCase(ignoreCase);\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether to ignore case.\n */\ngoog.Uri.prototype.getIgnoreCase = function() {\n  return this.ignoreCase_;\n};\n\n\n//==============================================================================\n// Static members\n//==============================================================================\n\n\n/**\n * Creates a uri from the string form.  Basically an alias of new goog.Uri().\n * If a Uri object is passed to parse then it will return a clone of the object.\n *\n * @throws URIError If parsing the URI is malformed. The passed URI components\n *     should all be parseable by decodeURIComponent.\n * @param {*} uri Raw URI string or instance of Uri\n *     object.\n * @param {boolean=} opt_ignoreCase Whether to ignore the case of parameter\n * names in #getParameterValue.\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.parse = function(uri, opt_ignoreCase) {\n  return uri instanceof goog.Uri ? uri.clone() :\n                                   new goog.Uri(uri, opt_ignoreCase);\n};\n\n\n/**\n * Creates a new goog.Uri object from unencoded parts.\n *\n * @param {?string=} opt_scheme Scheme/protocol or full URI to parse.\n * @param {?string=} opt_userInfo username:password.\n * @param {?string=} opt_domain www.google.com.\n * @param {?number=} opt_port 9830.\n * @param {?string=} opt_path /some/path/to/a/file.html.\n * @param {string|goog.Uri.QueryData=} opt_query a=1&b=2.\n * @param {?string=} opt_fragment The fragment without the #.\n * @param {boolean=} opt_ignoreCase Whether to ignore parameter name case in\n *     #getParameterValue.\n *\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.create = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query,\n    opt_fragment, opt_ignoreCase) {\n\n  var uri = new goog.Uri(null, opt_ignoreCase);\n\n  // Only set the parts if they are defined and not empty strings.\n  opt_scheme && uri.setScheme(opt_scheme);\n  opt_userInfo && uri.setUserInfo(opt_userInfo);\n  opt_domain && uri.setDomain(opt_domain);\n  opt_port && uri.setPort(opt_port);\n  opt_path && uri.setPath(opt_path);\n  opt_query && uri.setQueryData(opt_query);\n  opt_fragment && uri.setFragment(opt_fragment);\n\n  return uri;\n};\n\n\n/**\n * Resolves a relative Uri against a base Uri, accepting both strings and\n * Uri objects.\n *\n * @param {*} base Base Uri.\n * @param {*} rel Relative Uri.\n * @return {!goog.Uri} Resolved uri.\n */\ngoog.Uri.resolve = function(base, rel) {\n  if (!(base instanceof goog.Uri)) {\n    base = goog.Uri.parse(base);\n  }\n\n  if (!(rel instanceof goog.Uri)) {\n    rel = goog.Uri.parse(rel);\n  }\n\n  return base.resolve(rel);\n};\n\n\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {string} path A non-empty path component.\n * @return {string} Path component with removed dot segments.\n */\ngoog.Uri.removeDotSegments = function(path) {\n  if (path == '..' || path == '.') {\n    return '';\n\n  } else if (\n      !goog.string.contains(path, './') && !goog.string.contains(path, '/.')) {\n    // This optimization detects uris which do not contain dot-segments,\n    // and as a consequence do not require any processing.\n    return path;\n\n  } else {\n    var leadingSlash = goog.string.startsWith(path, '/');\n    var segments = path.split('/');\n    var out = [];\n\n    for (var pos = 0; pos < segments.length;) {\n      var segment = segments[pos++];\n\n      if (segment == '.') {\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else if (segment == '..') {\n        if (out.length > 1 || out.length == 1 && out[0] != '') {\n          out.pop();\n        }\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else {\n        out.push(segment);\n        leadingSlash = true;\n      }\n    }\n\n    return out.join('/');\n  }\n};\n\n\n/**\n * Decodes a value or returns the empty string if it isn't defined or empty.\n * @throws URIError If decodeURIComponent fails to decode val.\n * @param {string|undefined} val Value to decode.\n * @param {boolean=} opt_preserveReserved If true, restricted characters will\n *     not be decoded.\n * @return {string} Decoded value.\n * @private\n */\ngoog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {\n  // Don't use UrlDecode() here because val is not a query parameter.\n  if (!val) {\n    return '';\n  }\n\n  // decodeURI has the same output for '%2f' and '%252f'. We double encode %25\n  // so that we can distinguish between the 2 inputs. This is later undone by\n  // removeDoubleEncoding_.\n  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, '%2525')) :\n                                decodeURIComponent(val);\n};\n\n\n/**\n * If unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param {*} unescapedPart The string to encode.\n * @param {RegExp} extra A character set of characters in [\\01-\\177].\n * @param {boolean=} opt_removeDoubleEncoding If true, remove double percent\n *     encoding.\n * @return {?string} null iff unescapedPart == null.\n * @private\n */\ngoog.Uri.encodeSpecialChars_ = function(\n    unescapedPart, extra, opt_removeDoubleEncoding) {\n  if (goog.isString(unescapedPart)) {\n    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    if (opt_removeDoubleEncoding) {\n      // encodeURI double-escapes %XX sequences used to represent restricted\n      // characters in some URI components, remove the double escaping here.\n      encoded = goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\n\n\n/**\n * Converts a character in [\\01-\\177] to its unicode character equivalent.\n * @param {string} ch One character string.\n * @return {string} Encoded string.\n * @private\n */\ngoog.Uri.encodeChar_ = function(ch) {\n  var n = ch.charCodeAt(0);\n  return '%' + ((n >> 4) & 0xf).toString(16) + (n & 0xf).toString(16);\n};\n\n\n/**\n * Removes double percent-encoding from a string.\n * @param  {string} doubleEncodedString String\n * @return {string} String with double encoding removed.\n * @private\n */\ngoog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, '%$1');\n};\n\n\n/**\n * Regular expression for characters that are disallowed in the scheme or\n * userInfo part of the URI.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\\/\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in a relative path.\n * Colon is included due to RFC 3986 3.3.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInRelativePath_ = /[\\#\\?:]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in an absolute path.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInAbsolutePath_ = /[\\#\\?]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the query.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInQuery_ = /[\\#\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the fragment.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInFragment_ = /#/g;\n\n\n/**\n * Checks whether two URIs have the same domain.\n * @param {string} uri1String First URI string.\n * @param {string} uri2String Second URI string.\n * @return {boolean} true if the two URIs have the same domain; false otherwise.\n */\ngoog.Uri.haveSameDomain = function(uri1String, uri2String) {\n  // Differs from goog.uri.utils.haveSameDomain, since this ignores scheme.\n  // TODO(gboyer): Have this just call goog.uri.util.haveSameDomain.\n  var pieces1 = goog.uri.utils.split(uri1String);\n  var pieces2 = goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n\n/**\n * Class used to represent URI query parameters.  It is essentially a hash of\n * name-value pairs, though a name can be present more than once.\n *\n * Has the same interface as the collections in goog.structs.\n *\n * @param {?string=} opt_query Optional encoded query string to parse into\n *     the object.\n * @param {goog.Uri=} opt_uri Optional uri object that should have its\n *     cache invalidated when this object updates. Deprecated -- this\n *     is no longer required.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @constructor\n * @struct\n * @final\n */\ngoog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {\n  /**\n   * The map containing name/value or name/array-of-values pairs.\n   * May be null if it requires parsing from the query string.\n   *\n   * We need to use a Map because we cannot guarantee that the key names will\n   * not be problematic for IE.\n   *\n   * @private {goog.structs.Map<string, !Array<*>>}\n   */\n  this.keyMap_ = null;\n\n  /**\n   * The number of params, or null if it requires computing.\n   * @private {?number}\n   */\n  this.count_ = null;\n\n  /**\n   * Encoded query string, or null if it requires computing from the key map.\n   * @private {?string}\n   */\n  this.encodedQuery_ = opt_query || null;\n\n  /**\n   * If true, ignore the case of the parameter name in #get.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = !!opt_ignoreCase;\n};\n\n\n/**\n * If the underlying key map is not yet initialized, it parses the\n * query string and fills the map with parsed data.\n * @private\n */\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {\n  if (!this.keyMap_) {\n    this.keyMap_ = new goog.structs.Map();\n    this.count_ = 0;\n    if (this.encodedQuery_) {\n      var self = this;\n      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n        self.add(goog.string.urlDecode(name), value);\n      });\n    }\n  }\n};\n\n\n/**\n * Creates a new query data instance from a map of names and values.\n *\n * @param {!goog.structs.Map<string, ?>|!Object} map Map of string parameter\n *     names to parameter value. If parameter value is an array, it is\n *     treated as if the key maps to each individual value in the\n *     array.\n * @param {goog.Uri=} opt_uri URI object that should have its cache\n *     invalidated when this object updates.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {\n  var keys = goog.structs.getKeys(map);\n  if (typeof keys == 'undefined') {\n    throw new Error('Keys are undefined');\n  }\n\n  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);\n  var values = goog.structs.getValues(map);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = values[i];\n    if (!goog.isArray(value)) {\n      queryData.add(key, value);\n    } else {\n      queryData.setValues(key, value);\n    }\n  }\n  return queryData;\n};\n\n\n/**\n * Creates a new query data instance from parallel arrays of parameter names\n * and values. Allows for duplicate parameter names. Throws an error if the\n * lengths of the arrays differ.\n *\n * @param {!Array<string>} keys Parameter names.\n * @param {!Array<?>} values Parameter values.\n * @param {goog.Uri=} opt_uri URI object that should have its cache\n *     invalidated when this object updates.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromKeysValues = function(\n    keys, values, opt_uri, opt_ignoreCase) {\n  if (keys.length != values.length) {\n    throw new Error('Mismatched lengths for keys/values');\n  }\n  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);\n  for (var i = 0; i < keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\n\n\n/**\n * @return {?number} The number of parameters.\n */\ngoog.Uri.QueryData.prototype.getCount = function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\n\n\n/**\n * Adds a key value pair.\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.add = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  key = this.getKeyName_(key);\n  var values = this.keyMap_.get(key);\n  if (!values) {\n    this.keyMap_.set(key, (values = []));\n  }\n  values.push(value);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Removes all the params with the given key.\n * @param {string} key Name.\n * @return {boolean} Whether any parameter was removed.\n */\ngoog.Uri.QueryData.prototype.remove = function(key) {\n  this.ensureKeyMapInitialized_();\n\n  key = this.getKeyName_(key);\n  if (this.keyMap_.containsKey(key)) {\n    this.invalidateCache_();\n\n    // Decrement parameter count.\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n    return this.keyMap_.remove(key);\n  }\n  return false;\n};\n\n\n/**\n * Clears the parameters.\n */\ngoog.Uri.QueryData.prototype.clear = function() {\n  this.invalidateCache_();\n  this.keyMap_ = null;\n  this.count_ = 0;\n};\n\n\n/**\n * @return {boolean} Whether we have any parameters.\n */\ngoog.Uri.QueryData.prototype.isEmpty = function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_ == 0;\n};\n\n\n/**\n * Whether there is a parameter with the given name\n * @param {string} key The parameter name to check for.\n * @return {boolean} Whether there is a parameter with the given name.\n */\ngoog.Uri.QueryData.prototype.containsKey = function(key) {\n  this.ensureKeyMapInitialized_();\n  key = this.getKeyName_(key);\n  return this.keyMap_.containsKey(key);\n};\n\n\n/**\n * Whether there is a parameter with the given value.\n * @param {*} value The value to check for.\n * @return {boolean} Whether there is a parameter with the given value.\n */\ngoog.Uri.QueryData.prototype.containsValue = function(value) {\n  // NOTE(arv): This solution goes through all the params even if it was the\n  // first param. We can get around this by not reusing code or by switching to\n  // iterators.\n  var vals = this.getValues();\n  return goog.array.contains(vals, value);\n};\n\n\n/**\n * Runs a callback on every key-value pair in the map, including duplicate keys.\n * This won't maintain original order when duplicate keys are interspersed (like\n * getKeys() / getValues()).\n * @param {function(this:SCOPE, ?, string, !goog.Uri.QueryData)} f\n * @param {SCOPE=} opt_scope The value of \"this\" inside f.\n * @template SCOPE\n */\ngoog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    goog.array.forEach(values, function(value) {\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\n\n\n/**\n * Returns all the keys of the parameters. If a key is used multiple times\n * it will be included multiple times in the returned array\n * @return {!Array<string>} All the keys of the parameters.\n */\ngoog.Uri.QueryData.prototype.getKeys = function() {\n  this.ensureKeyMapInitialized_();\n  // We need to get the values to know how many keys to add.\n  var vals = this.keyMap_.getValues();\n  var keys = this.keyMap_.getKeys();\n  var rv = [];\n  for (var i = 0; i < keys.length; i++) {\n    var val = vals[i];\n    for (var j = 0; j < val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Returns all the values of the parameters with the given name. If the query\n * data has no such key this will return an empty array. If no key is given\n * all values wil be returned.\n * @param {string=} opt_key The name of the parameter to get the values for.\n * @return {!Array<?>} All the values of the parameters with the given name.\n */\ngoog.Uri.QueryData.prototype.getValues = function(opt_key) {\n  this.ensureKeyMapInitialized_();\n  var rv = [];\n  if (goog.isString(opt_key)) {\n    if (this.containsKey(opt_key)) {\n      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));\n    }\n  } else {\n    // Return all values.\n    var values = this.keyMap_.getValues();\n    for (var i = 0; i < values.length; i++) {\n      rv = goog.array.concat(rv, values[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Sets a key value pair and removes all other keys with the same value.\n *\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.set = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  // TODO(chrishenry): This could be better written as\n  // this.remove(key), this.add(key, value), but that would reorder\n  // the key (since the key is first removed and then added at the\n  // end) and we would have to fix unit tests that depend on key\n  // ordering.\n  key = this.getKeyName_(key);\n  if (this.containsKey(key)) {\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n  }\n  this.keyMap_.set(key, [value]);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Returns the first value associated with the key. If the query data has no\n * such key this will return undefined or the optional default.\n * @param {string} key The name of the parameter to get the value for.\n * @param {*=} opt_default The default value to return if the query data\n *     has no such key.\n * @return {*} The first string value associated with the key, or opt_default\n *     if there's no value.\n */\ngoog.Uri.QueryData.prototype.get = function(key, opt_default) {\n  var values = key ? this.getValues(key) : [];\n  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {\n    return values.length > 0 ? values[0] : opt_default;\n  } else {\n    return values.length > 0 ? String(values[0]) : opt_default;\n  }\n};\n\n\n/**\n * Sets the values for a key. If the key already exists, this will\n * override all of the existing values that correspond to the key.\n * @param {string} key The key to set values for.\n * @param {!Array<?>} values The values to set.\n */\ngoog.Uri.QueryData.prototype.setValues = function(key, values) {\n  this.remove(key);\n\n  if (values.length > 0) {\n    this.invalidateCache_();\n    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));\n    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;\n  }\n};\n\n\n/**\n * @return {string} Encoded query string.\n * @override\n */\ngoog.Uri.QueryData.prototype.toString = function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n\n  if (!this.keyMap_) {\n    return '';\n  }\n\n  var sb = [];\n\n  // In the past, we use this.getKeys() and this.getVals(), but that\n  // generates a lot of allocations as compared to simply iterating\n  // over the keys.\n  var keys = this.keyMap_.getKeys();\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var encodedKey = goog.string.urlEncode(key);\n    var val = this.getValues(key);\n    for (var j = 0; j < val.length; j++) {\n      var param = encodedKey;\n      // Ensure that null and undefined are encoded into the url as\n      // literal strings.\n      if (val[j] !== '') {\n        param += '=' + goog.string.urlEncode(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n\n  return this.encodedQuery_ = sb.join('&');\n};\n\n\n/**\n * @throws URIError If URI is malformed (that is, if decodeURIComponent fails on\n *     any of the URI components).\n * @return {string} Decoded query string.\n */\ngoog.Uri.QueryData.prototype.toDecodedString = function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\n\n\n/**\n * Invalidate the cache.\n * @private\n */\ngoog.Uri.QueryData.prototype.invalidateCache_ = function() {\n  this.encodedQuery_ = null;\n};\n\n\n/**\n * Removes all keys that are not in the provided list. (Modifies this object.)\n * @param {Array<string>} keys The desired keys.\n * @return {!goog.Uri.QueryData} a reference to this object.\n */\ngoog.Uri.QueryData.prototype.filterKeys = function(keys) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    if (!goog.array.contains(keys, key)) {\n      this.remove(key);\n    }\n  }, this);\n  return this;\n};\n\n\n/**\n * Clone the query data instance.\n * @return {!goog.Uri.QueryData} New instance of the QueryData object.\n */\ngoog.Uri.QueryData.prototype.clone = function() {\n  var rv = new goog.Uri.QueryData();\n  rv.encodedQuery_ = this.encodedQuery_;\n  if (this.keyMap_) {\n    rv.keyMap_ = this.keyMap_.clone();\n    rv.count_ = this.count_;\n  }\n  return rv;\n};\n\n\n/**\n * Helper function to get the key name from a JavaScript object. Converts\n * the object to a string, and to lower case if necessary.\n * @private\n * @param {*} arg The object to get a key name from.\n * @return {string} valid key name which can be looked up in #keyMap_.\n */\ngoog.Uri.QueryData.prototype.getKeyName_ = function(arg) {\n  var keyName = String(arg);\n  if (this.ignoreCase_) {\n    keyName = keyName.toLowerCase();\n  }\n  return keyName;\n};\n\n\n/**\n * Ignore case in parameter names.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n */\ngoog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {\n  var resetKeys = ignoreCase && !this.ignoreCase_;\n  if (resetKeys) {\n    this.ensureKeyMapInitialized_();\n    this.invalidateCache_();\n    this.keyMap_.forEach(function(value, key) {\n      var lowerCase = key.toLowerCase();\n      if (key != lowerCase) {\n        this.remove(key);\n        this.setValues(lowerCase, value);\n      }\n    }, this);\n  }\n  this.ignoreCase_ = ignoreCase;\n};\n\n\n/**\n * Extends a query data object with another query data or map like object. This\n * operates 'in-place', it does not create a new QueryData object.\n *\n * @param {...(?goog.Uri.QueryData|?goog.structs.Map<?, ?>|?Object)} var_args\n *     The object from which key value pairs will be copied.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters.\n */\ngoog.Uri.QueryData.prototype.extend = function(var_args) {\n  for (var i = 0; i < arguments.length; i++) {\n    var data = arguments[i];\n    goog.structs.forEach(\n        data, function(value, key) { this.add(key, value); }, this);\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines fireauth.iframeclient.IfcHandler used to communicate\n * with the serverless widget.\n */\n\ngoog.provide('fireauth.iframeclient.IfcHandler');\ngoog.provide('fireauth.iframeclient.IframeUrlBuilder');\ngoog.provide('fireauth.iframeclient.OAuthUrlBuilder');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.InvalidOriginError');\ngoog.require('fireauth.OAuthSignInHandler');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.iframeclient.IframeWrapper');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n/**\n * The OAuth handler and iframe prototcol.\n * @const {string}\n * @suppress {const|duplicate}\n */\nfireauth.iframeclient.SCHEME = 'https';\n\n\n\n/**\n * The OAuth handler and iframe port number.\n * @const {?number}\n * @suppress {const|duplicate}\n */\nfireauth.iframeclient.PORT_NUMBER = null;\n\n\n\n/**\n * The iframe URL builder used to build the iframe widget URL.\n * @param {string} authDomain The application authDomain.\n * @param {string} apiKey The API key.\n * @param {string} appName The App name.\n * @constructor\n */\nfireauth.iframeclient.IframeUrlBuilder = function(authDomain, apiKey, appName) {\n  /** @private {string} The application authDomain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /** @private {?string|undefined} The client version. */\n  this.v_ = null;\n  /**\n   * @private {!goog.Uri} The URI object used to build the iframe URL.\n   */\n  this.uri_ = goog.Uri.create(\n      fireauth.iframeclient.SCHEME,\n      null,\n      this.authDomain_,\n      fireauth.iframeclient.PORT_NUMBER,\n      '/__/auth/iframe',\n      null,\n      null);\n  this.uri_.setParameterValue('apiKey', this.apiKey_);\n  this.uri_.setParameterValue('appName', this.appName_);\n  /** @private {?string|undefined} The endpoint ID. */\n  this.endpointId_ = null;\n  /** @private {!Array<string>} The list of framework IDs. */\n  this.frameworks_ = [];\n};\n\n\n/**\n * Sets the client version.\n * @param {?string|undefined} v The client version.\n * @return {!fireauth.iframeclient.IframeUrlBuilder} The current iframe URL\n *     builder instance.\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.setVersion = function(v) {\n  this.v_ = v;\n  return this;\n};\n\n\n/**\n * Sets the endpoint ID.\n * @param {?string|undefined} eid The endpoint ID (staging, test Gaia, etc).\n * @return {!fireauth.iframeclient.IframeUrlBuilder} The current iframe URL\n *     builder instance.\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.setEndpointId = function(eid) {\n  this.endpointId_ = eid;\n  return this;\n};\n\n\n/**\n * Sets the list of frameworks to pass to the iframe.\n * @param {?Array<string>|undefined} frameworks The list of frameworks to log.\n * @return {!fireauth.iframeclient.IframeUrlBuilder} The current iframe URL\n *     builder instance.\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.setFrameworks =\n    function(frameworks) {\n  this.frameworks_ = goog.array.clone(frameworks || []);\n  return this;\n};\n\n\n/**\n * Modifes the URI with the relevant Auth provider parameters.\n * @return {string} The constructed OAuth URL string.\n * @override\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.toString = function() {\n  // Pass the client version if available.\n  if (this.v_) {\n    this.uri_.setParameterValue('v', this.v_);\n  } else {\n    this.uri_.removeParameter('v');\n  }\n  // Pass the endpoint ID if available.\n  if (this.endpointId_) {\n    this.uri_.setParameterValue('eid', this.endpointId_);\n  } else {\n    this.uri_.removeParameter('eid');\n  }\n  // Pass the list of frameworks if available.\n  if (this.frameworks_.length) {\n    this.uri_.setParameterValue('fw', this.frameworks_.join(','));\n  } else {\n    this.uri_.removeParameter('fw');\n  }\n  return this.uri_.toString();\n};\n\n\n\n/**\n * The OAuth URL builder used to build the OAuth handler widget URL.\n * @param {string} authDomain The application authDomain.\n * @param {string} apiKey The API key.\n * @param {string} appName The App name.\n * @param {string} authType The Auth operation type.\n * @param {!fireauth.AuthProvider} provider The Auth provider that the OAuth\n *     handler request is built to sign in to.\n * @constructor\n */\nfireauth.iframeclient.OAuthUrlBuilder =\n    function(authDomain, apiKey, appName, authType, provider) {\n  /** @private {string} The application authDomain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /** @private {string} The Auth operation type. */\n  this.authType_ = authType;\n  /**\n   * @private {?string|undefined} The redirect URL used in redirect operations.\n   */\n  this.redirectUrl_ = null;\n  /** @private {?string|undefined} The event ID. */\n  this.eventId_ = null;\n  /** @private {?string|undefined} The client version. */\n  this.v_ = null;\n  /**\n   * @private {!fireauth.AuthProvider} The Firebase Auth provider that the OAuth\n   *     handler request is built to sign in to.\n   */\n  this.provider_ = provider;\n  /** @private {?string|undefined} The endpoint ID. */\n  this.endpointId_ = null;\n};\n\n\n/**\n * Sets the redirect URL.\n * @param {?string|undefined} redirectUrl The redirect URL used in redirect\n *     operations.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setRedirectUrl =\n    function(redirectUrl) {\n  this.redirectUrl_ = redirectUrl;\n  return this;\n};\n\n\n/**\n * Sets the event ID.\n * @param {?string|undefined} eventId The event ID.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setEventId = function(eventId) {\n  this.eventId_ = eventId;\n  return this;\n};\n\n\n/**\n * Sets the client version.\n * @param {?string|undefined} v The client version.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setVersion = function(v) {\n  this.v_ = v;\n  return this;\n};\n\n\n/**\n * Sets the endpoint ID.\n * @param {?string|undefined} eid The endpoint ID (staging, test Gaia, etc).\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setEndpointId = function(eid) {\n  this.endpointId_ = eid;\n  return this;\n};\n\n\n/**\n * Sets any additional optional parameters. This will overwrite any previously\n * set additional parameters.\n * @param {?Object<string, string>|undefined} additionalParams The optional\n *     additional parameters.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setAdditionalParameters =\n    function(additionalParams) {\n  this.additionalParams_ = goog.object.clone(additionalParams || null);\n  return this;\n};\n\n\n/**\n * Modifies the URI with the relevant Auth provider parameters.\n * @return {string} The constructed OAuth URL string.\n * @override\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.toString = function() {\n  var uri = goog.Uri.create(\n      fireauth.iframeclient.SCHEME,\n      null,\n      this.authDomain_,\n      fireauth.iframeclient.PORT_NUMBER,\n      '/__/auth/handler',\n      null,\n      null);\n  uri.setParameterValue('apiKey', this.apiKey_);\n  uri.setParameterValue('appName', this.appName_);\n  uri.setParameterValue('authType', this.authType_);\n\n  // Add custom parameters for OAuth1/OAuth2 providers.\n  if (this.provider_['isOAuthProvider']) {\n    // Set default language if available and no language already set.\n    /** @type {!fireauth.FederatedProvider} */ (this.provider_)\n        .setDefaultLanguage(this.getAuthLanguage_());\n    uri.setParameterValue('providerId', this.provider_['providerId']);\n    var customParameters = /** @type {!fireauth.FederatedProvider} */ (\n        this.provider_).getCustomParameters();\n    if (!goog.object.isEmpty(customParameters)) {\n      uri.setParameterValue(\n          'customParameters',\n          /** @type {string} */ (fireauth.util.stringifyJSON(customParameters))\n          );\n    }\n  }\n\n  // Add scopes for OAuth2 providers.\n  if (typeof this.provider_.getScopes === 'function') {\n    var scopes = this.provider_.getScopes();\n    if (scopes.length) {\n      uri.setParameterValue('scopes', scopes.join(','));\n    }\n  }\n\n  if (this.redirectUrl_) {\n    uri.setParameterValue('redirectUrl', this.redirectUrl_);\n  } else {\n    uri.removeParameter('redirectUrl');\n  }\n  if (this.eventId_) {\n    uri.setParameterValue('eventId', this.eventId_);\n  } else {\n    uri.removeParameter('eventId');\n  }\n  // Pass the client version if available.\n  if (this.v_) {\n    uri.setParameterValue('v', this.v_);\n  } else {\n    uri.removeParameter('v');\n  }\n  if (this.additionalParams_) {\n    for (var key in this.additionalParams_) {\n      if (this.additionalParams_.hasOwnProperty(key) &&\n          // Don't overwrite other existing parameters.\n          !uri.getParameterValue(key)) {\n        uri.setParameterValue(key, this.additionalParams_[key]);\n      }\n    }\n  }\n  // Pass the endpoint ID if available.\n  if (this.endpointId_) {\n    uri.setParameterValue('eid', this.endpointId_);\n  } else {\n    uri.removeParameter('eid');\n  }\n  // Append any framework IDs to the handler URL to log in handler RPC requests.\n  var frameworks = this.getAuthFrameworks_();\n  if (frameworks.length) {\n    uri.setParameterValue('fw', frameworks.join(','));\n  }\n  return uri.toString();\n};\n\n\n/**\n * Returns the current Auth instance's language code.\n * @return {?string} The corresponding language code.\n * @private\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.getAuthLanguage_ = function() {\n  try {\n    // Get the Auth instance for the current App identified by the App name.\n    // This could fail if, for example, the App instance was deleted.\n    return firebase['app'](this.appName_)['auth']().getLanguageCode();\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Returns the list of Firebase frameworks used for logging purposes.\n * @return {!Array<string>} The list of corresponding Firebase frameworks.\n * @private\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.getAuthFrameworks_ =\n    function() {\n  return fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(\n      this.appName_);\n};\n\n\n/**\n * Returns the list of Firebase frameworks used for logging purposes\n * corresponding to the Firebase App name provided.\n * @param {string} appName The Firebase App name.\n * @return {!Array<string>} The list of corresponding Firebase frameworks.\n * @private\n */\nfireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_ =\n    function(appName) {\n  try {\n    // Get the Auth instance's list of Firebase framework IDs for the current\n    // App identified by the App name.\n    // This could fail if, for example, the App instance was deleted.\n    return firebase['app'](appName)['auth']().getFramework();\n  } catch (e) {\n    return [];\n  }\n};\n\n\n\n/**\n * Initializes the ifcHandler which provides the mechanism to listen to Auth\n * events on the hidden iframe.\n * @param {string} authDomain The firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @constructor\n * @implements {fireauth.OAuthSignInHandler}\n */\nfireauth.iframeclient.IfcHandler = function(authDomain, apiKey, appName,\n    opt_clientVersion, opt_endpointId) {\n  /** @private {string} The Auth domain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /** @private {?string} The client version. */\n  this.clientVersion_ = opt_clientVersion || null;\n  /** @private {?string} The Auth endpoint ID. */\n  this.endpointId_ = opt_endpointId || null;\n  // Delay RPC handler and iframe URL initialization until needed to ensure\n  // logged frameworks are propagated to the iframe.\n  /** @private {?string} The full client version string. */\n  this.fullClientVersion_ = null;\n  /** @private {?string} The iframe URL. */\n  this.iframeUrl_ = null;\n  /** @private {?fireauth.RpcHandler} The RPC handler for provided API key. */\n  this.rpcHandler_ = null;\n  /**\n   * @private {!Array<!function(?fireauth.AuthEvent)>} The Auth event\n   *     listeners.\n   */\n  this.authEventListeners_ = [];\n  // Delay origin validator determination until needed, so the error is not\n  // thrown in the background. This will also prevent the getProjectConfig RPC\n  // until it is required.\n  /** @private {?goog.Promise} The origin validator. */\n  this.originValidator_ = null;\n  /** @private {?goog.Promise} The initialization promise. */\n  this.isInitialized_ = null;\n};\n\n\n/**\n * Validates the provided URL.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler used to validate the\n *     requested origin.\n * @param {string=} opt_origin The optional page origin. If not provided, the\n *     window.location.href value is used.\n * @return {!goog.Promise} The promise that resolves if the provided origin is\n *     valid.\n * @private\n */\nfireauth.iframeclient.IfcHandler.getOriginValidator_ =\n    function(rpcHandler, opt_origin) {\n  var origin = opt_origin || fireauth.util.getCurrentUrl();\n  return rpcHandler.getAuthorizedDomains().then(function(authorizedDomains) {\n    if (!fireauth.util.isAuthorizedDomain(authorizedDomains, origin)) {\n      throw new fireauth.InvalidOriginError(fireauth.util.getCurrentUrl());\n    }\n  });\n};\n\n\n/**\n * Initializes the iframe client wrapper.\n * @return {!goog.Promise} The promise that resolves on initialization.\n */\nfireauth.iframeclient.IfcHandler.prototype.initialize = function() {\n  // Already initialized.\n  if (this.isInitialized_) {\n    return this.isInitialized_;\n  }\n  var self = this;\n  this.isInitialized_ = fireauth.util.onDomReady().then(function() {\n    /**\n     * @private {!fireauth.iframeclient.IframeWrapper} The iframe wrapper\n     *     instance.\n     */\n    self.iframeWrapper_ = new fireauth.iframeclient.IframeWrapper(\n        self.getIframeUrl());\n    // Register all event listeners to Auth event messages sent from Auth\n    // iframe.\n    self.registerEvents_();\n  });\n  return this.isInitialized_;\n};\n\n\n/**\n * Waits for popup window to close. When closed start timeout listener for popup\n * pending promise. If in the process, it was detected that the iframe does not\n * support web storage, the popup is closed and the web storage unsupported\n * error is thrown.\n * @param {!Window} popupWin The popup window.\n * @param {!function(!fireauth.AuthError)} onError The on error callback.\n * @param {number} timeoutDuration The time to wait in ms after the popup is\n *     closed before triggering the popup closed by user error.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.startPopupTimeout =\n    function(popupWin, onError, timeoutDuration) {\n  // Expire pending timeout promise for popup operation.\n  var popupClosedByUserError = new fireauth.AuthError(\n      fireauth.authenum.Error.POPUP_CLOSED_BY_USER);\n  // If web storage is disabled in the iframe, expire popup timeout quickly with\n  // this error.\n  var webStorageNotSupportedError = new fireauth.AuthError(\n      fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  var self = this;\n  var isResolved = false;\n  // Wait for the iframe to be ready first.\n  return this.initializeAndWait().then(function() {\n    // We do not return isWebStorageSupported() to ensure that this is backward\n    // compatible.\n    // Pushing the following client changes before updating the iframe to\n    // respond to these events would continue to work.\n    // The downside is that the popup could be closed before this resolves.\n    // In that case, they would get an error that the popup was closed and not\n    // the error that web storage is not supported, though that is unlikely\n    // as isWebStorageSupported should execute faster than the popup timeout.\n    // If web storage is not supported in the iframe, fail quickly.\n    self.isWebStorageSupported().then(function(isSupported) {\n      if (!isSupported) {\n        // If not supported, close window.\n        if (popupWin) {\n          fireauth.util.closeWindow(popupWin);\n        }\n        onError(webStorageNotSupportedError);\n        isResolved = true;\n      }\n    });\n  }).thenCatch(function(error) {\n    // Ignore any possible error in iframe embedding.\n    // These types of errors will be handled in processPopup which will close\n    // the popup too if that happens.\n    return;\n  }).then(function() {\n    // Skip if already resolved.\n    if (isResolved) {\n      return;\n    }\n    // After the iframe is ready, wait for popup to close and then start timeout\n    // check.\n    return fireauth.util.onPopupClose(popupWin);\n  }).then(function() {\n    // Skip if already resolved.\n    if (isResolved) {\n      return;\n    }\n    return goog.Timer.promise(timeoutDuration).then(function() {\n      // If this is already resolved or rejected, this will do nothing.\n      onError(popupClosedByUserError);\n    });\n  });\n};\n\n\n/**\n * @return {boolean} Whether the handler should be initialized early.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.shouldBeInitializedEarly =\n    function() {\n  var ua = fireauth.util.getUserAgentString();\n  // Cannot run in the background (can't wait for iframe to be embedded\n  // before triggering popup redirect) and is Safari (can only detect\n  // localStorage in iframe via change event) => embed iframe ASAP.\n  // Do the same for mobile browsers on iOS devices as they use the same\n  // Safari implementation underneath.\n  return !fireauth.util.runsInBackground(ua) &&\n         !fireauth.util.iframeCanSyncWebStorage(ua);\n};\n\n\n/**\n * @return {boolean} Whether the sign-in handler in the current environment\n *     has volatile session storage.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.hasVolatileStorage = function() {\n  // Web environment with web storage enabled has stable sessionStorage.\n  return false;\n};\n\n\n/**\n * Processes the popup request. The popup instance must be provided externally\n * and on error, the requestor must close the window.\n * @param {?Window} popupWin The popup window reference.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function()} onInitialize The function to call on initialization.\n * @param {!function(*)} onError The function to call on error.\n * @param {string=} opt_eventId The optional event ID.\n * @param {boolean=} opt_alreadyRedirected Whether popup is already redirected\n *     to final destination.\n * @return {!goog.Promise} The popup window promise.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.processPopup = function(\n    popupWin,\n    mode,\n    provider,\n    onInitialize,\n    onError,\n    opt_eventId,\n    opt_alreadyRedirected) {\n  // processPopup is failing since it tries to access popup win when tab can\n  // not run in background. For now bypass processPopup which runs\n  // additional origin check not accounted above. Besides, iframe will never\n  // hand result to parent if origin not whitelisted.\n  // Error thrown by browser: Unable to establish a connection with the\n  // popup. It may have been blocked by the browser.\n  // If popup is null, startPopupTimeout will catch it without having the\n  // above error getting triggered due to popup access from opener.\n\n  // Reject immediately if the popup is blocked.\n  if (!popupWin) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.POPUP_BLOCKED));\n  }\n  // Already redirected and cannot run in the background, resolve quickly while\n  // initializing.\n  if (opt_alreadyRedirected && !fireauth.util.runsInBackground()) {\n    // Initialize first before resolving.\n    this.initializeAndWait().thenCatch(function(error) {\n      fireauth.util.closeWindow(popupWin);\n      onError(error);\n    });\n    onInitialize();\n    // Already redirected.\n    return goog.Promise.resolve();\n  }\n  // If origin validator not determined yet.\n  if (!this.originValidator_) {\n    this.originValidator_ =\n        fireauth.iframeclient.IfcHandler.getOriginValidator_(\n            this.getRpcHandler_());\n  }\n  var self = this;\n  return this.originValidator_.then(function() {\n    // After origin validation, wait for iframe to be ready before redirecting.\n    var onReady = self.initializeAndWait().thenCatch(function(error) {\n      fireauth.util.closeWindow(popupWin);\n      onError(error);\n      throw error;\n    });\n    onInitialize();\n    return onReady;\n  }).then(function() {\n    // Popup and redirect operations work for OAuth providers only.\n    fireauth.AuthProvider.checkIfOAuthSupported(provider);\n    // Already redirected to intended destination, no need to redirect again.\n    if (opt_alreadyRedirected) {\n      return;\n    }\n    var oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            self.authDomain_,\n            self.apiKey_,\n            self.appName_,\n            mode,\n            provider,\n            null,\n            opt_eventId,\n            self.clientVersion_,\n            undefined,\n            self.endpointId_);\n    // Redirect popup to OAuth helper widget URL.\n    fireauth.util.goTo(oauthHelperWidgetUrl, /** @type {!Window} */ (popupWin));\n  }).thenCatch(function(e) {\n    // Force another origin validation.\n    if (e.code == 'auth/network-request-failed') {\n      self.originValidator_ = null;\n    }\n    throw e;\n  });\n};\n\n\n/**\n * @return {!fireauth.RpcHandler} The RPC handler instance with the relevant\n *     endpoints, version and frameworks.\n * @private\n */\nfireauth.iframeclient.IfcHandler.prototype.getRpcHandler_ = function() {\n  if (!this.rpcHandler_) {\n    this.fullClientVersion_ = this.clientVersion_ ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE,\n            this.clientVersion_,\n            fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(\n                this.appName_)) :\n        null;\n    this.rpcHandler_ = new fireauth.RpcHandler(\n        this.apiKey_,\n        // Get the client Auth endpoint used.\n        fireauth.constants.getEndpointConfig(this.endpointId_),\n        this.fullClientVersion_);\n  }\n  return this.rpcHandler_;\n};\n\n\n/**\n * Processes the redirect request.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.processRedirect =\n    function(mode, provider, opt_eventId) {\n  // If origin validator not determined yet.\n  if (!this.originValidator_) {\n    this.originValidator_ =\n        fireauth.iframeclient.IfcHandler.getOriginValidator_(\n            this.getRpcHandler_());\n  }\n  var self = this;\n  // Make sure origin is validated.\n  return this.originValidator_.then(function() {\n    fireauth.AuthProvider.checkIfOAuthSupported(provider);\n    var oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            self.authDomain_,\n            self.apiKey_,\n            self.appName_,\n            mode,\n            provider,\n            fireauth.util.getCurrentUrl(),\n            opt_eventId,\n            self.clientVersion_,\n            undefined,\n            self.endpointId_);\n    // Redirect to OAuth helper widget URL.\n    fireauth.util.goTo(oauthHelperWidgetUrl);\n  }).thenCatch(function(e) {\n    // Force another origin validation on network errors.\n    if (e.code == 'auth/network-request-failed') {\n      self.originValidator_ = null;\n    }\n    throw e;\n  });\n};\n\n\n/** @return {string} The iframe URL. */\nfireauth.iframeclient.IfcHandler.prototype.getIframeUrl = function() {\n  if (!this.iframeUrl_) {\n    this.iframeUrl_ = fireauth.iframeclient.IfcHandler.getAuthIframeUrl(\n        this.authDomain_, this.apiKey_, this.appName_, this.clientVersion_,\n        this.endpointId_,\n        fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(\n            this.appName_));\n  }\n  return this.iframeUrl_;\n};\n\n\n/**\n * @return {!goog.Promise} The promise that resolves when the iframe is ready.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.initializeAndWait = function() {\n  // Initialize if not initialized yet.\n  var self = this;\n  return this.initialize().then(function() {\n    return self.iframeWrapper_.onReady();\n  }).thenCatch(function(error) {\n    // Reset origin validator.\n    self.originValidator_ = null;\n    // Reject iframe ready promise with network error.\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.NETWORK_REQUEST_FAILED);\n  });\n};\n\n\n/**\n * @return {boolean} Whether the handler will unload the current page on\n *     redirect operations.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.unloadsOnRedirect = function() {\n  return true;\n};\n\n\n/**\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @param {?Array<string>=} opt_frameworks The optional list of framework IDs.\n * @return {string} The data iframe src URL.\n */\nfireauth.iframeclient.IfcHandler.getAuthIframeUrl = function(authDomain, apiKey,\n    appName, opt_clientVersion, opt_endpointId, opt_frameworks) {\n  // OAuth helper iframe URL.\n  var builder = new fireauth.iframeclient.IframeUrlBuilder(\n      authDomain, apiKey, appName);\n  return builder\n      .setVersion(opt_clientVersion)\n      .setEndpointId(opt_endpointId)\n      .setFrameworks(opt_frameworks)\n      .toString();\n};\n\n\n/**\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {string} authType The type of operation that depends on OAuth sign in.\n * @param {!fireauth.AuthProvider} provider The provider to sign in to.\n * @param {?string=} opt_redirectUrl The optional URL to redirect to on OAuth\n *     sign in completion.\n * @param {?string=} opt_eventId The optional event ID to identify on receipt.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {?Object<string, string>=} opt_additionalParams The optional\n *     additional parameters.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @return {string} The OAuth helper widget URL.\n */\nfireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl = function(\n    authDomain,\n    apiKey,\n    appName,\n    authType,\n    provider,\n    opt_redirectUrl,\n    opt_eventId,\n    opt_clientVersion,\n    opt_additionalParams,\n    opt_endpointId) {\n  // OAuth helper widget URL.\n  var builder = new fireauth.iframeclient.OAuthUrlBuilder(\n      authDomain, apiKey, appName, authType, provider);\n  return builder\n      .setRedirectUrl(opt_redirectUrl)\n      .setEventId(opt_eventId)\n      .setVersion(opt_clientVersion)\n      .setAdditionalParameters(opt_additionalParams)\n      .setEndpointId(opt_endpointId)\n      .toString();\n};\n\n\n/**\n * Post message receiver event names.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.ReceiverEvent = {\n  AUTH_EVENT: 'authEvent'\n};\n\n\n/**\n * Post message sender event names.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.SenderEvent = {\n  WEB_STORAGE_SUPPORT_EVENT: 'webStorageSupport'\n};\n\n\n/**\n * Post message response field names.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.Response = {\n  STATUS: 'status',\n  AUTH_EVENT: 'authEvent',\n  WEB_STORAGE_SUPPORT: 'webStorageSupport'\n};\n\n\n/**\n * Post message status values.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.Status = {\n  ACK: 'ACK',\n  ERROR: 'ERROR'\n};\n\n\n/**\n * Registers all event listeners.\n * @private\n */\nfireauth.iframeclient.IfcHandler.prototype.registerEvents_ = function() {\n  // Should be run in initialization.\n  if (!this.iframeWrapper_) {\n    throw new Error('IfcHandler must be initialized!');\n  }\n  var self = this;\n  // Listen to Auth change events emitted from iframe.\n  this.iframeWrapper_.registerEvent(\n      fireauth.iframeclient.IfcHandler.ReceiverEvent.AUTH_EVENT,\n      function(response) {\n        var resolveResponse = {};\n        if (response &&\n            response[fireauth.iframeclient.IfcHandler.Response.AUTH_EVENT]) {\n          var isHandled = false;\n          // Get Auth event (plain object).\n          var authEvent = fireauth.AuthEvent.fromPlainObject(\n              response[fireauth.iframeclient.IfcHandler.Response.AUTH_EVENT]);\n          // Trigger Auth change on all listeners.\n          for (var i = 0; i < self.authEventListeners_.length; i++) {\n            isHandled = self.authEventListeners_[i](authEvent) || isHandled;\n          }\n          // Return ack response to notify sender of success.\n          resolveResponse = {};\n          resolveResponse[fireauth.iframeclient.IfcHandler.Response.STATUS] =\n              isHandled ? fireauth.iframeclient.IfcHandler.Status.ACK :\n                  fireauth.iframeclient.IfcHandler.Status.ERROR;\n          return goog.Promise.resolve(resolveResponse);\n        }\n        // Return error status if the response is invalid.\n        resolveResponse[fireauth.iframeclient.IfcHandler.Response.STATUS] =\n            fireauth.iframeclient.IfcHandler.Status.ERROR;\n        return goog.Promise.resolve(resolveResponse);\n      });\n};\n\n\n/**\n * @return {!goog.Promise<boolean>} Whether web storage is supported in the\n *     iframe.\n */\nfireauth.iframeclient.IfcHandler.prototype.isWebStorageSupported = function() {\n  var webStorageSupportEvent =\n      fireauth.iframeclient.IfcHandler.SenderEvent.WEB_STORAGE_SUPPORT_EVENT;\n  var message = {\n    'type': webStorageSupportEvent\n  };\n  var self = this;\n  // Initialize if not initialized yet.\n  return this.initialize().then(function() {\n    return self.iframeWrapper_.sendMessage(message);\n  }).then(function(response) {\n    // Parse the response and return the passed web storage support status.\n    var key = fireauth.iframeclient.IfcHandler.Response.WEB_STORAGE_SUPPORT;\n    if (response &&\n        response.length &&\n        typeof response[0][key] !== 'undefined') {\n      return response[0][key];\n    }\n    // Internal error.\n    throw new Error;\n  });\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to add.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.addAuthEventListener =\n    function(listener) {\n  this.authEventListeners_.push(listener);\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to remove.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.removeAuthEventListener =\n    function(listener) {\n  goog.array.removeAllIf(this.authEventListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Browser capability checks for the dom package.\n *\n */\n\n\ngoog.provide('goog.dom.BrowserFeature');\n\ngoog.require('goog.userAgent');\n\n\n/**\n * Enum of browser capabilities.\n * @enum {boolean}\n */\ngoog.dom.BrowserFeature = {\n  /**\n   * Whether attributes 'name' and 'type' can be added to an element after it's\n   * created. False in Internet Explorer prior to version 9.\n   */\n  CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:\n      !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9),\n\n  /**\n   * Whether we can use element.children to access an element's Element\n   * children. Available since Gecko 1.9.1, IE 9. (IE<9 also includes comment\n   * nodes in the collection.)\n   */\n  CAN_USE_CHILDREN_ATTRIBUTE: !goog.userAgent.GECKO && !goog.userAgent.IE ||\n      goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) ||\n      goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher('1.9.1'),\n\n  /**\n   * Opera, Safari 3, and Internet Explorer 9 all support innerText but they\n   * include text nodes in script and style tags. Not document-mode-dependent.\n   */\n  CAN_USE_INNER_TEXT:\n      (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9')),\n\n  /**\n   * MSIE, Opera, and Safari>=4 support element.parentElement to access an\n   * element's parent if it is an Element.\n   */\n  CAN_USE_PARENT_ELEMENT_PROPERTY:\n      goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT,\n\n  /**\n   * Whether NoScope elements need a scoped element written before them in\n   * innerHTML.\n   * MSDN: http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx#1\n   */\n  INNER_HTML_NEEDS_SCOPED_ELEMENT: goog.userAgent.IE,\n\n  /**\n   * Whether we use legacy IE range API.\n   */\n  LEGACY_IE_RANGES:\n      goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.string.Const');\n\ngoog.require('goog.asserts');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * Wrapper for compile-time-constant strings.\n *\n * Const is a wrapper for strings that can only be created from program\n * constants (i.e., string literals).  This property relies on a custom Closure\n * compiler check that `goog.string.Const.from` is only invoked on\n * compile-time-constant expressions.\n *\n * Const is useful in APIs whose correct and secure use requires that certain\n * arguments are not attacker controlled: Compile-time constants are inherently\n * under the control of the application and not under control of external\n * attackers, and hence are safe to use in such contexts.\n *\n * Instances of this type must be created via its factory method\n * `goog.string.Const.from` and not by invoking its constructor.  The\n * constructor intentionally takes no parameters and the type is immutable;\n * hence only a default instance corresponding to the empty string can be\n * obtained via constructor invocation.\n *\n * @see goog.string.Const#from\n * @constructor\n * @final\n * @struct\n * @implements {goog.string.TypedString}\n */\ngoog.string.Const = function() {\n  /**\n   * The wrapped value of this Const object.  The field has a purposely ugly\n   * name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.string.Const#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ =\n      goog.string.Const.TYPE_MARKER_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.string.Const.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this Const's value a string.\n *\n * IMPORTANT: In code where it is security-relevant that an object's type is\n * indeed `goog.string.Const`, use `goog.string.Const.unwrap`\n * instead of this method.\n *\n * @see goog.string.Const#unwrap\n * @override\n */\ngoog.string.Const.prototype.getTypedStringValue = function() {\n  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n};\n\n\n/**\n * Returns a debug-string representation of this value.\n *\n * To obtain the actual string value wrapped inside an object of this type,\n * use `goog.string.Const.unwrap`.\n *\n * @see goog.string.Const#unwrap\n * @override\n */\ngoog.string.Const.prototype.toString = function() {\n  return 'Const{' +\n      this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ +\n      '}';\n};\n\n\n/**\n * Performs a runtime check that the provided object is indeed an instance\n * of `goog.string.Const`, and returns its value.\n * @param {!goog.string.Const} stringConst The object to extract from.\n * @return {string} The Const object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.string.Const.unwrap = function(stringConst) {\n  // Perform additional run-time type-checking to ensure that stringConst is\n  // indeed an instance of the expected type.  This provides some additional\n  // protection against security bugs due to application code that disables type\n  // checks.\n  if (stringConst instanceof goog.string.Const &&\n      stringConst.constructor === goog.string.Const &&\n      stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ ===\n          goog.string.Const.TYPE_MARKER_) {\n    return stringConst\n        .stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n  } else {\n    goog.asserts.fail(\n        'expected object of type Const, got \\'' + stringConst + '\\'');\n    return 'type_error:Const';\n  }\n};\n\n\n/**\n * Creates a Const object from a compile-time constant string.\n *\n * It is illegal to invoke this function on an expression whose\n * compile-time-contant value cannot be determined by the Closure compiler.\n *\n * Correct invocations include,\n * <pre>\n *   var s = goog.string.Const.from('hello');\n *   var t = goog.string.Const.from('hello' + 'world');\n * </pre>\n *\n * In contrast, the following are illegal:\n * <pre>\n *   var s = goog.string.Const.from(getHello());\n *   var t = goog.string.Const.from('hello' + world);\n * </pre>\n *\n * @param {string} s A constant string from which to create a Const.\n * @return {!goog.string.Const} A Const object initialized to stringConst.\n */\ngoog.string.Const.from = function(s) {\n  return goog.string.Const.create__googStringSecurityPrivate_(s);\n};\n\n\n/**\n * Type marker for the Const type, used to implement additional run-time\n * type checking.\n * @const {!Object}\n * @private\n */\ngoog.string.Const.TYPE_MARKER_ = {};\n\n\n/**\n * Utility method to create Const instances.\n * @param {string} s The string to initialize the Const object with.\n * @return {!goog.string.Const} The initialized Const object.\n * @private\n */\ngoog.string.Const.create__googStringSecurityPrivate_ = function(s) {\n  var stringConst = new goog.string.Const();\n  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ =\n      s;\n  return stringConst;\n};\n\n\n/**\n * A Const instance wrapping the empty string.\n * @const {!goog.string.Const}\n */\ngoog.string.Const.EMPTY = goog.string.Const.from('');\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview The TrustedResourceUrl type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.TrustedResourceUrl');\n\ngoog.require('goog.asserts');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * A URL which is under application control and from which script, CSS, and\n * other resources that represent executable code, can be fetched.\n *\n * Given that the URL can only be constructed from strings under application\n * control and is used to load resources, bugs resulting in a malformed URL\n * should not have a security impact and are likely to be easily detectable\n * during testing. Given the wide number of non-RFC compliant URLs in use,\n * stricter validation could prevent some applications from being able to use\n * this type.\n *\n * Instances of this type must be created via the factory method,\n * (`fromConstant`, `fromConstants`, `format` or\n * `formatWithParams`), and not by invoking its constructor. The constructor\n * intentionally takes no parameters and the type is immutable; hence only a\n * default instance corresponding to the empty string can be obtained via\n * constructor invocation.\n *\n * @see goog.html.TrustedResourceUrl#fromConstant\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.TrustedResourceUrl = function() {\n  /**\n   * The contained value of this TrustedResourceUrl.  The field has a purposely\n   * ugly name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.TrustedResourceUrl#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this TrustedResourceUrl's value as a string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `TrustedResourceUrl`, use\n * `goog.html.TrustedResourceUrl.unwrap` instead of this method. If in\n * doubt, assume that it's security relevant. In particular, note that\n * goog.html functions which return a goog.html type do not guarantee that\n * the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml instanceof\n * // goog.html.SafeHtml.\n * </pre>\n *\n * @see goog.html.TrustedResourceUrl#unwrap\n * @override\n */\ngoog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString =\n    true;\n\n\n/**\n * Returns this URLs directionality, which is always `LTR`.\n * @override\n */\ngoog.html.TrustedResourceUrl.prototype.getDirection = function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\n\n\n/**\n * Creates a new TrustedResourceUrl with params added to URL.\n * @param {!Object<string, *>} params Parameters to add to URL. Parameters with\n *     value `null` or `undefined` are skipped. Both keys and values\n *     are encoded. If the value is an array then the same parameter is added\n *     for every element in the array. Note that JavaScript doesn't guarantee\n *     the order of values in an object which might result in non-deterministic\n *     order of the parameters. However, browsers currently preserve the order.\n * @return {!goog.html.TrustedResourceUrl} New TrustedResourceUrl with params.\n */\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams = function(params) {\n  var url = goog.html.TrustedResourceUrl.unwrap(this);\n  var separator = /\\?/.test(url) ? '&' : '?';\n  for (var key in params) {\n    var values = goog.isArray(params[key]) ?\n        /** @type {!Array<*>} */ (params[key]) :\n        [params[key]];\n    for (var i = 0; i < values.length; i++) {\n      if (values[i] == null) {\n        continue;\n      }\n      url += separator + encodeURIComponent(key) + '=' +\n          encodeURIComponent(String(values[i]));\n      separator = '&';\n    }\n  }\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a TrustedResourceUrl, use\n   * `goog.html.TrustedResourceUrl.unwrap`.\n   *\n   * @see goog.html.TrustedResourceUrl#unwrap\n   * @override\n   */\n  goog.html.TrustedResourceUrl.prototype.toString = function() {\n    return 'TrustedResourceUrl{' +\n        this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a\n * TrustedResourceUrl object, and returns its value.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl The object to\n *     extract from.\n * @return {string} The trustedResourceUrl object's contained string, unless\n *     the run-time type check fails. In that case, `unwrap` returns an\n *     innocuous string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {\n  // Perform additional Run-time type-checking to ensure that\n  // trustedResourceUrl is indeed an instance of the expected type.  This\n  // provides some additional protection against security bugs due to\n  // application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl &&\n      trustedResourceUrl.constructor === goog.html.TrustedResourceUrl &&\n      trustedResourceUrl\n              .TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.TrustedResourceUrl\n              .TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return trustedResourceUrl\n        .privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type TrustedResourceUrl, got \\'' +\n        trustedResourceUrl + '\\' of type ' + goog.typeOf(trustedResourceUrl));\n    return 'type_error:TrustedResourceUrl';\n  }\n};\n\n\n/**\n * Creates a TrustedResourceUrl from a format string and arguments.\n *\n * The arguments for interpolation into the format string map labels to values.\n * Values of type `goog.string.Const` are interpolated without modifcation.\n * Values of other types are cast to string and encoded with\n * encodeURIComponent.\n *\n * `%{<label>}` markers are used in the format string to indicate locations\n * to be interpolated with the valued mapped to the given label. `<label>`\n * must contain only alphanumeric and `_` characters.\n *\n * The format string must start with one of the following:\n * - `https://<origin>/`\n * - `//<origin>/`\n * - `/<pathStart>`\n * - `about:blank#`\n *\n * `<origin>` must contain only alphanumeric or any of the following: `-.:[]`.\n * `<pathStart>` is any character except `/` and `\\`.\n *\n * Example usage:\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        'https://www.google.com/search?q=%{query}'), {'query': searchTerm});\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        '//www.youtube.com/v/%{videoId}?hl=en&fs=1%{autoplay}'), {\n *        'videoId': videoId,\n *        'autoplay': opt_autoplay ?\n *            goog.string.Const.from('&autoplay=1') : goog.string.Const.EMPTY\n *    });\n *\n * While this function can be used to create a TrustedResourceUrl from only\n * constants, fromConstant() and fromConstants() are generally preferable for\n * that purpose.\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n */\ngoog.html.TrustedResourceUrl.format = function(format, args) {\n  var formatStr = goog.string.Const.unwrap(format);\n  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {\n    throw new Error('Invalid TrustedResourceUrl format: ' + formatStr);\n  }\n  var result = formatStr.replace(\n      goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {\n        if (!Object.prototype.hasOwnProperty.call(args, id)) {\n          throw new Error(\n              'Found marker, \"' + id + '\", in format string, \"' + formatStr +\n              '\", but no valid label mapping found ' +\n              'in args: ' + JSON.stringify(args));\n        }\n        var arg = args[id];\n        if (arg instanceof goog.string.Const) {\n          return goog.string.Const.unwrap(arg);\n        } else {\n          return encodeURIComponent(String(arg));\n        }\n      });\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);\n};\n\n\n/**\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\\w+)}/g;\n\n\n/**\n * The URL must be absolute, scheme-relative or path-absolute. So it must\n * start with:\n * - https:// followed by allowed origin characters.\n * - // followed by allowed origin characters.\n * - / not followed by / or \\. There will only be an absolute path.\n *\n * Based on\n * https://url.spec.whatwg.org/commit-snapshots/56b74ce7cca8883eab62e9a12666e2fac665d03d/#url-parsing\n * an initial / which is not followed by another / or \\ will end up in the \"path\n * state\" and from there it can only go to \"fragment state\" and \"query state\".\n *\n * We don't enforce a well-formed domain name. So '.' or '1.2' are valid.\n * That's ok because the origin comes from a compile-time constant.\n *\n * A regular expression is used instead of goog.uri for several reasons:\n * - Strictness. E.g. we don't want any userinfo component and we don't\n *   want '/./, nor \\' in the first path component.\n * - Small trusted base. goog.uri is generic and might need to change,\n *   reasoning about all the ways it can parse a URL now and in the future\n *   is error-prone.\n * - Code size. We expect many calls to .format(), many of which might\n *   not be using goog.uri.\n * - Simplicity. Using goog.uri would likely not result in simpler nor shorter\n *   code.\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.BASE_URL_ =\n    /^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank#/i;\n\n\n/**\n * Formats the URL same as TrustedResourceUrl.format and then adds extra URL\n * parameters.\n *\n * Example usage:\n *\n *     // Creates '//www.youtube.com/v/abc?autoplay=1' for videoId='abc' and\n *     // opt_autoplay=1. Creates '//www.youtube.com/v/abc' for videoId='abc'\n *     // and opt_autoplay=undefined.\n *     var url = goog.html.TrustedResourceUrl.formatWithParams(\n *         goog.string.Const.from('//www.youtube.com/v/%{videoId}'),\n *         {'videoId': videoId},\n *         {'autoplay': opt_autoplay});\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @param {!Object<string, *>} params Parameters to add to URL. Parameters with\n *     value `null` or `undefined` are skipped. Both keys and values\n *     are encoded. If the value is an array then the same parameter is added\n *     for every element in the array. Note that JavaScript doesn't guarantee\n *     the order of values in an object which might result in non-deterministic\n *     order of the parameters. However, browsers currently preserve the order.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n */\ngoog.html.TrustedResourceUrl.formatWithParams = function(format, args, params) {\n  var url = goog.html.TrustedResourceUrl.format(format, args);\n  return url.cloneWithParams(params);\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant string.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!goog.string.Const} url A compile-time-constant string from which to\n *     create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to `url`.\n */\ngoog.html.TrustedResourceUrl.fromConstant = function(url) {\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(\n          goog.string.Const.unwrap(url));\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant strings.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!Array<!goog.string.Const>} parts Compile-time-constant strings from\n *     which to create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to concatenation of `parts`.\n */\ngoog.html.TrustedResourceUrl.fromConstants = function(parts) {\n  var unwrapped = '';\n  for (var i = 0; i < parts.length; i++) {\n    unwrapped += goog.string.Const.unwrap(parts[i]);\n  }\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);\n};\n\n\n/**\n * Type marker for the TrustedResourceUrl type, used to implement additional\n * run-time type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create TrustedResourceUrl instances.\n *\n * @param {string} url The string to initialize the TrustedResourceUrl object\n *     with.\n * @return {!goog.html.TrustedResourceUrl} The initialized TrustedResourceUrl\n *     object.\n * @package\n */\ngoog.html.TrustedResourceUrl\n    .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {\n  var trustedResourceUrl = new goog.html.TrustedResourceUrl();\n  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ =\n      url;\n  return trustedResourceUrl;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview The SafeUrl type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.SafeUrl');\n\ngoog.require('goog.asserts');\ngoog.require('goog.fs.url');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * A string that is safe to use in URL context in DOM APIs and HTML documents.\n *\n * A SafeUrl is a string-like object that carries the security type contract\n * that its value as a string will not cause untrusted script execution\n * when evaluated as a hyperlink URL in a browser.\n *\n * Values of this type are guaranteed to be safe to use in URL/hyperlink\n * contexts, such as assignment to URL-valued DOM properties, in the sense that\n * the use will not result in a Cross-Site-Scripting vulnerability. Similarly,\n * SafeUrls can be interpolated into the URL context of an HTML template (e.g.,\n * inside a href attribute). However, appropriate HTML-escaping must still be\n * applied.\n *\n * Note that, as documented in `goog.html.SafeUrl.unwrap`, this type's\n * contract does not guarantee that instances are safe to interpolate into HTML\n * without appropriate escaping.\n *\n * Note also that this type's contract does not imply any guarantees regarding\n * the resource the URL refers to.  In particular, SafeUrls are <b>not</b>\n * safe to use in a context where the referred-to resource is interpreted as\n * trusted code, e.g., as the src of a script tag.\n *\n * Instances of this type must be created via the factory methods\n * (`goog.html.SafeUrl.fromConstant`, `goog.html.SafeUrl.sanitize`),\n * etc and not by invoking its constructor.  The constructor intentionally\n * takes no parameters and the type is immutable; hence only a default instance\n * corresponding to the empty string can be obtained via constructor invocation.\n *\n * @see goog.html.SafeUrl#fromConstant\n * @see goog.html.SafeUrl#from\n * @see goog.html.SafeUrl#sanitize\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.SafeUrl = function() {\n  /**\n   * The contained value of this SafeUrl.  The field has a purposely ugly\n   * name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.SafeUrl#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n};\n\n\n/**\n * The innocuous string generated by goog.html.SafeUrl.sanitize when passed\n * an unsafe URL.\n *\n * about:invalid is registered in\n * http://www.w3.org/TR/css3-values/#about-invalid.\n * http://tools.ietf.org/html/rfc6694#section-2.2.1 permits about URLs to\n * contain a fragment, which is not to be considered when determining if an\n * about URL is well-known.\n *\n * Using about:invalid seems preferable to using a fixed data URL, since\n * browsers might choose to not report CSP violations on it, as legitimate\n * CSS function calls to attr() can result in this URL being produced. It is\n * also a standard URL which matches exactly the semantics we need:\n * \"The about:invalid URI references a non-existent document with a generic\n * error condition. It can be used when a URI is necessary, but the default\n * value shouldn't be resolveable as any type of document\".\n *\n * @const {string}\n */\ngoog.html.SafeUrl.INNOCUOUS_STRING = 'about:invalid#zClosurez';\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this SafeUrl's value a string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `SafeUrl`, use `goog.html.SafeUrl.unwrap` instead of this\n * method. If in doubt, assume that it's security relevant. In particular, note\n * that goog.html functions which return a goog.html type do not guarantee that\n * the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml instanceof\n * // goog.html.SafeHtml.\n * </pre>\n *\n * IMPORTANT: The guarantees of the SafeUrl type contract only extend to the\n * behavior of browsers when interpreting URLs. Values of SafeUrl objects MUST\n * be appropriately escaped before embedding in a HTML document. Note that the\n * required escaping is context-sensitive (e.g. a different escaping is\n * required for embedding a URL in a style property within a style\n * attribute, as opposed to embedding in a href attribute).\n *\n * @see goog.html.SafeUrl#unwrap\n * @override\n */\ngoog.html.SafeUrl.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;\n\n\n/**\n * Returns this URLs directionality, which is always `LTR`.\n * @override\n */\ngoog.html.SafeUrl.prototype.getDirection = function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a SafeUrl, use\n   * `goog.html.SafeUrl.unwrap`.\n   *\n   * @see goog.html.SafeUrl#unwrap\n   * @override\n   */\n  goog.html.SafeUrl.prototype.toString = function() {\n    return 'SafeUrl{' + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ +\n        '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a SafeUrl\n * object, and returns its value.\n *\n * IMPORTANT: The guarantees of the SafeUrl type contract only extend to the\n * behavior of  browsers when interpreting URLs. Values of SafeUrl objects MUST\n * be appropriately escaped before embedding in a HTML document. Note that the\n * required escaping is context-sensitive (e.g. a different escaping is\n * required for embedding a URL in a style property within a style\n * attribute, as opposed to embedding in a href attribute).\n *\n * @param {!goog.html.SafeUrl} safeUrl The object to extract from.\n * @return {string} The SafeUrl object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.SafeUrl.unwrap = function(safeUrl) {\n  // Perform additional Run-time type-checking to ensure that safeUrl is indeed\n  // an instance of the expected type.  This provides some additional protection\n  // against security bugs due to application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (safeUrl instanceof goog.html.SafeUrl &&\n      safeUrl.constructor === goog.html.SafeUrl &&\n      safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type SafeUrl, got \\'' +\n        safeUrl + '\\' of type ' + goog.typeOf(safeUrl));\n    return 'type_error:SafeUrl';\n  }\n};\n\n\n/**\n * Creates a SafeUrl object from a compile-time constant string.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!goog.string.Const} url A compile-time-constant string from which to\n *         create a SafeUrl.\n * @return {!goog.html.SafeUrl} A SafeUrl object initialized to `url`.\n */\ngoog.html.SafeUrl.fromConstant = function(url) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      goog.string.Const.unwrap(url));\n};\n\n\n/**\n * A pattern that matches Blob or data types that can have SafeUrls created\n * from URL.createObjectURL(blob) or via a data: URI.\n * @const\n * @private\n */\ngoog.html.SAFE_MIME_TYPE_PATTERN_ = new RegExp(\n    // Note: Due to content-sniffing concerns, only add MIME types for\n    // media formats.\n    '^(?:audio/(?:3gpp|3gpp2|aac|midi|mp4|mpeg|ogg|x-m4a|x-wav|webm)|' +\n        'image/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|' +\n        // TODO(b/68188949): Due to content-sniffing concerns, text/csv should\n        // be removed from the whitelist.\n        'text/csv|' +\n        'video/(?:mpeg|mp4|ogg|webm|quicktime))$',\n    'i');\n\n\n/**\n * Creates a SafeUrl wrapping a blob URL for the given `blob`.\n *\n * The blob URL is created with `URL.createObjectURL`. If the MIME type\n * for `blob` is not of a known safe audio, image or video MIME type,\n * then the SafeUrl will wrap {@link #INNOCUOUS_STRING}.\n *\n * @see http://www.w3.org/TR/FileAPI/#url\n * @param {!Blob} blob\n * @return {!goog.html.SafeUrl} The blob URL, or an innocuous string wrapped\n *   as a SafeUrl.\n */\ngoog.html.SafeUrl.fromBlob = function(blob) {\n  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ?\n      goog.fs.url.createObjectUrl(blob) :\n      goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n/**\n * Matches a base-64 data URL, with the first match group being the MIME type.\n * @const\n * @private\n */\ngoog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\\/]+=*$/i;\n\n\n/**\n * Creates a SafeUrl wrapping a data: URL, after validating it matches a\n * known-safe audio, image or video MIME type.\n *\n * @param {string} dataUrl A valid base64 data URL with one of the whitelisted\n *     audio, image or video MIME types.\n * @return {!goog.html.SafeUrl} A matching safe URL, or {@link INNOCUOUS_STRING}\n *     wrapped as a SafeUrl if it does not pass.\n */\ngoog.html.SafeUrl.fromDataUrl = function(dataUrl) {\n  // There's a slight risk here that a browser sniffs the content type if it\n  // doesn't know the MIME type and executes HTML within the data: URL. For this\n  // to cause XSS it would also have to execute the HTML in the same origin\n  // of the page with the link. It seems unlikely that both of these will\n  // happen, particularly in not really old IEs.\n  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);\n  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);\n};\n\n\n/**\n * Creates a SafeUrl wrapping a tel: URL.\n *\n * @param {string} telUrl A tel URL.\n * @return {!goog.html.SafeUrl} A matching safe URL, or {@link INNOCUOUS_STRING}\n *     wrapped as a SafeUrl if it does not pass.\n */\ngoog.html.SafeUrl.fromTelUrl = function(telUrl) {\n  // There's a risk that a tel: URL could immediately place a call once\n  // clicked, without requiring user confirmation. For that reason it is\n  // handled in this separate function.\n  if (!goog.string.caseInsensitiveStartsWith(telUrl, 'tel:')) {\n    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      telUrl);\n};\n\n\n/**\n * Creates a SafeUrl from TrustedResourceUrl. This is safe because\n * TrustedResourceUrl is more tightly restricted than SafeUrl.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl\n * @return {!goog.html.SafeUrl}\n */\ngoog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));\n};\n\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that satisfy\n * the SafeUrl contract.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * @private\n * @const {!RegExp}\n */\ngoog.html.SAFE_URL_PATTERN_ =\n    /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\n\n\n/**\n * Creates a SafeUrl object from `url`. If `url` is a\n * goog.html.SafeUrl then it is simply returned. Otherwise the input string is\n * validated to match a pattern of commonly used safe URLs.\n *\n * `url` may be a URL with the http, https, mailto or ftp scheme,\n * or a relative URL (i.e., a URL without a scheme; specifically, a\n * scheme-relative, absolute-path-relative, or path-relative URL).\n *\n * @see http://url.spec.whatwg.org/#concept-relative-url\n * @param {string|!goog.string.TypedString} url The URL to validate.\n * @return {!goog.html.SafeUrl} The validated URL, wrapped as a SafeUrl.\n */\ngoog.html.SafeUrl.sanitize = function(url) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  } else if (url.implementsGoogStringTypedString) {\n    url = /** @type {!goog.string.TypedString} */ (url).getTypedStringValue();\n  } else {\n    url = String(url);\n  }\n  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {\n    url = goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n/**\n * Creates a SafeUrl object from `url`. If `url` is a\n * goog.html.SafeUrl then it is simply returned. Otherwise the input string is\n * validated to match a pattern of commonly used safe URLs.\n *\n * `url` may be a URL with the http, https, mailto or ftp scheme,\n * or a relative URL (i.e., a URL without a scheme; specifically, a\n * scheme-relative, absolute-path-relative, or path-relative URL).\n *\n * This function asserts (using goog.asserts) that the URL matches this pattern.\n * If it does not, in addition to failing the assert, an innocous URL will be\n * returned.\n *\n * @see http://url.spec.whatwg.org/#concept-relative-url\n * @param {string|!goog.string.TypedString} url The URL to validate.\n * @return {!goog.html.SafeUrl} The validated URL, wrapped as a SafeUrl.\n */\ngoog.html.SafeUrl.sanitizeAssertUnchanged = function(url) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  } else if (url.implementsGoogStringTypedString) {\n    url = /** @type {!goog.string.TypedString} */ (url).getTypedStringValue();\n  } else {\n    url = String(url);\n  }\n  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url))) {\n    url = goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n\n/**\n * Type marker for the SafeUrl type, used to implement additional run-time\n * type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create SafeUrl instances.\n *\n * @param {string} url The string to initialize the SafeUrl object with.\n * @return {!goog.html.SafeUrl} The initialized SafeUrl object.\n * @package\n */\ngoog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(\n    url) {\n  var safeUrl = new goog.html.SafeUrl();\n  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;\n  return safeUrl;\n};\n\n\n/**\n * A SafeUrl corresponding to the special about:blank url.\n * @const {!goog.html.SafeUrl}\n */\ngoog.html.SafeUrl.ABOUT_BLANK =\n    goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n        'about:blank');\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview The SafeHtml type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.SafeHtml');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.tags');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * A string that is safe to use in HTML context in DOM APIs and HTML documents.\n *\n * A SafeHtml is a string-like object that carries the security type contract\n * that its value as a string will not cause untrusted script execution when\n * evaluated as HTML in a browser.\n *\n * Values of this type are guaranteed to be safe to use in HTML contexts,\n * such as, assignment to the innerHTML DOM property, or interpolation into\n * a HTML template in HTML PC_DATA context, in the sense that the use will not\n * result in a Cross-Site-Scripting vulnerability.\n *\n * Instances of this type must be created via the factory methods\n * (`goog.html.SafeHtml.create`, `goog.html.SafeHtml.htmlEscape`),\n * etc and not by invoking its constructor.  The constructor intentionally\n * takes no parameters and the type is immutable; hence only a default instance\n * corresponding to the empty string can be obtained via constructor invocation.\n *\n * @see goog.html.SafeHtml#create\n * @see goog.html.SafeHtml#htmlEscape\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.SafeHtml = function() {\n  /**\n   * The contained value of this SafeHtml.  The field has a purposely ugly\n   * name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.SafeHtml#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n\n  /**\n   * This SafeHtml's directionality, or null if unknown.\n   * @private {?goog.i18n.bidi.Dir}\n   */\n  this.dir_ = null;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;\n\n\n/** @override */\ngoog.html.SafeHtml.prototype.getDirection = function() {\n  return this.dir_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this SafeHtml's value as string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `SafeHtml`, use `goog.html.SafeHtml.unwrap` instead of\n * this method. If in doubt, assume that it's security relevant. In particular,\n * note that goog.html functions which return a goog.html type do not guarantee\n * that the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml\n * // instanceof goog.html.SafeHtml.\n * </pre>\n *\n * @see goog.html.SafeHtml#unwrap\n * @override\n */\ngoog.html.SafeHtml.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a SafeHtml, use\n   * `goog.html.SafeHtml.unwrap`.\n   *\n   * @see goog.html.SafeHtml#unwrap\n   * @override\n   */\n  goog.html.SafeHtml.prototype.toString = function() {\n    return 'SafeHtml{' + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ +\n        '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a SafeHtml\n * object, and returns its value.\n * @param {!goog.html.SafeHtml} safeHtml The object to extract from.\n * @return {string} The SafeHtml object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.SafeHtml.unwrap = function(safeHtml) {\n  // Perform additional run-time type-checking to ensure that safeHtml is indeed\n  // an instance of the expected type.  This provides some additional protection\n  // against security bugs due to application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (safeHtml instanceof goog.html.SafeHtml &&\n      safeHtml.constructor === goog.html.SafeHtml &&\n      safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type SafeHtml, got \\'' +\n        safeHtml + '\\' of type ' + goog.typeOf(safeHtml));\n    return 'type_error:SafeHtml';\n  }\n};\n\n\n/**\n * Shorthand for union of types that can sensibly be converted to strings\n * or might already be SafeHtml (as SafeHtml is a goog.string.TypedString).\n * @private\n * @typedef {string|number|boolean|!goog.string.TypedString|\n *           !goog.i18n.bidi.DirectionalString}\n */\ngoog.html.SafeHtml.TextOrHtml_;\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object.\n *\n * If text is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, the directionality of the new\n * `SafeHtml` object is set to `text`'s directionality, if known.\n * Otherwise, the directionality of the resulting SafeHtml is unknown (i.e.,\n * `null`).\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscape = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var dir = null;\n  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {\n    dir = /** @type {!goog.i18n.bidi.DirectionalString} */ (textOrHtml)\n              .getDirection();\n  }\n  var textAsString;\n  if (textOrHtml.implementsGoogStringTypedString) {\n    textAsString = /** @type {!goog.string.TypedString} */ (textOrHtml)\n                       .getTypedStringValue();\n  } else {\n    textAsString = String(textOrHtml);\n  }\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.htmlEscape(textAsString), dir);\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt;.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt; and escaping whitespace to preserve spatial formatting. Character\n * entity #160 is used to make it safer for XML.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(\n    textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Coerces an arbitrary object into a SafeHtml object.\n *\n * If `textOrHtml` is already of type `goog.html.SafeHtml`, the same\n * object is returned. Otherwise, `textOrHtml` is coerced to string, and\n * HTML-escaped. If `textOrHtml` is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, its directionality, if known, is\n * preserved.\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text or SafeHtml to\n *     coerce.\n * @return {!goog.html.SafeHtml} The resulting SafeHtml object.\n * @deprecated Use goog.html.SafeHtml.htmlEscape.\n */\ngoog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;\n\n\n/**\n * @const\n * @private\n */\ngoog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;\n\n\n/**\n * Set of attributes containing URL as defined at\n * http://www.w3.org/TR/html5/index.html#attributes-1.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet(\n    'action', 'cite', 'data', 'formaction', 'href', 'manifest', 'poster',\n    'src');\n\n\n/**\n * Tags which are unsupported via create(). They might be supported via a\n * tag-specific create method. These are tags which might require a\n * TrustedResourceUrl in one of their attributes or a restricted type for\n * their content.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(\n    goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED,\n    goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH,\n    goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT,\n    goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);\n\n\n/**\n * @typedef {string|number|goog.string.TypedString|\n *     goog.html.SafeStyle.PropertyMap|undefined}\n */\ngoog.html.SafeHtml.AttributeValue;\n\n\n/**\n * Creates a SafeHtml content consisting of a tag with optional attributes and\n * optional content.\n *\n * For convenience tag names and attribute names are accepted as regular\n * strings, instead of goog.string.Const. Nevertheless, you should not pass\n * user-controlled values to these parameters. Note that these parameters are\n * syntactically validated at runtime, and invalid values will result in\n * an exception.\n *\n * Example usage:\n *\n * goog.html.SafeHtml.create('br');\n * goog.html.SafeHtml.create('div', {'class': 'a'});\n * goog.html.SafeHtml.create('p', {}, 'a');\n * goog.html.SafeHtml.create('p', {}, goog.html.SafeHtml.create('br'));\n *\n * goog.html.SafeHtml.create('span', {\n *   'style': {'margin': '0'}\n * });\n *\n * To guarantee SafeHtml's type contract is upheld there are restrictions on\n * attribute values and tag names.\n *\n * - For attributes which contain script code (on*), a goog.string.Const is\n *   required.\n * - For attributes which contain style (style), a goog.html.SafeStyle or a\n *   goog.html.SafeStyle.PropertyMap is required.\n * - For attributes which are interpreted as URLs (e.g. src, href) a\n *   goog.html.SafeUrl, goog.string.Const or string is required. If a string\n *   is passed, it will be sanitized with SafeUrl.sanitize().\n * - For tags which can load code or set security relevant page metadata,\n *   more specific goog.html.SafeHtml.create*() functions must be used. Tags\n *   which are not supported by this function are applet, base, embed, iframe,\n *   link, math, object, script, style, svg, and template.\n *\n * @param {!goog.dom.TagName|string} tagName The name of the tag. Only tag names\n *     consisting of [a-zA-Z0-9-] are allowed. Tag names documented above are\n *     disallowed.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. This must be empty for void tags\n *     like <br>. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided.\n * @throws {goog.asserts.AssertionError} If content for void tag is provided.\n */\ngoog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {\n  goog.html.SafeHtml.verifyTagName(String(tagName));\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      String(tagName), opt_attributes, opt_content);\n};\n\n\n/**\n * Verifies if the tag name is valid and if it doesn't change the context.\n * E.g. STRONG is fine but SCRIPT throws because it changes context. See\n * goog.html.SafeHtml.create for an explanation of allowed tags.\n * @param {string} tagName\n * @throws {Error} If invalid tag name is provided.\n * @package\n */\ngoog.html.SafeHtml.verifyTagName = function(tagName) {\n  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {\n    throw new Error('Invalid tag name <' + tagName + '>.');\n  }\n  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {\n    throw new Error('Tag name <' + tagName + '> is not allowed for SafeHtml.');\n  }\n};\n\n\n/**\n * Creates a SafeHtml representing an iframe tag.\n *\n * This by default restricts the iframe as much as possible by setting the\n * sandbox attribute to the empty string. If the iframe requires less\n * restrictions, set the sandbox attribute as tight as possible, but do not rely\n * on the sandbox as a security feature because it is not supported by older\n * browsers. If a sandbox is essential to security (e.g. for third-party\n * frames), use createSandboxIframe which checks for browser support.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * @param {?goog.html.TrustedResourceUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {?goog.html.SafeHtml=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src or srcdoc attributes.\n */\ngoog.html.SafeHtml.createIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (opt_src) {\n    // Check whether this is really TrustedResourceUrl.\n    goog.html.TrustedResourceUrl.unwrap(opt_src);\n  }\n\n  var fixedAttributes = {};\n  fixedAttributes['src'] = opt_src || null;\n  fixedAttributes['srcdoc'] =\n      opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);\n  var defaultAttributes = {'sandbox': ''};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Creates a SafeHtml representing a sandboxed iframe tag.\n *\n * The sandbox attribute is enforced in its most restrictive mode, an empty\n * string. Consequently, the security requirements for the src and srcdoc\n * attributes are relaxed compared to SafeHtml.createIframe. This function\n * will throw on browsers that do not support the sandbox attribute, as\n * determined by SafeHtml.canUseSandboxIframe.\n *\n * The SafeHtml returned by this function can trigger downloads with no\n * user interaction on Chrome (though only a few, further attempts are blocked).\n * Firefox and IE will block all downloads from the sandbox.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n * @see https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Feb/0112.html\n *\n * @param {string|!goog.html.SafeUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {string=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set. Will not be sanitized.\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src, srcdoc or sandbox\n *     attributes. If browser does not support the sandbox attribute on iframe.\n */\ngoog.html.SafeHtml.createSandboxIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (!goog.html.SafeHtml.canUseSandboxIframe()) {\n    throw new Error('The browser does not support sandboxed iframes.');\n  }\n\n  var fixedAttributes = {};\n  if (opt_src) {\n    // Note that sanitize is a no-op on SafeUrl.\n    fixedAttributes['src'] =\n        goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));\n  } else {\n    fixedAttributes['src'] = null;\n  }\n  fixedAttributes['srcdoc'] = opt_srcdoc || null;\n  fixedAttributes['sandbox'] = '';\n  var attributes =\n      goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Checks if the user agent supports sandboxed iframes.\n * @return {boolean}\n */\ngoog.html.SafeHtml.canUseSandboxIframe = function() {\n  return goog.global['HTMLIFrameElement'] &&\n      ('sandbox' in goog.global['HTMLIFrameElement'].prototype);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag with the src attribute.\n * @param {!goog.html.TrustedResourceUrl} src The value of the src\n * attribute.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=}\n * opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined\n *     causes the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or value is provided. If\n *     opt_attributes contains the src attribute.\n */\ngoog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {\n  // TODO(mlourenco): The charset attribute should probably be blocked. If\n  // its value is attacker controlled, the script contains attacker controlled\n  // sub-strings (even if properly escaped) and the server does not set charset\n  // then XSS is likely possible.\n  // https://html.spec.whatwg.org/multipage/scripting.html#dom-script-charset\n\n  // Check whether this is really TrustedResourceUrl.\n  goog.html.TrustedResourceUrl.unwrap(src);\n\n  var fixedAttributes = {'src': src};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', attributes);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag. Does not allow the language,\n * src, text or type attributes to be set.\n * @param {!goog.html.SafeScript|!Array<!goog.html.SafeScript>}\n *     script Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the language, src, text or type attribute.\n */\ngoog.html.SafeHtml.createScript = function(script, opt_attributes) {\n  for (var attr in opt_attributes) {\n    var attrLower = attr.toLowerCase();\n    if (attrLower == 'language' || attrLower == 'src' || attrLower == 'text' ||\n        attrLower == 'type') {\n      throw new Error('Cannot set \"' + attrLower + '\" attribute');\n    }\n  }\n\n  var content = '';\n  script = goog.array.concat(script);\n  for (var i = 0; i < script.length; i++) {\n    content += goog.html.SafeScript.unwrap(script[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeScript should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', opt_attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a style tag. The type attribute is set\n * to \"text/css\".\n * @param {!goog.html.SafeStyleSheet|!Array<!goog.html.SafeStyleSheet>}\n *     styleSheet Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the type attribute.\n */\ngoog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {\n  var fixedAttributes = {'type': 'text/css'};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n\n  var content = '';\n  styleSheet = goog.array.concat(styleSheet);\n  for (var i = 0; i < styleSheet.length; i++) {\n    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeStyleSheet should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'style', attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a meta refresh tag.\n * @param {!goog.html.SafeUrl|string} url Where to redirect. If a string is\n *     passed, it will be sanitized with SafeUrl.sanitize().\n * @param {number=} opt_secs Number of seconds until the page should be\n *     reloaded. Will be set to 0 if unspecified.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {\n\n  // Note that sanitize is a no-op on SafeUrl.\n  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n\n  if (goog.labs.userAgent.browser.isIE() ||\n      goog.labs.userAgent.browser.isEdge()) {\n    // IE/EDGE can't parse the content attribute if the url contains a\n    // semicolon. We can fix this by adding quotes around the url, but then we\n    // can't parse quotes in the URL correctly. Also, it seems that IE/EDGE\n    // did not unescape semicolons in these URLs at some point in the past. We\n    // take a best-effort approach.\n    //\n    // If the URL has semicolons (which may happen in some cases, see\n    // http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2\n    // for instance), wrap it in single quotes to protect the semicolons.\n    // If the URL has semicolons and single quotes, url-encode the single quotes\n    // as well.\n    //\n    // This is imperfect. Notice that both ' and ; are reserved characters in\n    // URIs, so this could do the wrong thing, but at least it will do the wrong\n    // thing in only rare cases.\n    if (goog.string.contains(unwrappedUrl, ';')) {\n      unwrappedUrl = \"'\" + unwrappedUrl.replace(/'/g, '%27') + \"'\";\n    }\n  }\n  var attributes = {\n    'http-equiv': 'refresh',\n    'content': (opt_secs || 0) + '; url=' + unwrappedUrl\n  };\n\n  // This function will handle the HTML escaping for attributes.\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'meta', attributes);\n};\n\n\n/**\n * @param {string} tagName The tag name.\n * @param {string} name The attribute name.\n * @param {!goog.html.SafeHtml.AttributeValue} value The attribute value.\n * @return {string} A \"name=value\" string.\n * @throws {Error} If attribute value is unsafe for the given tag and attribute.\n * @private\n */\ngoog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {\n  // If it's goog.string.Const, allow any valid attribute name.\n  if (value instanceof goog.string.Const) {\n    value = goog.string.Const.unwrap(value);\n  } else if (name.toLowerCase() == 'style') {\n    value = goog.html.SafeHtml.getStyleValue_(value);\n  } else if (/^on/i.test(name)) {\n    // TODO(jakubvrana): Disallow more attributes with a special meaning.\n    throw new Error(\n        'Attribute \"' + name + '\" requires goog.string.Const value, \"' + value +\n        '\" given.');\n    // URL attributes handled differently according to tag.\n  } else if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {\n    if (value instanceof goog.html.TrustedResourceUrl) {\n      value = goog.html.TrustedResourceUrl.unwrap(value);\n    } else if (value instanceof goog.html.SafeUrl) {\n      value = goog.html.SafeUrl.unwrap(value);\n    } else if (goog.isString(value)) {\n      value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();\n    } else {\n      throw new Error(\n          'Attribute \"' + name + '\" on tag \"' + tagName +\n          '\" requires goog.html.SafeUrl, goog.string.Const, or string,' +\n          ' value \"' + value + '\" given.');\n    }\n  }\n\n  // Accept SafeUrl, TrustedResourceUrl, etc. for attributes which only require\n  // HTML-escaping.\n  if (value.implementsGoogStringTypedString) {\n    // Ok to call getTypedStringValue() since there's no reliance on the type\n    // contract for security here.\n    value =\n        /** @type {!goog.string.TypedString} */ (value).getTypedStringValue();\n  }\n\n  goog.asserts.assert(\n      goog.isString(value) || goog.isNumber(value),\n      'String or number value expected, got ' + (typeof value) +\n          ' with value: ' + value);\n  return name + '=\"' + goog.string.htmlEscape(String(value)) + '\"';\n};\n\n\n/**\n * Gets value allowed in \"style\" attribute.\n * @param {!goog.html.SafeHtml.AttributeValue} value It could be SafeStyle or a\n *     map which will be passed to goog.html.SafeStyle.create.\n * @return {string} Unwrapped value.\n * @throws {Error} If string value is given.\n * @private\n */\ngoog.html.SafeHtml.getStyleValue_ = function(value) {\n  if (!goog.isObject(value)) {\n    throw new Error(\n        'The \"style\" attribute requires goog.html.SafeStyle or map ' +\n        'of style properties, ' + (typeof value) + ' given: ' + value);\n  }\n  if (!(value instanceof goog.html.SafeStyle)) {\n    // Process the property bag into a style object.\n    value = goog.html.SafeStyle.create(value);\n  }\n  return goog.html.SafeStyle.unwrap(value);\n};\n\n\n/**\n * Creates a SafeHtml content with known directionality consisting of a tag with\n * optional attributes and optional content.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createWithDir = function(\n    dir, tagName, opt_attributes, opt_content) {\n  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Creates a new SafeHtml object by concatenating values.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Values to concatenate.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concat = function(var_args) {\n  var dir = goog.i18n.bidi.Dir.NEUTRAL;\n  var content = '';\n\n  /**\n   * @param {!goog.html.SafeHtml.TextOrHtml_|\n   *     !Array<!goog.html.SafeHtml.TextOrHtml_>} argument\n   */\n  var addArgument = function(argument) {\n    if (goog.isArray(argument)) {\n      goog.array.forEach(argument, addArgument);\n    } else {\n      var html = goog.html.SafeHtml.htmlEscape(argument);\n      content += goog.html.SafeHtml.unwrap(html);\n      var htmlDir = html.getDirection();\n      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {\n        dir = htmlDir;\n      } else if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {\n        dir = null;\n      }\n    }\n  };\n\n  goog.array.forEach(arguments, addArgument);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      content, dir);\n};\n\n\n/**\n * Creates a new SafeHtml object with known directionality by concatenating the\n * values.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Elements of array\n *     arguments would be processed recursively.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concatWithDir = function(dir, var_args) {\n  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Type marker for the SafeHtml type, used to implement additional run-time\n * type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create SafeHtml instances.\n *\n * @param {string} html The string to initialize the SafeHtml object with.\n * @param {?goog.i18n.bidi.Dir} dir The directionality of the SafeHtml to be\n *     constructed, or null if unknown.\n * @return {!goog.html.SafeHtml} The initialized SafeHtml object.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(\n    html, dir) {\n  return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(\n      html, dir);\n};\n\n\n/**\n * Called from createSafeHtmlSecurityPrivateDoNotAccessOrElse(). This\n * method exists only so that the compiler can dead code eliminate static\n * fields (like EMPTY) when they're not accessed.\n * @param {string} html\n * @param {?goog.i18n.bidi.Dir} dir\n * @return {!goog.html.SafeHtml}\n * @private\n */\ngoog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(\n    html, dir) {\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;\n  this.dir_ = dir;\n  return this;\n};\n\n\n/**\n * Like create() but does not restrict which tags can be constructed.\n *\n * @param {string} tagName Tag name. Set or validated by caller.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)=} opt_content\n * @return {!goog.html.SafeHtml}\n * @throws {Error} If invalid or unsafe attribute name or value is provided.\n * @throws {goog.asserts.AssertionError} If content for void tag is provided.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(\n    tagName, opt_attributes, opt_content) {\n  var dir = null;\n  var result = '<' + tagName;\n  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);\n\n  var content = opt_content;\n  if (!goog.isDefAndNotNull(content)) {\n    content = [];\n  } else if (!goog.isArray(content)) {\n    content = [content];\n  }\n\n  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {\n    goog.asserts.assert(\n        !content.length, 'Void tag <' + tagName + '> does not allow content.');\n    result += '>';\n  } else {\n    var html = goog.html.SafeHtml.concat(content);\n    result += '>' + goog.html.SafeHtml.unwrap(html) + '</' + tagName + '>';\n    dir = html.getDirection();\n  }\n\n  var dirAttribute = opt_attributes && opt_attributes['dir'];\n  if (dirAttribute) {\n    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\n      // If the tag has the \"dir\" attribute specified then its direction is\n      // neutral because it can be safely used in any context.\n      dir = goog.i18n.bidi.Dir.NEUTRAL;\n    } else {\n      dir = null;\n    }\n  }\n\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      result, dir);\n};\n\n\n/**\n * Creates a string with attributes to insert after tagName.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @return {string} Returns an empty string if there are no attributes, returns\n *     a string starting with a space otherwise.\n * @throws {Error} If attribute value is unsafe for the given tag and attribute.\n * @package\n */\ngoog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {\n  var result = '';\n  if (opt_attributes) {\n    for (var name in opt_attributes) {\n      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {\n        throw new Error('Invalid attribute name \"' + name + '\".');\n      }\n      var value = opt_attributes[name];\n      if (!goog.isDefAndNotNull(value)) {\n        continue;\n      }\n      result +=\n          ' ' + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);\n    }\n  }\n  return result;\n};\n\n\n/**\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>} fixedAttributes\n * @param {!Object<string, string>} defaultAttributes\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Optional attributes passed to create*().\n * @return {!Object<string, ?goog.html.SafeHtml.AttributeValue>}\n * @throws {Error} If opt_attributes contains an attribute with the same name\n *     as an attribute in fixedAttributes.\n * @package\n */\ngoog.html.SafeHtml.combineAttributes = function(\n    fixedAttributes, defaultAttributes, opt_attributes) {\n  var combinedAttributes = {};\n  var name;\n\n  for (name in fixedAttributes) {\n    goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n    combinedAttributes[name] = fixedAttributes[name];\n  }\n  for (name in defaultAttributes) {\n    goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n    combinedAttributes[name] = defaultAttributes[name];\n  }\n\n  for (name in opt_attributes) {\n    var nameLower = name.toLowerCase();\n    if (nameLower in fixedAttributes) {\n      throw new Error(\n          'Cannot override \"' + nameLower + '\" attribute, got \"' + name +\n          '\" with value \"' + opt_attributes[name] + '\"');\n    }\n    if (nameLower in defaultAttributes) {\n      delete combinedAttributes[nameLower];\n    }\n    combinedAttributes[name] = opt_attributes[name];\n  }\n\n  return combinedAttributes;\n};\n\n\n/**\n * A SafeHtml instance corresponding to the HTML doctype: \"<!DOCTYPE html>\".\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.DOCTYPE_HTML =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<!DOCTYPE html>', goog.i18n.bidi.Dir.NEUTRAL);\n\n\n/**\n * A SafeHtml instance corresponding to the empty string.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.EMPTY =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '', goog.i18n.bidi.Dir.NEUTRAL);\n\n\n/**\n * A SafeHtml instance corresponding to the <br> tag.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.BR =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<br>', goog.i18n.bidi.Dir.NEUTRAL);\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating the browser's Document Object Model\n * Inspiration taken *heavily* from mochikit (http://mochikit.com/).\n *\n * You can use {@link goog.dom.DomHelper} to create new dom helpers that refer\n * to a different document object.  This is useful if you are working with\n * frames or multiple windows.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @suppress {strictMissingProperties}\n */\n\n\n// TODO(arv): Rename/refactor getTextContent and getRawTextContent. The problem\n// is that getTextContent should mimic the DOM3 textContent. We should add a\n// getInnerText (or getText) which tries to return the visible text, innerText.\n\n\ngoog.provide('goog.dom');\ngoog.provide('goog.dom.Appendable');\ngoog.provide('goog.dom.DomHelper');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.BrowserFeature');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Size');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.string.Unicode');\ngoog.require('goog.userAgent');\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * quirks mode.\n */\ngoog.define('goog.dom.ASSUME_QUIRKS_MODE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * standards compliance mode.\n */\ngoog.define('goog.dom.ASSUME_STANDARDS_MODE', false);\n\n\n/**\n * Whether we know the compatibility mode at compile time.\n * @type {boolean}\n * @private\n */\ngoog.dom.COMPAT_MODE_KNOWN_ =\n    goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;\n\n\n/**\n * Gets the DomHelper object for the document where the element resides.\n * @param {(Node|Window)=} opt_element If present, gets the DomHelper for this\n *     element.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.getDomHelper = function(opt_element) {\n  return opt_element ?\n      new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) :\n      (goog.dom.defaultDomHelper_ ||\n       (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper()));\n};\n\n\n/**\n * Cached default DOM helper.\n * @type {!goog.dom.DomHelper|undefined}\n * @private\n */\ngoog.dom.defaultDomHelper_;\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.getDocument = function() {\n  return document;\n};\n\n\n/**\n * Gets an element from the current document by element id.\n *\n * If an Element is passed in, it is returned.\n *\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.getElement = function(element) {\n  return goog.dom.getElementHelper_(document, element);\n};\n\n\n/**\n * Gets an element by id from the given document (if present).\n * If an element is given, it is returned.\n * @param {!Document} doc\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The resulting element.\n * @private\n */\ngoog.dom.getElementHelper_ = function(doc, element) {\n  return goog.isString(element) ? doc.getElementById(element) : element;\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(document, id);\n};\n\n\n/**\n * Helper function for getRequiredElementHelper functions, both static and\n * on DomHelper.  Asserts the element with the given id exists.\n * @param {!Document} doc\n * @param {string} id\n * @return {!Element} The element with the given ID, if it exists.\n * @private\n */\ngoog.dom.getRequiredElementHelper_ = function(doc, id) {\n  // To prevent users passing in Elements as is permitted in getElement().\n  goog.asserts.assertString(id);\n  var element = goog.dom.getElementHelper_(doc, id);\n  element =\n      goog.asserts.assertElement(element, 'No element found with id: ' + id);\n  return element;\n};\n\n\n/**\n * Alias for getElement.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.getElement} instead.\n */\ngoog.dom.$ = goog.dom.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagName = function(tagName, opt_parent) {\n  var parent = opt_parent || document;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. This function\n * is a useful, if limited, way of collecting a list of DOM elements\n * with certain characteristics.  `goog.dom.query` offers a\n * more powerful and general solution which allows matching on CSS3\n * selector expressions, but at increased cost in code size. If all you\n * need is particular tags belonging to a single class, this function\n * is fast and sleek.\n *\n * Note that tag names are case sensitive in the SVG namespace, and this\n * function converts opt_tag to uppercase for comparisons. For queries in the\n * SVG namespace you should use querySelector or querySelectorAll instead.\n * https://bugzilla.mozilla.org/show_bug.cgi?id=963870\n * https://bugs.webkit.org/show_bug.cgi?id=83438\n *\n * @see {goog.dom.query}\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns a static, array-like list of the elements with the provided\n * className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.getElementsByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  if (goog.dom.canUseQuerySelector_(parent)) {\n    return parent.querySelectorAll('.' + className);\n  }\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, '*', className, opt_el);\n};\n\n\n/**\n * Returns the first element with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {Element} The first item with the class name provided.\n */\ngoog.dom.getElementByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  var retVal = null;\n  if (parent.getElementsByClassName) {\n    retVal = parent.getElementsByClassName(className)[0];\n  } else {\n    retVal =\n        goog.dom.getElementByTagNameAndClass_(document, '*', className, opt_el);\n  }\n  return retVal || null;\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {!Element|!Document=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.getRequiredElementByClass = function(className, opt_root) {\n  var retValue = goog.dom.getElementByClass(className, opt_root);\n  return goog.asserts.assert(\n      retValue, 'No element found with className: ' + className);\n};\n\n\n/**\n * Prefer the standardized (http://www.w3.org/TR/selectors-api/), native and\n * fast W3C Selectors API.\n * @param {!(Element|Document)} parent The parent document object.\n * @return {boolean} whether or not we can use parent.querySelector* APIs.\n * @private\n */\ngoog.dom.canUseQuerySelector_ = function(parent) {\n  return !!(parent.querySelectorAll && parent.querySelector);\n};\n\n\n/**\n * Helper for `getElementsByTagNameAndClass`.\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementsByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tagName =\n      (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n\n  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {\n    var query = tagName + (opt_class ? '.' + opt_class : '');\n    return parent.querySelectorAll(query);\n  }\n\n  // Use the native getElementsByClassName if available, under the assumption\n  // that even when the tag name is specified, there will be fewer elements to\n  // filter through when going by class than by tag name\n  if (opt_class && parent.getElementsByClassName) {\n    var els = parent.getElementsByClassName(opt_class);\n\n    if (tagName) {\n      var arrayLike = {};\n      var len = 0;\n\n      // Filter for specific tags if requested.\n      for (var i = 0, el; el = els[i]; i++) {\n        if (tagName == el.nodeName) {\n          arrayLike[len++] = el;\n        }\n      }\n      arrayLike.length = len;\n\n      return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n    } else {\n      return els;\n    }\n  }\n\n  var els = parent.getElementsByTagName(tagName || '*');\n\n  if (opt_class) {\n    var arrayLike = {};\n    var len = 0;\n    for (var i = 0, el; el = els[i]; i++) {\n      var className = el.className;\n      // Check if className has a split function since SVG className does not.\n      if (typeof className.split == 'function' &&\n          goog.array.contains(className.split(/\\s+/), opt_class)) {\n        arrayLike[len++] = el;\n      }\n    }\n    arrayLike.length = len;\n    return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n  } else {\n    return els;\n  }\n};\n\n\n/**\n * Helper for goog.dom.getElementByTagNameAndClass.\n *\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tag = (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {\n    return parent.querySelector(tag + (opt_class ? '.' + opt_class : ''));\n  }\n  var elements =\n      goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);\n  return elements[0] || null;\n};\n\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.getElementsByTagNameAndClass} instead.\n */\ngoog.dom.$$ = goog.dom.getElementsByTagNameAndClass;\n\n\n/**\n * Sets multiple properties, and sometimes attributes, on an element. Note that\n * properties are simply object properties on the element instance, while\n * attributes are visible in the DOM. Many properties map to attributes with the\n * same names, some with different names, and there are also unmappable cases.\n *\n * This method sets properties by default (which means that custom attributes\n * are not supported). These are the exeptions (some of which is legacy):\n * - \"style\": Even though this is an attribute name, it is translated to a\n *   property, \"style.cssText\". Note that this property sanitizes and formats\n *   its value, unlike the attribute.\n * - \"class\": This is an attribute name, it is translated to the \"className\"\n *   property.\n * - \"for\": This is an attribute name, it is translated to the \"htmlFor\"\n *   property.\n * - Entries in {@see goog.dom.DIRECT_ATTRIBUTE_MAP_} are set as attributes,\n *   this is probably due to browser quirks.\n * - \"aria-*\", \"data-*\": Always set as attributes, they have no property\n *   counterparts.\n *\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n *     Property values can be strings or goog.string.TypedString values (such as\n *     goog.html.SafeUrl).\n */\ngoog.dom.setProperties = function(element, properties) {\n  goog.object.forEach(properties, function(val, key) {\n    if (val && val.implementsGoogStringTypedString) {\n      val = val.getTypedStringValue();\n    }\n    if (key == 'style') {\n      element.style.cssText = val;\n    } else if (key == 'class') {\n      element.className = val;\n    } else if (key == 'for') {\n      element.htmlFor = val;\n    } else if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {\n      element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);\n    } else if (\n        goog.string.startsWith(key, 'aria-') ||\n        goog.string.startsWith(key, 'data-')) {\n      element.setAttribute(key, val);\n    } else {\n      element[key] = val;\n    }\n  });\n};\n\n\n/**\n * Map of attributes that should be set using\n * element.setAttribute(key, val) instead of element[key] = val.  Used\n * by goog.dom.setProperties.\n *\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.DIRECT_ATTRIBUTE_MAP_ = {\n  'cellpadding': 'cellPadding',\n  'cellspacing': 'cellSpacing',\n  'colspan': 'colSpan',\n  'frameborder': 'frameBorder',\n  'height': 'height',\n  'maxlength': 'maxLength',\n  'nonce': 'nonce',\n  'role': 'role',\n  'rowspan': 'rowSpan',\n  'type': 'type',\n  'usemap': 'useMap',\n  'valign': 'vAlign',\n  'width': 'width'\n};\n\n\n/**\n * Gets the dimensions of the viewport.\n *\n * Gecko Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of document.\n *\n * Gecko Backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * IE6/7 Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of document element.\n *\n * IE5 + IE6/7 Backwards compatible mode:\n * docEl.clientWidth  0.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight 0.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * Opera 9 Standards and backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * WebKit:\n * Safari 2\n * docEl.clientHeight Same as scrollHeight.\n * docEl.clientWidth  Same as innerWidth.\n * win.innerWidth     Width of viewport excluding scrollbar.\n * win.innerHeight    Height of the viewport including scrollbar.\n * frame.innerHeight  Height of the viewport exluding scrollbar.\n *\n * Safari 3 (tested in 522)\n *\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * docEl.clientHeight Height of viewport excluding scrollbar in strict mode.\n * body.clientHeight  Height of viewport excluding scrollbar in quirks mode.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument\n  return goog.dom.getViewportSize_(opt_window || window);\n};\n\n\n/**\n * Helper for `getViewportSize`.\n * @param {Window} win The window to get the view port size for.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n * @private\n */\ngoog.dom.getViewportSize_ = function(win) {\n  var doc = win.document;\n  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;\n  return new goog.math.Size(el.clientWidth, el.clientHeight);\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the current document.\n */\ngoog.dom.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(window);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeightForWindow = function(win) {\n  return goog.dom.getDocumentHeight_(win);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * Function code copied from the opensocial gadget api:\n *   gadgets.window.adjustHeight(opt_height)\n *\n * @private\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeight_ = function(win) {\n  // NOTE(eae): This method will return the window size rather than the document\n  // size in webkit quirks mode.\n  var doc = win.document;\n  var height = 0;\n\n  if (doc) {\n    // Calculating inner content height is hard and different between\n    // browsers rendering in Strict vs. Quirks mode.  We use a combination of\n    // three properties within document.body and document.documentElement:\n    // - scrollHeight\n    // - offsetHeight\n    // - clientHeight\n    // These values differ significantly between browsers and rendering modes.\n    // But there are patterns.  It just takes a lot of time and persistence\n    // to figure out.\n\n    var body = doc.body;\n    var docEl = /** @type {!HTMLElement} */ (doc.documentElement);\n    if (!(docEl && body)) {\n      return 0;\n    }\n\n    // Get the height of the viewport\n    var vh = goog.dom.getViewportSize_(win).height;\n    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {\n      // In Strict mode:\n      // The inner content height is contained in either:\n      //    document.documentElement.scrollHeight\n      //    document.documentElement.offsetHeight\n      // Based on studying the values output by different browsers,\n      // use the value that's NOT equal to the viewport height found above.\n      height =\n          docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;\n    } else {\n      // In Quirks mode:\n      // documentElement.clientHeight is equal to documentElement.offsetHeight\n      // except in IE.  In most browsers, document.documentElement can be used\n      // to calculate the inner content height.\n      // However, in other browsers (e.g. IE), document.body must be used\n      // instead.  How do we know which one to use?\n      // If document.documentElement.clientHeight does NOT equal\n      // document.documentElement.offsetHeight, then use document.body.\n      var sh = docEl.scrollHeight;\n      var oh = docEl.offsetHeight;\n      if (docEl.clientHeight != oh) {\n        sh = body.scrollHeight;\n        oh = body.offsetHeight;\n      }\n\n      // Detect whether the inner content height is bigger or smaller\n      // than the bounding box (viewport).  If bigger, take the larger\n      // value.  If smaller, take the smaller value.\n      if (sh > vh) {\n        // Content is larger\n        height = sh > oh ? sh : oh;\n      } else {\n        // Content is smaller\n        height = sh < oh ? sh : oh;\n      }\n    }\n  }\n\n  return height;\n};\n\n\n/**\n * Gets the page scroll distance as a coordinate object.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @deprecated Use {@link goog.dom.getDocumentScroll} instead.\n */\ngoog.dom.getPageScroll = function(opt_window) {\n  var win = opt_window || goog.global || window;\n  return goog.dom.getDomHelper(win.document).getDocumentScroll();\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n *\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n */\ngoog.dom.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(document);\n};\n\n\n/**\n * Helper for `getDocumentScroll`.\n *\n * @param {!Document} doc The document to get the scroll for.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @private\n */\ngoog.dom.getDocumentScroll_ = function(doc) {\n  var el = goog.dom.getDocumentScrollElement_(doc);\n  var win = goog.dom.getWindow_(doc);\n  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher('10') &&\n      win.pageYOffset != el.scrollTop) {\n    // The keyboard on IE10 touch devices shifts the page using the pageYOffset\n    // without modifying scrollTop. For this case, we want the body scroll\n    // offsets.\n    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);\n  }\n  return new goog.math.Coordinate(\n      win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(document);\n};\n\n\n/**\n * Helper for `getDocumentScrollElement`.\n * @param {!Document} doc The document to get the scroll element for.\n * @return {!Element} Scrolling element.\n * @private\n */\ngoog.dom.getDocumentScrollElement_ = function(doc) {\n  // Old WebKit needs body.scrollLeft in both quirks mode and strict mode. We\n  // also default to the documentElement if the document does not have a body\n  // (e.g. a SVG document).\n  // Uses http://dev.w3.org/csswg/cssom-view/#dom-document-scrollingelement to\n  // avoid trying to guess about browser behavior from the UA string.\n  if (doc.scrollingElement) {\n    return doc.scrollingElement;\n  }\n  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {\n    return doc.documentElement;\n  }\n  return doc.body || doc.documentElement;\n};\n\n\n/**\n * Gets the window object associated with the given document.\n *\n * @param {Document=} opt_doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.getWindow = function(opt_doc) {\n  // TODO(arv): This should not take an argument.\n  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;\n};\n\n\n/**\n * Helper for `getWindow`.\n *\n * @param {!Document} doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n * @private\n */\ngoog.dom.getWindow_ = function(doc) {\n  return /** @type {!Window} */ (doc.parentWindow || doc.defaultView);\n};\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * For passing properties, please see {@link goog.dom.setProperties} for more\n * information.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList)} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array or NodeList,\n *     its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createDom = function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(document, arguments);\n};\n\n\n/**\n * Helper for `createDom`.\n * @param {!Document} doc The document to create the DOM in.\n * @param {!Arguments} args Argument object passed from the callers. See\n *     `goog.dom.createDom` for details.\n * @return {!Element} Reference to a DOM node.\n * @private\n */\ngoog.dom.createDom_ = function(doc, args) {\n  var tagName = String(args[0]);\n  var attributes = args[1];\n\n  // Internet Explorer is dumb:\n  // name: https://msdn.microsoft.com/en-us/library/ms534184(v=vs.85).aspx\n  // type: https://msdn.microsoft.com/en-us/library/ms534700(v=vs.85).aspx\n  // Also does not allow setting of 'type' attribute on 'input' or 'button'.\n  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes &&\n      (attributes.name || attributes.type)) {\n    var tagNameArr = ['<', tagName];\n    if (attributes.name) {\n      tagNameArr.push(' name=\"', goog.string.htmlEscape(attributes.name), '\"');\n    }\n    if (attributes.type) {\n      tagNameArr.push(' type=\"', goog.string.htmlEscape(attributes.type), '\"');\n\n      // Clone attributes map to remove 'type' without mutating the input.\n      var clone = {};\n      goog.object.extend(clone, attributes);\n\n      // JSCompiler can't see how goog.object.extend added this property,\n      // because it was essentially added by reflection.\n      // So it needs to be quoted.\n      delete clone['type'];\n\n      attributes = clone;\n    }\n    tagNameArr.push('>');\n    tagName = tagNameArr.join('');\n  }\n\n  var element = doc.createElement(tagName);\n\n  if (attributes) {\n    if (goog.isString(attributes)) {\n      element.className = attributes;\n    } else if (goog.isArray(attributes)) {\n      element.className = attributes.join(' ');\n    } else {\n      goog.dom.setProperties(element, attributes);\n    }\n  }\n\n  if (args.length > 2) {\n    goog.dom.append_(doc, element, args, 2);\n  }\n\n  return element;\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Document} doc The document to create new nodes in.\n * @param {!Node} parent The node to append nodes to.\n * @param {!Arguments} args The values to add. See `goog.dom.append`.\n * @param {number} startIndex The index of the array to start from.\n * @private\n */\ngoog.dom.append_ = function(doc, parent, args, startIndex) {\n  function childHandler(child) {\n    // TODO(user): More coercion, ala MochiKit?\n    if (child) {\n      parent.appendChild(\n          goog.isString(child) ? doc.createTextNode(child) : child);\n    }\n  }\n\n  for (var i = startIndex; i < args.length; i++) {\n    var arg = args[i];\n    // TODO(attila): Fix isArrayLike to return false for a text node.\n    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {\n      // If the argument is a node list, not a real array, use a clone,\n      // because forEach can't be used to mutate a NodeList.\n      goog.array.forEach(\n          goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg,\n          childHandler);\n    } else {\n      childHandler(arg);\n    }\n  }\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList)} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array, its\n *     children will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.createDom} instead.\n */\ngoog.dom.$dom = goog.dom.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createElement = function(name) {\n  return goog.dom.createElement_(document, name);\n};\n\n\n/**\n * Creates a new element.\n * @param {!Document} doc The document to create the element in.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.createElement_ = function(doc, name) {\n  return doc.createElement(String(name));\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.createTextNode = function(content) {\n  return document.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!Element} The created table.\n */\ngoog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {\n  // TODO(mlourenco): Return HTMLTableElement, also in prototype function.\n  // Callers need to be updated to e.g. not assign numbers to table.cellSpacing.\n  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Create a table.\n * @param {!Document} doc Document object to use to create the table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean} fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLTableElement} The created table.\n * @private\n */\ngoog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {\n  var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE);\n  var tbody =\n      table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));\n  for (var i = 0; i < rows; i++) {\n    var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR);\n    for (var j = 0; j < columns; j++) {\n      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);\n      // IE <= 9 will create a text node if we set text content to the empty\n      // string, so we avoid doing it unless necessary. This ensures that the\n      // same DOM tree is returned on all browsers.\n      if (fillWithNbsp) {\n        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);\n      }\n      tr.appendChild(td);\n    }\n    tbody.appendChild(tr);\n  }\n  return table;\n};\n\n\n\n/**\n * Creates a new Node from constant strings of HTML markup.\n * @param {...!goog.string.Const} var_args The HTML strings to concatenate then\n *     convert into a node.\n * @return {!Node}\n */\ngoog.dom.constHtmlToNode = function(var_args) {\n  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);\n  var safeHtml =\n      goog.html.uncheckedconversions\n          .safeHtmlFromStringKnownToSatisfyTypeContract(\n              goog.string.Const.from(\n                  'Constant HTML string, that gets turned into a ' +\n                  'Node later, so it will be automatically balanced.'),\n              stringArray.join(''));\n  return goog.dom.safeHtmlToNode(safeHtml);\n};\n\n\n/**\n * Converts HTML markup into a node. This is a safe version of\n * `goog.dom.htmlToDocumentFragment` which is now deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(document, html);\n};\n\n\n/**\n * Helper for `safeHtmlToNode`.\n * @param {!Document} doc The document.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.safeHtmlToNode_ = function(doc, html) {\n  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {\n    goog.dom.safe.setInnerHtml(\n        tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));\n    tempDiv.removeChild(tempDiv.firstChild);\n  } else {\n    goog.dom.safe.setInnerHtml(tempDiv, html);\n  }\n  return goog.dom.childrenToNode_(doc, tempDiv);\n};\n\n\n/**\n * Helper for `safeHtmlToNode_`.\n * @param {!Document} doc The document.\n * @param {!Node} tempDiv The input node.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.childrenToNode_ = function(doc, tempDiv) {\n  if (tempDiv.childNodes.length == 1) {\n    return tempDiv.removeChild(tempDiv.firstChild);\n  } else {\n    var fragment = doc.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n    return fragment;\n  }\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(document);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @param {!Document} doc The document to check.\n * @return {boolean} True if in CSS1-compatible mode.\n * @private\n */\ngoog.dom.isCss1CompatMode_ = function(doc) {\n  if (goog.dom.COMPAT_MODE_KNOWN_) {\n    return goog.dom.ASSUME_STANDARDS_MODE;\n  }\n\n  return doc.compatMode == 'CSS1Compat';\n};\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * IE natively supports node.canHaveChildren but has inconsistent behavior.\n * Prior to IE8 the base tag allows children and in IE9 all nodes return true\n * for canHaveChildren.\n *\n * In practice all non-IE browsers allow you to add children to any node, but\n * the behavior is inconsistent:\n *\n * <pre>\n *   var a = goog.dom.createElement(goog.dom.TagName.BR);\n *   a.appendChild(document.createTextNode('foo'));\n *   a.appendChild(document.createTextNode('bar'));\n *   console.log(a.childNodes.length);  // 2\n *   console.log(a.innerHTML);  // Chrome: \"\", IE9: \"foobar\", FF3.5: \"foobar\"\n * </pre>\n *\n * For more information, see:\n * http://dev.w3.org/html5/markup/syntax.html#syntax-elements\n *\n * TODO(user): Rename shouldAllowChildren() ?\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.canHaveChildren = function(node) {\n  if (node.nodeType != goog.dom.NodeType.ELEMENT) {\n    return false;\n  }\n  switch (/** @type {!Element} */ (node).tagName) {\n    case String(goog.dom.TagName.APPLET):\n    case String(goog.dom.TagName.AREA):\n    case String(goog.dom.TagName.BASE):\n    case String(goog.dom.TagName.BR):\n    case String(goog.dom.TagName.COL):\n    case String(goog.dom.TagName.COMMAND):\n    case String(goog.dom.TagName.EMBED):\n    case String(goog.dom.TagName.FRAME):\n    case String(goog.dom.TagName.HR):\n    case String(goog.dom.TagName.IMG):\n    case String(goog.dom.TagName.INPUT):\n    case String(goog.dom.TagName.IFRAME):\n    case String(goog.dom.TagName.ISINDEX):\n    case String(goog.dom.TagName.KEYGEN):\n    case String(goog.dom.TagName.LINK):\n    case String(goog.dom.TagName.NOFRAMES):\n    case String(goog.dom.TagName.NOSCRIPT):\n    case String(goog.dom.TagName.META):\n    case String(goog.dom.TagName.OBJECT):\n    case String(goog.dom.TagName.PARAM):\n    case String(goog.dom.TagName.SCRIPT):\n    case String(goog.dom.TagName.SOURCE):\n    case String(goog.dom.TagName.STYLE):\n    case String(goog.dom.TagName.TRACK):\n    case String(goog.dom.TagName.WBR):\n      return false;\n  }\n  return true;\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.appendChild = function(parent, child) {\n  parent.appendChild(child);\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.append = function(parent, var_args) {\n  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);\n};\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.removeChildren = function(node) {\n  // Note: Iterations over live collections can be slow, this is the fastest\n  // we could find. The double parenthesis are used to prevent JsCompiler and\n  // strict warnings.\n  var child;\n  while ((child = node.firstChild)) {\n    node.removeChild(child);\n  }\n};\n\n\n/**\n * Inserts a new node before an existing reference node (i.e. as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.insertSiblingBefore = function(newNode, refNode) {\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode);\n  }\n};\n\n\n/**\n * Inserts a new node after an existing reference node (i.e. as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.insertSiblingAfter = function(newNode, refNode) {\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);\n  }\n};\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.insertChildAt = function(parent, child, index) {\n  // Note that if the second argument is null, insertBefore\n  // will append the child at the end of the list of children.\n  parent.insertBefore(child, parent.childNodes[index] || null);\n};\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.replaceNode = function(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n};\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * Does nothing if the element is not in the document.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children; or undefined, if the element was not in the document\n *     to begin with.\n */\ngoog.dom.flattenElement = function(element) {\n  var child, parent = element.parentNode;\n  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    // Use IE DOM method (supported by Opera too) if available\n    if (element.removeNode) {\n      return /** @type {Element} */ (element.removeNode(false));\n    } else {\n      // Move all children of the original node up one level.\n      while ((child = element.firstChild)) {\n        parent.insertBefore(child, element);\n      }\n\n      // Detach the original element.\n      return /** @type {Element} */ (goog.dom.removeNode(element));\n    }\n  }\n};\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.getChildren = function(element) {\n  // We check if the children attribute is supported for child elements\n  // since IE8 misuses the attribute by also including comments.\n  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE &&\n      element.children != undefined) {\n    return element.children;\n  }\n  // Fall back to manually filtering the element's child nodes.\n  return goog.array.filter(element.childNodes, function(node) {\n    return node.nodeType == goog.dom.NodeType.ELEMENT;\n  });\n};\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.getFirstElementChild = function(node) {\n  if (goog.isDef(node.firstElementChild)) {\n    return /** @type {!Element} */ (node).firstElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.firstChild, true);\n};\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.getLastElementChild = function(node) {\n  if (goog.isDef(node.lastElementChild)) {\n    return /** @type {!Element} */ (node).lastElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.lastChild, false);\n};\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.getNextElementSibling = function(node) {\n  if (goog.isDef(node.nextElementSibling)) {\n    return /** @type {!Element} */ (node).nextElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.nextSibling, true);\n};\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.getPreviousElementSibling = function(node) {\n  if (goog.isDef(node.previousElementSibling)) {\n    return /** @type {!Element} */ (node).previousElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.previousSibling, false);\n};\n\n\n/**\n * Returns the first node that is an element in the specified direction,\n * starting with `node`.\n * @param {Node} node The node to get the next element from.\n * @param {boolean} forward Whether to look forwards or backwards.\n * @return {Element} The first element.\n * @private\n */\ngoog.dom.getNextElementNode_ = function(node, forward) {\n  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {\n    node = forward ? node.nextSibling : node.previousSibling;\n  }\n\n  return /** @type {Element} */ (node);\n};\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.getNextNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (node.firstChild) {\n    return node.firstChild;\n  }\n\n  while (node && !node.nextSibling) {\n    node = node.parentNode;\n  }\n\n  return node ? node.nextSibling : null;\n};\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.getPreviousNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (!node.previousSibling) {\n    return node.parentNode;\n  }\n\n  node = node.previousSibling;\n  while (node && node.lastChild) {\n    node = node.lastChild;\n  }\n\n  return node;\n};\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.isNodeLike = function(obj) {\n  return goog.isObject(obj) && obj.nodeType > 0;\n};\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.isElement = function(obj) {\n  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;\n};\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.isWindow = function(obj) {\n  return goog.isObject(obj) && obj['window'] == obj;\n};\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.getParentElement = function(element) {\n  var parent;\n  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {\n    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher('9') &&\n        !goog.userAgent.isVersionOrHigher('10');\n    // SVG elements in IE9 can't use the parentElement property.\n    // goog.global['SVGElement'] is not defined in IE9 quirks mode.\n    if (!(isIe9 && goog.global['SVGElement'] &&\n          element instanceof goog.global['SVGElement'])) {\n      parent = element.parentElement;\n      if (parent) {\n        return parent;\n      }\n    }\n  }\n  parent = element.parentNode;\n  return goog.dom.isElement(parent) ? /** @type {!Element} */ (parent) : null;\n};\n\n\n/**\n * Whether a node contains another node.\n * @param {?Node|undefined} parent The node that should contain the other node.\n * @param {?Node|undefined} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendent node.\n */\ngoog.dom.contains = function(parent, descendant) {\n  if (!parent || !descendant) {\n    return false;\n  }\n  // We use browser specific methods for this if available since it is faster\n  // that way.\n\n  // IE DOM\n  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {\n    return parent == descendant || parent.contains(descendant);\n  }\n\n  // W3C DOM Level 3\n  if (typeof parent.compareDocumentPosition != 'undefined') {\n    return parent == descendant ||\n        Boolean(parent.compareDocumentPosition(descendant) & 16);\n  }\n\n  // W3C DOM Level 1\n  while (descendant && parent != descendant) {\n    descendant = descendant.parentNode;\n  }\n  return descendant == parent;\n};\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.compareNodeOrder = function(node1, node2) {\n  // Fall out quickly for equality.\n  if (node1 == node2) {\n    return 0;\n  }\n\n  // Use compareDocumentPosition where available\n  if (node1.compareDocumentPosition) {\n    // 4 is the bitmask for FOLLOWS.\n    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;\n  }\n\n  // Special case for document nodes on IE 7 and 8.\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return -1;\n    }\n    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return 1;\n    }\n  }\n\n  // Process in IE using sourceIndex - we check to see if the first node has\n  // a source index or if its parent has one.\n  if ('sourceIndex' in node1 ||\n      (node1.parentNode && 'sourceIndex' in node1.parentNode)) {\n    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;\n    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;\n\n    if (isElement1 && isElement2) {\n      return node1.sourceIndex - node2.sourceIndex;\n    } else {\n      var parent1 = node1.parentNode;\n      var parent2 = node2.parentNode;\n\n      if (parent1 == parent2) {\n        return goog.dom.compareSiblingOrder_(node1, node2);\n      }\n\n      if (!isElement1 && goog.dom.contains(parent1, node2)) {\n        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);\n      }\n\n\n      if (!isElement2 && goog.dom.contains(parent2, node1)) {\n        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);\n      }\n\n      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) -\n          (isElement2 ? node2.sourceIndex : parent2.sourceIndex);\n    }\n  }\n\n  // For Safari, we compare ranges.\n  var doc = goog.dom.getOwnerDocument(node1);\n\n  var range1, range2;\n  range1 = doc.createRange();\n  range1.selectNode(node1);\n  range1.collapse(true);\n\n  range2 = doc.createRange();\n  range2.selectNode(node2);\n  range2.collapse(true);\n\n  return range1.compareBoundaryPoints(\n      goog.global['Range'].START_TO_END, range2);\n};\n\n\n/**\n * Utility function to compare the position of two nodes, when\n * `textNode`'s parent is an ancestor of `node`.  If this entry\n * condition is not met, this function will attempt to reference a null object.\n * @param {!Node} textNode The textNode to compare.\n * @param {Node} node The node to compare.\n * @return {number} -1 if node is before textNode, +1 otherwise.\n * @private\n */\ngoog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {\n  var parent = textNode.parentNode;\n  if (parent == node) {\n    // If textNode is a child of node, then node comes first.\n    return -1;\n  }\n  var sibling = node;\n  while (sibling.parentNode != parent) {\n    sibling = sibling.parentNode;\n  }\n  return goog.dom.compareSiblingOrder_(sibling, textNode);\n};\n\n\n/**\n * Utility function to compare the position of two nodes known to be non-equal\n * siblings.\n * @param {Node} node1 The first node to compare.\n * @param {!Node} node2 The second node to compare.\n * @return {number} -1 if node1 is before node2, +1 otherwise.\n * @private\n */\ngoog.dom.compareSiblingOrder_ = function(node1, node2) {\n  var s = node2;\n  while ((s = s.previousSibling)) {\n    if (s == node1) {\n      // We just found node1 before node2.\n      return -1;\n    }\n  }\n\n  // Since we didn't find it, node1 must be after node2.\n  return 1;\n};\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.findCommonAncestor = function(var_args) {\n  var i, count = arguments.length;\n  if (!count) {\n    return null;\n  } else if (count == 1) {\n    return arguments[0];\n  }\n\n  var paths = [];\n  var minLength = Infinity;\n  for (i = 0; i < count; i++) {\n    // Compute the list of ancestors.\n    var ancestors = [];\n    var node = arguments[i];\n    while (node) {\n      ancestors.unshift(node);\n      node = node.parentNode;\n    }\n\n    // Save the list for comparison.\n    paths.push(ancestors);\n    minLength = Math.min(minLength, ancestors.length);\n  }\n  var output = null;\n  for (i = 0; i < minLength; i++) {\n    var first = paths[0][i];\n    for (var j = 1; j < count; j++) {\n      if (first != paths[j][i]) {\n        return output;\n      }\n    }\n    output = first;\n  }\n  return output;\n};\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node|Window} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.getOwnerDocument = function(node) {\n  // TODO(nnaze): Update param signature to be non-nullable.\n  goog.asserts.assert(node, 'Node cannot be null or undefined.');\n  return /** @type {!Document} */ (\n      node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument ||\n              node.document);\n};\n\n\n/**\n * Cross-browser function for getting the document element of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.getFrameContentDocument = function(frame) {\n  return frame.contentDocument ||\n      /** @type {!HTMLFrameElement} */ (frame).contentWindow.document;\n};\n\n\n/**\n * Cross-browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame, or null if none\n *     exists.\n */\ngoog.dom.getFrameContentWindow = function(frame) {\n  try {\n    return frame.contentWindow ||\n        (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) :\n                                 null);\n  } catch (e) {\n    // NOTE(user): In IE8, checking the contentWindow or contentDocument\n    // properties will throw a \"Unspecified Error\" exception if the iframe is\n    // not inserted in the DOM. If we get this we can be sure that no window\n    // exists, so return null.\n  }\n  return null;\n};\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.setTextContent = function(node, text) {\n  goog.asserts.assert(\n      node != null,\n      'goog.dom.setTextContent expects a non-null value for node');\n\n  if ('textContent' in node) {\n    node.textContent = text;\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    /** @type {!Text} */ (node).data = String(text);\n  } else if (\n      node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {\n    // If the first child is a text node we just change its data and remove the\n    // rest of the children.\n    while (node.lastChild != node.firstChild) {\n      node.removeChild(node.lastChild);\n    }\n    /** @type {!Text} */ (node.firstChild).data = String(text);\n  } else {\n    goog.dom.removeChildren(node);\n    var doc = goog.dom.getOwnerDocument(node);\n    node.appendChild(doc.createTextNode(String(text)));\n  }\n};\n\n\n/**\n * Gets the outerHTML of a node, which islike innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.getOuterHtml = function(element) {\n  goog.asserts.assert(\n      element !== null,\n      'goog.dom.getOuterHtml expects a non-null value for element');\n  // IE, Opera and WebKit all have outerHTML.\n  if ('outerHTML' in element) {\n    return element.outerHTML;\n  } else {\n    var doc = goog.dom.getOwnerDocument(element);\n    var div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n    div.appendChild(element.cloneNode(true));\n    return div.innerHTML;\n  }\n};\n\n\n/**\n * Finds the first descendant node that matches the filter function, using\n * a depth first search. This function offers the most general purpose way\n * of finding a matching element. You may also wish to consider\n * `goog.dom.query` which can express many matching criteria using\n * CSS selector expressions. These expressions often result in a more\n * compact representation of the desired result.\n * @see goog.dom.query\n *\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.findNode = function(root, p) {\n  var rv = [];\n  var found = goog.dom.findNodes_(root, p, rv, true);\n  return found ? rv[0] : undefined;\n};\n\n\n/**\n * Finds all the descendant nodes that match the filter function, using a\n * a depth first search. This function offers the most general-purpose way\n * of finding a set of matching elements. You may also wish to consider\n * `goog.dom.query` which can express many matching criteria using\n * CSS selector expressions. These expressions often result in a more\n * compact representation of the desired result.\n\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {!Array<!Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.findNodes = function(root, p) {\n  var rv = [];\n  goog.dom.findNodes_(root, p, rv, false);\n  return rv;\n};\n\n\n/**\n * Finds the first or all the descendant nodes that match the filter function,\n * using a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @param {!Array<!Node>} rv The found nodes are added to this array.\n * @param {boolean} findOne If true we exit after the first found node.\n * @return {boolean} Whether the search is complete or not. True in case findOne\n *     is true and the node is found. False otherwise.\n * @private\n */\ngoog.dom.findNodes_ = function(root, p, rv, findOne) {\n  if (root != null) {\n    var child = root.firstChild;\n    while (child) {\n      if (p(child)) {\n        rv.push(child);\n        if (findOne) {\n          return true;\n        }\n      }\n      if (goog.dom.findNodes_(child, p, rv, findOne)) {\n        return true;\n      }\n      child = child.nextSibling;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Map of tags whose content to ignore when calculating text length.\n * @private {!Object<string, number>}\n * @const\n */\ngoog.dom.TAGS_TO_IGNORE_ = {\n  'SCRIPT': 1,\n  'STYLE': 1,\n  'HEAD': 1,\n  'IFRAME': 1,\n  'OBJECT': 1\n};\n\n\n/**\n * Map of tags which have predefined values with regard to whitespace.\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.PREDEFINED_TAG_VALUES_ = {\n  'IMG': ' ',\n  'BR': '\\n'\n};\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.isFocusableTabIndex = function(element) {\n  return goog.dom.hasSpecifiedTabIndex_(element) &&\n      goog.dom.isTabIndexFocusable_(element);\n};\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.setFocusableTabIndex = function(element, enable) {\n  if (enable) {\n    element.tabIndex = 0;\n  } else {\n    // Set tabIndex to -1 first, then remove it. This is a workaround for\n    // Safari (confirmed in version 4 on Windows). When removing the attribute\n    // without setting it to -1 first, the element remains keyboard focusable\n    // despite not having a tabIndex attribute anymore.\n    element.tabIndex = -1;\n    element.removeAttribute('tabIndex');  // Must be camelCase!\n  }\n};\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.isFocusable = function(element) {\n  var focusable;\n  // Some elements can have unspecified tab index and still receive focus.\n  if (goog.dom.nativelySupportsFocus_(element)) {\n    // Make sure the element is not disabled ...\n    focusable = !element.disabled &&\n        // ... and if a tab index is specified, it allows focus.\n        (!goog.dom.hasSpecifiedTabIndex_(element) ||\n         goog.dom.isTabIndexFocusable_(element));\n  } else {\n    focusable = goog.dom.isFocusableTabIndex(element);\n  }\n\n  // IE requires elements to be visible in order to focus them.\n  return focusable && goog.userAgent.IE ?\n      goog.dom.hasNonZeroBoundingRect_(/** @type {!HTMLElement} */ (element)) :\n      focusable;\n};\n\n\n/**\n * Returns true if the element has a specified tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a specified tab index.\n * @private\n */\ngoog.dom.hasSpecifiedTabIndex_ = function(element) {\n  // IE8 and below don't support hasAttribute(), instead check whether the\n  // 'tabindex' attributeNode is specified. Otherwise check hasAttribute().\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9')) {\n    var attrNode = element.getAttributeNode('tabindex');  // Must be lowercase!\n    return goog.isDefAndNotNull(attrNode) && attrNode.specified;\n  } else {\n    return element.hasAttribute('tabindex');\n  }\n};\n\n\n/**\n * Returns true if the element's tab index allows the element to be focused.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element's tab index allows focus.\n * @private\n */\ngoog.dom.isTabIndexFocusable_ = function(element) {\n  var index = /** @type {!HTMLElement} */ (element).tabIndex;\n  // NOTE: IE9 puts tabIndex in 16-bit int, e.g. -2 is 65534.\n  return goog.isNumber(index) && index >= 0 && index < 32768;\n};\n\n\n/**\n * Returns true if the element is focusable even when tabIndex is not set.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element natively supports focus.\n * @private\n */\ngoog.dom.nativelySupportsFocus_ = function(element) {\n  return element.tagName == goog.dom.TagName.A ||\n      element.tagName == goog.dom.TagName.INPUT ||\n      element.tagName == goog.dom.TagName.TEXTAREA ||\n      element.tagName == goog.dom.TagName.SELECT ||\n      element.tagName == goog.dom.TagName.BUTTON;\n};\n\n\n/**\n * Returns true if the element has a bounding rectangle that would be visible\n * (i.e. its width and height are greater than zero).\n * @param {!HTMLElement} element Element to check.\n * @return {boolean} Whether the element has a non-zero bounding rectangle.\n * @private\n */\ngoog.dom.hasNonZeroBoundingRect_ = function(element) {\n  var rect;\n  if (!goog.isFunction(element['getBoundingClientRect']) ||\n      // In IE, getBoundingClientRect throws on detached nodes.\n      (goog.userAgent.IE && element.parentElement == null)) {\n    rect = {'height': element.offsetHeight, 'width': element.offsetWidth};\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;\n};\n\n\n/**\n * Returns the text content of the current node, without markup and invisible\n * symbols. New lines are stripped and whitespace is collapsed,\n * such that each character would be visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.getTextContent = function(node) {\n  var textContent;\n  // Note(arv): IE9, Opera, and Safari 3 support innerText but they include\n  // text nodes in script tags. So we revert to use a user agent test here.\n  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null &&\n      ('innerText' in node)) {\n    textContent = goog.string.canonicalizeNewlines(node.innerText);\n    // Unfortunately .innerText() returns text with &shy; symbols\n    // We need to filter it out and then remove duplicate whitespaces\n  } else {\n    var buf = [];\n    goog.dom.getTextContent_(node, buf, true);\n    textContent = buf.join('');\n  }\n\n  // Strip &shy; entities. goog.format.insertWordBreaks inserts them in Opera.\n  textContent = textContent.replace(/ \\xAD /g, ' ').replace(/\\xAD/g, '');\n  // Strip &#8203; entities. goog.format.insertWordBreaks inserts them in IE8.\n  textContent = textContent.replace(/\\u200B/g, '');\n\n  // Skip this replacement on old browsers with working innerText, which\n  // automatically turns &nbsp; into ' ' and / +/ into ' ' when reading\n  // innerText.\n  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {\n    textContent = textContent.replace(/ +/g, ' ');\n  }\n  if (textContent != ' ') {\n    textContent = textContent.replace(/^\\s*/, '');\n  }\n\n  return textContent;\n};\n\n\n/**\n * Returns the text content of the current node, without markup.\n *\n * Unlike `getTextContent` this method does not collapse whitespaces\n * or normalize lines breaks.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The raw text content.\n */\ngoog.dom.getRawTextContent = function(node) {\n  var buf = [];\n  goog.dom.getTextContent_(node, buf, false);\n\n  return buf.join('');\n};\n\n\n/**\n * Recursive support function for text content retrieval.\n *\n * @param {Node} node The node from which we are getting content.\n * @param {Array<string>} buf string buffer.\n * @param {boolean} normalizeWhitespace Whether to normalize whitespace.\n * @private\n */\ngoog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {\n  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n    // ignore certain tags\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    if (normalizeWhitespace) {\n      buf.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      buf.push(node.nodeValue);\n    }\n  } else if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n    buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);\n  } else {\n    var child = node.firstChild;\n    while (child) {\n      goog.dom.getTextContent_(child, buf, normalizeWhitespace);\n      child = child.nextSibling;\n    }\n  }\n};\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.getNodeTextLength = function(node) {\n  return goog.dom.getTextContent(node).length;\n};\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by goog.dom.getNodeTextLength.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent The node relative to which the offset will\n *     be calculated. Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.getNodeTextOffset = function(node, opt_offsetParent) {\n  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;\n  var buf = [];\n  while (node && node != root) {\n    var cur = node;\n    while ((cur = cur.previousSibling)) {\n      buf.unshift(goog.dom.getTextContent(cur));\n    }\n    node = node.parentNode;\n  }\n  // Trim left to deal with FF cases when there might be line breaks and empty\n  // nodes at the front of the text\n  return goog.string.trimLeft(buf.join('')).replace(/ +/g, ' ').length;\n};\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.getNodeAtOffset = function(parent, offset, opt_result) {\n  var stack = [parent], pos = 0, cur = null;\n  while (stack.length > 0 && pos < offset) {\n    cur = stack.pop();\n    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n      // ignore certain tags\n    } else if (cur.nodeType == goog.dom.NodeType.TEXT) {\n      var text = cur.nodeValue.replace(/(\\r\\n|\\r|\\n)/g, '').replace(/ +/g, ' ');\n      pos += text.length;\n    } else if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n      pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;\n    } else {\n      for (var i = cur.childNodes.length - 1; i >= 0; i--) {\n        stack.push(cur.childNodes[i]);\n      }\n    }\n  }\n  if (goog.isObject(opt_result)) {\n    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;\n    opt_result.node = cur;\n  }\n\n  return cur;\n};\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.isNodeList = function(val) {\n  // TODO(attila): Now the isNodeList is part of goog.dom we can use\n  // goog.userAgent to make this simpler.\n  // A NodeList must have a length property of type 'number' on all platforms.\n  if (val && typeof val.length == 'number') {\n    // A NodeList is an object everywhere except Safari, where it's a function.\n    if (goog.isObject(val)) {\n      // A NodeList must have an item function (on non-IE platforms) or an item\n      // property of type 'string' (on IE).\n      return typeof val.item == 'function' || typeof val.item == 'string';\n    } else if (goog.isFunction(val)) {\n      // On Safari, a NodeList is a function with an item property that is also\n      // a function.\n      return typeof /** @type {?} */ (val.item) == 'function';\n    }\n  }\n\n  // Not a NodeList.\n  return false;\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getAncestorByTagNameAndClass = function(\n    element, opt_tag, opt_class, opt_maxSearchSteps) {\n  if (!opt_tag && !opt_class) {\n    return null;\n  }\n  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;\n  return /** @type {Element} */ (goog.dom.getAncestor(element, function(node) {\n    return (!tagName || node.nodeName == tagName) &&\n        (!opt_class ||\n         goog.isString(node.className) &&\n             goog.array.contains(node.className.split(/\\s+/), opt_class));\n  }, true, opt_maxSearchSteps));\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} className The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {\n  return goog.dom.getAncestorByTagNameAndClass(\n      element, null, className, opt_maxSearchSteps);\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.getAncestor = function(\n    element, matcher, opt_includeNode, opt_maxSearchSteps) {\n  if (element && !opt_includeNode) {\n    element = element.parentNode;\n  }\n  var steps = 0;\n  while (element &&\n         (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {\n    goog.asserts.assert(element.name != 'parentNode');\n    if (matcher(element)) {\n      return element;\n    }\n    element = element.parentNode;\n    steps++;\n  }\n  // Reached the root of the DOM without a match\n  return null;\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document} doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.getActiveElement = function(doc) {\n  // While in an iframe, IE9 will throw \"Unspecified error\" when accessing\n  // activeElement.\n  try {\n    var activeElement = doc && doc.activeElement;\n    // While not in an iframe, IE9-11 sometimes gives null.\n    // While in an iframe, IE11 sometimes returns an empty object.\n    return activeElement && activeElement.nodeName ? activeElement : null;\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Gives the current devicePixelRatio.\n *\n * By default, this is the value of window.devicePixelRatio (which should be\n * preferred if present).\n *\n * If window.devicePixelRatio is not present, the ratio is calculated with\n * window.matchMedia, if present. Otherwise, gives 1.0.\n *\n * Some browsers (including Chrome) consider the browser zoom level in the pixel\n * ratio, so the value may change across multiple calls.\n *\n * @return {number} The number of actual pixels per virtual pixel.\n */\ngoog.dom.getPixelRatio = function() {\n  var win = goog.dom.getWindow();\n  if (goog.isDef(win.devicePixelRatio)) {\n    return win.devicePixelRatio;\n  } else if (win.matchMedia) {\n    // Should be for IE10 and FF6-17 (this basically clamps to lower)\n    // Note that the order of these statements is important\n    return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) ||\n           goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) ||\n           .75;\n  }\n  return 1;\n};\n\n\n/**\n * Calculates a mediaQuery to check if the current device supports the\n * given actual to virtual pixel ratio.\n * @param {number} pixelRatio The ratio of actual pixels to virtual pixels.\n * @return {number} pixelRatio if applicable, otherwise 0.\n * @private\n */\ngoog.dom.matchesPixelRatio_ = function(pixelRatio) {\n  var win = goog.dom.getWindow();\n  /**\n   * Due to the 1:96 fixed ratio of CSS in to CSS px, 1dppx is equivalent to\n   * 96dpi.\n   * @const {number}\n   */\n  var dpiPerDppx = 96;\n  var query =\n      // FF16-17\n      '(min-resolution: ' + pixelRatio + 'dppx),' +\n      // FF6-15\n      '(min--moz-device-pixel-ratio: ' + pixelRatio + '),' +\n      // IE10 (this works for the two browsers above too but I don't want to\n      // trust the 1:96 fixed ratio magic)\n      '(min-resolution: ' + (pixelRatio * dpiPerDppx) + 'dpi)';\n  return win.matchMedia(query).matches ? pixelRatio : 0;\n};\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.getCanvasContext2D = function(canvas) {\n  return /** @type {!CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n};\n\n\n\n/**\n * Create an instance of a DOM helper with a new document object.\n * @param {Document=} opt_document Document object to associate with this\n *     DOM helper.\n * @constructor\n */\ngoog.dom.DomHelper = function(opt_document) {\n  /**\n   * Reference to the document object to use\n   * @type {!Document}\n   * @private\n   */\n  this.document_ = opt_document || goog.global.document || document;\n};\n\n\n/**\n * Gets the dom helper object for the document where the element resides.\n * @param {Node=} opt_node If present, gets the DomHelper for this node.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;\n\n\n/**\n * Sets the document object.\n * @param {!Document} document Document object.\n */\ngoog.dom.DomHelper.prototype.setDocument = function(document) {\n  this.document_ = document;\n};\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.DomHelper.prototype.getDocument = function() {\n  return this.document_;\n};\n\n\n/**\n * Alias for `getElementById`. If a DOM node is passed in then we just\n * return that.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.DomHelper.prototype.getElement = function(element) {\n  return goog.dom.getElementHelper_(this.document_, element);\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.DomHelper.prototype.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(this.document_, id);\n};\n\n\n/**\n * Alias for `getElement`.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.DomHelper.prototype.getElement} instead.\n */\ngoog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document of this DomHelper.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagName =\n    function(tagName, opt_parent) {\n  var parent = opt_parent || this.document_;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. The returned array is a live\n * NodeList or a static list depending on the code path taken.\n *\n * @see goog.dom.query\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name or * for all\n *     tags.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns an array of all the elements with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementsByClass(className, doc);\n};\n\n\n/**\n * Returns the first element we find matching the provided class name.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {(Element|Document)=} opt_el Optional element to look in.\n * @return {Element} The first item found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementByClass(className, doc);\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {(!Element|!Document)=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item found with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.DomHelper.prototype.getRequiredElementByClass = function(\n    className, opt_root) {\n  var root = opt_root || this.document_;\n  return goog.dom.getRequiredElementByClass(className, root);\n};\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @deprecated Use DomHelper getElementsByTagNameAndClass.\n * @see goog.dom.query\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is a string or more specific types if it is\n *     a member of goog.dom.TagName (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.$$ =\n    goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;\n\n\n/**\n * Sets a number of properties on a node.\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n */\ngoog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;\n\n\n/**\n * Gets the dimensions of the viewport.\n * @param {Window=} opt_window Optional window element to test. Defaults to\n *     the window of the Dom Helper.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument. That breaks the rule of a\n  // a DomHelper representing a single frame/window/document.\n  return goog.dom.getViewportSize(opt_window || this.getWindow());\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the document.\n */\ngoog.dom.DomHelper.prototype.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(this.getWindow());\n};\n\n\n/**\n * Typedef for use with goog.dom.createDom and goog.dom.append.\n * @typedef {Object|string|Array|NodeList}\n */\ngoog.dom.Appendable;\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * An easy way to move all child nodes of an existing element to a new parent\n * element is:\n * <code>createDom(goog.dom.TagName.DIV, null, oldElement.childNodes);</code>\n * which will remove all child nodes from the old element and add them as\n * child nodes of the new DIV.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...goog.dom.Appendable} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array or\n *     NodeList, its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createDom = function(\n    tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(this.document_, arguments);\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...goog.dom.Appendable} var_args Further DOM nodes or strings for\n *     text nodes.  If one of the var_args is an array, its children will be\n *     added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.DomHelper.prototype.createDom} instead.\n */\ngoog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createElement = function(name) {\n  return goog.dom.createElement_(this.document_, name);\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.DomHelper.prototype.createTextNode = function(content) {\n  return this.document_.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLElement} The created table.\n */\ngoog.dom.DomHelper.prototype.createTable = function(\n    rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(\n      this.document_, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Converts an HTML into a node or a document fragment. A single Node is used if\n * `html` only generates a single node. If `html` generates multiple\n * nodes then these are put inside a `DocumentFragment`. This is a safe\n * version of `goog.dom.DomHelper#htmlToDocumentFragment` which is now\n * deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(this.document_, html);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.DomHelper.prototype.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(this.document_);\n};\n\n\n/**\n * Gets the window object associated with the document.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.DomHelper.prototype.getWindow = function() {\n  return goog.dom.getWindow_(this.document_);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.DomHelper.prototype.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(this.document_);\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n * @return {!goog.math.Coordinate} Object with properties 'x' and 'y'.\n */\ngoog.dom.DomHelper.prototype.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(this.document_);\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document=} opt_doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {\n  return goog.dom.getActiveElement(opt_doc || this.document_);\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.DomHelper.prototype.append = goog.dom.append;\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;\n\n\n/**\n * Inserts a new node before an existing reference node (i.e., as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;\n\n\n/**\n * Inserts a new node after an existing reference node (i.e., as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children, or undefined if the element was already not in the\n *     document.\n */\ngoog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getFirstElementChild =\n    goog.dom.getFirstElementChild;\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getNextElementSibling =\n    goog.dom.getNextElementSibling;\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.DomHelper.prototype.getPreviousElementSibling =\n    goog.dom.getPreviousElementSibling;\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.DomHelper.prototype.isElement = goog.dom.isElement;\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;\n\n\n/**\n * Whether a node contains another node.\n * @param {Node} parent The node that should contain the other node.\n * @param {Node} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendent node.\n */\ngoog.dom.DomHelper.prototype.contains = goog.dom.contains;\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;\n\n\n/**\n * Cross browser function for getting the document element of an iframe.\n * @param {Element} iframe Iframe element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.DomHelper.prototype.getFrameContentDocument =\n    goog.dom.getFrameContentDocument;\n\n\n/**\n * Cross browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame.\n */\ngoog.dom.DomHelper.prototype.getFrameContentWindow =\n    goog.dom.getFrameContentWindow;\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;\n\n\n/**\n * Gets the outerHTML of a node, which islike innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;\n\n\n/**\n * Finds the first descendant node that matches the filter function. This does\n * a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.DomHelper.prototype.findNode = goog.dom.findNode;\n\n\n/**\n * Finds all the descendant nodes that matches the filter function. This does a\n * depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Array<Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.DomHelper.prototype.setFocusableTabIndex =\n    goog.dom.setFocusableTabIndex;\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;\n\n\n/**\n * Returns the text contents of the current node, without markup. New lines are\n * stripped and whitespace is collapsed, such that each character would be\n * visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by\n * `goog.dom.getNodeTextLength`.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getAncestorByTagNameAndClass =\n    goog.dom.getAncestorByTagNameAndClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} class The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview JSON utility functions.\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.json');\ngoog.provide('goog.json.Replacer');\ngoog.provide('goog.json.Reviver');\ngoog.provide('goog.json.Serializer');\n\n\n/**\n * @define {boolean} If true, use the native JSON parsing API.\n * NOTE: The default `goog.json.parse` implementation is able to handle\n * invalid JSON. JSPB used to produce invalid JSON which is not the case\n * anymore so this is safe to enable for parsing JSPB. Using native JSON is\n * faster and safer than the default implementation using `eval`.\n */\ngoog.define('goog.json.USE_NATIVE_JSON', false);\n\n/**\n * @define {boolean} If true, try the native JSON parsing API first. If it\n * fails, log an error and use `eval` instead. This is useful when\n * transitioning to `goog.json.USE_NATIVE_JSON`. The error logger needs to\n * be set by `goog.json.setErrorLogger`. If it is not set then the error\n * is ignored.\n */\ngoog.define('goog.json.TRY_NATIVE_JSON', false);\n\n\n/**\n * Tests if a string is an invalid JSON string. This only ensures that we are\n * not using any invalid characters\n * @param {string} s The string to test.\n * @return {boolean} True if the input is a valid JSON string.\n */\ngoog.json.isValid = function(s) {\n  // All empty whitespace is not valid.\n  if (/^\\s*$/.test(s)) {\n    return false;\n  }\n\n  // This is taken from http://www.json.org/json2.js which is released to the\n  // public domain.\n  // Changes: We dissallow \\u2028 Line separator and \\u2029 Paragraph separator\n  // inside strings.  We also treat \\u2028 and \\u2029 as whitespace which they\n  // are in the RFC but IE and Safari does not match \\s to these so we need to\n  // include them in the reg exps in all places where whitespace is allowed.\n  // We allowed \\x7f inside strings because some tools don't escape it,\n  // e.g. http://www.json.org/java/org/json/JSONObject.java\n\n  // Parsing happens in three stages. In the first stage, we run the text\n  // against regular expressions that look for non-JSON patterns. We are\n  // especially concerned with '()' and 'new' because they can cause invocation,\n  // and '=' because it can cause mutation. But just to be safe, we want to\n  // reject all unexpected forms.\n\n  // We split the first stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace all backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters, but only when followed\n  // by a colon, comma, closing bracket or end of string. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  // Don't make these static since they have the global flag.\n  var backslashesRe = /\\\\[\"\\\\\\/bfnrtu]/g;\n  var simpleValuesRe =\n      /(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g;\n  var openBracketsRe = /(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g;\n  var remainderRe = /^[\\],:{}\\s\\u2028\\u2029]*$/;\n\n  return remainderRe.test(\n      s.replace(backslashesRe, '@')\n          .replace(simpleValuesRe, ']')\n          .replace(openBracketsRe, ''));\n};\n\n/**\n * Logs a parsing error in `JSON.parse` solvable by using `eval`\n * if `goog.json.TRY_NATIVE_JSON` is enabled.\n * @private {function(string, !Error)} The first parameter is the error message,\n *     the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.errorLogger_ = goog.nullFunction;\n\n\n/**\n * Sets an error logger to use if there's a recoverable parsing error and\n * `goog.json.TRY_NATIVE_JSON` is enabled.\n * @param {function(string, !Error)} errorLogger The first parameter is the\n *     error message, the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.setErrorLogger = function(errorLogger) {\n  goog.json.errorLogger_ = errorLogger;\n};\n\n\n/**\n * Parses a JSON string and returns the result. This throws an exception if\n * the string is an invalid JSON string.\n *\n * Note that this is very slow on large strings. Use JSON.parse if possible.\n *\n * @param {*} s The JSON string to parse.\n * @throws Error if s is invalid JSON.\n * @return {Object} The object generated from the JSON string, or null.\n * @deprecated Use JSON.parse.\n */\ngoog.json.parse = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*):Object} */ (goog.global['JSON']['parse']) :\n    function(s) {\n      var error;\n      if (goog.json.TRY_NATIVE_JSON) {\n        try {\n          return goog.global['JSON']['parse'](s);\n        } catch (ex) {\n          error = ex;\n        }\n      }\n      var o = String(s);\n      if (goog.json.isValid(o)) {\n\n        try {\n          var result = /** @type {?Object} */ (eval('(' + o + ')'));\n          if (error) {\n            goog.json.errorLogger_('Invalid JSON: ' + o, error);\n          }\n          return result;\n        } catch (ex) {\n        }\n      }\n      throw new Error('Invalid JSON string: ' + o);\n    };\n\n\n/**\n * JSON replacer, as defined in Section 15.12.3 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * TODO(nicksantos): Array should also be a valid replacer.\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Replacer;\n\n\n/**\n * JSON reviver, as defined in Section 15.12.2 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Reviver;\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @param {?goog.json.Replacer=} opt_replacer A replacer function\n *     called for each (key, value) pair that determines how the value\n *     should be serialized. By defult, this just returns the value\n *     and allows default serialization to kick in.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.serialize = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*, ?goog.json.Replacer=):string} */\n    (goog.global['JSON']['stringify']) :\n    function(object, opt_replacer) {\n      // NOTE(nicksantos): Currently, we never use JSON.stringify.\n      //\n      // The last time I evaluated this, JSON.stringify had subtle bugs and\n      // behavior differences on all browsers, and the performance win was not\n      // large enough to justify all the issues. This may change in the future\n      // as browser implementations get better.\n      //\n      // assertSerialize in json_test contains if branches for the cases\n      // that fail.\n      return new goog.json.Serializer(opt_replacer).serialize(object);\n    };\n\n\n\n/**\n * Class that is used to serialize JSON objects to a string.\n * @param {?goog.json.Replacer=} opt_replacer Replacer.\n * @constructor\n */\ngoog.json.Serializer = function(opt_replacer) {\n  /**\n   * @type {goog.json.Replacer|null|undefined}\n   * @private\n   */\n  this.replacer_ = opt_replacer;\n};\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.Serializer.prototype.serialize = function(object) {\n  var sb = [];\n  this.serializeInternal(object, sb);\n  return sb.join('');\n};\n\n\n/**\n * Serializes a generic value to a JSON string\n * @protected\n * @param {*} object The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @throws Error if there are loops in the object graph.\n */\ngoog.json.Serializer.prototype.serializeInternal = function(object, sb) {\n  if (object == null) {\n    // undefined == null so this branch covers undefined as well as null\n    sb.push('null');\n    return;\n  }\n\n  if (typeof object == 'object') {\n    if (goog.isArray(object)) {\n      this.serializeArray(object, sb);\n      return;\n    } else if (\n        object instanceof String || object instanceof Number ||\n        object instanceof Boolean) {\n      object = object.valueOf();\n      // Fall through to switch below.\n    } else {\n      this.serializeObject_(/** @type {!Object} */ (object), sb);\n      return;\n    }\n  }\n\n  switch (typeof object) {\n    case 'string':\n      this.serializeString_(object, sb);\n      break;\n    case 'number':\n      this.serializeNumber_(object, sb);\n      break;\n    case 'boolean':\n      sb.push(String(object));\n      break;\n    case 'function':\n      sb.push('null');\n      break;\n    default:\n      throw new Error('Unknown type: ' + typeof object);\n  }\n};\n\n\n/**\n * Character mappings used internally for goog.string.quote\n * @private\n * @type {!Object}\n */\ngoog.json.Serializer.charToJsonCharCache_ = {\n  '\\\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  '/': '\\\\/',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n\n  '\\x0B': '\\\\u000b'  // '\\v' is not supported in JScript\n};\n\n\n/**\n * Regular expression used to match characters that need to be replaced.\n * The S60 browser has a bug where unicode characters are not matched by\n * regular expressions. The condition below detects such behaviour and\n * adjusts the regular expression accordingly.\n * @private\n * @type {!RegExp}\n */\ngoog.json.Serializer.charsToReplace_ = /\\uffff/.test('\\uffff') ?\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g :\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\n\n\n/**\n * Serializes a string to a JSON string\n * @private\n * @param {string} s The string to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeString_ = function(s, sb) {\n  // The official JSON implementation does not work with international\n  // characters.\n  sb.push('\"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {\n    // caching the result improves performance by a factor 2-3\n    var rv = goog.json.Serializer.charToJsonCharCache_[c];\n    if (!rv) {\n      rv = '\\\\u' + (c.charCodeAt(0) | 0x10000).toString(16).substr(1);\n      goog.json.Serializer.charToJsonCharCache_[c] = rv;\n    }\n    return rv;\n  }), '\"');\n};\n\n\n/**\n * Serializes a number to a JSON string\n * @private\n * @param {number} n The number to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {\n  sb.push(isFinite(n) && !isNaN(n) ? String(n) : 'null');\n};\n\n\n/**\n * Serializes an array to a JSON string\n * @param {Array<string>} arr The array to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @protected\n */\ngoog.json.Serializer.prototype.serializeArray = function(arr, sb) {\n  var l = arr.length;\n  sb.push('[');\n  var sep = '';\n  for (var i = 0; i < l; i++) {\n    sb.push(sep);\n\n    var value = arr[i];\n    this.serializeInternal(\n        this.replacer_ ? this.replacer_.call(arr, String(i), value) : value,\n        sb);\n\n    sep = ',';\n  }\n  sb.push(']');\n};\n\n\n/**\n * Serializes an object to a JSON string\n * @private\n * @param {!Object} obj The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {\n  sb.push('{');\n  var sep = '';\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var value = obj[key];\n      // Skip functions.\n      if (typeof value != 'function') {\n        sb.push(sep);\n        this.serializeString_(key, sb);\n        sb.push(':');\n\n        this.serializeInternal(\n            this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);\n\n        sep = ',';\n      }\n    }\n  }\n  sb.push('}');\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines utility and helper functions.\n */\n\ngoog.provide('fireauth.util');\n\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.Uri');\ngoog.require('goog.dom');\ngoog.require('goog.events');\ngoog.require('goog.events.EventType');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.json');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.require('goog.window');\n\n\n/** @suppress {duplicate} Suppress variable 'angular' first declared. */\nvar angular;\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfireauth.util.isIe11 = function() {\n  return goog.userAgent.IE &&\n      !!goog.userAgent.DOCUMENT_MODE &&\n      goog.userAgent.DOCUMENT_MODE == 11;\n};\n\n\n/**\n * Checks whether the user agent is IE10.\n * @return {boolean} True if it is IE10.\n */\nfireauth.util.isIe10 = function() {\n  return goog.userAgent.IE &&\n      !!goog.userAgent.DOCUMENT_MODE &&\n      goog.userAgent.DOCUMENT_MODE == 10;\n};\n\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfireauth.util.isEdge = function(userAgent) {\n  return /Edge\\/\\d+/.test(userAgent);\n};\n\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfireauth.util.isLocalStorageNotSynchronized = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return fireauth.util.isIe11() || fireauth.util.isEdge(ua);\n};\n\n\n/** @return {string} The current URL. */\nfireauth.util.getCurrentUrl = function() {\n  return (goog.global['window'] && goog.global['window']['location']['href']) ||\n      // Check for worker environments.\n      (self && self['location'] && self['location']['href']) || '';\n};\n\n\n/**\n * @param {string} requestUri The request URI to send in verifyAssertion\n *     request.\n * @return {string} The sanitized URI, in this case it undoes the hashbang\n *     angularJs routing changes to request URI.\n */\nfireauth.util.sanitizeRequestUri = function(requestUri) {\n  // If AngularJS is included.\n  if (typeof angular != 'undefined') {\n    // Remove hashbang modifications from URL.\n    requestUri = requestUri.replace('#/', '#').replace('#!/', '#');\n  }\n  return requestUri;\n};\n\n\n/**\n * @param {?string} url The target URL. When !url, redirects to a blank page.\n * @param {!Window=} opt_window The optional window to redirect to target URL.\n * @param {boolean=} opt_bypassCheck Whether to bypass check. Used for custom\n *     scheme redirects.\n */\nfireauth.util.goTo = function(url, opt_window, opt_bypassCheck) {\n  var win = opt_window || goog.global['window'];\n  // No URL, redirect to blank page.\n  var finalUrl = 'about:blank';\n  // Popping up a window and then assigning its URL seems to cause some weird\n  // error. Fixed by setting win.location.href for now in IE browsers.\n  // Bug was detected in Edge and IE9.\n  if (url && !opt_bypassCheck) {\n    // We cannot use goog.dom.safe.setLocationHref since it tries to read\n    // popup.location from a different origin, which is an error in IE.\n    // (In Chrome, popup.location is just an empty Location object)\n    finalUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n  }\n  win.location.href = finalUrl;\n};\n\n\n/**\n * @param {string} url The target URL.\n * @param {!Window=} opt_window The optional window to replace with target URL.\n * @param {boolean=} opt_bypassCheck Whether to bypass check. Used for custom\n *     scheme redirects.\n */\nfireauth.util.replaceCurrentUrl = function(url, opt_window, opt_bypassCheck) {\n  var win = opt_window || goog.global['window'];\n  if (!opt_bypassCheck) {\n    win.location.replace(\n        goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url)));\n  } else {\n    win.location.replace(url);\n  }\n};\n\n\n/**\n * Deep comparison of two objects.\n * @param {!Object} a The first object.\n * @param {!Object} b The second object.\n * @return {!Array<string>} The list of keys that are different between both\n *     objects provided.\n */\nfireauth.util.getKeyDiff = function(a, b) {\n  var diff = [];\n  for (var k in a) {\n    if (!(k in b)) {\n      diff.push(k);\n    } else if (typeof a[k] != typeof b[k]) {\n      diff.push(k);\n    } else if (typeof a[k] == 'object' && a[k] != null && b[k] != null) {\n      if (fireauth.util.getKeyDiff(\n          a[k], b[k]).length > 0) {\n        diff.push(k);\n      }\n    } else if (a[k] !== b[k]) {\n      diff.push(k);\n    }\n  }\n  for (var k in b) {\n    if (!(k in a)) {\n      diff.push(k);\n    }\n  }\n  return diff;\n};\n\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {?number} The Chrome version, null if the user agent is not Chrome.\n */\nfireauth.util.getChromeVersion = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  var browserName = fireauth.util.getBrowserName(ua);\n  // Confirm current browser is Chrome.\n  if (browserName != fireauth.util.BrowserName.CHROME) {\n    return null;\n  }\n  var matches = ua.match(/\\sChrome\\/(\\d+)/i);\n  if (matches && matches.length == 2) {\n    return parseInt(matches[1], 10);\n  }\n  return null;\n};\n\n\n/**\n * Detects CORS support.\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} True if the browser supports CORS.\n */\nfireauth.util.supportsCors = function(opt_userAgent) {\n  // Chrome 7 has CORS issues, pick 30 as upper limit.\n  var chromeVersion = fireauth.util.getChromeVersion(opt_userAgent);\n  if (chromeVersion && chromeVersion < 30) {\n    return false;\n  }\n  // Among all other supported browsers, only IE8 and IE9 don't support CORS.\n  return !goog.userAgent.IE || // Not IE.\n      !goog.userAgent.DOCUMENT_MODE || // No document mode == IE Edge.\n      goog.userAgent.DOCUMENT_MODE > 9;\n};\n\n\n/**\n * Detects whether browser is running on a mobile device.\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} True if the browser is running on a mobile device.\n */\nfireauth.util.isMobileBrowser = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  var uaLower = ua.toLowerCase();\n  // TODO: implement getBrowserName equivalent for OS.\n  if (uaLower.match(/android/) ||\n      uaLower.match(/webos/) ||\n      uaLower.match(/iphone|ipad|ipod/) ||\n      uaLower.match(/blackberry/) ||\n      uaLower.match(/windows phone/) ||\n      uaLower.match(/iemobile/)) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Closes the provided window.\n * @param {?Window=} opt_window The optional window to close. The current window\n *     is used if none is provided.\n */\nfireauth.util.closeWindow = function(opt_window) {\n  var win = opt_window || goog.global['window'];\n  // In some browsers, in certain cases after the window closes, as seen in\n  // Samsung Galaxy S3 Android 4.4.2 stock browser, the win object here is an\n  // empty object {}. Try to catch the failure and ignore it.\n  try {\n    win.close();\n  } catch(e) {}\n};\n\n\n/**\n * Opens a popup window.\n * @param {?string=} opt_url initial URL of the popup window\n * @param {string=} opt_name title of the popup\n * @param {?number=} opt_width width of the popup\n * @param {?number=} opt_height height of the popup\n * @return {?Window} Returns the window object that was opened. This returns\n *                   null if a popup blocker prevented the window from being\n *                   opened.\n */\nfireauth.util.popup = function(opt_url, opt_name, opt_width, opt_height) {\n  var width = opt_width || 500;\n  var height = opt_height || 600;\n  var top = (window.screen.availHeight - height) / 2;\n  var left = (window.screen.availWidth - width) / 2;\n  var options = {\n    'width': width,\n    'height': height,\n    'top': top > 0 ? top : 0,\n    'left': left > 0 ? left : 0,\n    'location': true,\n    'resizable': true,\n    'statusbar': true,\n    'toolbar': false\n  };\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  var ua = fireauth.util.getUserAgentString().toLowerCase();\n  if (opt_name) {\n    options['target'] = opt_name;\n    // This will force a new window on each call, achieving the same effect as\n    // passing a random name on each call.\n    if (goog.string.contains(ua, 'crios/')) {\n      options['target'] = '_blank';\n    }\n  }\n  var browserName = fireauth.util.getBrowserName(\n      fireauth.util.getUserAgentString());\n  if (browserName == fireauth.util.BrowserName.FIREFOX) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    opt_url = opt_url || 'http://localhost';\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options['scrollbars'] = true;\n  }\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  var newWin = goog.window.open(opt_url || '', options);\n  if (newWin) {\n    // Flaky on IE edge, encapsulate with a try and catch.\n    try {\n      newWin.focus();\n    } catch (e) {}\n  }\n  return newWin;\n};\n\n\n/**\n * The default value for the popup wait cycle in ms.\n * @const {number}\n * @private\n */\nfireauth.util.POPUP_WAIT_CYCLE_MS_ = 2000;\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the popup requires a delay before closing itself.\n */\nfireauth.util.requiresPopupDelay = function(opt_userAgent) {\n  // TODO: remove this hack when CriOS behavior is fixed in iOS.\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  // Was observed in iOS 10.2 Chrome version 55.0.2883.79.\n  // Apply to Chrome 55+ iOS 10+ to ensure future Chrome versions or iOS 10\n  // minor updates do not suddenly resurface this bug. Revisit this check on\n  // next CriOS update.\n  var matches = ua.match(/OS (\\d+)_.*CriOS\\/(\\d+)\\./i);\n  if (matches && matches.length > 2) {\n    // iOS 10+ && chrome 55+.\n    return parseInt(matches[1], 10) >= 10 && parseInt(matches[2], 10) >= 55;\n  }\n  return false;\n};\n\n\n/**\n * @param {?Window} win The popup window to check.\n * @param {number=} opt_stepDuration The duration of each wait cycle before\n *     checking that window is closed.\n * @return {!goog.Promise<undefined>} The promise to resolve when window is\n *     closed.\n */\nfireauth.util.onPopupClose = function(win, opt_stepDuration) {\n  var stepDuration = opt_stepDuration || fireauth.util.POPUP_WAIT_CYCLE_MS_;\n  return new goog.Promise(function(resolve, reject) {\n    // Function to repeat each stepDuration.\n    var repeat = function() {\n      goog.Timer.promise(stepDuration).then(function() {\n        // After wait, check if window is closed.\n        if (!win || win.closed) {\n          // If so, resolve.\n          resolve();\n        } else {\n          // Call repeat again.\n          return repeat();\n        }\n      });\n    };\n    return repeat();\n  });\n};\n\n\n/**\n * @param {!Array<string>} authorizedDomains List of authorized domains.\n * @param {string} url The URL to check.\n * @return {boolean} Whether the passed domain is an authorized one.\n */\nfireauth.util.isAuthorizedDomain = function(authorizedDomains, url) {\n  var uri = goog.Uri.parse(url);\n  var scheme = uri.getScheme();\n  var domain = uri.getDomain();\n  for (var i = 0; i < authorizedDomains.length; i++) {\n    // Currently this corresponds to: domain.com = *://*.domain.com:* or\n    // exact domain match.\n    // In the case of Chrome extensions, the authorizedDomain will be formatted\n    // as 'chrome-extension://abcdefghijklmnopqrstuvwxyz123456'.\n    // The URL to check must have a chrome extension scheme and the domain\n    // must be an exact match domain == 'abcdefghijklmnopqrstuvwxyz123456'.\n    if (fireauth.util.matchDomain(authorizedDomains[i], domain, scheme)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Represents the dimensions of an entity (width and height).\n * @typedef {{\n *   width: number,\n *   height: number\n * }}\n */\nfireauth.util.Dimensions;\n\n\n/**\n * @param {?Window=} opt_window The optional window whose dimensions are to be\n *     returned. The current window is used if not found.\n * @return {?fireauth.util.Dimensions} The requested window dimensions if\n *     available.\n */\nfireauth.util.getWindowDimensions = function(opt_window) {\n  var win = opt_window || goog.global['window'];\n  if (win && win['innerWidth'] && win['innerHeight']) {\n    return {\n      'width': parseFloat(win['innerWidth']),\n      'height': parseFloat(win['innerHeight'])\n    };\n  }\n  return null;\n};\n\n\n/**\n * RegExp to detect if the domain given is an IP address. This is only used\n * for validating http and https schemes.\n *\n * It does not strictly validate if the IP is a real IP address, but as the\n * matchDomain method tests against a set of valid domains (extracted from the\n * window's current URL), it is sufficient.\n *\n * @const {!RegExp}\n * @private\n */\nfireauth.util.IP_ADDRESS_REGEXP_ = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n\n\n/**\n * @param {string} domainPattern The domain pattern to match.\n * @param {string} domain The domain to check. It is assumed that it is a valid\n *     domain, not a user provided one.\n * @param {string} scheme The scheme of the domain to check.\n * @return {boolean} Whether the provided domain matches the domain pattern.\n */\nfireauth.util.matchDomain = function(domainPattern, domain, scheme) {\n  // Chrome extension matching.\n  if (domainPattern.indexOf('chrome-extension://') == 0) {\n    var chromeExtUri = goog.Uri.parse(domainPattern);\n    // Domain must match and the current scheme must be a Chrome extension.\n    return chromeExtUri.getDomain() == domain && scheme == 'chrome-extension';\n  } else if (scheme != 'http' && scheme != 'https') {\n    // Any other scheme that is not http or https cannot be whitelisted.\n    return false;\n  } else {\n    // domainPattern must not contain a scheme and the current scheme must be\n    // either http or https.\n    // Check if authorized domain pattern is an IP address.\n    if (fireauth.util.IP_ADDRESS_REGEXP_.test(domainPattern)) {\n      // The domain has to be exactly equal to the pattern, as an IP domain will\n      // only contain the IP, no extra character.\n      return domain == domainPattern;\n    }\n    // Dots in pattern should be escaped.\n    var escapedDomainPattern = domainPattern.split('.').join('\\\\.');\n    // Non ip address domains.\n    // domain.com = *.domain.com OR domain.com\n    var re = new RegExp(\n        '^(.+\\\\.' + escapedDomainPattern + '|' +\n        escapedDomainPattern + ')$', 'i');\n    return re.test(domain);\n  }\n};\n\n\n/**\n * RegExp to detect if the email address given is valid.\n * @const {!RegExp}\n * @private\n */\nfireauth.util.EMAIL_ADDRESS_REGEXP_ = /^[^@]+@[^@]+$/;\n\n\n/**\n * Determines if it is a valid email address.\n * @param {*} email The email address.\n * @return {boolean} Whether the email address is valid.\n */\nfireauth.util.isValidEmailAddress = function(email) {\n  return goog.isString(email) &&\n      fireauth.util.EMAIL_ADDRESS_REGEXP_.test(email);\n};\n\n\n/**\n * @return {!goog.Promise<void>} A promise that resolves when DOM is ready.\n */\nfireauth.util.onDomReady = function() {\n  var resolver = null;\n  return new goog.Promise(function(resolve, reject) {\n    var doc = goog.global.document;\n    // If document already loaded, resolve immediately.\n    if (doc.readyState == 'complete') {\n      resolve();\n    } else {\n      // Document not ready, wait for load before resolving.\n      // Save resolver, so we can remove listener in case it was externally\n      // cancelled.\n      resolver = function() {\n        resolve();\n      };\n      goog.events.listenOnce(window, goog.events.EventType.LOAD, resolver);\n    }\n  }).thenCatch(function(error) {\n    // In case this promise was cancelled, make sure it unlistens to load.\n    goog.events.unlisten(window, goog.events.EventType.LOAD, resolver);\n    throw error;\n  });\n};\n\n\n/** @return {boolean} Whether environment supports DOM. */\nfireauth.util.isDOMSupported = function() {\n  return !!goog.global.document;\n};\n\n\n/**\n * The default ondeviceready Cordova timeout in ms.\n * @const {number}\n * @private\n */\nfireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_ = 1000;\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @param {number=} opt_timeout The optional timeout in ms for deviceready\n *     event to resolve.\n * @return {!goog.Promise} A promise that resolves if the current environment is\n *     a Cordova environment.\n */\nfireauth.util.checkIfCordova = function(opt_userAgent, opt_timeout) {\n  // Errors generated are internal and should be converted if needed to\n  // developer facing Firebase errors.\n  // Only supported in Android/iOS environment.\n  if (fireauth.util.isAndroidOrIosFileEnvironment(opt_userAgent)) {\n    return fireauth.util.onDomReady().then(function() {\n      return new goog.Promise(function(resolve, reject) {\n        var doc = goog.global.document;\n        var timeoutId = setTimeout(function() {\n          reject(new Error('Cordova framework is not ready.'));\n        }, opt_timeout || fireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_);\n        // This should resolve immediately after DOM ready.\n        doc.addEventListener('deviceready', function() {\n          clearTimeout(timeoutId);\n          resolve();\n        }, false);\n      });\n    });\n  }\n  return goog.Promise.reject(\n      new Error('Cordova must run in an Android or iOS file scheme.'));\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android file\n *     environment.\n */\nfireauth.util.isAndroidOrIosFileEnvironment = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!(fireauth.util.getCurrentScheme() === 'file:' &&\n            ua.toLowerCase().match(/iphone|ipad|ipod|android/));\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS 7 or 8 browser.\n */\nfireauth.util.isIOS7Or8 = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!(ua.match(/(iPad|iPhone|iPod).*OS 7_\\d/i) ||\n            ua.match(/(iPad|iPhone|iPod).*OS 8_\\d/i));\n};\n\n\n/**\n * @return {boolean} Whether browser is Safari or an iOS browser and page is\n *     embedded in an iframe. Local Storage does not synchronize with an iframe\n *     embedded on a page in a different domain but will still trigger storage\n *     event with storage changes.\n */\nfireauth.util.isSafariLocalStorageNotSynced = function() {\n  var ua = fireauth.util.getUserAgentString();\n  // Safari or iOS browser and embedded in an iframe.\n  if (!fireauth.util.iframeCanSyncWebStorage(ua) && fireauth.util.isIframe()) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {?Window=} opt_win Optional window to check whether it is an iframe.\n *     If not provided, the current window is checked.\n * @return {boolean} Whether web page is running in an iframe.\n */\nfireauth.util.isIframe = function(opt_win) {\n  var win = opt_win || goog.global['window'];\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(win && win != win['top']);\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * @param {?Window=} opt_win Optional window to check whether it has an opener\n *     that is an iframe.\n * @return {boolean} Whether the web page was opened from an iframe.\n */\nfireauth.util.isOpenerAnIframe = function(opt_win) {\n  var win = opt_win || goog.global['window'];\n  try {\n    // Get the opener if available.\n    var opener = win && win['opener'];\n    // Check if the opener is an iframe. If so, return true.\n    // Confirm opener is available, otherwise the current window is checked\n    // instead.\n    return !!(opener && fireauth.util.isIframe(opener));\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * @param {?Object=} opt_global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nfireauth.util.isWorker = function(opt_global) {\n  var scope = opt_global || goog.global;\n  return typeof scope['window'] !== 'object' &&\n         typeof scope['importScripts'] === 'function';\n};\n\n\n/**\n * @param {?Object=} opt_global The optional global scope.\n * @return {boolean} Whether current environment supports fetch API and other\n *     APIs it depends on.\n */\nfireauth.util.isFetchSupported = function(opt_global) {\n  // Required by fetch API calls.\n  var scope = opt_global || goog.global;\n  return typeof scope['fetch'] !== 'undefined' &&\n         typeof scope['Headers'] !== 'undefined' &&\n         typeof scope['Request'] !== 'undefined';\n};\n\n\n/**\n * Enum for the runtime environment.\n * @enum {string}\n */\nfireauth.util.Env = {\n  BROWSER: 'Browser',\n  NODE: 'Node',\n  REACT_NATIVE: 'ReactNative',\n  WORKER: 'Worker'\n};\n\n\n/**\n * @return {!fireauth.util.Env} The current runtime environment.\n */\nfireauth.util.getEnvironment = function() {\n  if (firebase.INTERNAL.hasOwnProperty('reactNative')) {\n    return fireauth.util.Env.REACT_NATIVE;\n  } else if (firebase.INTERNAL.hasOwnProperty('node')) {\n    // browserify seems to keep the process property in some cases even though\n    // the library is browser only. Use this check instead to reliably detect\n    // a Node.js environment.\n    return fireauth.util.Env.NODE;\n  } else if (fireauth.util.isWorker()) {\n    // Worker environment.\n    return fireauth.util.Env.WORKER;\n  }\n  // The default is a browser environment.\n  return fireauth.util.Env.BROWSER;\n};\n\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfireauth.util.isNativeEnvironment = function() {\n  var environment = fireauth.util.getEnvironment();\n  return environment === fireauth.util.Env.REACT_NATIVE ||\n      environment === fireauth.util.Env.NODE;\n};\n\n\n/**\n * The separator for storage keys to concatenate App name and API key.\n * @const {string}\n * @private\n */\nfireauth.util.STORAGE_KEY_SEPARATOR_ = ':';\n\n\n/**\n * @param {string} apiKey The API Key of the app.\n * @param {string} appName The App name.\n * @return {string} The key used for identifying the app owner of the user.\n */\nfireauth.util.createStorageKey = function(apiKey, appName) {\n  return apiKey + fireauth.util.STORAGE_KEY_SEPARATOR_ + appName;\n};\n\n\n/** @return {string} a long random character string. */\nfireauth.util.generateRandomString = function() {\n  return Math.floor(Math.random() * 1000000000).toString();\n};\n\n\n/**\n * Generates a random alpha numeric string.\n * @param {number} numOfChars The number of random characters within the string.\n * @return {string} A string with a specific number of random characters.\n */\nfireauth.util.generateRandomAlphaNumericString = function(numOfChars) {\n  var chars = [];\n  var allowedChars =\n      '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  while (numOfChars > 0) {\n    chars.push(\n        allowedChars.charAt(\n            Math.floor(Math.random() * allowedChars.length)));\n    numOfChars--;\n  }\n  return chars.join('');\n};\n\n\n/**\n * Enums for Browser name.\n * @enum {string}\n */\nfireauth.util.BrowserName = {\n  ANDROID: 'Android',\n  BLACKBERRY: 'Blackberry',\n  EDGE: 'Edge',\n  FIREFOX: 'Firefox',\n  IE: 'IE',\n  IEMOBILE: 'IEMobile',\n  OPERA: 'Opera',\n  OTHER: 'Other',\n  CHROME: 'Chrome',\n  SAFARI: 'Safari',\n  SILK: 'Silk',\n  WEBOS: 'Webos'\n};\n\n\n/**\n * @param {string} userAgent The navigator user agent string.\n * @return {string} The browser name, eg Safari, Firefox, etc.\n */\nfireauth.util.getBrowserName = function(userAgent) {\n  var ua = userAgent.toLowerCase();\n  if (goog.string.contains(ua, 'opera/') ||\n      goog.string.contains(ua, 'opr/') ||\n      goog.string.contains(ua, 'opios/')) {\n    return fireauth.util.BrowserName.OPERA;\n  } else if (goog.string.contains(ua, 'iemobile')) {\n    // Windows phone IEMobile browser.\n    return fireauth.util.BrowserName.IEMOBILE;\n  } else if (goog.string.contains(ua, 'msie') ||\n             goog.string.contains(ua, 'trident/')) {\n    return fireauth.util.BrowserName.IE;\n  } else if (goog.string.contains(ua, 'edge/')) {\n    return fireauth.util.BrowserName.EDGE;\n  } else if (goog.string.contains(ua, 'firefox/')) {\n    return fireauth.util.BrowserName.FIREFOX;\n  } else if (goog.string.contains(ua, 'silk/')) {\n    return fireauth.util.BrowserName.SILK;\n  } else if (goog.string.contains(ua, 'blackberry')) {\n    // Blackberry browser.\n    return fireauth.util.BrowserName.BLACKBERRY;\n  } else if (goog.string.contains(ua, 'webos')) {\n    // WebOS default browser.\n    return fireauth.util.BrowserName.WEBOS;\n  } else if (goog.string.contains(ua, 'safari/') &&\n             !goog.string.contains(ua, 'chrome/') &&\n             !goog.string.contains(ua, 'crios/') &&\n             !goog.string.contains(ua, 'android')) {\n    return fireauth.util.BrowserName.SAFARI;\n  } else if ((goog.string.contains(ua, 'chrome/') ||\n              goog.string.contains(ua, 'crios/')) &&\n             !goog.string.contains(ua, 'edge/')) {\n    return fireauth.util.BrowserName.CHROME;\n  } else if (goog.string.contains(ua, 'android')) {\n    // Android stock browser.\n    return fireauth.util.BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    var re = new RegExp('([a-zA-Z\\\\d\\\\.]+)\\/[a-zA-Z\\\\d\\\\.]*$');\n    var matches = userAgent.match(re);\n    if (matches && matches.length == 2) {\n      return matches[1];\n    }\n  }\n  return fireauth.util.BrowserName.OTHER;\n};\n\n\n/**\n * Enums for client implementation name.\n * @enum {string}\n */\nfireauth.util.ClientImplementation = {\n  JSCORE: 'JsCore',\n  OAUTH_HANDLER: 'Handler',\n  OAUTH_IFRAME: 'Iframe'\n};\n\n\n/**\n * Enums for the framework ID to be logged in RPC header.\n * Future frameworks to possibly add: angularfire, polymerfire, reactfire, etc.\n * @enum {string}.\n */\nfireauth.util.Framework = {\n  // No other framework used.\n  DEFAULT: 'FirebaseCore-web',\n  // Firebase Auth used with FirebaseUI-web.\n  FIREBASEUI: 'FirebaseUI-web'\n};\n\n\n/**\n * @param {!Array<string>} providedFrameworks List of framework ID strings.\n * @return {!Array<!fireauth.util.Framework>} List of supported framework IDs\n *     with no duplicates.\n */\nfireauth.util.getFrameworkIds = function(providedFrameworks) {\n  var frameworkVersion = [];\n  var frameworkSet = {};\n  for (var key in fireauth.util.Framework) {\n    frameworkSet[fireauth.util.Framework[key]] = true;\n  }\n  for (var i = 0; i < providedFrameworks.length; i++) {\n    if (typeof frameworkSet[providedFrameworks[i]] !== 'undefined') {\n      // Delete it from set to prevent duplications.\n      delete frameworkSet[providedFrameworks[i]];\n      frameworkVersion.push(providedFrameworks[i]);\n    }\n  }\n  // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n  // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n  frameworkVersion.sort();\n  return frameworkVersion;\n};\n\n\n/**\n * @param {!fireauth.util.ClientImplementation} clientImplementation The client\n *     implementation.\n * @param {string} clientVersion The client version.\n * @param {?Array<string>=} opt_frameworkVersion The framework version.\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {string} The full client SDK version.\n */\nfireauth.util.getClientVersion = function(clientImplementation, clientVersion,\n    opt_frameworkVersion, opt_userAgent) {\n  var frameworkVersion = fireauth.util.getFrameworkIds(\n      opt_frameworkVersion || []);\n  if (!frameworkVersion.length) {\n    frameworkVersion = [fireauth.util.Framework.DEFAULT];\n  }\n  var environment = fireauth.util.getEnvironment();\n  var reportedEnvironment = '';\n  if (environment === fireauth.util.Env.BROWSER) {\n    // In a browser environment, report the browser name.\n    var userAgent = opt_userAgent || fireauth.util.getUserAgentString();\n    reportedEnvironment = fireauth.util.getBrowserName(userAgent);\n  } else if (environment === fireauth.util.Env.WORKER) {\n    // Technically a worker runs from a browser but we need to differentiate a\n    // worker from a browser.\n    // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n    var userAgent = opt_userAgent || fireauth.util.getUserAgentString();\n    reportedEnvironment = fireauth.util.getBrowserName(userAgent) + '-' +\n        environment;\n  } else {\n    // Otherwise, just report the environment name.\n    reportedEnvironment = environment;\n  }\n  // The format to be followed:\n  // ${browserName}/${clientImplementation}/${clientVersion}/${frameworkVersion}\n  // As multiple Firebase frameworks/libraries can be used, join their IDs with\n  // a comma.\n  return reportedEnvironment + '/' + clientImplementation +\n      '/' + clientVersion + '/' + frameworkVersion.join(',');\n};\n\n\n/**\n * @return {string} The user agent string reported by the environment, or the\n *     empty string if not available.\n */\nfireauth.util.getUserAgentString = function() {\n  return (goog.global['navigator'] && goog.global['navigator']['userAgent']) ||\n      '';\n};\n\n\n/**\n * @param {string} varStrName The variable string name.\n * @param {?Object=} opt_scope The optional scope where to look in. The default\n *     is window.\n * @return {*} The reference if found.\n */\nfireauth.util.getObjectRef = function(varStrName, opt_scope) {\n  var pieces = varStrName.split('.');\n  var last = opt_scope || goog.global;\n  for (var i = 0;\n       i < pieces.length && typeof last == 'object' && last != null;\n       i++) {\n    last = last[pieces[i]];\n  }\n  // Last hasn't reached the end yet, return undefined.\n  if (i != pieces.length) {\n    last = undefined;\n  }\n  return last;\n};\n\n\n/** @return {boolean} Whether web storage is supported. */\nfireauth.util.isWebStorageSupported = function() {\n  try {\n    var storage = goog.global['localStorage'];\n    var key = fireauth.util.generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (fireauth.util.isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return !!goog.global['indexedDB'];\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return fireauth.util.isWorker() && !!goog.global['indexedDB'];\n  }\n  return false;\n};\n\n\n/**\n * This guards against leaking Cordova support before official launch.\n * This field will be removed or updated to return true when the new feature is\n * ready for launch.\n * @return {boolean} Whether Cordova OAuth support is enabled.\n */\nfireauth.util.isCordovaOAuthEnabled = function() {\n  return false;\n};\n\n\n/**\n * @return {boolean} Whether popup and redirect operations are supported in the\n *     current environment.\n */\nfireauth.util.isPopupRedirectSupported = function() {\n  // Popup and redirect are supported in an environment where the container\n  // origin can be securely whitelisted.\n  return (fireauth.util.isHttpOrHttps() ||\n          fireauth.util.isChromeExtension() ||\n          fireauth.util.isAndroidOrIosFileEnvironment()) &&\n         // React Native with remote debugging reports its location.protocol as\n         // http.\n         !fireauth.util.isNativeEnvironment() &&\n         // Local storage has to be supported for browser popup and redirect\n         // operations to work.\n         fireauth.util.isWebStorageSupported() &&\n         // DOM, popups and redirects are not supported within a worker.\n         !fireauth.util.isWorker();\n};\n\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfireauth.util.isHttpOrHttps = function() {\n  return fireauth.util.getCurrentScheme() === 'http:' ||\n       fireauth.util.getCurrentScheme() === 'https:';\n};\n\n\n/** @return {?string} The current URL scheme. */\nfireauth.util.getCurrentScheme = function() {\n  return (goog.global['location'] && goog.global['location']['protocol']) ||\n      null;\n};\n\n\n/**\n * Checks whether the current page is a Chrome extension.\n * @return {boolean} Whether the current page is a Chrome extension.\n */\nfireauth.util.isChromeExtension = function() {\n  return fireauth.util.getCurrentScheme() === 'chrome-extension:';\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the current browser is running in an iOS\n *     environment.\n */\nfireauth.util.isIOS = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!ua.toLowerCase().match(/iphone|ipad|ipod/);\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the current browser is running in an Android\n *     environment.\n */\nfireauth.util.isAndroid = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!ua.toLowerCase().match(/android/);\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the opener of a popup cannot communicate with the\n *     popup while it is in the foreground.\n */\nfireauth.util.runsInBackground = function(opt_userAgent) {\n  // TODO: split this check into 2, one check that opener can access\n  // popup, another check that storage synchronizes between popup and opener.\n  // Popup events fail in iOS version 7 (lowest version we currently support)\n  // browsers. When the popup is triggered, the opener is unable to redirect\n  // the popup url, close the popup and in some cases will miss the storage\n  // event triggered when localStorage is changed.\n  // Extend this to all mobile devices. This behavior is more likely to work\n  // cross mobile platforms.\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  if (fireauth.util.isMobileBrowser(ua)) {\n    return false;\n  } else if (fireauth.util.getBrowserName(ua) ==\n             fireauth.util.BrowserName.FIREFOX) {\n    // Latest version of Firefox 47.0 does not allow you to access properties on\n    // the popup window from the opener.\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Stringifies an object, retuning null if the object is not defined.\n * @param {*} obj The raw object.\n * @return {?string} The JSON-serialized object.\n */\nfireauth.util.stringifyJSON = function(obj) {\n  if (typeof obj === 'undefined') {\n    return null;\n  }\n  return goog.json.serialize(obj);\n};\n\n\n/**\n * @param {!Object} obj The original object.\n * @return {!Object} A copy of the original object with all entries that are\n *     null or undefined removed.\n */\nfireauth.util.copyWithoutNullsOrUndefined = function(obj) {\n  // The processed copy to return.\n  var trimmedObj = {};\n  // Remove all empty fields from data, allow zero and false booleans.\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key) &&\n        obj[key] !== null &&\n        obj[key] !== undefined) {\n      trimmedObj[key] = obj[key];\n    }\n  }\n  return trimmedObj;\n};\n\n\n/**\n * Removes all key/pairs with the specified keys from the given object.\n * @param {!Object} obj The object to process.\n * @param {!Array<string>} keys The list of keys to remove.\n * @return {!Object} The object with the keys removed.\n */\nfireauth.util.removeEntriesWithKeys = function(obj, keys) {\n  // Clone object.\n  var copy = goog.object.clone(obj);\n  // Traverse keys.\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    // If key found in object, remove it.\n    if (key in copy) {\n      delete copy[key];\n    }\n  }\n  // Returned filtered copy.\n  return copy;\n};\n\n\n/**\n * Parses a JSON string, returning undefined if null is passed.\n * @param {?string} json The JSON-serialized object.\n * @return {*} The raw object.\n */\nfireauth.util.parseJSON = function(json) {\n  if (goog.isNull(json)) {\n    return undefined;\n  }\n\n  // Do not use goog.json.parse since it uses eval underneath to support old\n  // browsers that do not provide JSON.parse. The recommended Content Security\n  // Policy does not allow unsafe-eval in some environments like Chrome\n  // extensions. Usage of eval is not recommend in Chrome in general.\n  // Use native parsing instead via JSON.parse. This is provided in our list\n  // of supported browsers.\n  return JSON.parse(json);\n};\n\n\n/**\n * @param {?string=} opt_prefix An optional prefix string to prepend to ID.\n * @return {string} The generated event ID used to identify a generic event.\n */\nfireauth.util.generateEventId = function(opt_prefix) {\n  return opt_prefix ? opt_prefix : '' +\n      Math.floor(Math.random() * 1000000000).toString();\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether an embedded iframe can sync to web storage changes.\n *     Web storage sync fails in Safari desktop browsers and iOS mobile\n *     browsers.\n */\nfireauth.util.iframeCanSyncWebStorage = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  if (fireauth.util.getBrowserName(ua) == fireauth.util.BrowserName.SAFARI ||\n      ua.toLowerCase().match(/iphone|ipad|ipod/)) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfireauth.util.resetUnloadedGapiModules = function() {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  var beacon = goog.global['___jsl'];\n  // Get current hint.\n  if (beacon && beacon['H']) {\n    // Get gapi hint.\n    for (var hint in beacon['H']) {\n      // Requested modules.\n      beacon['H'][hint]['r'] = beacon['H'][hint]['r'] || [];\n      // Loaded modules.\n      beacon['H'][hint]['L'] = beacon['H'][hint]['L'] || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon['H'][hint]['r'] = beacon['H'][hint]['L'].concat();\n      // Clear pending callbacks.\n      if (beacon['CP']) {\n        for (var i = 0; i < beacon['CP'].length; i++) {\n          // Remove all failed pending callbacks.\n          beacon['CP'][i] = null;\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Returns whether the current device is a mobile device. Mobile browsers and\n * React-Native environments are considered mobile devices.\n * @param {?string=} opt_userAgent The optional navigator user agent.\n * @param {?fireauth.util.Env=} opt_env The optional environment.\n * @return {boolean} Whether the current device is a mobile device or not.\n */\nfireauth.util.isMobileDevice = function(opt_userAgent, opt_env) {\n  // Get user agent.\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  // Get environment.\n  var environment = opt_env || fireauth.util.getEnvironment();\n  return fireauth.util.isMobileBrowser(ua) ||\n      environment === fireauth.util.Env.REACT_NATIVE;\n};\n\n\n/**\n * @param {?Object=} opt_navigator The optional navigator object typically used\n *     for testing.\n * @return {boolean} Whether the app is currently online. If offline, false is\n *     returned. If this cannot be determined, true is returned.\n */\nfireauth.util.isOnline = function(opt_navigator) {\n  var navigator = opt_navigator || goog.global['navigator'];\n  if (navigator &&\n      typeof navigator['onLine'] === 'boolean' &&\n      // Apply only for traditional web apps and Chrome extensions.\n      // This is especially true for Cordova apps which have unreliable\n      // navigator.onLine behavior unless cordova-plugin-network-information is\n      // installed which overwrites the native navigator.onLine value and\n      // defines navigator.connection.\n      (fireauth.util.isHttpOrHttps() ||\n       fireauth.util.isChromeExtension() ||\n       typeof navigator['connection'] !== 'undefined')) {\n    return navigator['onLine'];\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n};\n\n\n/**\n * @param {?Object=} opt_navigator The object with navigator data, defaulting\n *     to window.navigator if unspecified.\n * @return {?string} The user's preferred language. Returns null if\n */\nfireauth.util.getUserLanguage = function(opt_navigator) {\n  var navigator = opt_navigator || goog.global['navigator'];\n  if (!navigator) {\n    return null;\n  }\n  return (\n      // Most reliable, but only supported in Chrome/Firefox.\n      navigator['languages'] && navigator['languages'][0] ||\n      // Supported in most browsers, but returns the language of the browser\n      // UI, not the language set in browser settings.\n      navigator['language'] ||\n      // IE <= 10.\n      navigator['userLanguage'] ||\n      // Couldn't determine language.\n      null\n  );\n};\n\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n * @param {number} shortDelay The short delay duration.\n * @param {number} longDelay The long delay duration.\n * @param {?string=} opt_userAgent The optional navigator user agent.\n * @param {?fireauth.util.Env=} opt_env The optional environment.\n * @constructor\n */\nfireauth.util.Delay = function(shortDelay, longDelay, opt_userAgent, opt_env) {\n  // Internal error when improperly initialized.\n  if (shortDelay > longDelay) {\n    throw new Error('Short delay should be less than long delay!');\n  }\n  /**\n   * @private @const {number} The short duration delay used for desktop\n   *     environments.\n   */\n  this.shortDelay_ = shortDelay;\n  /**\n   * @private @const {number} The long duration delay used for mobile\n   *     environments.\n   */\n  this.longDelay_ = longDelay;\n  /** @private @const {boolean} Whether the environment is a mobile one. */\n  this.isMobile_ = fireauth.util.isMobileDevice(opt_userAgent, opt_env);\n};\n\n\n/**\n * The default value for the offline delay timeout in ms.\n * @const {number}\n * @private\n */\nfireauth.util.Delay.OFFLINE_DELAY_MS_ = 5000;\n\n\n/**\n * @return {number} The delay that matches with the current environment.\n */\nfireauth.util.Delay.prototype.get = function() {\n  // navigator.onLine is unreliable in some cases.\n  // Failing hard in those cases may make it impossible to recover for end user.\n  // Waiting for the regular full duration when there is no network can result\n  // in a bad experience.\n  // Instead return a short timeout duration. If there is no network connection,\n  // the user would wait 5 seconds to detect that. If there is a connection\n  // (false alert case), the user still has the ability to try to send the\n  // request. If it fails (timeout too short), they can still retry.\n  if (!fireauth.util.isOnline()) {\n    // Pick the shorter timeout.\n    return Math.min(fireauth.util.Delay.OFFLINE_DELAY_MS_, this.shortDelay_);\n  }\n  // If running in a mobile environment, return the long delay, otherwise\n  // return the short delay.\n  // This could be improved in the future to dynamically change based on other\n  // variables instead of just reading the current environment.\n  return this.isMobile_ ? this.longDelay_ : this.shortDelay_;\n};\n\n\n/**\n * @return {boolean} Whether the app is visible in the foreground. This uses\n *     document.visibilityState. For browsers that do not support it, this is\n *     always true.\n */\nfireauth.util.isAppVisible = function() {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\n  var doc = goog.global.document;\n  // Check if supported.\n  if (doc && typeof doc['visibilityState'] !== 'undefined') {\n    // Check if visible.\n    return doc['visibilityState'] == 'visible';\n  }\n  // API not supported in current browser, default to true.\n  return true;\n};\n\n\n/**\n * @return {!goog.Promise} A promise that resolves when the app is visible in\n *     the foreground.\n */\nfireauth.util.onAppVisible = function() {\n  var doc = goog.global.document;\n  // Visibility change listener reference.\n  var onVisibilityChange = null;\n  if (fireauth.util.isAppVisible() || !doc) {\n    // Visible or non browser environment.\n    return goog.Promise.resolve();\n  } else {\n    // Invisible and in browser environment.\n    return new goog.Promise(function(resolve, reject) {\n      // On visibility change listener.\n      onVisibilityChange = function(event) {\n        // App is visible.\n        if (fireauth.util.isAppVisible()) {\n          // Unregister event listener.\n          doc.removeEventListener(\n              'visibilitychange', onVisibilityChange, false);\n          // Resolve promise.\n          resolve();\n        }\n      };\n      // Listen to visibility change.\n      doc.addEventListener('visibilitychange', onVisibilityChange, false);\n    }).thenCatch(function(error) {\n      // In case this promise was cancelled, make sure it unlistens to\n      // visibilitychange event.\n      doc.removeEventListener('visibilitychange', onVisibilityChange, false);\n      // Rethrow the same error.\n      throw error;\n    });\n  }\n};\n\n\n/**\n * Logs a warning message to the console, if the console is available.\n * @param {string} message\n */\nfireauth.util.consoleWarn = function(message) {\n  if (typeof console !== 'undefined' && typeof console.warn === 'function') {\n    console.warn(message);\n  }\n};\n\n\n/**\n * Parses a UTC time stamp string or number and returns the corresponding UTC\n * date string if valid. Otherwise, returns null.\n * @param {?string|number} utcTimestamp The UTC timestamp number or string.\n * @return {?string} The corresponding UTC date string. Null if invalid.\n */\nfireauth.util.utcTimestampToDateString = function(utcTimestamp) {\n  try {\n    // Convert to date object.\n    var date = new Date(parseInt(utcTimestamp, 10));\n    // Test date is valid.\n    if (!isNaN(date.getTime()) &&\n        // Confirm that utcTimestamp is numeric.\n        goog.string.isNumeric(utcTimestamp)) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. null will be returned.\n  }\n  return null;\n};\n\n\n/** @return {boolean} Whether indexedDB is available. */\nfireauth.util.isIndexedDBAvailable = function() {\n  return !!goog.global['indexedDB'];\n};\n\n\n/** @return {boolean} Whether current mode is Auth handler or iframe. */\nfireauth.util.isAuthHandlerOrIframe = function() {\n  return !!(fireauth.util.getObjectRef('fireauth.oauthhelper', goog.global) ||\n            fireauth.util.getObjectRef('fireauth.iframe', goog.global));\n};\n\n\n/** @return {boolean} Whether indexedDB is used to persist storage. */\nfireauth.util.persistsStorageWithIndexedDB = function() {\n  // This will cover:\n  // IE11, Edge when indexedDB is available (this is unavailable in InPrivate\n  // mode). (SDK, OAuth handler and iframe)\n  // Any environment where indexedDB is available (SDK only).\n\n  // In a browser environment, when an iframe and a popup web storage are not\n  // synchronized, use the indexedDB fireauth.storage.Storage implementation.\n  return (fireauth.util.isLocalStorageNotSynchronized() ||\n          !fireauth.util.isAuthHandlerOrIframe()) &&\n         fireauth.util.isIndexedDBAvailable();\n};\n\n\n/** Sets the no-referrer meta tag in the document head if applicable. */\nfireauth.util.setNoReferrer = function() {\n  var doc = goog.global.document;\n  if (doc) {\n    try {\n      var meta = goog.dom.createDom(goog.dom.TagName.META, {\n        'name': 'referrer',\n        'content': 'no-referrer'\n      });\n      var headCollection = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD);\n      // Append meta tag to head.\n      if (headCollection.length) {\n        headCollection[0].appendChild(meta);\n      }\n    } catch (e) {\n      // Best effort approach.\n    }\n  }\n};\n\n\n/** @return {?ServiceWorker} The servicerWorker controller if available. */\nfireauth.util.getServiceWorkerController = function() {\n  var navigator = goog.global['navigator'];\n  return (navigator &&\n          navigator.serviceWorker &&\n          navigator.serviceWorker.controller) || null;\n};\n\n\n/** @return {?WorkerGlobalScope} The worker global scope if available. */\nfireauth.util.getWorkerGlobalScope = function() {\n  return fireauth.util.isWorker() ? /** @type {!WorkerGlobalScope} */ (self) :\n      null;\n};\n\n/**\n * @return {!goog.Promise<?ServiceWorker>} A promise that resolves with the\n *     service worker. This will resolve only when a service worker becomes\n *     available. If no service worker is supported, it will resolve with null.\n */\nfireauth.util.getActiveServiceWorker = function() {\n  var navigator = goog.global['navigator'];\n  if (navigator && navigator.serviceWorker) {\n    return goog.Promise.resolve()\n        .then(function() {\n          return navigator.serviceWorker.ready;\n        })\n        .then(function(registration) {\n          return /** @type {?ServiceWorker} */ (registration.active || null);\n        })\n        .thenCatch(function(error) {\n          return null;\n        });\n  }\n  return goog.Promise.resolve(/** @type {?ServiceWorker} */ (null));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for window manipulation.\n */\n\n\ngoog.provide('goog.window');\n\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.userAgent');\n\n\n/**\n * Default height for popup windows\n * @type {number}\n */\ngoog.window.DEFAULT_POPUP_HEIGHT = 500;\n\n\n/**\n * Default width for popup windows\n * @type {number}\n */\ngoog.window.DEFAULT_POPUP_WIDTH = 690;\n\n\n/**\n * Default target for popup windows\n * @type {string}\n */\ngoog.window.DEFAULT_POPUP_TARGET = 'google_popup';\n\n\n/**\n * @return {!Window}\n * @suppress {checkTypes}\n * @private\n */\ngoog.window.createFakeWindow_ = function() {\n  return /** @type {!Window} */ ({});\n};\n\n/**\n * Opens a new window.\n *\n * @param {goog.html.SafeUrl|string|Object|null} linkRef If an Object with an 'href'\n *     attribute (such as HTMLAnchorElement) is passed then the value of 'href'\n *     is used, otherwise its toString method is called. Note that if a\n *     string|Object is used, it will be sanitized with SafeUrl.sanitize().\n *\n * @param {?Object=} opt_options supports the following options:\n *  'target': (string) target (window name). If null, linkRef.target will\n *          be used.\n *  'width': (number) window width.\n *  'height': (number) window height.\n *  'top': (number) distance from top of screen\n *  'left': (number) distance from left of screen\n *  'toolbar': (boolean) show toolbar\n *  'scrollbars': (boolean) show scrollbars\n *  'location': (boolean) show location\n *  'statusbar': (boolean) show statusbar\n *  'menubar': (boolean) show menubar\n *  'resizable': (boolean) resizable\n *  'noreferrer': (boolean) whether to attempt to remove the referrer header\n *      from the request headers. Does this by opening a blank window that\n *      then redirects to the target url, so users may see some flickering.\n *\n * @param {?Window=} opt_parentWin Parent window that should be used to open the\n *                 new window.\n *\n * @return {?Window} Returns the window object that was opened. This returns\n *                  null if a popup blocker prevented the window from being\n *                  opened. In case when a new window is opened in a different\n *                  browser sandbox (such as iOS standalone mode), the returned\n *                  object is a emulated Window object that functions as if\n *                  a cross-origin window has been opened.\n */\ngoog.window.open = function(linkRef, opt_options, opt_parentWin) {\n  if (!opt_options) {\n    opt_options = {};\n  }\n  var parentWin = opt_parentWin || window;\n\n  /** @type {!goog.html.SafeUrl} */\n  var safeLinkRef;\n\n  if (linkRef instanceof goog.html.SafeUrl) {\n    safeLinkRef = linkRef;\n  } else {\n    // HTMLAnchorElement has a toString() method with the same behavior as\n    // goog.Uri in all browsers except for Safari, which returns\n    // '[object HTMLAnchorElement]'.  We check for the href first, then\n    // assume that it's a goog.Uri or String otherwise.\n    /**\n     * @type {string|!goog.string.TypedString}\n     * @suppress {missingProperties}\n     */\n    var url =\n        typeof linkRef.href != 'undefined' ? linkRef.href : String(linkRef);\n    safeLinkRef = goog.html.SafeUrl.sanitize(url);\n  }\n\n\n  var target = opt_options.target || linkRef.target;\n\n  var sb = [];\n  for (var option in opt_options) {\n    switch (option) {\n      case 'width':\n      case 'height':\n      case 'top':\n      case 'left':\n        sb.push(option + '=' + opt_options[option]);\n        break;\n      case 'target':\n      case 'noopener':\n      case 'noreferrer':\n        break;\n      default:\n        sb.push(option + '=' + (opt_options[option] ? 1 : 0));\n    }\n  }\n  var optionString = sb.join(',');\n\n  var newWin;\n  if (goog.labs.userAgent.platform.isIos() && parentWin.navigator &&\n      parentWin.navigator['standalone'] && target && target != '_self') {\n    // iOS in standalone mode disregards \"target\" in window.open and always\n    // opens new URL in the same window. The workaround is to create an \"A\"\n    // element and send a click event to it.\n    // Notice that the \"A\" tag does NOT have to be added to the DOM.\n\n    var a = /** @type {!HTMLAnchorElement} */\n        (parentWin.document.createElement(String(goog.dom.TagName.A)));\n    goog.dom.safe.setAnchorHref(a, safeLinkRef);\n\n    a.setAttribute('target', target);\n    if (opt_options['noreferrer']) {\n      a.setAttribute('rel', 'noreferrer');\n    }\n    var click = document.createEvent('MouseEvent');\n    click.initMouseEvent(\n        'click',\n        true,  // canBubble\n        true,  // cancelable\n        parentWin,\n        1);  // detail = mousebutton\n    a.dispatchEvent(click);\n    // New window is not available in this case. Instead, a fake Window object\n    // is returned. In particular, it will have window.document undefined. In\n    // general, it will appear to most of clients as a Window for a different\n    // origin. Since iOS standalone web apps are run in their own sandbox, this\n    // is the most appropriate return value.\n    newWin = goog.window.createFakeWindow_();\n  } else if (opt_options['noreferrer']) {\n    // Use a meta-refresh to stop the referrer from being included in the\n    // request headers. This seems to be the only cross-browser way to\n    // remove the referrer. It also allows for the opener to be set to null\n    // in the new window, thus disallowing the opened window from navigating\n    // its opener.\n    //\n    // Detecting user agent and then using a different strategy per browser\n    // would allow the referrer to leak in case of an incorrect/missing user\n    // agent.\n    //\n    // Also note that we can't use goog.dom.safe.openInWindow here, as it\n    // requires a goog.string.Const 'name' parameter, while we're using plain\n    // strings here for target.\n    newWin = parentWin.open('', target, optionString);\n\n    var sanitizedLinkRef = goog.html.SafeUrl.unwrap(safeLinkRef);\n    if (newWin) {\n      if (goog.userAgent.EDGE_OR_IE) {\n        // IE/EDGE can't parse the content attribute if the url contains\n        // a semicolon. We can fix this by adding quotes around the url, but\n        // then we can't parse quotes in the URL correctly. We take a\n        // best-effort approach.\n        //\n        // If the URL has semicolons, wrap it in single quotes to protect\n        // the semicolons.\n        // If the URL has semicolons and single quotes, url-encode the single\n        // quotes as well.\n        //\n        // This is imperfect. Notice that both ' and ; are reserved characters\n        // in URIs, so this could do the wrong thing, but at least it will\n        // do the wrong thing in only rare cases.\n        // ugh.\n        if (goog.string.contains(sanitizedLinkRef, ';')) {\n          sanitizedLinkRef = \"'\" + sanitizedLinkRef.replace(/'/g, '%27') + \"'\";\n        }\n      }\n      newWin.opener = null;\n\n      // TODO(rjamet): Building proper SafeHtml with SafeHtml.createMetaRefresh\n      // pulls in a lot of compiled code, which is composed of various unneeded\n      // goog.html parts such as SafeStyle.create among others. So, for now,\n      // keep the unchecked conversion until we figure out how to make the\n      // dependencies of createSafeHtmlTagSecurityPrivateDoNotAccessOrElse less\n      // heavy.\n      var safeHtml =\n          goog.html.uncheckedconversions\n              .safeHtmlFromStringKnownToSatisfyTypeContract(\n                  goog.string.Const.from(\n                      'b/12014412, meta tag with sanitized URL'),\n                  // The referrer policy meta tag below works around a bug in\n                  // Chrome where the meta-refresh alone fails to clear the\n                  // the referrer under certain circumstances\n                  // (crbug.com/791216).\n                  '<meta name=\"referrer\" content=\"no-referrer\">' +\n                      '<meta http-equiv=\"refresh\" content=\"0; url=' +\n                      goog.string.htmlEscape(sanitizedLinkRef) + '\">');\n      goog.dom.safe.documentWrite(newWin.document, safeHtml);\n      newWin.document.close();\n    }\n  } else {\n    newWin = parentWin.open(\n        goog.html.SafeUrl.unwrap(safeLinkRef), target, optionString);\n    // Passing in 'noopener' into the 'windowFeatures' param of window.open(...)\n    // will yield a feature-deprived browser. This is an known issue, tracked\n    // here: https://github.com/whatwg/html/issues/1902\n    if (newWin && opt_options['noopener']) {\n      newWin.opener = null;\n    }\n  }\n  // newWin is null if a popup blocker prevented the window open.\n  return newWin;\n};\n\n\n/**\n * Opens a new window without any real content in it.\n *\n * This can be used to get around popup blockers if you need to open a window\n * in response to a user event, but need to do asynchronous work to determine\n * the URL to open, and then set the URL later.\n *\n * Example usage:\n *\n * var newWin = goog.window.openBlank('Loading...');\n * setTimeout(\n *     function() {\n *       newWin.location.href = 'http://www.google.com';\n *     }, 100);\n *\n * @param {string=} opt_message String to show in the new window. This string\n *     will be HTML-escaped to avoid XSS issues.\n * @param {?Object=} opt_options Options to open window with.\n *     {@see goog.window.open for exact option semantics}.\n * @param {?Window=} opt_parentWin Parent window that should be used to open the\n *                 new window.\n * @return {?Window} Returns the window object that was opened. This returns\n *                  null if a popup blocker prevented the window from being\n *                  opened.\n */\ngoog.window.openBlank = function(opt_message, opt_options, opt_parentWin) {\n  // Open up a window with the loading message and nothing else.\n  // This will be interpreted as HTML content type with a missing doctype\n  // and html/body tags, but is otherwise acceptable.\n  //\n  // IMPORTANT: The order of escaping is crucial here in order to avoid XSS.\n  // First, HTML-escaping is needed because the result of the JS expression\n  // is evaluated as HTML. Second, JS-string escaping is needed; this avoids\n  // \\u escaping from inserting HTML tags and \\ from escaping the final \".\n  // Finally, URL percent-encoding is done with encodeURI(); this\n  // avoids percent-encoding from bypassing HTML and JS escaping.\n  //\n  // Note: There are other ways the same result could be achieved but the\n  // current behavior was preserved when this code was refactored to use\n  // SafeUrl, in order to avoid breakage.\n  var loadingMessage;\n  if (!opt_message) {\n    loadingMessage = '';\n  } else {\n    loadingMessage =\n        goog.string.escapeString(goog.string.htmlEscape(opt_message));\n  }\n  var url = goog.html.uncheckedconversions\n                .safeUrlFromStringKnownToSatisfyTypeContract(\n                    goog.string.Const.from(\n                        'b/12014412, encoded string in javascript: URL'),\n                    'javascript:\"' + encodeURI(loadingMessage) + '\"');\n  return /** @type {?Window} */ (\n      goog.window.open(url, opt_options, opt_parentWin));\n};\n\n\n/**\n * Raise a help popup window, defaulting to \"Google standard\" size and name.\n *\n * (If your project is using GXPs, consider using {@link PopUpLink.gxp}.)\n *\n* @param {?goog.html.SafeUrl|string|?Object} linkRef If an Object with an 'href'\n *     attribute (such as HTMLAnchorElement) is passed then the value of 'href'\n *     is used, otherwise  otherwise its toString method is called. Note that\n *     if a string|Object is used, it will be sanitized with SafeUrl.sanitize().\n *\n * @param {?Object=} opt_options Options to open window with.\n *     {@see goog.window.open for exact option semantics}\n *     Additional wrinkles to the options:\n *     - if 'target' field is null, linkRef.target will be used. If *that's*\n *     null, the default is \"google_popup\".\n *     - if 'width' field is not specified, the default is 690.\n *     - if 'height' field is not specified, the default is 500.\n *\n * @return {boolean} true if the window was not popped up, false if it was.\n */\ngoog.window.popup = function(linkRef, opt_options) {\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  // set default properties\n  opt_options['target'] = opt_options['target'] || linkRef['target'] ||\n      goog.window.DEFAULT_POPUP_TARGET;\n  opt_options['width'] =\n      opt_options['width'] || goog.window.DEFAULT_POPUP_WIDTH;\n  opt_options['height'] =\n      opt_options['height'] || goog.window.DEFAULT_POPUP_HEIGHT;\n\n  var newWin = goog.window.open(linkRef, opt_options);\n  if (!newWin) {\n    return true;\n  }\n  newWin.focus();\n\n  return false;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent platform detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on browser brand, rendering engine, or device see the\n * other sub-namespaces in goog.labs.userAgent (browser, engine, and device\n * respectively).\n *\n */\n\ngoog.provide('goog.labs.userAgent.platform');\n\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.string');\n\n\n/**\n * @return {boolean} Whether the platform is Android.\n */\ngoog.labs.userAgent.platform.isAndroid = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Android');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPod.\n */\ngoog.labs.userAgent.platform.isIpod = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPod');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPhone.\n */\ngoog.labs.userAgent.platform.isIphone = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPhone') &&\n      !goog.labs.userAgent.util.matchUserAgent('iPod') &&\n      !goog.labs.userAgent.util.matchUserAgent('iPad');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPad.\n */\ngoog.labs.userAgent.platform.isIpad = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPad');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iOS.\n */\ngoog.labs.userAgent.platform.isIos = function() {\n  return goog.labs.userAgent.platform.isIphone() ||\n      goog.labs.userAgent.platform.isIpad() ||\n      goog.labs.userAgent.platform.isIpod();\n};\n\n\n/**\n * @return {boolean} Whether the platform is Mac.\n */\ngoog.labs.userAgent.platform.isMacintosh = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Macintosh');\n};\n\n\n/**\n * Note: ChromeOS is not considered to be Linux as it does not report itself\n * as Linux in the user agent string.\n * @return {boolean} Whether the platform is Linux.\n */\ngoog.labs.userAgent.platform.isLinux = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Linux');\n};\n\n\n/**\n * @return {boolean} Whether the platform is Windows.\n */\ngoog.labs.userAgent.platform.isWindows = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Windows');\n};\n\n\n/**\n * @return {boolean} Whether the platform is ChromeOS.\n */\ngoog.labs.userAgent.platform.isChromeOS = function() {\n  return goog.labs.userAgent.util.matchUserAgent('CrOS');\n};\n\n/**\n * @return {boolean} Whether the platform is Chromecast.\n */\ngoog.labs.userAgent.platform.isChromecast = function() {\n  return goog.labs.userAgent.util.matchUserAgent('CrKey');\n};\n\n/**\n * The version of the platform. We only determine the version for Windows,\n * Mac, and Chrome OS. It doesn't make much sense on Linux. For Windows, we only\n * look at the NT version. Non-NT-based versions (e.g. 95, 98, etc.) are given\n * version 0.0.\n *\n * @return {string} The platform version or empty string if version cannot be\n *     determined.\n */\ngoog.labs.userAgent.platform.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  var version = '', re;\n  if (goog.labs.userAgent.platform.isWindows()) {\n    re = /Windows (?:NT|Phone) ([0-9.]+)/;\n    var match = re.exec(userAgentString);\n    if (match) {\n      version = match[1];\n    } else {\n      version = '0.0';\n    }\n  } else if (goog.labs.userAgent.platform.isIos()) {\n    re = /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/;\n    var match = re.exec(userAgentString);\n    // Report the version as x.y.z and not x_y_z\n    version = match && match[1].replace(/_/g, '.');\n  } else if (goog.labs.userAgent.platform.isMacintosh()) {\n    re = /Mac OS X ([0-9_.]+)/;\n    var match = re.exec(userAgentString);\n    // Note: some old versions of Camino do not report an OSX version.\n    // Default to 10.\n    version = match ? match[1].replace(/_/g, '.') : '10';\n  } else if (goog.labs.userAgent.platform.isAndroid()) {\n    re = /Android\\s+([^\\);]+)(\\)|;)/;\n    var match = re.exec(userAgentString);\n    version = match && match[1];\n  } else if (goog.labs.userAgent.platform.isChromeOS()) {\n    re = /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/;\n    var match = re.exec(userAgentString);\n    version = match && match[1];\n  }\n  return version || '';\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n */\ngoog.labs.userAgent.platform.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.platform.getVersion(), version) >= 0;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Type-safe wrappers for unsafe DOM APIs.\n *\n * This file provides type-safe wrappers for DOM APIs that can result in\n * cross-site scripting (XSS) vulnerabilities, if the API is supplied with\n * untrusted (attacker-controlled) input.  Instead of plain strings, the type\n * safe wrappers consume values of types from the goog.html package whose\n * contract promises that values are safe to use in the corresponding context.\n *\n * Hence, a program that exclusively uses the wrappers in this file (i.e., whose\n * only reference to security-sensitive raw DOM APIs are in this file) is\n * guaranteed to be free of XSS due to incorrect use of such DOM APIs (modulo\n * correctness of code that produces values of the respective goog.html types,\n * and absent code that violates type safety).\n *\n * For example, assigning to an element's .innerHTML property a string that is\n * derived (even partially) from untrusted input typically results in an XSS\n * vulnerability. The type-safe wrapper goog.dom.safe.setInnerHtml consumes a\n * value of type goog.html.SafeHtml, whose contract states that using its values\n * in a HTML context will not result in XSS. Hence a program that is free of\n * direct assignments to any element's innerHTML property (with the exception of\n * the assignment to .innerHTML in this file) is guaranteed to be free of XSS\n * due to assignment of untrusted strings to the innerHTML property.\n */\n\ngoog.provide('goog.dom.safe');\ngoog.provide('goog.dom.safe.InsertAdjacentHtmlPosition');\n\ngoog.require('goog.asserts');\ngoog.require('goog.dom.asserts');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\n\n\n/** @enum {string} */\ngoog.dom.safe.InsertAdjacentHtmlPosition = {\n  AFTERBEGIN: 'afterbegin',\n  AFTEREND: 'afterend',\n  BEFOREBEGIN: 'beforebegin',\n  BEFOREEND: 'beforeend'\n};\n\n\n/**\n * Inserts known-safe HTML into a Node, at the specified position.\n * @param {!Node} node The node on which to call insertAdjacentHTML.\n * @param {!goog.dom.safe.InsertAdjacentHtmlPosition} position Position where\n *     to insert the HTML.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to insert.\n */\ngoog.dom.safe.insertAdjacentHtml = function(node, position, html) {\n  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));\n};\n\n\n/**\n * Tags not allowed in goog.dom.safe.setInnerHtml.\n * @private @const {!Object<string, boolean>}\n */\ngoog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {\n  'MATH': true,\n  'SCRIPT': true,\n  'STYLE': true,\n  'SVG': true,\n  'TEMPLATE': true\n};\n\n\n/**\n * Assigns known-safe HTML to an element's innerHTML property.\n * @param {!Element} elem The element whose innerHTML is to be assigned to.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to assign.\n * @throws {Error} If called with one of these tags: math, script, style, svg,\n *     template.\n */\ngoog.dom.safe.setInnerHtml = function(elem, html) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var tagName = elem.tagName.toUpperCase();\n    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {\n      throw new Error(\n          'goog.dom.safe.setInnerHtml cannot be used to set content of ' +\n          elem.tagName + '.');\n    }\n  }\n  elem.innerHTML = goog.html.SafeHtml.unwrap(html);\n};\n\n\n/**\n * Assigns known-safe HTML to an element's outerHTML property.\n * @param {!Element} elem The element whose outerHTML is to be assigned to.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to assign.\n */\ngoog.dom.safe.setOuterHtml = function(elem, html) {\n  elem.outerHTML = goog.html.SafeHtml.unwrap(html);\n};\n\n\n/**\n * Safely assigns a URL a form element's action property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setFormElementAction(formEl, url);\n * which is a safe alternative to\n *   formEl.action = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!Element} form The form element whose action property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setFormElementAction = function(form, url) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLFormElement(form).action =\n      goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Safely assigns a URL to a button element's formaction property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setButtonFormAction(buttonEl, url);\n * which is a safe alternative to\n *   buttonEl.action = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!Element} button The button element whose action property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setButtonFormAction = function(button, url) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction =\n      goog.html.SafeUrl.unwrap(safeUrl);\n};\n/**\n * Safely assigns a URL to an input element's formaction property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setInputFormAction(inputEl, url);\n * which is a safe alternative to\n *   inputEl.action = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!Element} input The input element whose action property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setInputFormAction = function(input, url) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLInputElement(input).formAction =\n      goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Sets the given element's style property to the contents of the provided\n * SafeStyle object.\n * @param {!Element} elem\n * @param {!goog.html.SafeStyle} style\n */\ngoog.dom.safe.setStyle = function(elem, style) {\n  elem.style.cssText = goog.html.SafeStyle.unwrap(style);\n};\n\n\n/**\n * Writes known-safe HTML to a document.\n * @param {!Document} doc The document to be written to.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to assign.\n */\ngoog.dom.safe.documentWrite = function(doc, html) {\n  doc.write(goog.html.SafeHtml.unwrap(html));\n};\n\n\n/**\n * Safely assigns a URL to an anchor element's href property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setAnchorHref(anchorEl, url);\n * which is a safe alternative to\n *   anchorEl.href = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!HTMLAnchorElement} anchor The anchor element whose href property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setAnchorHref = function(anchor, url) {\n  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n\n/**\n * Safely assigns a URL to an image element's src property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * image's src property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * @param {!HTMLImageElement} imageElement The image element whose src property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setImageSrc = function(imageElement, url) {\n  goog.dom.asserts.assertIsHTMLImageElement(imageElement);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Safely assigns a URL to a video element's src property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * video's src property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * @param {!HTMLVideoElement} videoElement The video element whose src property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setVideoSrc = function(videoElement, url) {\n  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  videoElement.src = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Safely assigns a URL to an embed element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setEmbedSrc(embedEl, url);\n * which is a safe alternative to\n *   embedEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLEmbedElement} embed The embed element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setEmbedSrc = function(embed, url) {\n  goog.dom.asserts.assertIsHTMLEmbedElement(embed);\n  embed.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a URL to a frame element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setFrameSrc(frameEl, url);\n * which is a safe alternative to\n *   frameEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLFrameElement} frame The frame element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setFrameSrc = function(frame, url) {\n  goog.dom.asserts.assertIsHTMLFrameElement(frame);\n  frame.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a URL to an iframe element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setIframeSrc(iframeEl, url);\n * which is a safe alternative to\n *   iframeEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLIFrameElement} iframe The iframe element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setIframeSrc = function(iframe, url) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns HTML to an iframe element's srcdoc property.\n *\n * Example usage:\n *   goog.dom.safe.setIframeSrcdoc(iframeEl, safeHtml);\n * which is a safe alternative to\n *   iframeEl.srcdoc = html;\n * The latter can result in loading untrusted code.\n *\n * @param {!HTMLIFrameElement} iframe The iframe element whose srcdoc property\n *     is to be assigned to.\n * @param {!goog.html.SafeHtml} html The HTML to assign.\n */\ngoog.dom.safe.setIframeSrcdoc = function(iframe, html) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.srcdoc = goog.html.SafeHtml.unwrap(html);\n};\n\n\n/**\n * Safely sets a link element's href and rel properties. Whether or not\n * the URL assigned to href has to be a goog.html.TrustedResourceUrl\n * depends on the value of the rel property. If rel contains \"stylesheet\"\n * then a TrustedResourceUrl is required.\n *\n * Example usage:\n *   goog.dom.safe.setLinkHrefAndRel(linkEl, url, 'stylesheet');\n * which is a safe alternative to\n *   linkEl.rel = 'stylesheet';\n *   linkEl.href = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLLinkElement} link The link element whose href property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl|!goog.html.TrustedResourceUrl} url The URL\n *     to assign to the href property. Must be a TrustedResourceUrl if the\n *     value assigned to rel contains \"stylesheet\". A string value is\n *     sanitized with goog.html.SafeUrl.sanitize.\n * @param {string} rel The value to assign to the rel property.\n * @throws {Error} if rel contains \"stylesheet\" and url is not a\n *     TrustedResourceUrl\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {\n  goog.dom.asserts.assertIsHTMLLinkElement(link);\n  link.rel = rel;\n  if (goog.string.caseInsensitiveContains(rel, 'stylesheet')) {\n    goog.asserts.assert(\n        url instanceof goog.html.TrustedResourceUrl,\n        'URL must be TrustedResourceUrl because \"rel\" contains \"stylesheet\"');\n    link.href = goog.html.TrustedResourceUrl.unwrap(url);\n  } else if (url instanceof goog.html.TrustedResourceUrl) {\n    link.href = goog.html.TrustedResourceUrl.unwrap(url);\n  } else if (url instanceof goog.html.SafeUrl) {\n    link.href = goog.html.SafeUrl.unwrap(url);\n  } else {  // string\n    // SafeUrl.sanitize must return legitimate SafeUrl when passed a string.\n    link.href =\n        goog.html.SafeUrl.sanitizeAssertUnchanged(url).getTypedStringValue();\n  }\n};\n\n\n/**\n * Safely assigns a URL to an object element's data property.\n *\n * Example usage:\n *   goog.dom.safe.setObjectData(objectEl, url);\n * which is a safe alternative to\n *   objectEl.data = url;\n * The latter can result in loading untrusted code unless setit is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLObjectElement} object The object element whose data property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setObjectData = function(object, url) {\n  goog.dom.asserts.assertIsHTMLObjectElement(object);\n  object.data = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a URL to a script element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setScriptSrc(scriptEl, url);\n * which is a safe alternative to\n *   scriptEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLScriptElement} script The script element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setScriptSrc = function(script, url) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a value to a script element's content.\n *\n * Example usage:\n *   goog.dom.safe.setScriptContent(scriptEl, content);\n * which is a safe alternative to\n *   scriptEl.text = content;\n * The latter can result in executing untrusted code unless it is ensured that\n * the code is loaded from a trustworthy resource.\n *\n * @param {!HTMLScriptElement} script The script element whose content is being\n *     set.\n * @param {!goog.html.SafeScript} content The content to assign.\n */\ngoog.dom.safe.setScriptContent = function(script, content) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.text = goog.html.SafeScript.unwrap(content);\n};\n\n\n/**\n * Safely assigns a URL to a Location object's href property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * loc's href property.  If url is of type string however, it is first sanitized\n * using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setLocationHref(document.location, redirectUrl);\n * which is a safe alternative to\n *   document.location.href = redirectUrl;\n * The latter can result in XSS vulnerabilities if redirectUrl is a\n * user-/attacker-controlled value.\n *\n * @param {!Location} loc The Location object whose href property is to be\n *     assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setLocationHref = function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.href = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n\n/**\n * Safely replaces the URL of a Location object.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and\n * passed to Location#replace. If url is of type string however, it is\n * first sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.replaceHref(document.location, newUrl);\n * which is a safe alternative to\n *   document.location.replace(newUrl);\n * The latter can result in XSS vulnerabilities if newUrl is a\n * user-/attacker-controlled value.\n *\n * @param {!Location} loc The Location object which is to be replaced.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.replaceLocation = function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));\n};\n\n\n/**\n * Safely opens a URL in a new window (via window.open).\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and passed in to\n * window.open.  If url is of type string however, it is first sanitized\n * using goog.html.SafeUrl.sanitize.\n *\n * Note that this function does not prevent leakages via the referer that is\n * sent by window.open. It is advised to only use this to open 1st party URLs.\n *\n * Example usage:\n *   goog.dom.safe.openInWindow(url);\n * which is a safe alternative to\n *   window.open(url);\n * The latter can result in XSS vulnerabilities if redirectUrl is a\n * user-/attacker-controlled value.\n *\n * @param {string|!goog.html.SafeUrl} url The URL to open.\n * @param {Window=} opt_openerWin Window of which to call the .open() method.\n *     Defaults to the global window.\n * @param {!goog.string.Const=} opt_name Name of the window to open in. Can be\n *     _top, etc as allowed by window.open().\n * @param {string=} opt_specs Comma-separated list of specifications, same as\n *     in window.open().\n * @param {boolean=} opt_replace Whether to replace the current entry in browser\n *     history, same as in window.open().\n * @return {Window} Window the url was opened in.\n */\ngoog.dom.safe.openInWindow = function(\n    url, opt_openerWin, opt_name, opt_specs, opt_replace) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  var win = opt_openerWin || window;\n  return win.open(\n      goog.html.SafeUrl.unwrap(safeUrl),\n      // If opt_name is undefined, simply passing that in to open() causes IE to\n      // reuse the current window instead of opening a new one. Thus we pass ''\n      // in instead, which according to spec opens a new window. See\n      // https://html.spec.whatwg.org/multipage/browsers.html#dom-open .\n      opt_name ? goog.string.Const.unwrap(opt_name) : '', opt_specs,\n      opt_replace);\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Unchecked conversions to create values of goog.html types from\n * plain strings.  Use of these functions could potentially result in instances\n * of goog.html types that violate their type contracts, and hence result in\n * security vulnerabilties.\n *\n * Therefore, all uses of the methods herein must be carefully security\n * reviewed.  Avoid use of the methods in this file whenever possible; instead\n * prefer to create instances of goog.html types using inherently safe builders\n * or template systems.\n */\n\n\ngoog.provide('goog.html.uncheckedconversions');\n\ngoog.require('goog.asserts');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeHtml from a plain string that is\n * known to satisfy the SafeHtml type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `html` satisfies the SafeHtml type contract in all\n * possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} html A string that is claimed to adhere to the SafeHtml\n *     contract.\n * @param {?goog.i18n.bidi.Dir=} opt_dir The optional directionality of the\n *     SafeHtml to be constructed. A null or undefined value signifies an\n *     unknown directionality.\n * @return {!goog.html.SafeHtml} The value of html, wrapped in a SafeHtml\n *     object.\n */\ngoog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract =\n    function(justification, html, opt_dir) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      html, opt_dir || null);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeScript from a plain string that is\n * known to satisfy the SafeScript type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `script` satisfies the SafeScript type contract in\n * all possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} script The string to wrap as a SafeScript.\n * @return {!goog.html.SafeScript} The value of `script`, wrapped in a\n *     SafeScript object.\n */\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract =\n    function(justification, script) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\n      script);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeStyle from a plain string that is\n * known to satisfy the SafeStyle type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `style` satisfies the SafeStyle type contract in all\n * possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} style The string to wrap as a SafeStyle.\n * @return {!goog.html.SafeStyle} The value of `style`, wrapped in a\n *     SafeStyle object.\n */\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract =\n    function(justification, style) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\n      style);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeStyleSheet from a plain string\n * that is known to satisfy the SafeStyleSheet type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `styleSheet` satisfies the SafeStyleSheet type\n * contract in all possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} styleSheet The string to wrap as a SafeStyleSheet.\n * @return {!goog.html.SafeStyleSheet} The value of `styleSheet`, wrapped\n *     in a SafeStyleSheet object.\n */\ngoog.html.uncheckedconversions\n    .safeStyleSheetFromStringKnownToSatisfyTypeContract = function(\n    justification, styleSheet) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeStyleSheet\n      .createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeUrl from a plain string that is\n * known to satisfy the SafeUrl type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `url` satisfies the SafeUrl type contract in all\n * possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} url The string to wrap as a SafeUrl.\n * @return {!goog.html.SafeUrl} The value of `url`, wrapped in a SafeUrl\n *     object.\n */\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract =\n    function(justification, url) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to TrustedResourceUrl from a plain string\n * that is known to satisfy the TrustedResourceUrl type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `url` satisfies the TrustedResourceUrl type contract\n * in all possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} url The string to wrap as a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} The value of `url`, wrapped in\n *     a TrustedResourceUrl object.\n */\ngoog.html.uncheckedconversions\n    .trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(\n    justification, url) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides utilities for displaying deprecation notices.\n */\ngoog.provide('fireauth.deprecation');\ngoog.provide('fireauth.deprecation.Deprecations');\ngoog.require('fireauth.util');\n\n\n/**\n * An enum of valid notices to display. All deprecation notices must be in this\n * enum. Deprecation messages should be unique and provide the full context\n * of what is deprecated (e.g. the fully qualified path to a method).\n * @enum {string}\n */\nfireauth.deprecation.Deprecations = {\n  CREATE_USER_WITH_EMAIL_AND_PASSWORD: 'firebase.auth.Auth.prototype.createUs' +\n      'erAndRetrieveDataWithEmailAndPassword is deprecated. Please use fireba' +\n      'se.auth.Auth.prototype.createUserWithEmailAndPassword instead.',\n  FETCH_PROVIDERS_FOR_EMAIL: 'firebase.auth.Auth.prototype.fetchProvidersForE' +\n      'mail is deprecated. Please use firebase.auth.Auth.prototype.fetchSignI' +\n      'nMethodsForEmail instead.',\n  LINK_WITH_CREDENTIAL: 'firebase.User.prototype.linkWithCredential is deprec' +\n      'ated. Please use firebase.User.prototype.linkAndRetrieveDataWithCreden' +\n      'tial instead.',\n  REAUTH_WITH_CREDENTIAL: 'firebase.User.prototype.reauthenticateWithCredenti' +\n      'al is deprecated. Please use firebase.User.prototype.reauthenticateAnd' +\n      'RetrieveDataWithCredential instead.',\n  SIGN_IN_ANONYMOUSLY: 'firebase.auth.Auth.prototype.signInAnonymouslyAndRetr' +\n      'ieveData is deprecated. Please use firebase.auth.Auth.prototype.signIn' +\n      'Anonymously instead.',\n  SIGN_IN_WITH_CREDENTIAL: 'firebase.auth.Auth.prototype.signInWithCredential' +\n      ' is deprecated. Please use firebase.auth.Auth.prototype.signInAndRetri' +\n      'eveDataWithCredential instead.',\n  SIGN_IN_WITH_CUSTOM_TOKEN: 'firebase.auth.Auth.prototype.signInAndRetrieveD' +\n      'ataWithCustomToken is deprecated. Please use firebase.auth.Auth.protot' +\n      'ype.signInWithCustomToken instead.',\n  SIGN_IN_WITH_EMAIL_AND_PASSWORD: 'firebase.auth.Auth.prototype.signInAndRet' +\n      'rieveDataWithEmailAndPassword is deprecated. Please use firebase.auth.' +\n      'Auth.prototype.signInWithEmailAndPassword instead.'\n};\n\n\n/**\n * Keeps track of notices that were already displayed.\n * @type {!Object<fireauth.deprecation.Deprecations, boolean>}\n * @private\n */\nfireauth.deprecation.shownMessages_ = {};\n\n\n/**\n * Logs a deprecation notice to the developer.\n * @param {!fireauth.deprecation.Deprecations} message\n */\nfireauth.deprecation.log = function(message) {\n  if (fireauth.deprecation.shownMessages_[message]) {\n    return;\n  }\n  fireauth.deprecation.shownMessages_[message] = true;\n  fireauth.util.consoleWarn(message);\n};\n\n\n/**\n * Resets the displayed deprecation notices.\n */\nfireauth.deprecation.resetForTesting = function() {\n  fireauth.deprecation.shownMessages_ =\n      /** @type {!Object<fireauth.deprecation.Deprecations, boolean>} */ ({});\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods for manipulating objects.\n */\n\ngoog.provide('fireauth.object');\n\ngoog.require('fireauth.deprecation');\ngoog.require('fireauth.deprecation.Deprecations');\n\n\n/**\n * Checks whether the defineProperty method allows to change the value of\n * the property.\n * @return {boolean} Whether the defineProperty method allows to change the\n *    value of the property.\n * @private\n */\nfireauth.object.isReadonlyConfigurable_ = function() {\n  // Android 2.3 stock browser doesn't allow to change the value of\n  // a read-only property once defined.\n  try {\n    var obj = {};\n    Object.defineProperty(obj, 'abcd', {\n      configurable: true,\n      enumerable: true,\n      value: 1\n    });\n    Object.defineProperty(obj, 'abcd', {\n      configurable: true,\n      enumerable: true,\n      value: 2\n    });\n    return obj['abcd'] == 2;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * @private {boolean} Whether the defineProperty method allows to change the\n *     value of the property.\n */\nfireauth.object.readonlyConfigurable_ =\n    fireauth.object.isReadonlyConfigurable_();\n\n\n/**\n * Defines a property on an object that is not writable by clients. However, the\n * property can be overwritten within the Firebase library through subsequent\n * calls to setReadonlyProperty.\n *\n * In browsers that do not support read-only properties (notably IE8 and below),\n * fall back to writable properties.\n *\n * @param {!Object} obj The object to which we add the property.\n * @param {string} key The name of the property.\n * @param {*} value The desired value.\n */\nfireauth.object.setReadonlyProperty = function(obj, key, value) {\n  if (fireauth.object.readonlyConfigurable_) {\n    Object.defineProperty(obj, key, {\n      configurable: true,\n      enumerable: true,\n      value: value\n    });\n  } else {\n    obj[key] = value;\n  }\n};\n\n\n/**\n * Defines a deprecated property, which emits a warning if the developer tries\n * to use it.\n *\n * In browsers that do not support getters, we fall back to a normal property\n * with no message.\n *\n * @param {!Object} obj The object to which we add the property.\n * @param {string} key The name of the deprecated property.\n * @param {*} value The desired value.\n * @param {!fireauth.deprecation.Deprecations} deprecationMessage The\n *     deprecation warning to display.\n */\nfireauth.object.setDeprecatedReadonlyProperty = function(obj, key, value,\n    deprecationMessage) {\n  if (fireauth.object.readonlyConfigurable_) {\n    Object.defineProperty(obj, key, {\n      configurable: true,\n      enumerable: true,\n      get: function() {\n        fireauth.deprecation.log(deprecationMessage);\n        return value;\n      }\n    });\n  } else {\n    obj[key] = value;\n  }\n};\n\n\n/**\n * Defines properties on an object that are not writable by clients, equivalent\n * to many calls to setReadonlyProperty.\n * @param {!Object} obj The object to which we add the properties.\n * @param {?Object<string, *>} props An object that maps the keys and values\n *     that we wish to add.\n */\nfireauth.object.setReadonlyProperties = function(obj, props) {\n  if (!props) {\n    return;\n  }\n\n  for (var key in props) {\n    if (props.hasOwnProperty(key)) {\n      fireauth.object.setReadonlyProperty(obj, key, props[key]);\n    }\n  }\n};\n\n\n/**\n * Makes a shallow read-only copy of an object. The writability of any child\n * objects will not be affected.\n * @param {?Object} obj The object that we wish to copy.\n * @return {!Object}\n */\nfireauth.object.makeReadonlyCopy = function(obj) {\n  var output = {};\n  fireauth.object.setReadonlyProperties(output, obj);\n  return output;\n};\n\n\n/**\n * Makes a shallow writable copy of a read-only object. The writability of any\n * child objects will not be affected.\n * @param {?Object} obj The object that we wish to copy.\n * @return {!Object}\n */\nfireauth.object.makeWritableCopy = function(obj) {\n  var output = {};\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      output[key] = obj[key];\n    }\n  }\n  return output;\n};\n\n\n/**\n * Returns true if the all the specified fields are present in obj and are not\n * null, undefined, or the empty string. If the field list is empty, returns\n * true regardless of the value of obj.\n * @param {?Object=} opt_obj The object.\n * @param {?Array<string>=} opt_fields The desired fields of the object.\n * @return {boolean} True if obj has all the specified fields.\n */\nfireauth.object.hasNonEmptyFields = function(opt_obj, opt_fields) {\n  if (!opt_fields || !opt_fields.length) {\n    return true;\n  }\n  if (!opt_obj) {\n    return false;\n  }\n  for (var i = 0; i < opt_fields.length; i++) {\n    var field = opt_obj[opt_fields[i]];\n    if (field === undefined || field === null || field === '') {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Traverses the specified object and creates a read-only deep copy of it.\n * This will fail when circular references are contained within the object.\n * @param {*} obj The object to make a read-only copy from.\n * @return {*} A Read-only copy of the obj specified.\n */\nfireauth.object.unsafeCreateReadOnlyCopy = function(obj) {\n  var copy = obj;\n  if (typeof obj == 'object' && obj != null) {\n    // Make the right type of copy.\n    copy = 'length' in obj ? [] : {};\n    // Make a deep copy.\n    for (var key in obj) {\n      fireauth.object.setReadonlyProperty(\n          copy, key, fireauth.object.unsafeCreateReadOnlyCopy(obj[key]));\n    }\n  }\n  // Return the copy.\n  return copy;\n};\n\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the firebase.auth.ActionCodeInfo class that is returned\n * when calling checkActionCode API and is populated from the server response\n * directly.\n */\n\ngoog.provide('fireauth.ActionCodeInfo');\n\ngoog.require('fireauth.object');\n\n\n/**\n * Constructs the action code info object which provides metadata corresponding\n * to action codes. This includes the type of operation (RESET_PASSWORD,\n * VERIFY_EMAIL and RECOVER_EMAIL), the email corresponding to the operation\n * and in case of the recover email flow, the old and new email.\n * @param {!Object} response The server response for checkActionCode.\n * @constructor\n */\nfireauth.ActionCodeInfo = function(response) {\n  var data = {};\n  // Original email for email change revocation.\n  var email = response[fireauth.ActionCodeInfo.ServerFieldName.EMAIL];\n  // The new email.\n  var newEmail = response[fireauth.ActionCodeInfo.ServerFieldName.NEW_EMAIL];\n  var operation =\n      response[fireauth.ActionCodeInfo.ServerFieldName.REQUEST_TYPE];\n  // Email could be empty only if the request type is EMAIL_SIGNIN.\n  if (!operation ||\n      (operation != fireauth.ActionCodeInfo.RequestType.EMAIL_SIGNIN &&\n      !email)) {\n    // This is internal only.\n    throw new Error('Invalid provider user info!');\n  }\n  data[fireauth.ActionCodeInfo.DataField.FROM_EMAIL] = newEmail || null;\n  data[fireauth.ActionCodeInfo.DataField.EMAIL] = email || null;\n  fireauth.object.setReadonlyProperty(\n      this,\n      fireauth.ActionCodeInfo.PropertyName.OPERATION,\n      operation);\n  fireauth.object.setReadonlyProperty(\n      this,\n      fireauth.ActionCodeInfo.PropertyName.DATA,\n      fireauth.object.unsafeCreateReadOnlyCopy(data));\n};\n\n\n/**\n * Firebase Auth Action Code Info requestType possible values.\n * @enum {string}\n */\nfireauth.ActionCodeInfo.RequestType = {\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  RECOVER_EMAIL: 'RECOVER_EMAIL',\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n};\n\n\n/**\n * The checkActionCode endpoint server response field names.\n * @enum {string}\n */\nfireauth.ActionCodeInfo.ServerFieldName = {\n  // This is the current email of the account and in email recovery, the email\n  // to revert to.\n  EMAIL: 'email',\n  // For email recovery, this is the new email.\n  NEW_EMAIL: 'newEmail',\n  // The action code request type.\n  REQUEST_TYPE: 'requestType'\n};\n\n\n/**\n * The ActionCodeInfo data object field names.\n * @enum {string}\n */\nfireauth.ActionCodeInfo.DataField = {\n  EMAIL: 'email',\n  FROM_EMAIL: 'fromEmail'\n};\n\n\n/**\n * The ActionCodeInfo main property names\n * @enum {string}\n */\nfireauth.ActionCodeInfo.PropertyName = {\n  DATA: 'data',\n  OPERATION: 'operation'\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines developer-visible errors for Firebase Auth APIs.\n */\n\n\ngoog.provide('fireauth.AuthError');\ngoog.provide('fireauth.authenum');\ngoog.provide('fireauth.authenum.Error');\n\n\n\n/**\n * Error that can be returned to the developer.\n * @param {!fireauth.authenum.Error} code The short error code.\n * @param {?string=} opt_message The human-readable message.\n * @constructor\n * @extends {Error}\n */\nfireauth.AuthError = function(code, opt_message) {\n  this['code'] = fireauth.AuthError.ERROR_CODE_PREFIX + code;\n  this.message = opt_message || fireauth.AuthError.MESSAGES_[code] || '';\n};\ngoog.inherits(fireauth.AuthError, Error);\n\n\n/**\n * @return {!Object} The plain object form of the error.\n */\nfireauth.AuthError.prototype.toPlainObject = function() {\n  return {\n    'code': this['code'],\n    'message': this.message\n  };\n};\n\n\n/**\n * @return {!Object} The plain object form of the error. This is used by\n *     JSON.toStringify() to return the stringified representation of the error;\n * @override\n */\nfireauth.AuthError.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // an auth error instance.\n  return this.toPlainObject();\n};\n\n\n/**\n * @param {?Object|undefined} response The object response to convert to a\n *     fireauth.AuthError.\n * @return {?fireauth.AuthError} The error representation of the response.\n */\nfireauth.AuthError.fromPlainObject = function(response) {\n  var fullCode = response && response['code'];\n  if (fullCode) {\n    // Remove prefix from name.\n    var code = fullCode.substring(\n        fireauth.AuthError.ERROR_CODE_PREFIX.length);\n    return new fireauth.AuthError(\n        /** @type {fireauth.authenum.Error} */ (code), response['message']);\n  }\n  return null;\n};\n\n\n/**\n * Takes in an error and translates a specific error code to another one if\n * found in the current error.\n * @param {*} error The error thrown.\n * @param {!fireauth.authenum.Error} fromCode The error code to translate from.\n * @param {!fireauth.authenum.Error} toCode The error code to translate to.\n * @return {*} The mapped error message.\n */\nfireauth.AuthError.translateError = function(error, fromCode, toCode) {\n  if (error &&\n      error['code'] &&\n      error['code'] == fireauth.AuthError.ERROR_CODE_PREFIX + fromCode) {\n    // Translate the error to the new one.\n    return new fireauth.AuthError(toCode);\n  }\n  // Return the same error if the fromCode is not found.\n  return error;\n};\n\n\n/**\n * The error prefix for fireauth.Auth errors.\n * @protected {string}\n */\nfireauth.AuthError.ERROR_CODE_PREFIX = 'auth/';\n\n\n/**\n * Developer facing Firebase Auth error codes.\n * @enum {string}\n */\nfireauth.authenum.Error = {\n  ARGUMENT_ERROR: 'argument-error',\n  APP_NOT_AUTHORIZED: 'app-not-authorized',\n  APP_NOT_INSTALLED: 'app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'captcha-check-failed',\n  CODE_EXPIRED: 'code-expired',\n  CORDOVA_NOT_READY: 'cordova-not-ready',\n  CORS_UNSUPPORTED: 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'requires-recent-login',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'dynamic-link-not-activated',\n  EMAIL_EXISTS: 'email-already-in-use',\n  EXPIRED_OOB_CODE: 'expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'cancelled-popup-request',\n  INTERNAL_ERROR: 'internal-error',\n  INVALID_API_KEY: 'invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'invalid-app-credential',\n  INVALID_APP_ID: 'invalid-app-id',\n  INVALID_AUTH: 'invalid-user-token',\n  INVALID_AUTH_EVENT: 'invalid-auth-event',\n  INVALID_CERT_HASH: 'invalid-cert-hash',\n  INVALID_CODE: 'invalid-verification-code',\n  INVALID_CONTINUE_URI: 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'invalid-email',\n  INVALID_IDP_RESPONSE: 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'invalid-message-payload',\n  INVALID_OAUTH_CLIENT_ID: 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'invalid-oauth-provider',\n  INVALID_OOB_CODE: 'invalid-action-code',\n  INVALID_ORIGIN: 'unauthorized-domain',\n  INVALID_PASSWORD: 'wrong-password',\n  INVALID_PERSISTENCE: 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'invalid-phone-number',\n  INVALID_PROVIDER_ID: 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'invalid-recipient-email',\n  INVALID_SENDER: 'invalid-sender',\n  INVALID_SESSION_INFO: 'invalid-verification-id',\n  MISSING_ANDROID_PACKAGE_NAME: 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth-domain-config-required',\n  MISSING_CODE: 'missing-verification-code',\n  MISSING_CONTINUE_URI: 'missing-continue-uri',\n  MISSING_IFRAME_START: 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'missing-or-invalid-nonce',\n  MISSING_PHONE_NUMBER: 'missing-phone-number',\n  MISSING_SESSION_INFO: 'missing-verification-id',\n  MODULE_DESTROYED: 'app-deleted',\n  NEED_CONFIRMATION: 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'network-request-failed',\n  NULL_USER: 'null-user',\n  NO_AUTH_EVENT: 'no-auth-event',\n  NO_SUCH_PROVIDER: 'no-such-provider',\n  OPERATION_NOT_ALLOWED: 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'popup-blocked',\n  POPUP_CLOSED_BY_USER: 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'provider-already-linked',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'rejected-credential',\n  TIMEOUT: 'timeout',\n  TOKEN_EXPIRED: 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'unauthorized-continue-uri',\n  UNSUPPORTED_PERSISTENCE: 'unsupported-persistence-type',\n  USER_CANCELLED: 'user-cancelled',\n  USER_DELETED: 'user-not-found',\n  USER_DISABLED: 'user-disabled',\n  USER_MISMATCH: 'user-mismatch',\n  USER_SIGNED_OUT: 'user-signed-out',\n  WEAK_PASSWORD: 'weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'web-storage-unsupported'\n};\n\n\n/**\n * Map from developer error codes to human-readable error messages.\n * @private {!Object<string, string>}\n */\nfireauth.AuthError.MESSAGES_ = {};\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.ARGUMENT_ERROR] = '';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.APP_NOT_AUTHORIZED] =\n    'This app, identified by the domain where it\\'s hosted, is not ' +\n    'authorized to use Firebase Authentication with the provided API key. ' +\n    'Review your key configuration in the Google API console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.APP_NOT_INSTALLED] =\n    'The requested mobile application corresponding to the identifier (' +\n    'Android package name or iOS bundle ID) provided is not installed on ' +\n    'this device.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CAPTCHA_CHECK_FAILED] =\n    'The reCAPTCHA response token provided is either invalid, expired, ' +\n    'already used or the domain associated with it does not match the list ' +\n    'of whitelisted domains.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CODE_EXPIRED] =\n    'The SMS code has expired. Please re-send the verification code to try ' +\n    'again.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CORDOVA_NOT_READY] =\n    'Cordova framework is not ready.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CORS_UNSUPPORTED] =\n    'This browser is not supported.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE] =\n    'This credential is already associated with a different user account.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CREDENTIAL_MISMATCH] =\n    'The custom token corresponds to a different audience.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.CREDENTIAL_TOO_OLD_LOGIN_AGAIN] =\n    'This operation is sensitive and requires recent authentication. Log in ' +\n    'again before retrying this request.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.DYNAMIC_LINK_NOT_ACTIVATED] = 'Please activate ' +\n    'Dynamic Links in the Firebase Console and agree to the terms and ' +\n    'conditions.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EMAIL_EXISTS] =\n    'The email address is already in use by another account.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EXPIRED_OOB_CODE] =\n    'The action code has expired. ';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EXPIRED_POPUP_REQUEST] =\n    'This operation has been cancelled due to another conflicting popup ' +\n    'being opened.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INTERNAL_ERROR] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_APP_CREDENTIAL] =\n    'The phone verification request contains an invalid application verifier.' +\n    ' The reCAPTCHA token response is either invalid or expired.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_APP_ID] =\n    'The mobile app identifier is not registed for the current project.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_AUTH] =\n    'This user\\'s credential isn\\'t valid for this project. This can happen ' +\n    'if the user\\'s token has been tampered with, or if the user isn\\'t for ' +\n    'the project associated with this API key.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_AUTH_EVENT] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CODE] =\n    'The SMS verification code used to create the phone auth credential is ' +\n    'invalid. Please resend the verification code sms and be sure use the ' +\n    'verification code provided by the user.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CONTINUE_URI] =\n    'The continue URL provided in the request is invalid.';\nfireauth.AuthError.MESSAGES_[\n     fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION] = 'The following' +\n    ' Cordova plugins must be installed to enable OAuth sign-in: ' +\n    'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n    'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n    'cordova-plugin-customurlscheme.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CUSTOM_TOKEN] =\n    'The custom token format is incorrect. Please check the documentation.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.INVALID_DYNAMIC_LINK_DOMAIN] = 'The provided ' +\n    'dynamic link domain is not configured or authorized for the current ' +\n    'project.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_EMAIL] =\n    'The email address is badly formatted.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_API_KEY] =\n    'Your API key is invalid, please check you have copied it correctly.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CERT_HASH] =\n    'The SHA-1 certificate hash provided is invalid.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_IDP_RESPONSE] =\n    'The supplied auth credential is malformed or has expired.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PERSISTENCE] =\n    'The specified persistence type is invalid. It can only be local, ' +\n    'session or none.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_MESSAGE_PAYLOAD] =\n    'The email template corresponding to this action contains invalid charac' +\n    'ters in its message. Please fix by going to the Auth email templates se' +\n    'ction in the Firebase Console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OAUTH_PROVIDER] =\n    'EmailAuthProvider is not supported for this operation. This operation ' +\n    'only supports OAuth providers.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OAUTH_CLIENT_ID] =\n    'The OAuth client ID provided is either invalid or does not match the ' +\n    'specified API key.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_ORIGIN] =\n    'This domain is not authorized for OAuth operations for your Firebase ' +\n    'project. Edit the list of authorized domains from the Firebase console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OOB_CODE] =\n    'The action code is invalid. This can happen if the code is malformed, ' +\n    'expired, or has already been used.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PASSWORD] =\n    'The password is invalid or the user does not have a password.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PHONE_NUMBER] =\n    'The format of the phone number provided is incorrect. Please enter the ' +\n    'phone number in a format that can be parsed into E.164 format. E.164 ' +\n    'phone numbers are written in the format [+][country code][subscriber ' +\n    'number including area code].';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PROVIDER_ID] =\n    'The specified provider ID is invalid.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_RECIPIENT_EMAIL] =\n    'The email corresponding to this action failed to send as the provided ' +\n    'recipient email address is invalid.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_SENDER] =\n    'The email template corresponding to this action contains an invalid sen' +\n    'der email or name. Please fix by going to the Auth email templates sect' +\n    'ion in the Firebase Console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_SESSION_INFO] =\n    'The verification ID used to create the phone auth credential is invalid.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME] = 'An Android ' +\n    'Package Name must be provided if the Android App is required to be ' +\n    'installed.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_AUTH_DOMAIN] =\n    'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n    'by following the instructions in the Firebase console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_APP_CREDENTIAL] =\n    'The phone verification request is missing an application verifier ' +\n    'assertion. A reCAPTCHA response token needs to be provided.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_CODE] =\n    'The phone auth credential was created with an empty SMS verification ' +\n    'code.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_CONTINUE_URI] =\n    'A continue URL must be provided in the request.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_IFRAME_START] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_IOS_BUNDLE_ID] =\n    'An iOS Bundle ID must be provided if an App Store ID is provided.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_OR_INVALID_NONCE] =\n    'The OIDC ID token requires a valid unhashed nonce.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_PHONE_NUMBER] =\n    'To send verification codes, provide a phone number for the recipient.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_SESSION_INFO] =\n    'The phone auth credential was created with an empty verification ID.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MODULE_DESTROYED] =\n    'This instance of FirebaseApp has been deleted.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NEED_CONFIRMATION] =\n    'An account already exists with the same email address but different ' +\n    'sign-in credentials. Sign in using a provider associated with this ' +\n    'email address.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NETWORK_REQUEST_FAILED] =\n    'A network error (such as timeout, interrupted connection or ' +\n    'unreachable host) has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NO_AUTH_EVENT] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NO_SUCH_PROVIDER] =\n    'User was not linked to an account with the given provider.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NULL_USER] =\n    'A null user object was provided as the argument for an operation which ' +\n    'requires a non-null user object.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.OPERATION_NOT_ALLOWED] =\n    'The given sign-in provider is disabled for this Firebase project. ' +\n    'Enable it in the Firebase console, under the sign-in method tab of the ' +\n    'Auth section.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.OPERATION_NOT_SUPPORTED] =\n    'This operation is not supported in the environment this application is ' +\n    'running on. \"location.protocol\" must be http, https or chrome-extension' +\n    ' and web storage must be enabled.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.POPUP_BLOCKED] =\n    'Unable to establish a connection with the popup. It may have been ' +\n    'blocked by the browser.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.POPUP_CLOSED_BY_USER] =\n    'The popup has been closed by the user before finalizing the operation.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.PROVIDER_ALREADY_LINKED] =\n    'User can only be linked to one identity for the given provider.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.QUOTA_EXCEEDED] =\n    'The project\\'s quota for this operation has been exceeded.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.REDIRECT_CANCELLED_BY_USER] =\n    'The redirect operation has been cancelled by the user before finalizing.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.REDIRECT_OPERATION_PENDING] =\n    'A redirect sign-in operation is already pending.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.REJECTED_CREDENTIAL] =\n    'The request contains malformed or mismatching credentials.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.TIMEOUT] =\n    'The operation has timed out.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.TOKEN_EXPIRED] =\n    'The user\\'s credential is no longer valid. The user must sign in again.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER] =\n    'We have blocked all requests from this device due to unusual activity. ' +\n    'Try again later.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.UNAUTHORIZED_DOMAIN] =\n    'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n    'the domain in the Firebase console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.UNSUPPORTED_PERSISTENCE] =\n    'The current environment does not support the specified persistence type.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_CANCELLED] =\n    'User did not grant your application the permissions it requested.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_DELETED] =\n    'There is no user record corresponding to this identifier. The user may ' +\n    'have been deleted.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_DISABLED] =\n    'The user account has been disabled by an administrator.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_MISMATCH] =\n    'The supplied credentials do not correspond to the previously signed in ' +\n    'user.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_SIGNED_OUT] = '';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.WEAK_PASSWORD] =\n    'The password must be 6 characters long or more.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED] =\n    'This browser is not supported or 3rd party cookies and data may be ' +\n    'disabled.';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for firebase.auth.ActionCodeSettings and its helper\n * functions.\n */\n\ngoog.provide('fireauth.ActionCodeSettings');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\n\n\n/**\n * Defines the action code settings structure used to specify how email action\n * links are handled.\n * @param {!Object} settingsObj The action code settings object used to\n *     construct the action code link.\n * @constructor @struct @final\n */\nfireauth.ActionCodeSettings = function(settingsObj) {\n  // Validate the settings object passed.\n  this.initialize_(settingsObj);\n};\n\n\n/**\n * Validate the action code settings object.\n * @param {!Object} settingsObj The action code settings object to validate.\n * @private\n */\nfireauth.ActionCodeSettings.prototype.initialize_ = function(settingsObj) {\n  // URL should be required.\n  var continueUrl = settingsObj[fireauth.ActionCodeSettings.RawField.URL];\n  if (typeof continueUrl === 'undefined') {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CONTINUE_URI);\n  } else if (typeof continueUrl !== 'string' ||\n             (typeof continueUrl === 'string' && !continueUrl.length)) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CONTINUE_URI);\n  }\n  /** @const @private {string} The continue URL. */\n  this.continueUrl_ = /** @type {string} */ (continueUrl);\n\n  // Validate Android parameters.\n  /** @private {?string} The Android package name. */\n  this.apn_ = null;\n  /** @private {?string} The Android minimum version. */\n  this.amv_ = null;\n  /** @private {boolean} Whether to install the Android app. */\n  this.installApp_ = false;\n  var androidSettings =\n      settingsObj[fireauth.ActionCodeSettings.RawField.ANDROID];\n  if (androidSettings && typeof androidSettings === 'object') {\n    var apn = androidSettings[\n      fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME];\n    var installApp = androidSettings[\n      fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP];\n    var amv = androidSettings[\n      fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION];\n    if (typeof apn === 'string' && apn.length) {\n      this.apn_ = /** @type {string} */ (apn);\n      if (typeof installApp !== 'undefined' &&\n          typeof installApp !== 'boolean') {\n        throw new fireauth.AuthError(\n            fireauth.authenum.Error.ARGUMENT_ERROR,\n            fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP +\n            ' property must be a boolean when specified.');\n      }\n      this.installApp_ = !!installApp;\n      if (typeof amv !== 'undefined' &&\n          (typeof amv !== 'string' ||\n           (typeof amv === 'string' && !amv.length))) {\n        throw new fireauth.AuthError(\n            fireauth.authenum.Error.ARGUMENT_ERROR,\n            fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION +\n            ' property must be a non empty string when specified.');\n      }\n      this.amv_ = /** @type {?string}*/ (amv || null);\n    } else if (typeof apn !== 'undefined') {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.ARGUMENT_ERROR,\n          fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME +\n          ' property must be a non empty string when specified.');\n    } else if (typeof installApp !== 'undefined' ||\n               typeof amv !== 'undefined') {\n      // If installApp or amv specified with no valid APN, fail quickly.\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME);\n    }\n  } else if (typeof androidSettings !== 'undefined') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.ANDROID +\n        ' property must be a non null object when specified.');\n  }\n\n  // Validate iOS parameters.\n  /** @private {?string} The iOS bundle ID. */\n  this.ibi_ = null;\n  var iosSettings = settingsObj[fireauth.ActionCodeSettings.RawField.IOS];\n  if (iosSettings && typeof iosSettings === 'object') {\n    var ibi = iosSettings[\n      fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID];\n    if (typeof ibi === 'string' && ibi.length) {\n      this.ibi_ = /** @type {string}*/ (ibi);\n    } else if (typeof ibi !== 'undefined') {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.ARGUMENT_ERROR,\n          fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID +\n          ' property must be a non empty string when specified.');\n    }\n  } else if (typeof iosSettings !== 'undefined') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.IOS +\n        ' property must be a non null object when specified.');\n  }\n\n  // Validate canHandleCodeInApp.\n  var canHandleCodeInApp =\n      settingsObj[fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP];\n  if (typeof canHandleCodeInApp !== 'undefined' &&\n      typeof canHandleCodeInApp !== 'boolean') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP +\n        ' property must be a boolean when specified.');\n  }\n  /** @const @private {boolean} Whether the code can be handled in app. */\n  this.canHandleCodeInApp_ = !!canHandleCodeInApp;\n\n  // Validate dynamicLinkDomain.\n  var dynamicLinkDomain = settingsObj[\n      fireauth.ActionCodeSettings.RawField.DYNAMIC_LINK_DOMAIN];\n  if (typeof dynamicLinkDomain !== 'undefined' &&\n      (typeof dynamicLinkDomain !== 'string' ||\n       (typeof dynamicLinkDomain === 'string' &&\n        !dynamicLinkDomain.length))) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.DYNAMIC_LINK_DOMAIN +\n        ' property must be a non empty string when specified.');\n  }\n  /** @const @private {?string} The FDL domain. */\n  this.dynamicLinkDomain_ = dynamicLinkDomain || null;\n};\n\n\n/**\n * Action code settings backend request field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.RequestField = {\n  ANDROID_INSTALL_APP: 'androidInstallApp',\n  ANDROID_MINIMUM_VERSION: 'androidMinimumVersion',\n  ANDROID_PACKAGE_NAME: 'androidPackageName',\n  CAN_HANDLE_CODE_IN_APP: 'canHandleCodeInApp',\n  CONTINUE_URL: 'continueUrl',\n  DYNAMIC_LINK_DOMAIN: 'dynamicLinkDomain',\n  IOS_BUNDLE_ID: 'iOSBundleId'\n};\n\n\n/**\n * Action code settings raw field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.RawField = {\n  ANDROID: 'android',\n  DYNAMIC_LINK_DOMAIN: 'dynamicLinkDomain',\n  HANDLE_CODE_IN_APP: 'handleCodeInApp',\n  IOS: 'iOS',\n  URL: 'url'\n};\n\n\n/**\n * Action code settings raw Android raw field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.AndroidRawField = {\n  INSTALL_APP: 'installApp',\n  MINIMUM_VERSION: 'minimumVersion',\n  PACKAGE_NAME: 'packageName'\n};\n\n\n/**\n * Action code settings raw iOS raw field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.IosRawField = {\n  BUNDLE_ID: 'bundleId'\n};\n\n\n/**\n * Builds and returns the backend request for the passed action code settings.\n * @return {!Object} The constructed backend request populated with the action\n *     code settings parameters.\n */\nfireauth.ActionCodeSettings.prototype.buildRequest = function() {\n  // Construct backend request.\n  var request = {};\n  request[fireauth.ActionCodeSettings.RequestField.CONTINUE_URL] =\n      this.continueUrl_;\n  request[fireauth.ActionCodeSettings.RequestField.CAN_HANDLE_CODE_IN_APP] =\n      this.canHandleCodeInApp_;\n  request[fireauth.ActionCodeSettings.RequestField.ANDROID_PACKAGE_NAME] =\n      this.apn_;\n  if (this.apn_) {\n    request[fireauth.ActionCodeSettings.RequestField.ANDROID_MINIMUM_VERSION] =\n        this.amv_;\n    request[fireauth.ActionCodeSettings.RequestField.ANDROID_INSTALL_APP] =\n        this.installApp_;\n  }\n  request[fireauth.ActionCodeSettings.RequestField.IOS_BUNDLE_ID] = this.ibi_;\n  request[fireauth.ActionCodeSettings.RequestField.DYNAMIC_LINK_DOMAIN] =\n      this.dynamicLinkDomain_;\n  // Remove null fields.\n  for (var key in request) {\n    if (request[key] === null) {\n      delete request[key];\n    }\n  }\n  return request;\n};\n\n\n/**\n * Returns the canHandleCodeInApp setting of ActionCodeSettings.\n * @return {boolean} Whether the code can be handled in app.\n */\nfireauth.ActionCodeSettings.prototype.canHandleCodeInApp = function() {\n  return this.canHandleCodeInApp_;\n};\n","// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Base64 en/decoding. Not much to say here except that we\n * work with decoded values in arrays of bytes. By \"byte\" I mean a number\n * in [0, 255].\n *\n * @author doughtie@google.com (Gavin Doughtie)\n */\n\ngoog.provide('goog.crypt.base64');\n\ngoog.require('goog.asserts');\ngoog.require('goog.crypt');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\n\n// Static lookup maps, lazily populated by init_()\n\n\n/**\n * Maps bytes to characters.\n * @type {Object}\n * @private\n */\ngoog.crypt.base64.byteToCharMap_ = null;\n\n\n/**\n * Maps characters to bytes. Used for normal and websafe characters.\n * @type {Object}\n * @private\n */\ngoog.crypt.base64.charToByteMap_ = null;\n\n\n/**\n * Maps bytes to websafe characters.\n * @type {Object}\n * @private\n */\ngoog.crypt.base64.byteToCharMapWebSafe_ = null;\n\n\n/**\n * Our default alphabet, shared between\n * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n * @type {string}\n */\ngoog.crypt.base64.ENCODED_VALS_BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n    'abcdefghijklmnopqrstuvwxyz' +\n    '0123456789';\n\n\n/**\n * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n * @type {string}\n */\ngoog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + '+/=';\n\n\n/**\n * Our websafe alphabet.\n * @type {string}\n */\ngoog.crypt.base64.ENCODED_VALS_WEBSAFE =\n    goog.crypt.base64.ENCODED_VALS_BASE + '-_.';\n\n\n/**\n * White list of implementations with known-good native atob and btoa functions.\n * Listing these explicitly (via the ASSUME_* wrappers) benefits dead-code\n * removal in per-browser compilations.\n * @private {boolean}\n */\ngoog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO ||\n    (goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI) ||\n    goog.userAgent.OPERA;\n\n\n/**\n * Does this browser have a working btoa function?\n * @private {boolean}\n */\ngoog.crypt.base64.HAS_NATIVE_ENCODE_ =\n    goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ ||\n    typeof(goog.global.btoa) == 'function';\n\n\n/**\n * Does this browser have a working atob function?\n * We blacklist known-bad implementations:\n *  - IE (10+) added atob() but it does not tolerate whitespace on the input.\n * @private {boolean}\n */\ngoog.crypt.base64.HAS_NATIVE_DECODE_ =\n    goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ ||\n    (!goog.userAgent.product.SAFARI && !goog.userAgent.IE &&\n     typeof(goog.global.atob) == 'function');\n\n\n/**\n * Base64-encode an array of bytes.\n *\n * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n *     value in [0, 255]) to encode.\n * @param {boolean=} opt_webSafe True indicates we should use the alternative\n *     alphabet, which does not require escaping for use in URLs.\n * @return {string} The base64 encoded string.\n */\ngoog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {\n  // Assert avoids runtime dependency on goog.isArrayLike, which helps reduce\n  // size of jscompiler output, and which yields slight performance increase.\n  goog.asserts.assert(\n      goog.isArrayLike(input), 'encodeByteArray takes an array as a parameter');\n\n  goog.crypt.base64.init_();\n\n  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ :\n                                    goog.crypt.base64.byteToCharMap_;\n\n  var output = [];\n\n  for (var i = 0; i < input.length; i += 3) {\n    var byte1 = input[i];\n    var haveByte2 = i + 1 < input.length;\n    var byte2 = haveByte2 ? input[i + 1] : 0;\n    var haveByte3 = i + 2 < input.length;\n    var byte3 = haveByte3 ? input[i + 2] : 0;\n\n    var outByte1 = byte1 >> 2;\n    var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n    var outByte3 = ((byte2 & 0x0F) << 2) | (byte3 >> 6);\n    var outByte4 = byte3 & 0x3F;\n\n    if (!haveByte3) {\n      outByte4 = 64;\n\n      if (!haveByte2) {\n        outByte3 = 64;\n      }\n    }\n\n    output.push(\n        byteToCharMap[outByte1], byteToCharMap[outByte2],\n        byteToCharMap[outByte3], byteToCharMap[outByte4]);\n  }\n\n  return output.join('');\n};\n\n\n/**\n * Base64-encode a string.\n *\n * @param {string} input A string to encode.\n * @param {boolean=} opt_webSafe True indicates we should use the alternative\n *     alphabet, which does not require escaping for use in URLs.\n * @return {string} The base64 encoded string.\n */\ngoog.crypt.base64.encodeString = function(input, opt_webSafe) {\n  // Shortcut for browsers that implement\n  // a native base64 encoder in the form of \"btoa/atob\"\n  if (goog.crypt.base64.HAS_NATIVE_ENCODE_ && !opt_webSafe) {\n    return goog.global.btoa(input);\n  }\n  return goog.crypt.base64.encodeByteArray(\n      goog.crypt.stringToByteArray(input), opt_webSafe);\n};\n\n\n/**\n * Base64-decode a string.\n *\n * @param {string} input Input to decode. Any whitespace is ignored, and the\n *     input maybe encoded with either supported alphabet (or a mix thereof).\n * @param {boolean=} opt_webSafe True indicates we should use the alternative\n *     alphabet, which does not require escaping for use in URLs. Note that\n *     passing false may also still allow webSafe input decoding, when the\n *     fallback decoder is used on browsers without native support.\n * @return {string} string representing the decoded value.\n */\ngoog.crypt.base64.decodeString = function(input, opt_webSafe) {\n  // Shortcut for browsers that implement\n  // a native base64 encoder in the form of \"btoa/atob\"\n  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !opt_webSafe) {\n    return goog.global.atob(input);\n  }\n  var output = '';\n  function pushByte(b) { output += String.fromCharCode(b); }\n\n  goog.crypt.base64.decodeStringInternal_(input, pushByte);\n\n  return output;\n};\n\n\n/**\n * Base64-decode a string to an Array of numbers.\n *\n * In base-64 decoding, groups of four characters are converted into three\n * bytes.  If the encoder did not apply padding, the input length may not\n * be a multiple of 4.\n *\n * In this case, the last group will have fewer than 4 characters, and\n * padding will be inferred.  If the group has one or two characters, it decodes\n * to one byte.  If the group has three characters, it decodes to two bytes.\n *\n * @param {string} input Input to decode. Any whitespace is ignored, and the\n *     input maybe encoded with either supported alphabet (or a mix thereof).\n * @param {boolean=} opt_ignored Unused parameter, retained for compatibility.\n * @return {!Array<number>} bytes representing the decoded value.\n */\ngoog.crypt.base64.decodeStringToByteArray = function(input, opt_ignored) {\n  var output = [];\n  function pushByte(b) { output.push(b); }\n\n  goog.crypt.base64.decodeStringInternal_(input, pushByte);\n\n  return output;\n};\n\n\n/**\n * Base64-decode a string to a Uint8Array.\n *\n * Note that Uint8Array is not supported on older browsers, e.g. IE < 10.\n * @see http://caniuse.com/uint8array\n *\n * In base-64 decoding, groups of four characters are converted into three\n * bytes.  If the encoder did not apply padding, the input length may not\n * be a multiple of 4.\n *\n * In this case, the last group will have fewer than 4 characters, and\n * padding will be inferred.  If the group has one or two characters, it decodes\n * to one byte.  If the group has three characters, it decodes to two bytes.\n *\n * @param {string} input Input to decode. Any whitespace is ignored, and the\n *     input maybe encoded with either supported alphabet (or a mix thereof).\n * @return {!Uint8Array} bytes representing the decoded value.\n */\ngoog.crypt.base64.decodeStringToUint8Array = function(input) {\n  goog.asserts.assert(\n      !goog.userAgent.IE || goog.userAgent.isVersionOrHigher('10'),\n      'Browser does not support typed arrays');\n  var len = input.length;\n  // Check if there are trailing '=' as padding in the b64 string.\n  var placeholders = 0;\n  if (input[len - 2] === '=') {\n    placeholders = 2;\n  } else if (input[len - 1] === '=') {\n    placeholders = 1;\n  }\n  var output = new Uint8Array(Math.ceil(len * 3 / 4) - placeholders);\n  var outLen = 0;\n  function pushByte(b) {\n    output[outLen++] = b;\n  }\n\n  goog.crypt.base64.decodeStringInternal_(input, pushByte);\n\n  return output.subarray(0, outLen);\n};\n\n\n/**\n * @param {string} input Input to decode.\n * @param {function(number):void} pushByte result accumulator.\n * @private\n */\ngoog.crypt.base64.decodeStringInternal_ = function(input, pushByte) {\n  goog.crypt.base64.init_();\n\n  var nextCharIndex = 0;\n  /**\n   * @param {number} default_val Used for end-of-input.\n   * @return {number} The next 6-bit value, or the default for end-of-input.\n   */\n  function getByte(default_val) {\n    while (nextCharIndex < input.length) {\n      var ch = input.charAt(nextCharIndex++);\n      var b = goog.crypt.base64.charToByteMap_[ch];\n      if (b != null) {\n        return b;  // Common case: decoded the char.\n      }\n      if (!goog.string.isEmptyOrWhitespace(ch)) {\n        throw new Error('Unknown base64 encoding at char: ' + ch);\n      }\n      // We encountered whitespace: loop around to the next input char.\n    }\n    return default_val;  // No more input remaining.\n  }\n\n  while (true) {\n    var byte1 = getByte(-1);\n    var byte2 = getByte(0);\n    var byte3 = getByte(64);\n    var byte4 = getByte(64);\n\n    // The common case is that all four bytes are present, so if we have byte4\n    // we can skip over the truncated input special case handling.\n    if (byte4 === 64) {\n      if (byte1 === -1) {\n        return;  // Terminal case: no input left to decode.\n      }\n      // Here we know an intermediate number of bytes are missing.\n      // The defaults for byte2, byte3 and byte4 apply the inferred padding\n      // rules per the public API documentation. i.e: 1 byte\n      // missing should yield 2 bytes of output, but 2 or 3 missing bytes yield\n      // a single byte of output. (Recall that 64 corresponds the padding char).\n    }\n\n    var outByte1 = (byte1 << 2) | (byte2 >> 4);\n    pushByte(outByte1);\n\n    if (byte3 != 64) {\n      var outByte2 = ((byte2 << 4) & 0xF0) | (byte3 >> 2);\n      pushByte(outByte2);\n\n      if (byte4 != 64) {\n        var outByte3 = ((byte3 << 6) & 0xC0) | byte4;\n        pushByte(outByte3);\n      }\n    }\n  }\n};\n\n\n/**\n * Lazy static initialization function. Called before\n * accessing any of the static map variables.\n * @private\n */\ngoog.crypt.base64.init_ = function() {\n  if (!goog.crypt.base64.byteToCharMap_) {\n    goog.crypt.base64.byteToCharMap_ = {};\n    goog.crypt.base64.charToByteMap_ = {};\n    goog.crypt.base64.byteToCharMapWebSafe_ = {};\n\n    // We want quick mappings back and forth, so we precompute two maps.\n    for (var i = 0; i < goog.crypt.base64.ENCODED_VALS.length; i++) {\n      goog.crypt.base64.byteToCharMap_[i] =\n          goog.crypt.base64.ENCODED_VALS.charAt(i);\n      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;\n      goog.crypt.base64.byteToCharMapWebSafe_[i] =\n          goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);\n\n      // Be forgiving when decoding and correctly decode both encodings.\n      if (i >= goog.crypt.base64.ENCODED_VALS_BASE.length) {\n        goog.crypt.base64\n            .charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)] =\n            i;\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility functions to handle Firebase Auth ID tokens.\n */\n\ngoog.provide('fireauth.IdToken');\n\ngoog.require('goog.crypt.base64');\n\n\n/**\n * Parses the token string into a {@code Token} object.\n * @param {!fireauth.IdToken.JsonToken} token The parsed JSON token.\n * @constructor\n */\nfireauth.IdToken = function(token) {\n  /** @private {string} The issuer of the token. */\n  this.iss_ = token['iss'];\n  /** @private {string} The audience of the token. */\n  this.aud_ = token['aud'];\n  /** @private {number} The expire time in seconds of the token. */\n  this.exp_ = token['exp'];\n  /** @private {string} The local user ID of the token. */\n  this.localId_ = token['sub'];\n  var now = goog.now() / 1000;\n  /** @private {number} The issue time in seconds of the token. */\n  this.iat_ = token['iat'] || (now > this.exp_ ? this.exp_ : now);\n  /** @private {?string} The email address of the token. */\n  this.email_ = token['email'] || null;\n  /** @private {boolean} Whether the user is verified. */\n  this.verified_ = !!token['verified'];\n  /** @private {?string} The provider ID of the token. */\n  this.providerId_ = token['provider_id'] ||\n      (token['firebase'] && token['firebase']['sign_in_provider']) ||\n      null;\n  /** @private {boolean} Whether the user is anonymous. */\n  this.anonymous_ = !!token['is_anonymous'] || this.providerId_ == 'anonymous';\n  /** @private {?string} The federated ID of the token. */\n  this.federatedId_ = token['federated_id'] || null;\n  /** @private {?string} The display name of the token. */\n  this.displayName_ = token['display_name'] || null;\n  /** @private {?string} The photo URL of the token. */\n  this.photoURL_ = token['photo_url'] || null;\n  /**\n   * @private {?string} The phone number of the user identified by the token.\n   */\n  this.phoneNumber_ = token['phone_number'] || null;\n};\n\n\n/**\n * @typedef {{\n *   identities: (?Object|undefined),\n *   sign_in_provider: (?string|undefined)\n * }}\n */\nfireauth.IdToken.Firebase;\n\n\n/**\n * @typedef {{\n *   iss: string,\n *   aud: string,\n *   exp: number,\n *   sub: string,\n *   iat: (?number|undefined),\n *   email: (?string|undefined),\n *   verified: (?boolean|undefined),\n *   provider_id: (?string|undefined),\n *   is_anonymous: (?boolean|undefined),\n *   federated_id: (?string|undefined),\n *   display_name: (?string|undefined),\n *   photo_url: (?string|undefined),\n *   phone_number: (?string|undefined),\n *   firebase: (?fireauth.IdToken.Firebase|undefined)\n * }}\n */\nfireauth.IdToken.JsonToken;\n\n\n/** @return {?string} The email address of the account. */\nfireauth.IdToken.prototype.getEmail = function() {\n  return this.email_;\n};\n\n\n/** @return {number} The expire time in seconds. */\nfireauth.IdToken.prototype.getExp = function() {\n  return this.exp_;\n};\n\n\n/** @return {?string} The ID of the identity provider. */\nfireauth.IdToken.prototype.getProviderId = function() {\n  return this.providerId_;\n};\n\n\n/** @return {?string} The display name of the account. */\nfireauth.IdToken.prototype.getDisplayName = function() {\n  return this.displayName_;\n};\n\n\n/** @return {?string} The photo URL of the account. */\nfireauth.IdToken.prototype.getPhotoUrl = function() {\n  return this.photoURL_;\n};\n\n\n/** @return {string} The user ID of the account. */\nfireauth.IdToken.prototype.getLocalId = function() {\n  return this.localId_;\n};\n\n\n/** @return {?string} The federated ID of the account. */\nfireauth.IdToken.prototype.getFederatedId = function() {\n  return this.federatedId_;\n};\n\n\n/** @return {boolean} Whether the user is anonymous. */\nfireauth.IdToken.prototype.isAnonymous = function() {\n  return this.anonymous_;\n};\n\n\n/** @return {boolean} Whether the user email is verified. */\nfireauth.IdToken.prototype.isVerified = function() {\n  return this.verified_;\n};\n\n\n/** @return {boolean} Whether token is expired. */\nfireauth.IdToken.prototype.isExpired = function() {\n  var now = Math.floor(goog.now() / 1000);\n  // It is expired if token expiration time is less than current time.\n  return this.getExp() <= now;\n};\n\n\n/** @return {string} The issuer of the token. */\nfireauth.IdToken.prototype.getIssuer = function() {\n  return this.iss_;\n};\n\n\n/** @return {?string} The phone number of the account. */\nfireauth.IdToken.prototype.getPhoneNumber = function() {\n  return this.phoneNumber_;\n};\n\n\n/**\n * Parses the JWT token and extracts the information part without verifying the\n * token signature.\n * @param {string} tokenString The JWT token.\n * @return {?fireauth.IdToken} The decoded token.\n */\nfireauth.IdToken.parse = function(tokenString) {\n  var token = fireauth.IdToken.parseIdTokenClaims(tokenString);\n  if (token && token['sub'] && token['iss'] && token['aud'] && token['exp']) {\n    return new fireauth.IdToken(\n        /** @type {!fireauth.IdToken.JsonToken} */ (token));\n  }\n  return null;\n};\n\n/**\n * Converts the information part of JWT token to plain object format.\n * @param {?string} tokenString The JWT token.\n * @return {?Object}\n */\nfireauth.IdToken.parseIdTokenClaims = function(tokenString) {\n  if (!tokenString) {\n    return null;\n  }\n  // Token format is <algorithm>.<info>.<sig>\n  var fields = tokenString.split('.');\n  if (fields.length != 3) {\n    return null;\n  }\n  var jsonInfo = fields[1];\n  // Google base64 library does not handle padding.\n  var padLen = (4 - jsonInfo.length % 4) % 4;\n  for (var i = 0; i < padLen; i++) {\n    jsonInfo += '.';\n  }\n  try {\n    var token = JSON.parse(goog.crypt.base64.decodeString(jsonInfo, true));\n    return /** @type {?Object} */ (token);\n  } catch (e) {}\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines all common constants and enums used by firebase-auth.\n */\n\ngoog.provide('fireauth.constants');\ngoog.provide('fireauth.constants.AuthEventType');\n\n\n/**\n * Enums for authentication operation types.\n * @enum {string}\n */\nfireauth.constants.OperationType = {\n  LINK: 'link',\n  REAUTHENTICATE: 'reauthenticate',\n  SIGN_IN: 'signIn'\n};\n\n\n/**\n * Events dispatched firebase.auth.Auth.\n * @enum {string}\n */\nfireauth.constants.AuthEventType = {\n  /** Dispatched when Firebase framework is changed. */\n  FRAMEWORK_CHANGED: 'frameworkChanged',\n  /** Dispatched when language code is changed. */\n  LANGUAGE_CODE_CHANGED: 'languageCodeChanged'\n};\n\n\n/**\n * The settings of an Auth endpoint. The fields are:\n * <ul>\n * <li>firebaseAuthEndpoint: defines the Firebase Auth backend endpoint for\n *     specified endpoint type.</li>\n * <li>secureTokenEndpoint: defines the secure token backend endpoint for\n *     specified endpoint type.</li>\n * <li>id: defines the endpoint identifier.</li>\n * </ul>\n * @typedef {{\n *   firebaseAuthEndpoint: string,\n *   secureTokenEndpoint: string,\n *   id: string\n * }}\n */\nfireauth.constants.EndpointSettings;\n\n\n/**\n * The different endpoints for Firebase Auth backend.\n * @enum {!fireauth.constants.EndpointSettings}\n */\nfireauth.constants.Endpoint = {\n  PRODUCTION: {\n    firebaseAuthEndpoint: 'https://www.googleapis.com/identitytoolkit/v3/' +\n        'relyingparty/',\n    secureTokenEndpoint: 'https://securetoken.googleapis.com/v1/token',\n    id: 'p'\n  },\n  STAGING: {\n    firebaseAuthEndpoint: 'https://staging-www.sandbox.googleapis.com/' +\n        'identitytoolkit/v3/relyingparty/',\n    secureTokenEndpoint: 'https://staging-securetoken.sandbox.googleapis.com' +\n        '/v1/token',\n    id: 's'\n  },\n  TEST: {\n    firebaseAuthEndpoint: 'https://www-googleapis-test.sandbox.google.com/' +\n        'identitytoolkit/v3/relyingparty/',\n    secureTokenEndpoint: 'https://test-securetoken.sandbox.googleapis.com/v1' +\n        '/token',\n    id: 't'\n  }\n};\n\n\n/**\n * Returns the endpoint specific RpcHandler configuration.\n * @param {?string=} opt_id The identifier of the endpoint type if available.\n * @return {?Object|undefined} The RpcHandler endpoint configuration object.\n */\nfireauth.constants.getEndpointConfig = function(opt_id) {\n  for (var endpointKey in fireauth.constants.Endpoint) {\n    if (fireauth.constants.Endpoint[endpointKey].id === opt_id) {\n      var endpoint = fireauth.constants.Endpoint[endpointKey];\n      return {\n        'firebaseEndpoint': endpoint.firebaseAuthEndpoint,\n        'secureTokenEndpoint': endpoint.secureTokenEndpoint\n      };\n    }\n  }\n  return null;\n};\n\n\n/**\n * Returns the validated endpoint identifier. Undefined if the provided one is\n * invalid.\n * @param {?string=} opt_id The identifier of the endpoint type if available.\n * @return {string|undefined} The validated endpoint ID. If not valid,\n *     undefined.\n */\nfireauth.constants.getEndpointId = function(opt_id) {\n  if (opt_id && fireauth.constants.getEndpointConfig(opt_id)) {\n    return opt_id;\n  }\n  return undefined;\n};\n\n\n/** @const {string|undefined} The current client endpoint. */\nfireauth.constants.clientEndpoint = fireauth.constants.getEndpointId('__EID__');\n\n\n/** @const {string} The required SAML provider ID prefix. */\nfireauth.constants.SAML_PREFIX = 'saml.';\n\n\n/** @const {string} The required OIDC provider ID prefix. */\nfireauth.constants.OIDC_PREFIX = 'oidc.';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the IdP provider IDs and related settings.\n */\n\ngoog.provide('fireauth.idp');\ngoog.provide('fireauth.idp.IdpSettings');\ngoog.provide('fireauth.idp.ProviderId');\ngoog.provide('fireauth.idp.Settings');\ngoog.provide('fireauth.idp.SignInMethod');\n\ngoog.require('fireauth.constants');\n\n\n/**\n * Enums for supported provider IDs. These provider IDs correspond to the\n * sign_in_provider in the Firebase ID token and do not correspond to the\n * supported client exposed firebase.auth.AuthProviders.\n * @enum {string}\n */\nfireauth.idp.ProviderId = {\n  ANONYMOUS: 'anonymous',\n  CUSTOM: 'custom',\n  FACEBOOK: 'facebook.com',\n  FIREBASE: 'firebase',\n  GITHUB: 'github.com',\n  GOOGLE: 'google.com',\n  PASSWORD: 'password',\n  PHONE: 'phone',\n  TWITTER: 'twitter.com'\n};\n\n\n/**\n * Enums for supported sign in methods.\n * @enum {string}\n */\nfireauth.idp.SignInMethod = {\n  EMAIL_LINK: 'emailLink',\n  EMAIL_PASSWORD: 'password',\n  FACEBOOK: 'facebook.com',\n  GITHUB: 'github.com',\n  GOOGLE: 'google.com',\n  PHONE: 'phone',\n  TWITTER: 'twitter.com'\n};\n\n\n/**\n * The settings of an identity provider. The fields are:\n * <ul>\n * <li>languageParam: defines the custom OAuth language parameter.\n * <li>popupWidth: defines the popup recommended width.\n * <li>popupHeight: defines the popup recommended height.\n * <li>providerId: defines the provider ID.\n * <li>reservedOAuthParameters: defines the list of reserved OAuth parameters.\n * </ul>\n * @typedef {{\n *   languageParam: (?string|undefined),\n *   popupWidth: (?number|undefined),\n *   popupHeight: (?number|undefined),\n *   providerId: !fireauth.idp.ProviderId,\n *   reservedOAuthParameters: !Array<string>\n * }}\n */\nfireauth.idp.IdpSettings;\n\n\n/**\n * The list of reserved OAuth 1.0 parameters.\n * @const {!Array<string>}\n */\nfireauth.idp.RESERVED_OAUTH1_PARAMS =\n    ['oauth_consumer_key', 'oauth_nonce', 'oauth_signature',\n     'oauth_signature_method', 'oauth_timestamp', 'oauth_token',\n     'oauth_version'];\n\n\n/**\n * The list of reserved OAuth 2.0 parameters.\n * @const {!Array<string>}\n */\nfireauth.idp.RESERVED_OAUTH2_PARAMS =\n    ['client_id', 'response_type', 'scope', 'redirect_uri', 'state'];\n\n\n/**\n * The recommendations for the different IdP display settings.\n * @enum {!fireauth.idp.IdpSettings}\n */\nfireauth.idp.Settings = {\n  FACEBOOK: {\n    languageParam: 'locale',\n    popupWidth: 500,\n    popupHeight: 600,\n    providerId: fireauth.idp.ProviderId.FACEBOOK,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH2_PARAMS\n  },\n  GITHUB: {\n    languageParam: null,\n    popupWidth: 500,\n    popupHeight: 620,\n    providerId: fireauth.idp.ProviderId.GITHUB,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH2_PARAMS\n  },\n  GOOGLE: {\n    languageParam: 'hl',\n    popupWidth: 515,\n    popupHeight: 680,\n    providerId: fireauth.idp.ProviderId.GOOGLE,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH2_PARAMS\n  },\n  TWITTER: {\n    languageParam: 'lang',\n    popupWidth: 485,\n    popupHeight: 705,\n    providerId: fireauth.idp.ProviderId.TWITTER,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH1_PARAMS\n  }\n};\n\n\n/**\n * @param {!fireauth.idp.ProviderId} providerId The requested provider ID.\n * @return {?fireauth.idp.Settings} The settings for the requested provider ID.\n */\nfireauth.idp.getIdpSettings = function(providerId) {\n  for (var key in fireauth.idp.Settings) {\n    if (fireauth.idp.Settings[key].providerId == providerId) {\n      return fireauth.idp.Settings[key];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {!fireauth.idp.ProviderId} providerId The requested provider ID.\n * @return {!Array<string>} The list of reserved OAuth parameters.\n */\nfireauth.idp.getReservedOAuthParams = function(providerId) {\n  var settings = fireauth.idp.getIdpSettings(providerId);\n  return (settings && settings.reservedOAuthParameters) || [];\n};\n\n\n/**\n * @param {?string|undefined} identifier The provider identifier.\n * @return {boolean} Whether the identifier provided is a SAML provider ID.\n */\nfireauth.idp.isSaml = function(identifier) {\n   return typeof identifier === 'string' &&\n     identifier.indexOf(fireauth.constants.SAML_PREFIX) == 0;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines all the fireauth additional user info interfaces,\n * implementations and subclasses.\n */\n\ngoog.provide('fireauth.AdditionalUserInfo');\ngoog.provide('fireauth.FacebookAdditionalUserInfo');\ngoog.provide('fireauth.FederatedAdditionalUserInfo');\ngoog.provide('fireauth.GenericAdditionalUserInfo');\ngoog.provide('fireauth.GithubAdditionalUserInfo');\ngoog.provide('fireauth.GoogleAdditionalUserInfo');\ngoog.provide('fireauth.TwitterAdditionalUserInfo');\n\ngoog.require('fireauth.IdToken');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\n\n\n/**\n * The interface that represents additional user info.\n * @interface\n */\nfireauth.AdditionalUserInfo = function() {};\n\n\n/**\n * Constructs the corresponding additional user info for the backend\n * verifyAssertion response.\n * @param {?Object|undefined} resp The backend verifyAssertion,\n *     verifyPhoneNumber or verifyPassword/setAccountInfo response.\n * @return {?fireauth.AdditionalUserInfo} The fireauth.AdditionalUserInfo\n *     instance.\n */\nfireauth.AdditionalUserInfo.fromPlainObject = function(resp) {\n  var factory = {};\n  factory[fireauth.idp.ProviderId.FACEBOOK] =\n      fireauth.FacebookAdditionalUserInfo;\n  factory[fireauth.idp.ProviderId.GOOGLE] =\n      fireauth.GoogleAdditionalUserInfo;\n  factory[fireauth.idp.ProviderId.GITHUB] =\n      fireauth.GithubAdditionalUserInfo;\n  factory[fireauth.idp.ProviderId.TWITTER] =\n      fireauth.TwitterAdditionalUserInfo;\n  // Provider ID and UID are required.\n  var providerId =\n      resp &&\n      resp[fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID];\n  try {\n    // Provider ID already present.\n    if (providerId) {\n      if (factory[providerId]) {\n        // 1st class supported federated providers.\n        return new factory[providerId](resp);\n      } else {\n        // Generic federated providers.\n        return new fireauth.FederatedAdditionalUserInfo(\n            /** @type {!Object} */ (resp));\n      }\n    } else if (typeof resp[fireauth.AdditionalUserInfo.VerifyAssertionField\n                           .ID_TOKEN] !== 'undefined') {\n      // For all other ID token responses with no providerId, get the required\n      // providerId from the ID token itself.\n      return new fireauth.GenericAdditionalUserInfo(\n          /** @type {!Object} */ (resp));\n    }\n  } catch (e) {\n    // Do nothing, null will be returned.\n  }\n  return null;\n};\n\n\n\n/**\n * verifyAssertion response additional user info fields.\n * @enum {string}\n */\nfireauth.AdditionalUserInfo.VerifyAssertionField = {\n  ID_TOKEN: 'idToken',\n  IS_NEW_USER: 'isNewUser',\n  KIND: 'kind',\n  PROVIDER_ID: 'providerId',\n  RAW_USER_INFO: 'rawUserInfo',\n  SCREEN_NAME: 'screenName'\n};\n\n\n/**\n * Constructs a generic additional user info object from the backend\n * verifyPhoneNumber and verifyPassword provider response.\n * @param {!Object} info The verifyPhoneNumber/verifyPassword/setAccountInfo\n *     response data object.\n * @constructor\n * @implements {fireauth.AdditionalUserInfo}\n */\nfireauth.GenericAdditionalUserInfo = function(info) {\n  // Federated provider profile data.\n  var providerId =\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID];\n  // Try to get providerId from the ID token if available.\n  if (!providerId &&\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN]) {\n    // verifyPassword/setAccountInfo and verifyPhoneNumber return an ID token\n    // but no providerId. Get providerId from the token itself.\n    // isNewUser will be returned for verifyPhoneNumber.\n    var idToken = fireauth.IdToken.parse(\n        info[fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN]);\n    if (idToken && idToken.getProviderId()) {\n      providerId = idToken.getProviderId();\n    }\n  }\n  if (!providerId) {\n    // This is internal only.\n    throw new Error('Invalid additional user info!');\n  }\n  // For custom token and anonymous token, set provider ID to null.\n  if (providerId == fireauth.idp.ProviderId.ANONYMOUS ||\n      providerId == fireauth.idp.ProviderId.CUSTOM) {\n      providerId = null;\n  }\n  // Check whether user is new. Temporary Solution since backend does not return\n  // isNewUser field for SignupNewUserResponse.\n  var isNewUser = false;\n  if (typeof info[fireauth.AdditionalUserInfo.VerifyAssertionField.IS_NEW_USER]\n      !== 'undefined') {\n    isNewUser =\n        !!info[fireauth.AdditionalUserInfo.VerifyAssertionField.IS_NEW_USER];\n  } else if (info[fireauth.AdditionalUserInfo.VerifyAssertionField.KIND]\n             === 'identitytoolkit#SignupNewUserResponse') {\n    //For SignupNewUserResponse, always set isNewUser to true.\n    isNewUser = true;\n  }\n  // Set required providerId.\n  fireauth.object.setReadonlyProperty(this, 'providerId', providerId);\n  // Set read-only isNewUser property.\n  fireauth.object.setReadonlyProperty(this, 'isNewUser', isNewUser);\n};\n\n\n/**\n * Constructs a federated additional user info object from the backend\n * verifyAssertion federated provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.GenericAdditionalUserInfo}\n */\nfireauth.FederatedAdditionalUserInfo = function(info) {\n  fireauth.FederatedAdditionalUserInfo.base(this, 'constructor', info);\n  // Federated provider profile data.\n  // This structure will also be used for generic IdPs.\n  var profile = fireauth.util.parseJSON(\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.RAW_USER_INFO] ||\n      '{}');\n  // Set read-only profile property.\n  fireauth.object.setReadonlyProperty(\n      this,\n      'profile',\n      fireauth.object.unsafeCreateReadOnlyCopy(profile || {}));\n};\ngoog.inherits(\n    fireauth.FederatedAdditionalUserInfo, fireauth.GenericAdditionalUserInfo);\n\n\n/**\n * Constructs a Facebook additional user info object from the backend\n * verifyAssertion Facebook provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.FacebookAdditionalUserInfo = function(info) {\n  fireauth.FacebookAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.FACEBOOK) {\n    throw new Error('Invalid provider ID!');\n  }\n};\ngoog.inherits(\n    fireauth.FacebookAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n\n\n\n/**\n * Constructs a GitHub additional user info object from the backend\n * verifyAssertion GitHub provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.GithubAdditionalUserInfo = function(info) {\n  fireauth.GithubAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.GITHUB) {\n    throw new Error('Invalid provider ID!');\n  }\n  // GitHub username.\n  fireauth.object.setReadonlyProperty(\n      this,\n      'username',\n      (this['profile'] && this['profile']['login']) || null);\n};\ngoog.inherits(\n    fireauth.GithubAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n\n\n\n/**\n * Constructs a Google additional user info object from the backend\n * verifyAssertion Google provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.GoogleAdditionalUserInfo = function(info) {\n  fireauth.GoogleAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.GOOGLE) {\n    throw new Error('Invalid provider ID!');\n  }\n};\ngoog.inherits(\n    fireauth.GoogleAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n\n\n\n/**\n * Constructs a Twitter additional user info object from the backend\n * verifyAssertion Twitter provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.TwitterAdditionalUserInfo = function(info) {\n  fireauth.TwitterAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.TWITTER) {\n    throw new Error('Invalid provider ID!');\n  }\n  // Twitter user name.\n  fireauth.object.setReadonlyProperty(\n      this,\n      'username',\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.SCREEN_NAME] ||\n      null);\n};\ngoog.inherits(\n    fireauth.TwitterAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines firebase.auth.ActionCodeUrl class which is the utility\n * to parse action code URLs.\n */\n\ngoog.provide('fireauth.ActionCodeUrl');\n\ngoog.require('goog.Uri');\n\n\n/**\n * The utility class to help parse action code URLs used for out of band email\n * flows such as password reset, email verification, email link sign in, etc.\n * @param {string} actionCodeUrl The action code URL.\n * @constructor\n */\nfireauth.ActionCodeUrl = function(actionCodeUrl) {\n   /** @private {!goog.Uri} The action code URL components.*/\n  this.uri_ = goog.Uri.parse(actionCodeUrl);\n};\n\n\n/**\n * Enums for fields in URL query string.\n * @enum {string}\n */\nfireauth.ActionCodeUrl.QueryField = {\n  API_KEY: 'apiKey',\n  CODE: 'oobCode',\n  MODE: 'mode'\n};\n\n\n/**\n * Enums for action code modes.\n * @enum {string}\n */\nfireauth.ActionCodeUrl.Mode = {\n  RESET_PASSWORD: 'resetPassword',\n  REVOKE_EMAIL: 'recoverEmail',\n  SIGN_IN: 'signIn',\n  VERIFY_EMAIL: 'verifyEmail'\n};\n\n\n/**\n * Returns the API key parameter of action code URL.\n * @return {?string} The first API key value in action code URL or\n *     undefined if apiKey does not appear in the URL.\n */\nfireauth.ActionCodeUrl.prototype.getApiKey = function() {\n  return this.uri_.getParameterValue(\n      fireauth.ActionCodeUrl.QueryField.API_KEY) || null;\n};\n\n\n/**\n * Returns the action code parameter of action code URL.\n * @return {?string} The first oobCode value in action code URL or\n *     undefined if oobCode does not appear in the URL.\n */\nfireauth.ActionCodeUrl.prototype.getCode = function() {\n  return this.uri_.getParameterValue(\n      fireauth.ActionCodeUrl.QueryField.CODE) || null;\n};\n\n\n/**\n * Returns the mode parameter of action code URL.\n * @return {?string} The first mode value in action code URL or\n *     undefined if mode does not appear in the URL.\n */\nfireauth.ActionCodeUrl.prototype.getMode = function() {\n  return this.uri_.getParameterValue(\n      fireauth.ActionCodeUrl.QueryField.MODE) || null;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase dynamic link constructor.\n */\n\ngoog.provide('fireauth.DynamicLink');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Uri');\n\n\n/**\n * Dynamic link builder used to help build the FDL link to redirect to an app\n * while passing some payload or error.\n * @param {?string} fdlDomain The FDL domain. If none is available, custom\n *     scheme redirects are used.\n * @param {!fireauth.DynamicLink.Platform} platform The FDL supported\n *     platform (Android or iOS).\n * @param {string} appIdentifier The app identifier (iOS bundle ID or Android\n *     package name).\n * @param {string} authDomain The Firebase application authDomain.\n * @param {string} payload The FDL deep link content.\n * @param {?string=} opt_clientId The optional OAuth client ID.\n * @constructor\n */\nfireauth.DynamicLink = function(fdlDomain, platform, appIdentifier, authDomain,\n    payload, opt_clientId) {\n  // The fallback error when the app is not installed on the device.\n  var defaultError =\n      new fireauth.AuthError(fireauth.authenum.Error.APP_NOT_INSTALLED);\n  /** @private {string} The fallback URL when the app is not installed. */\n  this.fallbackUrl_ = 'https://' + authDomain + '/__/auth/handler?' +\n      'firebaseError=' + encodeURIComponent(/** @type {string} */ (\n          fireauth.util.stringifyJSON(defaultError.toPlainObject())));\n  fireauth.object.setReadonlyProperty(this, 'fallbackUrl', this.fallbackUrl_);\n  /** @private {?string} The FDL domain if available. */\n  this.fdlDomain_ = fdlDomain;\n  fireauth.object.setReadonlyProperty(this, 'fdlDomain', fdlDomain);\n  /** @private {!fireauth.DynamicLink.Platform} The FDL link platform. */\n  this.platform_ = platform;\n  fireauth.object.setReadonlyProperty(this, 'platform', platform);\n  /** @private {string} The app identifier. */\n  this.appIdentifier_ = appIdentifier;\n  fireauth.object.setReadonlyProperty(this, 'appIdentifier', appIdentifier);\n  /** @private {string} The Firebase application authDomain. */\n  this.authDomain_ = authDomain;\n  fireauth.object.setReadonlyProperty(this, 'authDomain', authDomain);\n  /** @private {string} The FDL deep link content. */\n  this.link_ = payload;\n  fireauth.object.setReadonlyProperty(this, 'payload', payload);\n  /** @private {?string} The application display name. */\n  this.appName_ = null;\n  fireauth.object.setReadonlyProperty(this, 'appName', null);\n  /** @private {?string} The client ID if available. */\n  this.clientId_ = opt_clientId || null;\n  fireauth.object.setReadonlyProperty(this, 'clientId', this.clientId_);\n};\n\n\n/**\n * Sets the app name for the current dynamic link.\n * @param {?string|undefined} appName The app name typically displayed in an FDL\n *     button.\n */\nfireauth.DynamicLink.prototype.setAppName = function(appName) {\n  this.appName_ = appName || null;\n  fireauth.object.setReadonlyProperty(this, 'appName', appName);\n};\n\n\n/**\n * Sets the dynamic link fallback URL overriding the default one.\n * @param {string} fallbackUrl The dynamic link fallback URL.\n */\nfireauth.DynamicLink.prototype.setFallbackUrl = function(fallbackUrl) {\n  this.fallbackUrl_ = fallbackUrl;\n  fireauth.object.setReadonlyProperty(this, 'fallbackUrl', fallbackUrl);\n};\n\n\n/**\n * Parses a dynamic link object from an automatic FDL redirect link.\n * @param {string} url The URL string to parse and convert to a dynamic link.\n * @return {?fireauth.DynamicLink} The corresponding dynamic link if applicable.\n */\nfireauth.DynamicLink.fromURL = function(url) {\n  // This constructs the Dynamic link from the URL provided.\n  var uri = goog.Uri.parse(url);\n  var fdlDomain = uri.getParameterValue('fdlDomain');\n  var platform = uri.getParameterValue('platform');\n  var appIdentifier = uri.getParameterValue('appIdentifier');\n  var authDomain = uri.getParameterValue('authDomain');\n  var payload = uri.getParameterValue('link');\n  var appName = uri.getParameterValue('appName');\n  if (fdlDomain && platform && appIdentifier && authDomain && payload &&\n      appName) {\n    var dl = new fireauth.DynamicLink(\n        /** @type {string} */ (fdlDomain),\n        /** @type {!fireauth.DynamicLink.Platform} */ (platform),\n        /** @type {string} */ (appIdentifier),\n        /** @type {string} */ (authDomain),\n        /** @type {string} */ (payload));\n    dl.setAppName(appName);\n    return dl;\n  }\n  return null;\n};\n\n\n/**\n * @param {string} url The dynamic link URL.\n * @return {string} The deep link embedded within the dynamic link.\n */\nfireauth.DynamicLink.parseDeepLink = function(url) {\n  var uri = goog.Uri.parse(url);\n  var link = uri.getParameterValue('link');\n  // Double link case (automatic redirect).\n  var doubleDeepLink = goog.Uri.parse(link).getParameterValue('link');\n  // iOS custom scheme links.\n  var iOSdeepLink = uri.getParameterValue('deep_link_id');\n  var iOSDoubledeepLink = goog.Uri.parse(iOSdeepLink).getParameterValue('link');\n  var callbackUrl =\n      iOSDoubledeepLink || iOSdeepLink || doubleDeepLink || link || url;\n  return callbackUrl;\n};\n\n\n/**\n * The supported FDL platforms.\n * @enum {string}\n */\nfireauth.DynamicLink.Platform = {\n  ANDROID: 'android',\n  IOS: 'ios'\n};\n\n\n/**\n * Constructs the common FDL link base used for building the button link or the\n * automatic redirect link.\n * @param {string} fallbackUrl The fallback URL to use.\n * @return {!goog.Uri} The partial URI of the FDL link used to build the final\n *     button link or the automatic redirect link.\n * @private\n */\nfireauth.DynamicLink.prototype.constructFdlBase_ = function(fallbackUrl) {\n  var uri = goog.Uri.create(\n      'https',\n      null,\n      this.fdlDomain_,\n      null,\n      '/');\n  if (this.platform_ == fireauth.DynamicLink.Platform.ANDROID) {\n    uri.setParameterValue('apn', this.appIdentifier_);\n    uri.setParameterValue('afl', fallbackUrl);\n  } else if (this.platform_ == fireauth.DynamicLink.Platform.IOS) {\n    uri.setParameterValue('ibi', this.appIdentifier_);\n    uri.setParameterValue('ifl', fallbackUrl);\n  }\n  return uri;\n};\n\n\n/**\n * Constructs the custom scheme URL. This is used when no FDL domain is\n * available.\n * @return {!goog.Uri} The uri of the dynamic link used to build the final\n *      button link or the automatic redirect link.\n * @private\n */\nfireauth.DynamicLink.prototype.constructCustomSchemeUrl_ = function() {\n  // This mimics the FDL custom scheme URL format.\n  var uri = goog.Uri.create(\n      this.clientId_ ? this.clientId_.split('.').reverse().join('.') :\n          this.appIdentifier_,\n      null,\n      // 'firebaseauth' is used in the app verification flow.\n      // 'google' is used for the Cordova iOS flow.\n      this.clientId_ ? 'firebaseauth' : 'google',\n      null,\n      '/link');\n  uri.setParameterValue('deep_link_id', this.link_);\n  return uri;\n};\n\n\n/**\n * @param {boolean=} opt_isAutoRedirect Whether the link is an auto redirect\n *     link.\n * @return {string} The generated dynamic link string.\n * @override\n */\nfireauth.DynamicLink.prototype.toString = function(opt_isAutoRedirect) {\n  // When FDL domain is not available, always returns the custom scheme URL.\n  if (!this.fdlDomain_) {\n    return this.constructCustomSchemeUrl_().toString();\n  }\n  if (!!opt_isAutoRedirect) {\n    return this.generateAutomaticRedirectLink_();\n  }\n  return this.generateButtonLink_();\n};\n\n\n/**\n * @return {string} The final FDL button link.\n * @private\n */\nfireauth.DynamicLink.prototype.generateButtonLink_ = function() {\n  var fdlLink = this.constructFdlBase_(this.fallbackUrl_);\n  fdlLink.setParameterValue('link', this.link_);\n  return fdlLink.toString();\n};\n\n\n/**\n * @return {string} The final FDL automatic redirect link.\n * @private\n */\nfireauth.DynamicLink.prototype.generateAutomaticRedirectLink_ =\n    function() {\n  var doubleDeeplink = goog.Uri.create(\n      'https',\n      null,\n      this.authDomain_,\n      null,\n      '/__/auth/callback');\n  doubleDeeplink.setParameterValue('fdlDomain', this.fdlDomain_);\n  doubleDeeplink.setParameterValue('platform', this.platform_);\n  doubleDeeplink.setParameterValue('appIdentifier', this.appIdentifier_);\n  doubleDeeplink.setParameterValue('authDomain', this.authDomain_);\n  doubleDeeplink.setParameterValue('link', this.link_);\n  doubleDeeplink.setParameterValue('appName', this.appName_ || '');\n  // The fallback URL is the deep link itself.\n  // This is in case the link fails to be intercepted by the app, FDL will\n  // redirect to the fallback URL.\n  var fdlLink = this.constructFdlBase_(doubleDeeplink.toString());\n  fdlLink.setParameterValue('link', doubleDeeplink.toString());\n  return fdlLink.toString();\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines Auth credentials used for signInWithCredential.\n */\n\ngoog.provide('fireauth.AuthCredential');\ngoog.provide('fireauth.AuthProvider');\ngoog.provide('fireauth.EmailAuthCredential');\ngoog.provide('fireauth.EmailAuthProvider');\ngoog.provide('fireauth.FacebookAuthProvider');\ngoog.provide('fireauth.FederatedProvider');\ngoog.provide('fireauth.GithubAuthProvider');\ngoog.provide('fireauth.GoogleAuthProvider');\ngoog.provide('fireauth.OAuthCredential');\ngoog.provide('fireauth.OAuthProvider');\ngoog.provide('fireauth.OAuthResponse');\ngoog.provide('fireauth.PhoneAuthCredential');\ngoog.provide('fireauth.PhoneAuthProvider');\ngoog.provide('fireauth.SAMLAuthCredential');\ngoog.provide('fireauth.SAMLAuthProvider');\ngoog.provide('fireauth.TwitterAuthProvider');\n\ngoog.require('fireauth.ActionCodeUrl');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.DynamicLink');\ngoog.require('fireauth.IdToken');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.object');\n\ngoog.forwardDeclare('fireauth.RpcHandler');\n\n\n\n/**\n * The interface that represents Auth credential. It provides the underlying\n * implementation for retrieving the ID token depending on the type of\n * credential.\n * @interface\n */\nfireauth.AuthCredential = function() {};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n */\nfireauth.AuthCredential.prototype.getIdTokenProvider;\n\n\n/**\n * Links the credential to an existing account, identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked.\n */\nfireauth.AuthCredential.prototype.linkToIdToken;\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     idToken UID match succeeds and returns the server response.\n */\nfireauth.AuthCredential.prototype.matchIdTokenWithUid;\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential. This\n *     will be exposed as toJSON() externally.\n */\nfireauth.AuthCredential.prototype.toPlainObject;\n\n\n/**\n * @param {!goog.Promise<!Object>} idTokenResolver A promise that resolves with\n *     the ID token response.\n * @param {string} uid The UID to match in the token response.\n * @return {!goog.Promise<!Object>} A promise that resolves with the same\n *     response if the UID matches.\n */\nfireauth.AuthCredential.verifyTokenResponseUid =\n    function(idTokenResolver, uid) {\n  return idTokenResolver.then(function(response) {\n    // This should not happen as rpcHandler verifyAssertion and verifyPassword\n    // always guarantee an ID token is available.\n    if (response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n      // Parse the token object.\n      var parsedIdToken = fireauth.IdToken.parse(\n          response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]);\n      // Confirm token localId matches the provided UID. If not, throw the user\n      // mismatch error.\n      if (!parsedIdToken || uid != parsedIdToken.getLocalId()) {\n        throw new fireauth.AuthError(fireauth.authenum.Error.USER_MISMATCH);\n      }\n      return response;\n    }\n    throw new fireauth.AuthError(fireauth.authenum.Error.USER_MISMATCH);\n  })\n  .thenCatch(function(error) {\n    // Translate auth/user-not-found error directly to auth/user-mismatch.\n    throw fireauth.AuthError.translateError(\n        error,\n        fireauth.authenum.Error.USER_DELETED,\n        fireauth.authenum.Error.USER_MISMATCH);\n  });\n};\n\n\n\n/**\n * The interface that represents the Auth provider.\n * @interface\n */\nfireauth.AuthProvider = function() {};\n\n\n/**\n * @param {...*} var_args The credential data.\n * @return {!fireauth.AuthCredential} The Auth provider credential.\n */\nfireauth.AuthProvider.credential;\n\n\n/**\n * @typedef {{\n *   accessToken: (?string|undefined),\n *   idToken: (?string|undefined),\n *   nonce: (?string|undefined),\n *   oauthToken: (?string|undefined),\n *   oauthTokenSecret: (?string|undefined),\n *   pendingToken: (?string|undefined)\n * }}\n */\nfireauth.OAuthResponse;\n\n\n/**\n * The SAML Auth credential class. The Constructor is not publicly visible.\n * This is constructed by the SDK on successful or failure after SAML sign-in\n * and returned to developer.\n * @param {!fireauth.idp.ProviderId} providerId The provider ID.\n * @param {string} pendingToken The SAML response pending token.\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.SAMLAuthCredential = function(providerId, pendingToken) {\n  if (pendingToken) {\n    /** @private {string} The pending token where SAML response is encrypted. */\n    this.pendingToken_ = pendingToken;\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'failed to construct a credential');\n  }\n\n  fireauth.object.setReadonlyProperty(this, 'providerId', providerId);\n  fireauth.object.setReadonlyProperty(this, 'signInMethod', providerId);\n};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.getIdTokenProvider =\n    function(rpcHandler) {\n  return rpcHandler.verifyAssertion(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (\n      this.makeVerifyAssertionRequest_()));\n};\n\n\n/**\n * Links the credential to an existing account, identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The rpc handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  var request = this.makeVerifyAssertionRequest_();\n  request['idToken'] = idToken;\n  return rpcHandler.verifyAssertionForLinking(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request));\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     idToken UID match succeeds and returns the server response.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  var request = this.makeVerifyAssertionRequest_();\n  // Do not create a new account if the user doesn't exist.\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      rpcHandler.verifyAssertionForExisting(\n          /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request)),\n      uid);\n};\n\n\n/**\n * @return {!Object} A request to the VerifyAssertion endpoint, populated with\n *     the assertion data from this credential.\n * @private\n */\nfireauth.SAMLAuthCredential.prototype.makeVerifyAssertionRequest_ =\n    function() {\n  return {\n    'pendingToken': this.pendingToken_,\n    // Always use http://localhost.\n    'requestUri': 'http://localhost'\n  };\n};\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.toPlainObject = function() {\n  return {\n    'providerId': this['providerId'],\n    'signInMethod': this['signInMethod'],\n    'pendingToken': this.pendingToken_\n  };\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of a\n *     SAMLAuthCredential.\n * @return {?fireauth.SAMLAuthCredential} The SAML credential if the object\n *     is a JSON representation of a SAMLAuthCredential, null otherwise.\n */\nfireauth.SAMLAuthCredential.fromJSON = function(json) {\n  if (json &&\n      json['providerId'] &&\n      json['signInMethod'] &&\n      json['providerId'].indexOf(fireauth.constants.SAML_PREFIX) == 0 &&\n      json['pendingToken']) {\n    try {\n      return new fireauth.SAMLAuthCredential(\n          json['providerId'], json['pendingToken']);\n    } catch (e) {\n      return null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * The OAuth credential class.\n * @param {!fireauth.idp.ProviderId} providerId The provider ID.\n * @param {!fireauth.OAuthResponse} oauthResponse The OAuth\n *     response object containing token information.\n * @param {!fireauth.idp.SignInMethod} signInMethod The sign in method.\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.OAuthCredential = function(providerId, oauthResponse, signInMethod) {\n  /**\n   * @private {?string} The pending token where the IdP response is encrypted.\n   */\n  this.pendingToken_ = null;\n  if (oauthResponse['idToken'] || oauthResponse['accessToken']) {\n    // OAuth 2 and either ID token or access token.\n    if (oauthResponse['idToken']) {\n      fireauth.object.setReadonlyProperty(\n          this, 'idToken', oauthResponse['idToken']);\n    }\n    if (oauthResponse['accessToken']) {\n      fireauth.object.setReadonlyProperty(\n          this, 'accessToken', oauthResponse['accessToken']);\n    }\n    // Add nonce if available and no pendingToken is present.\n    if (oauthResponse['nonce'] && !oauthResponse['pendingToken']) {\n      fireauth.object.setReadonlyProperty(\n          this, 'nonce', oauthResponse['nonce']);\n    }\n    if (oauthResponse['pendingToken']) {\n      this.pendingToken_ = oauthResponse['pendingToken'];\n    }\n  } else if (oauthResponse['oauthToken'] &&\n             oauthResponse['oauthTokenSecret'])  {\n    // OAuth 1 and OAuth token with OAuth token secret.\n    fireauth.object.setReadonlyProperty(\n        this, 'accessToken', oauthResponse['oauthToken']);\n    fireauth.object.setReadonlyProperty(\n        this, 'secret', oauthResponse['oauthTokenSecret']);\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'failed to construct a credential');\n  }\n\n  fireauth.object.setReadonlyProperty(this, 'providerId', providerId);\n  fireauth.object.setReadonlyProperty(this, 'signInMethod', signInMethod);\n};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n * @override\n */\nfireauth.OAuthCredential.prototype.getIdTokenProvider = function(rpcHandler) {\n  return rpcHandler.verifyAssertion(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (\n      this.makeVerifyAssertionRequest_()));\n};\n\n\n/**\n * Links the credential to an existing account, identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The rpc handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.OAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  var request = this.makeVerifyAssertionRequest_();\n  request['idToken'] = idToken;\n  return rpcHandler.verifyAssertionForLinking(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request));\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     idToken UID match succeeds and returns the server response.\n * @override\n */\nfireauth.OAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  var request = this.makeVerifyAssertionRequest_();\n  // Do not create a new account if the user doesn't exist.\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      rpcHandler.verifyAssertionForExisting(\n          /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request)),\n      uid);\n};\n\n\n/**\n * @return {!Object} A request to the VerifyAssertion endpoint, populated with\n *     the OAuth data from this credential.\n * @private\n */\nfireauth.OAuthCredential.prototype.makeVerifyAssertionRequest_ = function() {\n  var postBody = {};\n  if (this['idToken']) {\n    postBody['id_token'] = this['idToken'];\n  }\n  if (this['accessToken']) {\n    postBody['access_token'] = this['accessToken'];\n  }\n  if (this['secret']) {\n    postBody['oauth_token_secret'] = this['secret'];\n  }\n  postBody['providerId'] = this['providerId'];\n  // Pass nonce in postBody if available.\n  if (this['nonce'] && !this.pendingToken_) {\n    postBody['nonce'] = this['nonce'];\n  }\n  var request = {\n    'postBody': goog.Uri.QueryData.createFromMap(postBody).toString(),\n    // Always use http://localhost.\n    'requestUri': 'http://localhost'\n  };\n  if (this.pendingToken_) {\n    // For pendingToken, just pass it through and drop postBody.\n    delete request['postBody'];\n    request['pendingToken'] = this.pendingToken_;\n  }\n  return request;\n};\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential.\n * @override\n */\nfireauth.OAuthCredential.prototype.toPlainObject = function() {\n  var obj = {\n    'providerId': this['providerId'],\n    'signInMethod': this['signInMethod']\n  };\n  if (this['idToken']) {\n    obj['oauthIdToken'] = this['idToken'];\n  }\n  if (this['accessToken']) {\n    obj['oauthAccessToken'] = this['accessToken'];\n  }\n  if (this['secret']) {\n    obj['oauthTokenSecret'] = this['secret'];\n  }\n  if (this['nonce']) {\n    obj['nonce'] = this['nonce'];\n  }\n  if (this.pendingToken_) {\n    obj['pendingToken'] = this.pendingToken_;\n  }\n  return obj;\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of an\n *     OAuthCredential.\n * @return {?fireauth.OAuthCredential} The OAuth/OIDC credential if the object\n *     is a JSON representation of an OAuthCredential, null otherwise.\n */\nfireauth.OAuthCredential.fromJSON = function(json) {\n  if (json &&\n      json['providerId'] &&\n      json['signInMethod']) {\n    // Convert to OAuthResponse format.\n    var oauthResponse = {\n      // OIDC && google.com.\n      'idToken': json['oauthIdToken'],\n      // OAuth 2.0 providers.\n      'accessToken': json['oauthTokenSecret'] ? null : json['oauthAccessToken'],\n      // OAuth 1.0 provider, eg. Twitter.\n      'oauthTokenSecret': json['oauthTokenSecret'],\n      'oauthToken': json['oauthTokenSecret'] && json['oauthAccessToken'],\n      'nonce': json['nonce'],\n      'pendingToken': json['pendingToken']\n    };\n    try {\n      // Constructor will validate the OAuthResponse.\n      return new fireauth.OAuthCredential(\n          json['providerId'], oauthResponse, json['signInMethod']);\n    } catch (e) {\n      return null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * A generic OAuth provider (OAuth1 or OAuth2).\n * @param {string} providerId The IdP provider ID (e.g. google.com,\n *     facebook.com) registered with the backend.\n * @param {?Array<string>=} opt_reservedParams The backlist of parameters that\n *     cannot be set through setCustomParameters.\n * @constructor\n */\nfireauth.FederatedProvider = function(providerId, opt_reservedParams) {\n  /** @private {!Array<string>} */\n  this.reservedParams_ = opt_reservedParams || [];\n\n  // Set read only instance providerId property.\n  // Set read only instance isOAuthProvider property.\n  fireauth.object.setReadonlyProperties(this, {\n    'providerId': providerId,\n    'isOAuthProvider': true\n  });\n\n  /** @private {!Object} The OAuth custom parameters for current provider. */\n  this.customParameters_ = {};\n  /** @protected {?string} The custom OAuth language parameter. */\n  this.languageParameter =\n      (fireauth.idp.getIdpSettings(/** @type {!fireauth.idp.ProviderId} */ (\n          providerId)) || {}).languageParam || null;\n  /** @protected {?string} The default language. */\n  this.defaultLanguageCode = null;\n};\n\n/**\n * @param {!Object} customParameters The custom OAuth parameters to pass\n *     in OAuth request.\n * @return {!fireauth.FederatedProvider} The FederatedProvider instance, for\n *     chaining method calls.\n */\nfireauth.FederatedProvider.prototype.setCustomParameters =\n    function(customParameters) {\n  this.customParameters_ = goog.object.clone(customParameters);\n  return this;\n};\n\n\n/**\n * Set the default language code on the provider instance.\n * @param {?string} languageCode The default language code to set if not already\n *     provided in the custom parameters.\n */\nfireauth.FederatedProvider.prototype.setDefaultLanguage =\n    function(languageCode) {\n  this.defaultLanguageCode = languageCode;\n};\n\n\n/**\n * @return {!Object} The custom OAuth parameters to pass in OAuth request.\n */\nfireauth.FederatedProvider.prototype.getCustomParameters = function() {\n  // The backend already checks for these values and makes sure no reserved\n  // fields like client ID, redirect URI, state are overwritten by these\n  // fields.\n  var params =\n      fireauth.util.copyWithoutNullsOrUndefined(this.customParameters_);\n  // Convert to strings.\n  for (var key in params) {\n    params[key] = params[key].toString();\n  }\n  // Remove blacklisted OAuth custom parameters.\n  var customParams =\n      fireauth.util.removeEntriesWithKeys(params, this.reservedParams_);\n  // If language param supported and not already provided, use default language.\n  if (this.languageParameter &&\n      this.defaultLanguageCode &&\n      !customParams[this.languageParameter]) {\n    customParams[this.languageParameter] = this.defaultLanguageCode;\n  }\n  return customParams;\n};\n\n\n/**\n * Generic SAML auth provider.\n * @param {string} providerId The SAML IdP provider ID (e.g. saml.saml2rp)\n *     registered with the backend.\n * @constructor\n * @extends {fireauth.FederatedProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.SAMLAuthProvider = function(providerId) {\n  // SAML provider IDs must be prefixed with the SAML_PREFIX.\n  if (!fireauth.idp.isSaml(providerId)) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'SAML provider IDs must be prefixed with \"' +\n        fireauth.constants.SAML_PREFIX + '\"');\n  }\n  // isOAuthProvider is true even though this is not an OAuth provider.\n  // This can be confusing as this is a SAML provider. However, this property\n  // is needed to allow signInWithPopup/Redirect. We should rename it to\n  // something more accurate: isFederatedProvider.\n  fireauth.SAMLAuthProvider.base(this, 'constructor', providerId, []);\n};\ngoog.inherits(fireauth.SAMLAuthProvider, fireauth.FederatedProvider);\n\n\n/**\n * Generic OAuth2 Auth provider.\n * @param {string} providerId The IdP provider ID (e.g. google.com,\n *     facebook.com) registered with the backend.\n * @constructor\n * @extends {fireauth.FederatedProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.OAuthProvider = function(providerId) {\n  fireauth.OAuthProvider.base(this, 'constructor', providerId,\n      fireauth.idp.RESERVED_OAUTH2_PARAMS);\n\n  /** @private {!Array<string>} The list of OAuth2 scopes to request. */\n  this.scopes_ = [];\n};\ngoog.inherits(fireauth.OAuthProvider, fireauth.FederatedProvider);\n\n\n/**\n * @param {string} scope The OAuth scope to request.\n * @return {!fireauth.OAuthProvider} The OAuthProvider instance, for chaining\n *     method calls.\n */\nfireauth.OAuthProvider.prototype.addScope = function(scope) {\n  // If not already added, add scope to list.\n  if (!goog.array.contains(this.scopes_, scope)) {\n    this.scopes_.push(scope);\n  }\n  return this;\n};\n\n\n/** @return {!Array<string>} The Auth provider's list of scopes. */\nfireauth.OAuthProvider.prototype.getScopes = function() {\n  return goog.array.clone(this.scopes_);\n};\n\n\n/**\n * Initializes an OAuth AuthCredential. At least one of ID token or access token\n * must be defined. When providing an OIDC ID token with a nonce encoded, the\n * raw nonce must also be provided.\n * @param {?string=} opt_idToken The optional OAuth ID token.\n * @param {?string=} opt_accessToken The optional OAuth access token.\n * @param {?string=} opt_rawNonce The optional raw nonce.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n */\nfireauth.OAuthProvider.prototype.credential = function(opt_idToken,\n    opt_accessToken, opt_rawNonce) {\n  if (!opt_idToken && !opt_accessToken) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: must provide the ID token and/or the access ' +\n        'token.');\n  }\n  var oauthResponse = {\n    'idToken': opt_idToken || null,\n    'accessToken': opt_accessToken || null,\n    'nonce': opt_rawNonce || null\n  };\n  // For OAuthCredential, sign in method is same as providerId.\n  return new fireauth.OAuthCredential(this['providerId'],\n                                      oauthResponse,\n                                      this['providerId']);\n};\n\n\n/**\n * Facebook Auth provider.\n * @constructor\n * @extends {fireauth.OAuthProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.FacebookAuthProvider = function() {\n  fireauth.FacebookAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.FACEBOOK);\n};\ngoog.inherits(fireauth.FacebookAuthProvider, fireauth.OAuthProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.FacebookAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.FACEBOOK);\n\nfireauth.object.setReadonlyProperty(fireauth.FacebookAuthProvider,\n    'FACEBOOK_SIGN_IN_METHOD', fireauth.idp.SignInMethod.FACEBOOK);\n\n\n/**\n * Initializes a Facebook AuthCredential.\n * @param {string} accessTokenOrObject The Facebook access token, or object\n *     containing the token for FirebaseUI backwards compatibility.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.FacebookAuthProvider.credential = function(accessTokenOrObject) {\n  if (!accessTokenOrObject) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: expected 1 argument (the OAuth access token).');\n  }\n  var accessToken = accessTokenOrObject;\n  if (goog.isObject(accessTokenOrObject)) {\n    accessToken = accessTokenOrObject['accessToken'];\n  }\n  return new fireauth.FacebookAuthProvider().credential(null,\n      /** @type {string} */ (accessToken));\n};\n\n\n/**\n * GitHub Auth provider.\n * @constructor\n * @extends {fireauth.OAuthProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.GithubAuthProvider = function() {\n  fireauth.GithubAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.GITHUB);\n};\ngoog.inherits(fireauth.GithubAuthProvider, fireauth.OAuthProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.GithubAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.GITHUB);\n\nfireauth.object.setReadonlyProperty(fireauth.GithubAuthProvider,\n    'GITHUB_SIGN_IN_METHOD', fireauth.idp.SignInMethod.GITHUB);\n\n\n/**\n * Initializes a GitHub AuthCredential.\n * @param {string} accessTokenOrObject The GitHub access token, or object\n *     containing the token for FirebaseUI backwards compatibility.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.GithubAuthProvider.credential = function(accessTokenOrObject) {\n  if (!accessTokenOrObject) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: expected 1 argument (the OAuth access token).');\n  }\n  var accessToken = accessTokenOrObject;\n  if (goog.isObject(accessTokenOrObject)) {\n    accessToken = accessTokenOrObject['accessToken'];\n  }\n  return new fireauth.GithubAuthProvider().credential(null,\n      /** @type {string} */ (accessToken));\n};\n\n\n/**\n * Google Auth provider.\n * @constructor\n * @extends {fireauth.OAuthProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.GoogleAuthProvider = function() {\n  fireauth.GoogleAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.GOOGLE);\n\n  // Add profile scope to Google Auth provider as default scope.\n  // This is to ensure profile info is populated in current user.\n  this.addScope('profile');\n};\ngoog.inherits(fireauth.GoogleAuthProvider, fireauth.OAuthProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.GoogleAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.GOOGLE);\n\nfireauth.object.setReadonlyProperty(fireauth.GoogleAuthProvider,\n    'GOOGLE_SIGN_IN_METHOD', fireauth.idp.SignInMethod.GOOGLE);\n\n\n/**\n * Initializes a Google AuthCredential.\n * @param {?string=} idTokenOrObject The Google ID token. If null or undefined,\n *     we expect the access token to be passed. It can also be an object\n *     containing the tokens for FirebaseUI backwards compatibility.\n * @param {?string=} accessToken The Google access token. If null or\n *     undefined, we expect the ID token to have been passed.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.GoogleAuthProvider.credential =\n    function(idTokenOrObject, accessToken) {\n  var idToken = idTokenOrObject;\n  if (goog.isObject(idTokenOrObject)) {\n    idToken = idTokenOrObject['idToken'];\n    accessToken = idTokenOrObject['accessToken'];\n  }\n  return new fireauth.GoogleAuthProvider().credential(\n      /** @type {string} */ (idToken), /** @type {string} */ (accessToken));\n};\n\n\n/**\n * Twitter Auth provider.\n * @constructor\n * @extends {fireauth.FederatedProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.TwitterAuthProvider = function() {\n  fireauth.TwitterAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.TWITTER,\n      fireauth.idp.RESERVED_OAUTH1_PARAMS);\n};\ngoog.inherits(fireauth.TwitterAuthProvider, fireauth.FederatedProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.TwitterAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.TWITTER);\n\nfireauth.object.setReadonlyProperty(fireauth.TwitterAuthProvider,\n    'TWITTER_SIGN_IN_METHOD', fireauth.idp.SignInMethod.TWITTER);\n\n\n/**\n * Initializes a Twitter AuthCredential.\n * @param {string} tokenOrObject The Twitter access token, or object\n *     containing the token for FirebaseUI backwards compatibility.\n * @param {string} secret The Twitter secret.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.TwitterAuthProvider.credential = function(tokenOrObject, secret) {\n  var tokenObject = tokenOrObject;\n  if (!goog.isObject(tokenObject)) {\n    tokenObject = {\n      'oauthToken': tokenOrObject,\n      'oauthTokenSecret': secret\n    };\n  }\n\n  if (!tokenObject['oauthToken'] || !tokenObject['oauthTokenSecret']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: expected 2 arguments (the OAuth access token ' +\n        'and secret).');\n  }\n\n  return new fireauth.OAuthCredential(fireauth.idp.ProviderId.TWITTER,\n      /** @type {!fireauth.OAuthResponse} */ (tokenObject),\n      fireauth.idp.SignInMethod.TWITTER);\n};\n\n\n/**\n * The email and password credential class.\n * @param {string} email The credential email.\n * @param {string} password The credential password.\n * @param {string=} opt_signInMethod The credential sign in method can be either\n *     'password' or 'emailLink'\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.EmailAuthCredential = function(email, password, opt_signInMethod) {\n  this.email_ = email;\n  this.password_ = password;\n  fireauth.object.setReadonlyProperty(this, 'providerId',\n      fireauth.idp.ProviderId.PASSWORD);\n  var signInMethod = opt_signInMethod ===\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD'] ?\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD'] :\n      fireauth.EmailAuthProvider['EMAIL_PASSWORD_SIGN_IN_METHOD'];\n  fireauth.object.setReadonlyProperty(this, 'signInMethod', signInMethod);\n};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.getIdTokenProvider =\n    function(rpcHandler) {\n  if (this['signInMethod'] ==\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD']) {\n    return rpcHandler.emailLinkSignIn(this.email_, this.password_);\n  }\n  return rpcHandler.verifyPassword(this.email_, this.password_);\n};\n\n\n/**\n * Adds an email and password account to an existing account, identified by an\n * ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  if (this['signInMethod'] ==\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD']) {\n    return rpcHandler.emailLinkSignInForLinking(\n        idToken, this.email_, this.password_);\n  }\n  return rpcHandler.updateEmailAndPassword(\n      idToken, this.email_, this.password_);\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The rpc handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     reauthentication succeeds.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  // Do not create a new account if the user doesn't exist.\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      // This shouldn't create a new email/password account.\n      this.getIdTokenProvider(rpcHandler),\n      uid);\n};\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.toPlainObject = function() {\n  return {\n    'email': this.email_,\n    'password': this.password_,\n    'signInMethod': this['signInMethod']\n  };\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of a\n *     EmailAuthCredential.\n * @return {?fireauth.EmailAuthCredential} The email credential if the object\n *     is a JSON representation of an EmailAuthCredential, null otherwise.\n */\nfireauth.EmailAuthCredential.fromJSON = function(json) {\n  if (json && json['email'] && json['password']) {\n    return new fireauth.EmailAuthCredential(\n        json['email'],\n        json['password'],\n        json['signInMethod']);\n  }\n  return null;\n};\n\n\n/**\n * Email password Auth provider implementation.\n * @constructor\n * @implements {fireauth.AuthProvider}\n */\nfireauth.EmailAuthProvider = function() {\n  // Set read-only instance providerId and isOAuthProvider property.\n  fireauth.object.setReadonlyProperties(this, {\n    'providerId': fireauth.idp.ProviderId.PASSWORD,\n    'isOAuthProvider': false\n  });\n};\n\n\n/**\n * Initializes an instance of an email/password Auth credential.\n * @param {string} email The credential email.\n * @param {string} password The credential password.\n * @return {!fireauth.EmailAuthCredential} The Auth credential object.\n * @override\n */\nfireauth.EmailAuthProvider.credential = function(email, password) {\n  return new fireauth.EmailAuthCredential(email, password);\n};\n\n\n/**\n * @param {string} email The credential email.\n * @param {string} emailLink The credential email link.\n * @return {!fireauth.EmailAuthCredential} The Auth credential object.\n */\nfireauth.EmailAuthProvider.credentialWithLink = function(email, emailLink) {\n  var code = fireauth.EmailAuthProvider\n      .getActionCodeFromSignInEmailLink(emailLink);\n  if (!code) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR, 'Invalid email link!');\n  }\n  return new fireauth.EmailAuthCredential(email, code,\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD']);\n};\n\n\n/**\n * @param {string} emailLink The sign in email link to be validated.\n * @return {?string} Action code if the email link is valid, otherwise null.\n */\nfireauth.EmailAuthProvider.getActionCodeFromSignInEmailLink =\n    function(emailLink) {\n  emailLink = fireauth.DynamicLink.parseDeepLink(emailLink);\n  var actionCodeUrl = new fireauth.ActionCodeUrl(emailLink);\n  var code = actionCodeUrl.getCode();\n  if (actionCodeUrl.getMode() === fireauth.ActionCodeUrl.Mode.SIGN_IN && code) {\n    return code;\n  }\n  return null;\n};\n\n\n// Set read only PROVIDER_ID property.\nfireauth.object.setReadonlyProperties(fireauth.EmailAuthProvider, {\n  'PROVIDER_ID': fireauth.idp.ProviderId.PASSWORD\n});\n\n// Set read only EMAIL_LINK_SIGN_IN_METHOD property.\nfireauth.object.setReadonlyProperties(fireauth.EmailAuthProvider, {\n  'EMAIL_LINK_SIGN_IN_METHOD': fireauth.idp.SignInMethod.EMAIL_LINK\n});\n\n// Set read only EMAIL_PASSWORD_SIGN_IN_METHOD property.\nfireauth.object.setReadonlyProperties(fireauth.EmailAuthProvider, {\n  'EMAIL_PASSWORD_SIGN_IN_METHOD': fireauth.idp.SignInMethod.EMAIL_PASSWORD\n});\n\n\n/**\n * A credential for phone number sign-in.\n * @param {!fireauth.PhoneAuthCredential.Parameters_} params The credential\n *     parameters that prove the user owns the claimed phone number.\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.PhoneAuthCredential = function(params) {\n  // Either verification ID and code, or phone number temporary proof must be\n  // provided.\n  if (!(params.verificationId && params.verificationCode) &&\n      !(params.temporaryProof && params.phoneNumber)) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n\n  /**\n   * The phone Auth parameters that prove ownership of a phone number, either\n   * through completion of a phone verification flow, or by referencing a\n   * previously completed verification flow (\"temporaryProof\").\n   * @private {!fireauth.PhoneAuthCredential.Parameters_}\n   */\n  this.params_ = params;\n\n  fireauth.object.setReadonlyProperty(this, 'providerId',\n      fireauth.idp.ProviderId.PHONE);\n\n  fireauth.object.setReadonlyProperty(\n      this, 'signInMethod', fireauth.idp.SignInMethod.PHONE);\n};\n\n\n/**\n * Parameters that prove ownership of a phone number via a ID \"verificationId\"\n * of a request to send a code to the phone number, with the code\n * \"verificationCode\" that the user received on their phone.\n * @private\n * @typedef {{\n *   verificationId: string,\n *   verificationCode: string\n * }}\n */\nfireauth.PhoneAuthCredential.VerificationParameters_;\n\n\n/**\n * Parameters that prove ownership of a phone number by referencing a previously\n * completed phone Auth flow.\n * @private\n * @typedef {{\n *   temporaryProof: string,\n *   phoneNumber: string\n * }}\n */\nfireauth.PhoneAuthCredential.TemporaryProofParameters_;\n\n\n/**\n * @private\n * @typedef {\n *   !fireauth.PhoneAuthCredential.VerificationParameters_|\n *   !fireauth.PhoneAuthCredential.TemporaryProofParameters_\n * }\n */\nfireauth.PhoneAuthCredential.Parameters_;\n\n\n/**\n * Retrieves an ID token from the backend given the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object>} A Promise that resolves with the\n *     backend response.\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.getIdTokenProvider =\n    function(rpcHandler) {\n  return rpcHandler.verifyPhoneNumber(this.makeVerifyPhoneNumberRequest_());\n};\n\n\n/**\n * Adds a phone credential to an existing account identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  var request = this.makeVerifyPhoneNumberRequest_();\n  request['idToken'] = idToken;\n  return rpcHandler.verifyPhoneNumberForLinking(request);\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     reauthentication succeeds.\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  var request = this.makeVerifyPhoneNumberRequest_();\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      rpcHandler.verifyPhoneNumberForExisting(request),\n      uid);\n};\n\n\n/**\n * Converts a PhoneAuthCredential to a plain object.\n * @return {!Object}\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.toPlainObject = function() {\n  var obj =  {\n    'providerId': fireauth.idp.ProviderId.PHONE\n  };\n  if (this.params_.verificationId) {\n    obj['verificationId'] = this.params_.verificationId;\n  }\n  if (this.params_.verificationCode) {\n    obj['verificationCode'] = this.params_.verificationCode;\n  }\n  if (this.params_.temporaryProof) {\n    obj['temporaryProof'] = this.params_.temporaryProof;\n  }\n  if (this.params_.phoneNumber) {\n    obj['phoneNumber'] = this.params_.phoneNumber;\n  }\n  return obj;\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of a\n *     PhoneAuthCredential.\n * @return {?fireauth.PhoneAuthCredential} The phone credential if the object\n *     is a JSON representation of an PhoneAuthCredential, null otherwise.\n */\nfireauth.PhoneAuthCredential.fromJSON = function(json) {\n  if (json &&\n      json['providerId'] === fireauth.idp.ProviderId.PHONE &&\n      ((json['verificationId'] && json['verificationCode']) ||\n       (json['temporaryProof'] && json['phoneNumber']))) {\n    var params = {};\n    var allowedKeys = [\n      'verificationId', 'verificationCode', 'temporaryProof', 'phoneNumber'\n    ];\n    goog.array.forEach(allowedKeys, function(key) {\n      if (json[key]) {\n        params[key] = json[key];\n      }\n    });\n    return new fireauth.PhoneAuthCredential(\n        /** @type {!fireauth.PhoneAuthCredential.Parameters_} */ (params));\n  }\n  return null;\n};\n\n\n/**\n * @return {!Object} A request to the verifyPhoneNumber endpoint based on the\n *     current state of the object.\n * @private\n */\nfireauth.PhoneAuthCredential.prototype.makeVerifyPhoneNumberRequest_ =\n    function() {\n  if (this.params_.temporaryProof && this.params_.phoneNumber) {\n    return {\n      'temporaryProof': this.params_.temporaryProof,\n      'phoneNumber': this.params_.phoneNumber\n    };\n  }\n\n  return {\n    'sessionInfo': this.params_.verificationId,\n    'code': this.params_.verificationCode\n  };\n};\n\n\n/**\n * Phone Auth provider implementation.\n * @param {?fireauth.Auth=} opt_auth The Firebase Auth instance.\n * @constructor\n * @implements {fireauth.AuthProvider}\n */\nfireauth.PhoneAuthProvider = function(opt_auth) {\n  try {\n    /** @private {!fireauth.Auth} */\n    this.auth_ = opt_auth || firebase['auth']();\n  } catch (e) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'Either an instance of firebase.auth.Auth must be passed as an ' +\n        'argument to the firebase.auth.PhoneAuthProvider constructor, or the ' +\n        'default firebase App instance must be initialized via ' +\n        'firebase.initializeApp().');\n  }\n  fireauth.object.setReadonlyProperties(this, {\n    'providerId': fireauth.idp.ProviderId.PHONE,\n    'isOAuthProvider': false\n  });\n};\n\n\n/**\n * Initiates a phone number confirmation flow.\n * @param {string} phoneNumber The user's phone number.\n * @param {!firebase.auth.ApplicationVerifier} applicationVerifier The\n *     application verifier for anti-abuse purposes.\n * @return {!goog.Promise<string>} A Promise that resolves with the\n *     verificationId of the phone number confirmation flow.\n */\nfireauth.PhoneAuthProvider.prototype.verifyPhoneNumber =\n    function(phoneNumber, applicationVerifier) {\n  var rpcHandler = this.auth_.getRpcHandler();\n\n  // Convert the promise into a goog.Promise. If the applicationVerifier throws\n  // an error, just propagate it to the client. Reset the reCAPTCHA widget every\n  // time after sending the token to the server.\n  return goog.Promise.resolve(applicationVerifier['verify']())\n      .then(function(assertion) {\n        if (!goog.isString(assertion)) {\n          throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n              'An implementation of firebase.auth.ApplicationVerifier' +\n              '.prototype.verify() must return a firebase.Promise ' +\n              'that resolves with a string.');\n        }\n\n        switch (applicationVerifier['type']) {\n          case 'recaptcha':\n            return rpcHandler\n                .sendVerificationCode(\n                    {'phoneNumber': phoneNumber, 'recaptchaToken': assertion})\n                .then(\n                    function(verificationId) {\n                      if (typeof applicationVerifier.reset === 'function') {\n                        applicationVerifier.reset();\n                      }\n                      return verificationId;\n                    },\n                    function(error) {\n                      if (typeof applicationVerifier.reset === 'function') {\n                        applicationVerifier.reset();\n                      }\n                      throw error;\n                    });\n          default:\n            throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n                'Only firebase.auth.ApplicationVerifiers with ' +\n                'type=\"recaptcha\" are currently supported.');\n        }\n      });\n};\n\n\n/**\n * Creates a PhoneAuthCredential.\n * @param {string} verificationId The ID of the phone number flow, to correlate\n *     this request with a previous call to\n *     PhoneAuthProvider.prototype.verifyPhoneNumber.\n * @param {string} verificationCode The verification code that was sent to the\n *     user's phone.\n * @return {!fireauth.PhoneAuthCredential}\n * @override\n */\nfireauth.PhoneAuthProvider.credential =\n    function(verificationId, verificationCode) {\n  if (!verificationId) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_SESSION_INFO);\n  }\n  if (!verificationCode) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CODE);\n  }\n  return new fireauth.PhoneAuthCredential({\n    verificationId: verificationId,\n    verificationCode: verificationCode\n  });\n};\n\n\n// Set read only PROVIDER_ID property.\nfireauth.object.setReadonlyProperties(fireauth.PhoneAuthProvider, {\n  'PROVIDER_ID': fireauth.idp.ProviderId.PHONE\n});\n\n\n// Set read only PHONE_SIGN_IN_METHOD property.\nfireauth.object.setReadonlyProperties(fireauth.PhoneAuthProvider, {\n  'PHONE_SIGN_IN_METHOD': fireauth.idp.SignInMethod.PHONE\n});\n\n\n/**\n * Constructs an Auth credential from a backend response.\n * Note, unlike fromJSON which constructs the AuthCredential from a toJSON()\n * response, this helper constructs the credential from the server response.\n * @param {?Object} response The backend response to build a credential from.\n * @return {?fireauth.AuthCredential} The corresponding AuthCredential.\n */\nfireauth.AuthProvider.getCredentialFromResponse = function(response) {\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId).\n  if (response['temporaryProof'] && response['phoneNumber']) {\n    return new fireauth.PhoneAuthCredential({\n      temporaryProof: response['temporaryProof'],\n      phoneNumber: response['phoneNumber']\n    });\n  }\n\n  // Get all OAuth response parameters from response.\n  var providerId = response && response['providerId'];\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === fireauth.idp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  var accessToken = response && response['oauthAccessToken'];\n  var accessTokenSecret = response && response['oauthTokenSecret'];\n  // Note this is not actually returned by the backend. It is introduced in\n  // rpcHandler.\n  var rawNonce = response && response['nonce'];\n  // Google Id Token returned when no additional scopes provided.\n  var idToken = response && response['oauthIdToken'];\n  // Pending token for SAML and OAuth/OIDC providers.\n  var pendingToken = response && response['pendingToken'];\n  try {\n    switch (providerId) {\n      case fireauth.idp.ProviderId.GOOGLE:\n        return fireauth.GoogleAuthProvider.credential(\n            idToken, accessToken);\n\n      case fireauth.idp.ProviderId.FACEBOOK:\n        return fireauth.FacebookAuthProvider.credential(\n            accessToken);\n\n      case fireauth.idp.ProviderId.GITHUB:\n        return fireauth.GithubAuthProvider.credential(\n            accessToken);\n\n      case fireauth.idp.ProviderId.TWITTER:\n        return fireauth.TwitterAuthProvider.credential(\n            accessToken, accessTokenSecret);\n\n      default:\n        if (!accessToken && !accessTokenSecret && !idToken && !pendingToken) {\n          return null;\n        }\n        if (pendingToken) {\n          if (providerId.indexOf(fireauth.constants.SAML_PREFIX) == 0) {\n            return new fireauth.SAMLAuthCredential(providerId, pendingToken);\n          } else {\n            // OIDC and non-default providers excluding Twitter.\n            return new fireauth.OAuthCredential(\n                providerId,\n                {\n                  'pendingToken': pendingToken,\n                  'idToken': response['oauthIdToken'],\n                  'accessToken': response['oauthAccessToken']\n                },\n                providerId);\n          }\n        }\n        return new fireauth.OAuthProvider(providerId).credential(\n            idToken, accessToken, rawNonce);\n    }\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Constructs an Auth credential from a JSON representation.\n * Note, unlike getCredentialFromResponse which constructs the AuthCredential\n * from a server response, this helper constructs credential from the toJSON()\n * result.\n * @param {?Object} json The JSON representation to construct credential from.\n * @return {?fireauth.AuthCredential} The corresponding AuthCredential.\n */\nfireauth.AuthProvider.getCredentialFromJSON = function(json) {\n  var credential;\n  var fromJSON = [\n    fireauth.OAuthCredential.fromJSON,\n    fireauth.EmailAuthCredential.fromJSON,\n    fireauth.PhoneAuthCredential.fromJSON,\n    fireauth.SAMLAuthCredential.fromJSON\n  ];\n  for (var i = 0; i < fromJSON.length; i++) {\n    credential = fromJSON[i](json);\n    if (credential) {\n      return credential;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Constructs an Auth credential from a JSON representation.\n * @param {?Object} json The JSON representation to construct credential from.\n * @return {?fireauth.AuthCredential} The corresponding AuthCredential.\n */\nfireauth.AuthCredential.fromPlainObject =\n    fireauth.AuthProvider.getCredentialFromJSON;\n\n\n/**\n * Checks if OAuth is supported by provider, if not throws an error.\n * @param {!fireauth.AuthProvider} provider The provider to check.\n */\nfireauth.AuthProvider.checkIfOAuthSupported =\n    function(provider) {\n  if (!provider['isOAuthProvider']) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INVALID_OAUTH_PROVIDER);\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Auth event object.\n */\n\ngoog.provide('fireauth.AuthEvent');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\n\n\n/**\n * Defines the authentication event.\n * @param {!fireauth.AuthEvent.Type} type The Auth event type.\n * @param {?string=} opt_eventId The event identifier.\n * @param {?string=} opt_urlResponse The URL with IdP response.\n * @param {?string=} opt_sessionId The session ID used to prevent session\n *     fixation attacks.\n * @param {?fireauth.AuthError=} opt_error The optional error encountered.\n * @param {?string=} opt_postBody The optional POST body.\n * @constructor\n */\nfireauth.AuthEvent = function(\n    type, opt_eventId, opt_urlResponse, opt_sessionId, opt_error,\n    opt_postBody) {\n  /** @const @private {!fireauth.AuthEvent.Type} The Auth event type. */\n  this.type_ = type;\n  /** @const @private {?string} The Auth event ID. */\n  this.eventId_ = opt_eventId || null;\n  /** @const @private {?string} The callback URL with the sign in response. */\n  this.urlResponse_ = opt_urlResponse || null;\n  /** @const @private {?string} The sign in operation session ID. */\n  this.sessionId_ = opt_sessionId || null;\n  /** @const @private {?string} The POST body string if available. */\n  this.postBody_ = opt_postBody || null;\n  /**\n   * @const @private {?fireauth.AuthError} The Auth event error if available.\n   */\n  this.error_ = opt_error || null;\n  if (!this.urlResponse_ && !this.error_) {\n    // Either URL or error is required. They can't be both null.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  } else if (this.urlResponse_ && this.error_) {\n    // An error must not be provided when a URL is available.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  } else if (this.urlResponse_ && !this.sessionId_) {\n    // A session ID must accompany a URL response.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  }\n};\n\n\n\n/**\n * Auth event operation types.\n * All Auth event types that are used for popup operations should be suffixed\n * with `Popup`, whereas those used for redirect operations should be suffixed\n * with `Redirect`.\n * TODO: consider changing the type from a string to an object with ID\n * and some metadata for determining mode: redirect, popup or none.\n * @enum {string}\n */\nfireauth.AuthEvent.Type = {\n  LINK_VIA_POPUP: 'linkViaPopup',\n  LINK_VIA_REDIRECT: 'linkViaRedirect',\n  REAUTH_VIA_POPUP: 'reauthViaPopup',\n  REAUTH_VIA_REDIRECT: 'reauthViaRedirect',\n  SIGN_IN_VIA_POPUP: 'signInViaPopup',\n  SIGN_IN_VIA_REDIRECT: 'signInViaRedirect',\n  UNKNOWN: 'unknown',\n  VERIFY_APP: 'verifyApp'\n};\n\n\n/**\n * @param {!fireauth.AuthEvent} event The Auth event.\n * @return {boolean} Whether the event is a redirect type.\n */\nfireauth.AuthEvent.isRedirect = function(event) {\n  return !!event.getType().match(/Redirect$/);\n};\n\n\n/**\n * @param {!fireauth.AuthEvent} event The Auth event.\n * @return {boolean} Whether the event is a popup type.\n */\nfireauth.AuthEvent.isPopup = function(event) {\n  return !!event.getType().match(/Popup$/);\n};\n\n\n/** @return {!fireauth.AuthEvent.Type} The type of Auth event. */\nfireauth.AuthEvent.prototype.getType = function() {\n  return this.type_;\n};\n\n\n/** @return {?string} The Auth event identifier. */\nfireauth.AuthEvent.prototype.getEventId = function() {\n  return this.eventId_;\n};\n\n\n/** @return {?string} The url response of Auth event. */\nfireauth.AuthEvent.prototype.getUrlResponse = function() {\n  return this.urlResponse_;\n};\n\n\n/** @return {?string} The session ID Auth event. */\nfireauth.AuthEvent.prototype.getSessionId = function() {\n  return this.sessionId_;\n};\n\n\n/** @return {?string} The POST body of the Auth event, if available. */\nfireauth.AuthEvent.prototype.getPostBody = function() {\n  return this.postBody_;\n};\n\n\n/** @return {?fireauth.AuthError} The error of Auth event. */\nfireauth.AuthEvent.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/** @return {boolean} Whether Auth event has an error. */\nfireauth.AuthEvent.prototype.hasError = function() {\n  return !!this.error_;\n};\n\n\n/** @return {!Object} The plain object representation of event. */\nfireauth.AuthEvent.prototype.toPlainObject = function() {\n  return {\n    'type': this.type_,\n    'eventId': this.eventId_,\n    'urlResponse': this.urlResponse_,\n    'sessionId': this.sessionId_,\n    'postBody': this.postBody_,\n    'error': this.error_ && this.error_.toPlainObject()\n  };\n};\n\n\n/**\n * @param {?Object} rawResponse The plain object representation of Auth event.\n * @return {?fireauth.AuthEvent} The Auth event representation of plain object.\n */\nfireauth.AuthEvent.fromPlainObject = function(rawResponse) {\n  var response = rawResponse || {};\n  if (response['type']) {\n    return new fireauth.AuthEvent(\n        response['type'],\n        response['eventId'],\n        response['urlResponse'],\n        response['sessionId'],\n        response['error'] &&\n            fireauth.AuthError.fromPlainObject(response['error']),\n        response['postBody']\n        );\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides the universal link subscriber utility to allow\n * multiple subscriptions for incoming universal link detection.\n */\ngoog.provide('fireauth.UniversalLinkSubscriber');\n\ngoog.require('fireauth.util');\ngoog.require('goog.array');\n\n/**\n * Defines the universal link subscriber class used to allow multiple universal\n * link subscriptions since the underlying plugin only works with one.\n * This utility is needed since the universal link cordova plugin can only allow\n * one subscriber and multiple app instances can subscribe to this.\n * @constructor @final @struct\n */\nfireauth.UniversalLinkSubscriber = function() {\n  /**\n   * @private {?function(?Object)} The master callback that subscribes directly\n   *     to universalLinks.\n   */\n  this.masterCb_ = null;\n  /**\n   * @private {!Array<function(?Object)>} The list of external subscribers that\n   *     are triggered every time the master callback is triggered.\n   */\n  this.cb_ = [];\n};\n\n\n/**\n * @return {!fireauth.UniversalLinkSubscriber} The default universal link\n *     subscriber instance.\n */\nfireauth.UniversalLinkSubscriber.getInstance = function() {\n  if (!fireauth.UniversalLinkSubscriber.instance_) {\n    fireauth.UniversalLinkSubscriber.instance_ =\n        new fireauth.UniversalLinkSubscriber();\n  }\n  return fireauth.UniversalLinkSubscriber.instance_;\n};\n\n\n/** Clears singleton instance. Useful for testing. */\nfireauth.UniversalLinkSubscriber.clear = function() {\n  fireauth.UniversalLinkSubscriber.instance_ = null;\n};\n\n\n/**\n * @private {?fireauth.UniversalLinkSubscriber} The singleton universal\n *     link subscriber instance.\n */\nfireauth.UniversalLinkSubscriber.instance_ = null;\n\n\n/**\n * Subscribes a callback to the universal link plugin listener.\n * @param {function(?Object)} cb The callback to subscribe to the universal\n *     link plugin.\n */\nfireauth.UniversalLinkSubscriber.prototype.subscribe  = function(cb) {\n  var self = this;\n  this.cb_.push(cb);\n  if (!this.masterCb_) {\n    this.masterCb_ = function(event) {\n      for (var i = 0; i < self.cb_.length; i++) {\n        self.cb_[i](event);\n      }\n    };\n    var subscribe = fireauth.util.getObjectRef(\n        'universalLinks.subscribe', goog.global);\n    // For iOS environments, this plugin is not used, therefore this is a no-op\n    // and no error needs to be thrown.\n    if (typeof subscribe === 'function') {\n      subscribe(null, this.masterCb_);\n    }\n  }\n};\n\n\n/**\n * Unsubscribes a callback from the universal link plugin listener.\n * @param {function(?Object)} cb The callback to unsubscribe from the universal\n *     link plugin.\n */\nfireauth.UniversalLinkSubscriber.prototype.unsubscribe = function(cb) {\n  goog.array.removeAllIf(this.cb_, function(ele) {\n    return ele == cb;\n  });\n};\n\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for handling RPC requests to server.\n */\ngoog.provide('fireauth.RpcHandler');\ngoog.provide('fireauth.RpcHandler.ApiMethodHandler');\ngoog.provide('fireauth.RpcHandler.VerifyAssertionData');\ngoog.provide('fireauth.XmlHttpFactory');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthErrorWithCredential');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.idp.ProviderId');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Uri');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.json');\ngoog.require('goog.net.CorsXmlHttpFactory');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.FetchXmlHttpFactory');\ngoog.require('goog.net.XhrIo');\ngoog.require('goog.net.XmlHttpFactory');\ngoog.require('goog.net.jsloader');\ngoog.require('goog.object');\ngoog.require('goog.string.Const');\n\n\n\n/**\n * Firebase Auth XmlHttpRequest factory. This is useful for environments like\n * Node.js where XMLHttpRequest does not exist. XmlHttpFactory would be\n * initialized using the polyfill XMLHttpRequest module.\n * @param {function(new:XMLHttpRequest)} xmlHttpRequest The xmlHttpRequest\n *     constructor.\n * @constructor\n * @extends {goog.net.XmlHttpFactory}\n * @final\n */\nfireauth.XmlHttpFactory = function(xmlHttpRequest) {\n  /**\n   * @private {function(new:XMLHttpRequest)} The underlying XHR reference.\n   */\n  this.xmlHttpRequest_ = xmlHttpRequest;\n  fireauth.XmlHttpFactory.base(this, 'constructor');\n};\ngoog.inherits(fireauth.XmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/**\n * @return {!goog.net.XhrLike|!XMLHttpRequest} A new XhrLike instance.\n * @override\n */\nfireauth.XmlHttpFactory.prototype.createInstance = function() {\n  return new this.xmlHttpRequest_();\n};\n\n\n/**\n * @return {!Object} Options describing how XHR objects obtained from this\n *     factory should be used.\n * @override\n */\nfireauth.XmlHttpFactory.prototype.internalGetOptions = function() {\n  return {};\n};\n\n\n\n/**\n * Creates an RPC request handler for the project specified by the API key.\n *\n * @param {string} apiKey The API key.\n * @param {?Object=} opt_config The RPC request processor configuration.\n * @param {?string=} opt_firebaseClientVersion The optional Firebase client\n *     version to log with requests to Firebase Auth server.\n * @constructor\n */\nfireauth.RpcHandler = function(apiKey, opt_config, opt_firebaseClientVersion) {\n  this.apiKey_ = apiKey;\n  var config = opt_config || {};\n  this.secureTokenEndpoint_ = config['secureTokenEndpoint'] ||\n      fireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_;\n  /**\n   * @private @const {!fireauth.util.Delay} The delay for secure token endpoint\n   *     network timeout.\n   */\n  this.secureTokenTimeout_ = config['secureTokenTimeout'] ||\n      fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_;\n  this.secureTokenHeaders_ = goog.object.clone(\n      config['secureTokenHeaders'] ||\n      fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_);\n  this.firebaseEndpoint_ = config['firebaseEndpoint'] ||\n      fireauth.RpcHandler.FIREBASE_ENDPOINT_;\n  /**\n   * @private @const {!fireauth.util.Delay} The delay for Firebase Auth endpoint\n   *     network timeout.\n   */\n  this.firebaseTimeout_ = config['firebaseTimeout'] ||\n      fireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_;\n  this.firebaseHeaders_ = goog.object.clone(\n      config['firebaseHeaders'] ||\n      fireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_);\n  // If Firebase client version needs to be logged too.\n  if (opt_firebaseClientVersion) {\n    // Log client version for Firebase Auth server.\n    this.firebaseHeaders_['X-Client-Version'] = opt_firebaseClientVersion;\n    // Log client version for securetoken server.\n    this.secureTokenHeaders_['X-Client-Version'] = opt_firebaseClientVersion;\n  }\n  \n  // Get XMLHttpRequest reference.\n  var XMLHttpRequest = fireauth.RpcHandler.getXMLHttpRequest();\n  if (!XMLHttpRequest && !fireauth.util.isWorker()) {\n    // In a Node.js environment, xmlhttprequest module needs to be required.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'The XMLHttpRequest compatibility library was not found.');\n  }\n  /** @private {!goog.net.XmlHttpFactory|undefined} The XHR factory. */\n  this.rpcHandlerXhrFactory_ = undefined;\n  // Initialize XHR factory. CORS does not apply in native environments or\n  // workers so don't use CorsXmlHttpFactory in those cases.\n  if (fireauth.util.isWorker()) {\n    // For worker environment use FetchXmlHttpFactory.\n    this.rpcHandlerXhrFactory_ = new goog.net.FetchXmlHttpFactory(\n        /** @type {!WorkerGlobalScope} */ (self));\n  } else if (fireauth.util.isNativeEnvironment()) {\n    // For Node.js, this is the polyfill library. For other environments,\n    // this is the native global XMLHttpRequest.\n    this.rpcHandlerXhrFactory_ = new fireauth.XmlHttpFactory(\n        /** @type {function(new:XMLHttpRequest)} */ (XMLHttpRequest));\n  } else {\n    // CORS Browser environment.\n    this.rpcHandlerXhrFactory_ = new goog.net.CorsXmlHttpFactory();\n  }\n};\n\n\n/**\n * @return {?function(new:XMLHttpRequest)|undefined} The current environment\n *     XMLHttpRequest. This is undefined for worker environment.\n */\nfireauth.RpcHandler.getXMLHttpRequest = function() {\n  // In Node.js XMLHttpRequest is polyfilled.\n  var isNode = fireauth.util.getEnvironment() == fireauth.util.Env.NODE;\n  var XMLHttpRequest = goog.global['XMLHttpRequest'] ||\n      (isNode &&\n       firebase.INTERNAL['node'] &&\n       firebase.INTERNAL['node']['XMLHttpRequest']);\n  return XMLHttpRequest;\n};\n\n\n/**\n * Enums for HTTP request methods.\n * @enum {string}\n */\nfireauth.RpcHandler.HttpMethod = {\n  POST: 'POST',\n  GET: 'GET'\n};\n\n\n/**\n * Firebase Auth server error codes.\n * @enum {string}\n */\nfireauth.RpcHandler.ServerError = {\n  CAPTCHA_CHECK_FAILED: 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED: 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH: 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_EXISTS: 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND: 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE: 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED: 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL: 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID: 'INVALID_APP_ID',\n  INVALID_CERT_HASH: 'INVALID_CERT_HASH',\n  INVALID_CODE: 'INVALID_CODE',\n  INVALID_CONTINUE_URI: 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN: 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL: 'INVALID_EMAIL',\n  INVALID_ID_TOKEN: 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE: 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER: 'INVALID_IDENTIFIER',\n  INVALID_MESSAGE_PAYLOAD: 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_OAUTH_CLIENT_ID: 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE: 'INVALID_OOB_CODE',\n  INVALID_PASSWORD: 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN: 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID: 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL: 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER: 'INVALID_SENDER',\n  INVALID_SESSION_INFO: 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF: 'INVALID_TEMPORARY_PROOF',\n  MISSING_ANDROID_PACKAGE_NAME: 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL: 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE: 'MISSING_CODE',\n  MISSING_CONTINUE_URI: 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN: 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID: 'MISSING_IOS_BUNDLE_ID',\n  MISSING_OOB_CODE: 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE: 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD: 'MISSING_PASSWORD',\n  MISSING_PHONE_NUMBER: 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO: 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED: 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT: 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL: 'REJECTED_CREDENTIAL',\n  SESSION_EXPIRED: 'SESSION_EXPIRED',\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNAUTHORIZED_DOMAIN: 'UNAUTHORIZED_DOMAIN',\n  USER_CANCELLED: 'USER_CANCELLED',\n  USER_DISABLED: 'USER_DISABLED',\n  USER_NOT_FOUND: 'USER_NOT_FOUND',\n  WEAK_PASSWORD: 'WEAK_PASSWORD'\n};\n\n\n/**\n * A map of server error codes to client errors.\n * @typedef {!Object<\n *     !fireauth.RpcHandler.ServerError, !fireauth.authenum.Error>}\n */\nfireauth.RpcHandler.ServerErrorMap;\n\n\n/**\n * Firebase Auth response field names.\n * @enum {string}\n */\nfireauth.RpcHandler.AuthServerField = {\n  ALL_PROVIDERS: 'allProviders',\n  AUTH_URI: 'authUri',\n  AUTHORIZED_DOMAINS: 'authorizedDomains',\n  DYNAMIC_LINKS_DOMAIN: 'dynamicLinksDomain',\n  EMAIL: 'email',\n  ERROR_MESSAGE: 'errorMessage',\n  EXPIRES_IN: 'expiresIn',\n  ID_TOKEN: 'idToken',\n  NEED_CONFIRMATION: 'needConfirmation',\n  OAUTH_ID_TOKEN: 'oauthIdToken',\n  PENDING_TOKEN: 'pendingToken',\n  POST_BODY: 'postBody',\n  PROVIDER_ID: 'providerId',\n  RECAPTCHA_SITE_KEY: 'recaptchaSiteKey',\n  REQUEST_URI: 'requestUri',\n  REFRESH_TOKEN: 'refreshToken',\n  SESSION_ID: 'sessionId',\n  SESSION_INFO: 'sessionInfo',\n  SIGNIN_METHODS: 'signinMethods',\n  TEMPORARY_PROOF: 'temporaryProof'\n};\n\n\n/**\n * Firebase Auth response injected fields.\n * @enum {string}\n */\nfireauth.RpcHandler.InjectedResponseField = {\n  NONCE: 'nonce'\n};\n\n\n/**\n * Firebase Auth getOobConfirmationCode requestType possible values.\n * @enum {string}\n */\nfireauth.RpcHandler.GetOobCodeRequestType = {\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  NEW_EMAIL_ACCEPT: 'NEW_EMAIL_ACCEPT',\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n};\n\n\n/**\n * Firebase Auth response field names.\n * @enum {string}\n */\nfireauth.RpcHandler.StsServerField = {\n  ACCESS_TOKEN: 'access_token',\n  EXPIRES_IN: 'expires_in',\n  REFRESH_TOKEN: 'refresh_token'\n};\n\n\n/**\n * @return {string} The API key.\n */\nfireauth.RpcHandler.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * The Firebase custom locale header.\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.FIREBASE_LOCALE_KEY_ = 'X-Firebase-Locale';\n\n\n/**\n * The secure token endpoint.\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_ =\n    'https://securetoken.googleapis.com/v1/token';\n\n\n/**\n * The default timeout delay (units in milliseconds) for requests sending to\n *     STS token endpoint.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * The STS token RPC content headers.\n * @const {!Object}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_ = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\n\n/**\n * The Firebase endpoint.\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.FIREBASE_ENDPOINT_ =\n    'https://www.googleapis.com/identitytoolkit/v3/relyingparty/';\n\n\n/**\n * The default timeout delay (units in milliseconds) for requests sending to\n *     Firebase endpoint.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * The Firebase RPC content headers.\n * @const {!Object}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_ = {\n  'Content-Type': 'application/json'\n};\n\n\n/**\n * Updates the custom locale header.\n * @param {?string} languageCode The new languageCode.\n */\nfireauth.RpcHandler.prototype.updateCustomLocaleHeader =\n    function(languageCode) {\n  if (languageCode) {\n    // If a language code is provided, add it to the header.\n    this.firebaseHeaders_[fireauth.RpcHandler.FIREBASE_LOCALE_KEY_] =\n        languageCode;\n  } else {\n    // Otherwise remove the custom locale header.\n    delete this.firebaseHeaders_[fireauth.RpcHandler.FIREBASE_LOCALE_KEY_];\n  }\n};\n\n\n/**\n * Updates the X-Client-Version in the header.\n * @param {?string} clientVersion The new client version.\n */\nfireauth.RpcHandler.prototype.updateClientVersion = function(clientVersion) {\n  if (clientVersion) {\n    // Update client version for Firebase Auth server.\n    this.firebaseHeaders_['X-Client-Version'] = clientVersion;\n    // Update client version for securetoken server.\n    this.secureTokenHeaders_['X-Client-Version'] = clientVersion;\n  } else {\n    // Remove client version from header.\n    delete this.firebaseHeaders_['X-Client-Version'];\n    delete this.secureTokenHeaders_['X-Client-Version'];\n  }\n};\n\n\n/**\n * Sends XhrIo request using goog.net.XhrIo.\n * @param {string} url The URL to make a request to.\n * @param {function(?Object)=} opt_callback The callback to run on completion.\n * @param {fireauth.RpcHandler.HttpMethod=} opt_httpMethod The HTTP send method.\n * @param {?ArrayBuffer|?ArrayBufferView|?Blob|?Document|?FormData|string=}\n *     opt_data The request content.\n * @param {?Object=} opt_headers The request content headers.\n * @param {number=} opt_timeout The request timeout.\n * @private\n */\nfireauth.RpcHandler.prototype.sendXhr_ = function(\n    url,\n    opt_callback,\n    opt_httpMethod,\n    opt_data,\n    opt_headers,\n    opt_timeout) {\n  var sendXhr;\n  if (fireauth.util.supportsCors() || fireauth.util.isWorker()) {\n    // If supports CORS use goog.net.XhrIo.\n    sendXhr = goog.bind(this.sendXhrUsingXhrIo_, this);\n  } else {\n    // Load gapi.client.request and gapi.auth dependency dynamically.\n    if (!fireauth.RpcHandler.loadGApi_) {\n      fireauth.RpcHandler.loadGApi_ =\n          new goog.Promise(function(resolve, reject) {\n            // On load, resolve.\n            fireauth.RpcHandler.loadGApiJs_(resolve, reject);\n          });\n    }\n    // If does not support CORS, use gapi.client.request.\n    sendXhr = goog.bind(this.sendXhrUsingGApiClient_, this);\n  }\n  sendXhr(\n      url, opt_callback, opt_httpMethod, opt_data, opt_headers, opt_timeout);\n};\n\n\n/**\n * Sends XhrIo request using goog.net.XhrIo.\n * @param {string} url The URL to make a request to.\n * @param {function(?Object)=} opt_callback The callback to run on completion.\n * @param {fireauth.RpcHandler.HttpMethod=} opt_httpMethod The HTTP send method.\n * @param {?ArrayBuffer|?ArrayBufferView|?Blob|?Document|?FormData|string=}\n *     opt_data The request content.\n * @param {?Object=} opt_headers The request content headers.\n * @param {number=} opt_timeout The request timeout.\n * @private\n */\nfireauth.RpcHandler.prototype.sendXhrUsingXhrIo_ = function(\n    url,\n    opt_callback,\n    opt_httpMethod,\n    opt_data,\n    opt_headers,\n    opt_timeout) {\n  if (fireauth.util.isWorker() && !fireauth.util.isFetchSupported()) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED,\n        'fetch, Headers and Request native APIs or equivalent Polyfills ' +\n        'must be available to support HTTP requests from a Worker ' +\n        'environment.');\n  }\n  var xhrIo = new goog.net.XhrIo(this.rpcHandlerXhrFactory_);\n\n  // xhrIo.setTimeoutInterval not working in IE10 and IE11, handle manually.\n  var requestTimeout;\n  if (opt_timeout) {\n    xhrIo.setTimeoutInterval(opt_timeout);\n    requestTimeout = setTimeout(function() {\n      xhrIo.dispatchEvent(goog.net.EventType.TIMEOUT);\n    }, opt_timeout);\n  }\n  // Run callback function on completion.\n  xhrIo.listen(\n      goog.net.EventType.COMPLETE,\n      /** @this {goog.net.XhrIo} */\n      function() {\n        // Clear timeout timer.\n        if (requestTimeout) {\n          clearTimeout(requestTimeout);\n        }\n        // Response assumed to be in json format. If not, catch, log error and\n        // pass null to callback.\n        var response = null;\n        try {\n          // Do not use this.responseJson() as it uses goog.json.parse\n          // underneath. Internal goog.json.parse parsing uses eval and since\n          // recommended Content Security Policy does not allow unsafe-eval,\n          // this is failing and throwing an error in chrome extensions and\n          // warnings else where. Use native parsing instead via JSON.parse.\n          response = JSON.parse(this.getResponseText()) || null;\n        } catch (e) {\n          response = null;\n        }\n        if (opt_callback) {\n          opt_callback(/** @type {?Object} */ (response));\n        }\n      });\n  // Dispose xhrIo on ready.\n  xhrIo.listenOnce(\n      goog.net.EventType.READY,\n      /** @this {goog.net.XhrIo} */\n      function() {\n        // Clear timeout timer.\n        if (requestTimeout) {\n          clearTimeout(requestTimeout);\n        }\n        // Dispose xhrIo.\n        this.dispose();\n      });\n  // Listen to timeout error.\n  // This should work when request is aborted too.\n  xhrIo.listenOnce(\n      goog.net.EventType.TIMEOUT,\n      /** @this {goog.net.XhrIo} */\n      function() {\n        // Clear timeout timer.\n        if (requestTimeout) {\n          clearTimeout(requestTimeout);\n        }\n        // Dispose xhrIo.\n        this.dispose();\n        // The request timed out.\n        if (opt_callback) {\n          opt_callback(null);\n        }\n      });\n  xhrIo.send(url, opt_httpMethod, opt_data, opt_headers);\n};\n\n\n/**\n * @const {!goog.string.Const} The GApi client library URL.\n * @private\n */\nfireauth.RpcHandler.GAPI_SRC_ = goog.string.Const.from(\n    'https://apis.google.com/js/client.js?onload=%{onload}');\n\n\n/**\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.GAPI_CALLBACK_NAME_ =\n    '__fcb' + Math.floor(Math.random() * 1000000).toString();\n\n\n/**\n * Loads the GApi client library if it is not loaded.\n * @param {function()} callback The callback to invoke once it's loaded.\n * @param {function(?Object)} errback The error callback.\n * @private\n */\nfireauth.RpcHandler.loadGApiJs_ = function(callback, errback) {\n  // If gapi.client.request not available, load it dynamically.\n  if (!((window['gapi'] || {})['client'] || {})['request']) {\n    goog.global[fireauth.RpcHandler.GAPI_CALLBACK_NAME_] = function() {\n      // Callback will be called by GApi, test properly loaded here instead of\n      // after jsloader resolves.\n      if (!((window['gapi'] || {})['client'] || {})['request']) {\n        errback(new Error(fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED));\n      } else {\n        callback();\n      }\n    };\n    var url = goog.html.TrustedResourceUrl.format(\n        fireauth.RpcHandler.GAPI_SRC_,\n        {'onload': fireauth.RpcHandler.GAPI_CALLBACK_NAME_});\n    // TODO: replace goog.net.jsloader with our own script includer.\n    var result = goog.net.jsloader.safeLoad(url);\n    result.addErrback(function() {\n      // In case file fails to load.\n      errback(new Error(fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED));\n    });\n  } else {\n    callback();\n  }\n};\n\n\n/**\n * Sends XhrIo request using gapi.client.\n * @param {string} url The URL to make a request to.\n * @param {function(?Object)=} opt_callback The callback to run on completion.\n * @param {fireauth.RpcHandler.HttpMethod=} opt_httpMethod The HTTP send method.\n * @param {?ArrayBuffer|?ArrayBufferView|?Blob|?Document|?FormData|string=}\n *     opt_data The request content.\n * @param {?Object=} opt_headers The request content headers.\n * @param {number=} opt_timeout The request timeout.\n * @private\n */\nfireauth.RpcHandler.prototype.sendXhrUsingGApiClient_ = function(\n    url,\n    opt_callback,\n    opt_httpMethod,\n    opt_data,\n    opt_headers,\n    opt_timeout) {\n  var self = this;\n  // Wait for GApi dependency to load.\n  fireauth.RpcHandler.loadGApi_.then(function() {\n    window['gapi']['client']['setApiKey'](self.getApiKey());\n    // GApi maintains the Auth result and automatically append the Auth token to\n    // all outgoing requests. Firebase Auth requests will be rejected if there\n    // are others scopes (e.g. google plus) for the Auth token. Need to empty\n    // the token before call gitkit api. Restored in callback.\n    var oauth2Token = window['gapi']['auth']['getToken']();\n    window['gapi']['auth']['setToken'](null);\n    window['gapi']['client']['request']({\n      'path': url,\n      'method': opt_httpMethod,\n      'body': opt_data,\n      'headers': opt_headers,\n      // This needs to be set to none, otherwise the access token will be passed\n      // in the header field causing apiary to complain.\n      'authType': 'none',\n      'callback': function(response) {\n        window['gapi']['auth']['setToken'](oauth2Token);\n        if (opt_callback) {\n          opt_callback(response);\n        }\n      }\n    });\n  }).thenCatch(function(error) {\n    // Catches failure to support CORS and propagates it.\n    if (opt_callback) {\n      // Simulate backend server error to be caught by upper layer.\n      opt_callback({\n        'error': {\n          'message': (error && error['message']) ||\n              fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Validates the request for the STS access token.\n *\n * @param {?Object} data The STS token request body.\n * @return {boolean} Whether the request is valid.\n * @private\n */\nfireauth.RpcHandler.prototype.validateStsTokenRequest_ = function(data) {\n  if (data['grant_type'] == 'refresh_token' && data['refresh_token']) {\n    // Exchange refresh token.\n    return true;\n  } else if (data['grant_type'] == 'authorization_code' && data['code']) {\n    // Exchange ID token.\n    return true;\n  } else {\n    // Invalid.\n    return false;\n  }\n};\n\n\n/**\n * Handles the request for the STS access token.\n *\n * @param {!Object} data The STS token request body.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.requestStsToken = function(data) {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    if (self.validateStsTokenRequest_(data)) {\n      self.sendXhr_(\n          self.secureTokenEndpoint_ + '?key=' +\n          encodeURIComponent(self.getApiKey()),\n          function(response) {\n            if (!response) {\n              // An unparseable response from the XHR most likely indicates some\n              // problem with the network.\n              reject(new fireauth.AuthError(\n                  fireauth.authenum.Error.NETWORK_REQUEST_FAILED));\n            } else if (fireauth.RpcHandler.hasError_(response)) {\n              reject(fireauth.RpcHandler.getDeveloperError_(response));\n            } else if (\n                !response[fireauth.RpcHandler.StsServerField.ACCESS_TOKEN] ||\n                !response[fireauth.RpcHandler.StsServerField.REFRESH_TOKEN]) {\n              reject(new fireauth.AuthError(\n                  fireauth.authenum.Error.INTERNAL_ERROR));\n            } else {\n              resolve(response);\n            }\n          },\n          fireauth.RpcHandler.HttpMethod.POST,\n          goog.Uri.QueryData.createFromMap(data).toString(),\n          self.secureTokenHeaders_,\n          self.secureTokenTimeout_.get());\n    } else {\n      reject(new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR));\n    }\n  });\n};\n\n\n/**\n * @param {!Object} data The object to serialize.\n * @return {string} The serialized object with null, undefined and empty string\n *     values removed.\n * @private\n */\nfireauth.RpcHandler.serialize_ = function(data) {\n  // goog.json.serialize converts undefined values to null.\n  // This helper removes all empty strings, nulls and undefined from serialized\n  // object.\n  // Serialize trimmed data.\n  return goog.json.serialize(fireauth.util.copyWithoutNullsOrUndefined(data));\n};\n\n\n/**\n * Creates and executes a request for the given API method.\n * @param {string} method The API method.\n * @param {!fireauth.RpcHandler.HttpMethod} httpMethod The http request method.\n * @param {!Object} data The data for the API request. In the case of a GET\n *     request, the contents of this object will be form encoded and appended\n *     to the query string of the URL. No post body is sent in that case. If an\n *     object value is specified, it will be converted to a string:\n *     encodeURIComponent(String(value)).\n * @param {?fireauth.RpcHandler.ServerErrorMap=} opt_customErrorMap A map\n *     of server error codes to client errors to override default error\n *     handling.\n * @param {boolean=} opt_cachebuster Whether to append a unique string to\n *     request to force backend to return an uncached response to request.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.requestFirebaseEndpoint = function(\n    method, httpMethod, data, opt_customErrorMap, opt_cachebuster) {\n  var self = this;\n  // Construct endpoint URL.\n  var uri = goog.Uri.parse(this.firebaseEndpoint_ + method);\n  uri.setParameterValue('key', this.getApiKey());\n  // Check whether to append cachebuster to request.\n  if (opt_cachebuster) {\n    uri.setParameterValue('cb', goog.now().toString());\n  }\n  // Firebase allows GET endpoints.\n  var isGet = httpMethod == fireauth.RpcHandler.HttpMethod.GET;\n  if (isGet) {\n    // For GET HTTP method, append data to query string.\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        uri.setParameterValue(key, data[key]);\n      }\n    }\n  }\n  return new goog.Promise(function(resolve, reject) {\n    self.sendXhr_(\n        uri.toString(),\n        function(response) {\n          if (!response) {\n            // An unparseable response from the XHR most likely indicates some\n            // problem with the network.\n            reject(new fireauth.AuthError(\n                fireauth.authenum.Error.NETWORK_REQUEST_FAILED));\n          } else if (fireauth.RpcHandler.hasError_(response)) {\n            reject(fireauth.RpcHandler.getDeveloperError_(response,\n                opt_customErrorMap || {}));\n          } else {\n            resolve(response);\n          }\n        },\n        httpMethod,\n        // No post body data in GET requests.\n        isGet ? undefined : fireauth.RpcHandler.serialize_(data),\n        self.firebaseHeaders_,\n        self.firebaseTimeout_.get());\n  });\n};\n\n\n/**\n * Verifies that the request has a valid email set.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateRequestHasEmail_ = function(request) {\n  if (!fireauth.util.isValidEmailAddress(request['email'])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_EMAIL);\n  }\n};\n\n\n/**\n * Verifies that the response has a valid email set.\n * @param {!Object} response\n * @private\n */\nfireauth.RpcHandler.validateResponseHasEmail_ = function(response) {\n  if (!fireauth.util.isValidEmailAddress(response['email'])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Verifies that the an email is valid, if it is there.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateEmailIfPresent_ = function(request) {\n  if ('email' in request) {\n    fireauth.RpcHandler.validateRequestHasEmail_(request);\n  }\n};\n\n\n/**\n * @param {string} providerId The provider ID.\n * @param {?Array<string>=} opt_additionalScopes The list of scope strings.\n * @return {?string} The IDP and its comma separated scope strings serialized.\n * @private\n */\nfireauth.RpcHandler.getAdditionalScopes_ =\n    function(providerId, opt_additionalScopes) {\n  var scopes = {};\n  if (opt_additionalScopes && opt_additionalScopes.length) {\n    scopes[providerId] = opt_additionalScopes.join(',');\n    // Return stringified scopes.\n    return goog.json.serialize(scopes);\n  }\n  return null;\n};\n\n\n/**\n * Validates a response from getAuthUri.\n * @param {?Object} response The getAuthUri response data.\n * @private\n */\nfireauth.RpcHandler.validateGetAuthResponse_ = function(response) {\n  if (!response[fireauth.RpcHandler.AuthServerField.AUTH_URI]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'Unable to determine the authorization endpoint for the specified '+\n        'provider. This may be an issue in the provider configuration.');\n  } else if ( !response[fireauth.RpcHandler.AuthServerField.SESSION_ID]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Requests createAuthUri endpoint to retrieve the authUri and session ID for\n * the start of an OAuth handshake.\n * @param {string} providerId The provider ID.\n * @param {string} continueUri The IdP callback URL.\n * @param {?Object=} opt_customParameters The optional OAuth custom parameters\n *     plain object.\n * @param {?Array<string>=} opt_additionalScopes The list of scope strings.\n * @param {?string=} opt_email The optional email.\n * @param {?string=} opt_sessionId The optional session ID.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.getAuthUri = function(\n    providerId,\n    continueUri,\n    opt_customParameters,\n    opt_additionalScopes,\n    opt_email,\n    opt_sessionId) {\n  // SAML provider request is constructed differently than OAuth requests.\n  var isSaml = fireauth.idp.isSaml(providerId);\n  var request = {\n    'identifier': opt_email,\n    'providerId': providerId,\n    'continueUri': continueUri,\n    'customParameter': opt_customParameters || {},\n    'oauthScope': fireauth.RpcHandler.getAdditionalScopes_(\n        providerId, opt_additionalScopes),\n    'sessionId': opt_sessionId\n  };\n  // Custom parameters and OAuth scopes should be ignored.\n  if (isSaml) {\n    delete request['customParameter'];\n    delete request['oauthScope'];\n  }\n  // When sessionId is provided, mobile flow (Cordova) is being used, force\n  // code flow and not implicit flow. All other providers use code flow by\n  // default.\n  if (opt_sessionId && providerId == fireauth.idp.ProviderId.GOOGLE) {\n    request['authFlowType'] = 'CODE_FLOW';\n  }\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_AUTH_URI,\n      request);\n};\n\n\n/**\n * Gets the list of IDPs that can be used to log in for the given identifier.\n * @param {string} identifier The identifier, such as an email address.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.RpcHandler.prototype.fetchProvidersForIdentifier =\n    function(identifier) {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  var continueUri = fireauth.util.isHttpOrHttps() ?\n      fireauth.util.getCurrentUrl() : 'http://localhost';\n  var request = {\n    'identifier': identifier,\n    'continueUri': continueUri\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_AUTH_URI, request)\n      .then(function(response) {\n        return response[fireauth.RpcHandler.AuthServerField.ALL_PROVIDERS] ||\n            [];\n      });\n};\n\n\n/**\n * Returns the list of sign in methods for the given identifier.\n * @param {string} identifier The identifier, such as an email address.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.RpcHandler.prototype.fetchSignInMethodsForIdentifier = function(\n    identifier) {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  var continueUri = fireauth.util.isHttpOrHttps() ?\n      fireauth.util.getCurrentUrl() :\n      'http://localhost';\n  var request = {\n    'identifier': identifier,\n    'continueUri': continueUri\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_AUTH_URI, request)\n      .then(function(response) {\n        return response[fireauth.RpcHandler.AuthServerField.SIGNIN_METHODS] ||\n            [];\n      });\n};\n\n\n/**\n * Gets the list of authorized domains for the specified project.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.RpcHandler.prototype.getAuthorizedDomains = function() {\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, {})\n      .then(function(response) {\n        return response[\n           fireauth.RpcHandler.AuthServerField.AUTHORIZED_DOMAINS] || [];\n      });\n};\n\n\n/**\n * Gets the reCAPTCHA parameters needed to render the project's provisioned\n * reCAPTCHA.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.getRecaptchaParam = function() {\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_RECAPTCHA_PARAM, {});\n};\n\n\n/**\n * Gets the list of authorized domains for the specified project.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.getDynamicLinkDomain = function() {\n  var request = {\n    'returnDynamicLink': true\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.RETURN_DYNAMIC_LINK, request);\n};\n\n\n/**\n * Checks if the provided iOS bundle ID belongs to the project as specified by\n * the API key.\n * @param {string} iosBundleId  The iOS bundle ID to check.\n * @return {!goog.Promise<void>}\n */\nfireauth.RpcHandler.prototype.isIosBundleIdValid = function(iosBundleId) {\n  var request = {\n    'iosBundleId': iosBundleId\n  };\n  // This will either resolve if the identifier is valid or throw INVALID_APP_ID\n  // if not.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, request)\n      .then(function(result) {\n        // Do not return anything.\n      });\n};\n\n\n/**\n * Checks if the provided Android package name belongs to the project as\n * specified by the API key.\n * @param {string} androidPackageName  The iOS bundle ID to check.\n * @param {?string=} opt_sha1Cert The optional SHA-1 Android cert to check.\n * @return {!goog.Promise<void>}\n */\nfireauth.RpcHandler.prototype.isAndroidPackageNameValid =\n    function(androidPackageName, opt_sha1Cert) {\n  var request = {\n    'androidPackageName': androidPackageName\n  };\n  // This is relevant for the native Android SDK flow.\n  // This will redirect to an FDL domain owned by GMScore instead of\n  // the developer's FDL domain as is done for Cordova apps.\n  if (!!opt_sha1Cert) {\n    request['sha1Cert'] = opt_sha1Cert;\n  }\n  // When no sha1Cert is passed, this will either resolve if the identifier is\n  // valid or throw INVALID_APP_ID if not.\n  // When sha1Cert is also passed, this will either resolve or fail with an\n  // INVALID_CERT_HASH error.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, request)\n      .then(function(result) {\n        // Do not return anything.\n      });\n};\n\n\n/**\n * Checks if the provided OAuth client ID belongs to the project as specified by\n * the API key.\n * @param {string} clientId The OAuth client ID to check.\n * @return {!goog.Promise<void>}\n */\nfireauth.RpcHandler.prototype.isOAuthClientIdValid = function(clientId) {\n  var request = {\n    'clientId': clientId\n  };\n  // This will either resolve if the client ID is valid or throw\n  // INVALID_OAUTH_CLIENT_ID if not.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, request)\n      .then(function(result) {\n        // Do not return anything.\n      });\n};\n\n\n/**\n * Requests getAccountInfo endpoint using an ID token.\n * @param {string} idToken The ID token.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.getAccountInfoByIdToken = function(idToken) {\n  var request = {'idToken': idToken};\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_ACCOUNT_INFO,\n      request);\n};\n\n\n/**\n * Validates a request to sign in with email and password.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateVerifyCustomTokenRequest_ = function(request) {\n  if (!request['token']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CUSTOM_TOKEN);\n  }\n};\n\n\n/**\n * Verifies a custom token and returns a Promise that resolves with the ID\n * token.\n * @param {string} token The custom token.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyCustomToken = function(token) {\n  var request = {'token': token};\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_CUSTOM_TOKEN,\n      request);\n};\n\n\n/**\n * Validates a request to sign in with email and password.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateVerifyPasswordRequest_ = function(request) {\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n  if (!request['password']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_PASSWORD);\n  }\n};\n\n\n/**\n * Verifies a password and returns a Promise that resolves with the ID\n * token.\n * @param {string} email The email address.\n * @param {string} password The entered password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPassword = function(email, password) {\n  var request = {\n    'email': email,\n    'password': password\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_PASSWORD,\n      request);\n};\n\n\n/**\n * Verifies an email link OTP for sign-in and returns a Promise that resolves\n * with the ID token.\n * @param {string} email The email address.\n * @param {string} oobCode The email action OTP.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.emailLinkSignIn = function(email, oobCode) {\n  var request = {\n    'email': email,\n    'oobCode': oobCode\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN, request);\n};\n\n\n/**\n * Verifies an email link OTP for linking and returns a Promise that resolves\n * with the ID token.\n * @param {string} idToken The ID token.\n * @param {string} email The email address.\n * @param {string} oobCode The email action OTP.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.emailLinkSignInForLinking =\n    function(idToken, email, oobCode) {\n  var request = {\n    'idToken': idToken,\n    'email': email,\n    'oobCode': oobCode\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN_FOR_LINKING,\n      request);\n};\n\n\n/**\n * Validates a response that should contain an ID token.\n * @param {?Object} response The server response data.\n * @private\n */\nfireauth.RpcHandler.validateIdTokenResponse_ = function(response) {\n  if (!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a getRecaptchaParam response.\n * @param {?Object} response The server response data.\n * @private\n */\nfireauth.RpcHandler.validateGetRecaptchaParamResponse_ = function(response) {\n  // Both are required. This could change though.\n  if (!response[fireauth.RpcHandler.AuthServerField.RECAPTCHA_SITE_KEY]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a request that sends the verification ID and code for a sign in/up\n * phone Auth flow.\n * @param {!Object} request The server request object.\n * @private\n */\nfireauth.RpcHandler.validateVerifyPhoneNumberRequest_ = function(request) {\n  // There are 2 cases here:\n  // case 1: sessionInfo and code\n  // case 2: phoneNumber and temporaryProof\n  if (request['phoneNumber'] || request['temporaryProof']) {\n    // Case 2. Both phoneNumber and temporaryProof should be set.\n    if (!request['phoneNumber'] || !request['temporaryProof']) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n    }\n  } else {\n    // Otherwise it's case 1, so we expect sessionInfo and code.\n    if (!request['sessionInfo']) {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.MISSING_SESSION_INFO);\n    }\n    if (!request['code']) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CODE);\n    }\n  }\n};\n\n\n/**\n * Validates a request that sends the verification ID and code for a link/update\n * phone Auth flow.\n * @param {!Object} request The server request object.\n * @private\n */\nfireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_ = function(request) {\n  // idToken should be required here.\n  if (!request['idToken']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  // The other request parameters match the sign in flow.\n  fireauth.RpcHandler.validateVerifyPhoneNumberRequest_(request);\n};\n\n\n/**\n * Validates a request to create an email and password account.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateCreateAccountRequest_ = function(request) {\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n  if (!request['password']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.WEAK_PASSWORD);\n  }\n};\n\n\n/**\n * Validates a request to createAuthUri.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateGetAuthUriRequest_ = function(request) {\n  if (!request['continueUri']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CONTINUE_URI);\n  }\n  // Either a SAML or non SAML providerId must be provided.\n  if (!request['providerId']) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'A provider ID must be provided in the request.');\n  }\n};\n\n\n/**\n * Creates an email/password account. Returns a Promise that resolves with the\n * ID token.\n * @param {string} email The email address of the account.\n * @param {string} password The password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.createAccount = function(email, password) {\n  var request = {\n    'email': email,\n    'password': password\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_ACCOUNT,\n      request);\n};\n\n\n/**\n * Signs in a user as anonymous. Returns a Promise that resolves with the\n * ID token.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.signInAnonymously = function() {\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SIGN_IN_ANONYMOUSLY, {});\n};\n\n\n/**\n * Deletes the user's account corresponding to the idToken given.\n * @param {string} idToken The idToken of the user.\n * @return {!goog.Promise<undefined>}\n */\nfireauth.RpcHandler.prototype.deleteAccount = function(idToken) {\n  var request = {\n    'idToken': idToken\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.DELETE_ACCOUNT,\n      request);\n};\n\n\n/**\n * Requests setAccountInfo endpoint for updateEmail operation.\n * @param {string} idToken The ID token.\n * @param {string} newEmail The new email.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updateEmail = function(idToken, newEmail) {\n  var request = {\n    'idToken': idToken,\n    'email': newEmail\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO,\n      request);\n};\n\n\n/**\n * Validates a setAccountInfo request that updates the password.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateSetAccountInfoSensitive_ = function(request) {\n  fireauth.RpcHandler.validateEmailIfPresent_(request);\n  if (!request['password']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.WEAK_PASSWORD);\n  }\n};\n\n\n/**\n * Requests setAccountInfo endpoint for updatePassword operation.\n * @param {string} idToken The ID token.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updatePassword = function(idToken, newPassword) {\n  var request = {\n    'idToken': idToken,\n    'password': newPassword\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE, request);\n};\n\n\n/**\n * Requests setAccountInfo endpoint to set the email and password. This can be\n * used to link an existing account to a new email and password account.\n * @param {string} idToken The ID token.\n * @param {string} newEmail The new email.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updateEmailAndPassword = function(idToken,\n    newEmail, newPassword) {\n  var request = {\n    'idToken': idToken,\n    'email': newEmail,\n    'password': newPassword\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE, request);\n};\n\n\n/**\n * Maps the name of a field in the account info object to the backend enum\n * value, for deletion of profile fields.\n * @private {!Object<string, string>}\n */\nfireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_ = {\n  'displayName': 'DISPLAY_NAME',\n  'photoUrl': 'PHOTO_URL'\n};\n\n\n/**\n * Updates the profile of the user. When resolved, promise returns a response\n * similar to that of getAccountInfo.\n * @param {string} idToken The ID token of the user whose profile is changing.\n * @param {!Object} profileData The new profile data.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updateProfile = function(idToken, profileData) {\n  var data = {\n    'idToken': idToken\n  };\n  var fieldsToDelete = [];\n\n  // Copy over the relevant fields from profileData, or explicitly flag a field\n  // for deletion if null is passed as the value. Note that this currently only\n  // checks profileData to the first level.\n  goog.object.forEach(fireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_,\n      function(enumName, fieldName) {\n        var fieldValue = profileData[fieldName];\n        if (fieldValue === null) {\n          // If null is explicitly provided, delete the field.\n          fieldsToDelete.push(enumName);\n        } else if (fieldName in profileData) {\n          // If the field is explicitly set, send it to the backend.\n          data[fieldName] = fieldValue;\n        }\n      });\n  if (fieldsToDelete.length) {\n    data['deleteAttribute'] = fieldsToDelete;\n  }\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO, data);\n};\n\n\n/**\n * Validates a request for an email action code for password reset.\n * @param {!Object} request The getOobCode request data for password reset.\n * @private\n */\nfireauth.RpcHandler.validateOobCodeRequest_ = function(request) {\n  if (request['requestType'] !=\n          fireauth.RpcHandler.GetOobCodeRequestType.PASSWORD_RESET) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n};\n\n\n/**\n * Validates a request for an email action for passwordless email sign-in.\n * @param {!Object} request The getOobCode request data for email sign-in.\n * @private\n */\nfireauth.RpcHandler.validateEmailSignInCodeRequest_ = function(request) {\n  if (request['requestType'] !=\n      fireauth.RpcHandler.GetOobCodeRequestType.EMAIL_SIGNIN) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n};\n\n\n/**\n * Validates a request for an email action for email verification.\n * @param {!Object} request The getOobCode request data for email verification.\n * @private\n */\nfireauth.RpcHandler.validateEmailVerificationCodeRequest_ = function(request) {\n  if (request['requestType'] !=\n          fireauth.RpcHandler.GetOobCodeRequestType.VERIFY_EMAIL) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Requests getOobCode endpoint for password reset, returns promise that\n * resolves with user's email.\n * @param {string} email The email account with the password to be reset.\n * @param {!Object} additionalRequestData Additional data to add to the request.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendPasswordResetEmail =\n    function(email, additionalRequestData) {\n  var request = {\n    'requestType': fireauth.RpcHandler.GetOobCodeRequestType.PASSWORD_RESET,\n    'email': email\n  };\n  // Extend the original request with the additional data.\n  goog.object.extend(request, additionalRequestData);\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_OOB_CODE, request);\n};\n\n\n/**\n * Requests getOobCode endpoint for passwordless email sign-in, returns promise\n * that resolves with user's email.\n * @param {string} email The email account to sign in with.\n * @param {!Object} additionalRequestData Additional data to add to the request.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendSignInLinkToEmail = function(\n    email, additionalRequestData) {\n  var request = {\n    'requestType': fireauth.RpcHandler.GetOobCodeRequestType.EMAIL_SIGNIN,\n    'email': email\n  };\n  // Extend the original request with the additional data.\n  goog.object.extend(request, additionalRequestData);\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_EMAIL_SIGNIN_CODE, request);\n};\n\n\n/**\n * Requests getOobCode endpoint for email verification, returns promise that\n * resolves with user's email.\n * @param {string} idToken The idToken of the user confirming his email.\n * @param {!Object} additionalRequestData Additional data to add to the request.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendEmailVerification =\n    function(idToken, additionalRequestData) {\n  var request = {\n    'requestType': fireauth.RpcHandler.GetOobCodeRequestType.VERIFY_EMAIL,\n    'idToken': idToken\n  };\n  // Extend the original request with the additional data.\n  goog.object.extend(request, additionalRequestData);\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_EMAIL_VERIFICATION_CODE, request);\n};\n\n\n/**\n * Requests sendVerificationCode endpoint for verifying the user's ownership of\n * a phone number. It resolves with a sessionInfo (verificationId).\n * @param {!Object} request The verification request which contains a phone\n *     number and an assertion.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendVerificationCode = function(request) {\n  // In the future, we could support other types of assertions so for now,\n  // we are keeping the request an object.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.SEND_VERIFICATION_CODE, request);\n};\n\n\n/**\n * Requests verifyPhoneNumber endpoint for sign in/sign up phone number\n * authentication flow and resolves with the STS token response.\n * @param {!Object} request The phone number ID and code to exchange for a\n *     Firebase Auth session.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPhoneNumber = function(request) {\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER, request);\n};\n\n\n/**\n * Requests verifyPhoneNumber endpoint for link/update phone number\n * authentication flow and resolves with the STS token response.\n * @param {!Object} request The phone number ID and code to exchange for a\n *     Firebase Auth session.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPhoneNumberForLinking = function(request) {\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_LINKING, request);\n};\n\n\n/**\n * Validates a response to a phone number linking request.\n * @param {?Object} response The server response data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_ =\n    function(response) {\n  if (response[fireauth.RpcHandler.AuthServerField.TEMPORARY_PROOF]) {\n    response['code'] = fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;\n    throw fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  }\n\n  // If there's no temporary proof, then we expect the request to have\n  // succeeded and returned an ID token.\n  fireauth.RpcHandler.validateIdTokenResponse_(response);\n};\n\n\n/**\n * Requests verifyPhoneNumber endpoint for reauthenticating with a phone number\n * and resolves with the STS token response.\n * @param {!Object} request The phone number ID, code, and current ID token to\n *     exchange for a refreshed Firebase Auth session.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPhoneNumberForExisting = function(request) {\n  request['operation'] = 'REAUTH';\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_EXISTING,\n      request);\n};\n\n\n/**\n * The custom error map for reauth with verifyPhoneNumber.\n * @private {!fireauth.RpcHandler.ServerErrorMap}\n */\nfireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_ = {};\n\n// For most RPCs, the backend error USER_NOT_FOUND means that the sent STS\n// token is invalid. However, for this specific case, USER_NOT_FOUND actually\n// means that the sent credential is invalid.\nfireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_[\n  fireauth.RpcHandler.ServerError.USER_NOT_FOUND] =\n    fireauth.authenum.Error.USER_DELETED;\n\n\n/**\n * Validates a request to deleteLinkedAccounts.\n * @param {?Object} request\n * @private\n */\nfireauth.RpcHandler.validateDeleteLinkedAccountsRequest_ = function(request) {\n  if (!goog.isArray(request['deleteProvider'])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Updates the providers for the account associated with the idToken.\n * @param {string} idToken The ID token.\n * @param {!Array<string>} providersToDelete The array of providers to delete.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.deleteLinkedAccounts =\n    function(idToken, providersToDelete) {\n  var request = {\n    'idToken': idToken,\n    'deleteProvider': providersToDelete\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.DELETE_LINKED_ACCOUNTS,\n      request);\n};\n\n\n/**\n * Validates a verifyAssertion request.\n * @param {?Object} request The verifyAssertion request data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionRequest_ = function(request) {\n  // Either (requestUri and sessionId), (requestUri and postBody) or\n  // (requestUri and pendingToken) are required.\n  if (!request[fireauth.RpcHandler.AuthServerField.REQUEST_URI] ||\n      (!request[fireauth.RpcHandler.AuthServerField.SESSION_ID] &&\n       !request[fireauth.RpcHandler.AuthServerField.POST_BODY] &&\n       !request[fireauth.RpcHandler.AuthServerField.PENDING_TOKEN])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Processes the verifyAssertion response and injects the same raw nonce\n * if available in request.\n * @param {!Object} request The verifyAssertion request data.\n * @param {!Object} response The original verifyAssertion response data.\n * @return {!Object} The modified verifyAssertion response.\n * @private\n */\nfireauth.RpcHandler.processVerifyAssertionResponse_ =\n    function(request, response) {\n  // This makes it possible for OIDC providers to:\n  // 1. Initialize an OIDC Auth credential on successful response.\n  // 2. Initialize an OIDC Auth credential within the recovery error.\n\n  // When request has sessionId and response has OIDC ID token and no pending\n  // token, a credential with raw nonce and OIDC ID token needs to be returned.\n  if (response[fireauth.RpcHandler.AuthServerField.OAUTH_ID_TOKEN] &&\n      response[fireauth.RpcHandler.AuthServerField.PROVIDER_ID] &&\n      response[fireauth.RpcHandler.AuthServerField.PROVIDER_ID]\n          .indexOf(fireauth.constants.OIDC_PREFIX) == 0 &&\n      // Use pendingToken instead of idToken and rawNonce when available.\n      !response[fireauth.RpcHandler.AuthServerField.PENDING_TOKEN]) {\n    if (request[fireauth.RpcHandler.AuthServerField.SESSION_ID]) {\n      // For full OAuth flow, the nonce is in the session ID.\n      response[fireauth.RpcHandler.InjectedResponseField.NONCE] =\n          request[fireauth.RpcHandler.AuthServerField.SESSION_ID];\n    } else if (request[fireauth.RpcHandler.AuthServerField.POST_BODY]) {\n      // For credential flow, the nonce is in the postBody nonce field.\n      var queryData = new goog.Uri.QueryData(\n          request[fireauth.RpcHandler.AuthServerField.POST_BODY]);\n      if (queryData.containsKey(\n              fireauth.RpcHandler.InjectedResponseField.NONCE)) {\n        response[fireauth.RpcHandler.InjectedResponseField.NONCE] =\n            queryData.get(fireauth.RpcHandler.InjectedResponseField.NONCE);\n      }\n    }\n  }\n  return response;\n};\n\n\n/**\n * Validates a response from verifyAssertionForExisting.\n * @param {?Object} response The verifyAssertionForExisting response data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionForExistingResponse_ =\n    function(response) {\n  // When returnIdpCredential is set to true and the account is new, no error\n  // is thrown but an errorMessage is added to the response. No idToken is\n  // passed.\n  if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] &&\n      response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] ==\n          fireauth.RpcHandler.ServerError.USER_NOT_FOUND) {\n    // This corresponds to user-not-found.\n    throw new fireauth.AuthError(fireauth.authenum.Error.USER_DELETED);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]) {\n    // Construct developer facing error message from server code in errorMessage\n    // field.\n    throw fireauth.RpcHandler.getDeveloperErrorFromCode_(\n        response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]);\n  }\n  // Need confirmation should not be returned when do not create new user flag\n  // is set.\n  // If no error found and ID token is missing, throw an internal error.\n  if (!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a response from verifyAssertion.\n * @param {?Object} response The verifyAssertion response data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionResponse_ = function(response) {\n  var error = null;\n  if (response[fireauth.RpcHandler.AuthServerField.NEED_CONFIRMATION]) {\n    // Account linking required, previously logged in to another account\n    // with same email. User must authenticate they are owners of the\n    // first account.\n    // If enough info for Auth linking error, throw an instance of Auth linking\n    // error. This will be used by developer after reauthenticating with email\n    // provided by error to link using the credentials in Auth linking error.\n    // If missing information, return regular Auth error.\n    response['code'] = fireauth.authenum.Error.NEED_CONFIRMATION;\n    error = fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] ==\n             fireauth.RpcHandler.ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n    // When FEDERATED_USER_ID_ALREADY_LINKED returned in error message, auth\n    // credential and email will also be returned, throw relevant error in that\n    // case.\n    // In this case the developer needs to signInWithCredential to the returned\n    // credentials.\n    response['code'] = fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;\n    error = fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] ==\n             fireauth.RpcHandler.ServerError.EMAIL_EXISTS) {\n    // When EMAIL_EXISTS returned in error message, Auth credential and email\n    // will also be returned, throw relevant error in that case.\n    // In this case, the developers needs to sign in the user to the original\n    // owner of the account and then link to the returned credential here.\n    response['code'] = fireauth.authenum.Error.EMAIL_EXISTS;\n    error = fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]) {\n    // Construct developer facing error message from server code in errorMessage\n    // field.\n    error = fireauth.RpcHandler.getDeveloperErrorFromCode_(\n        response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]);\n  }\n  // If error found, throw it.\n  if (error) {\n    throw error;\n  }\n  // If no error found and ID token is missing, throw an internal error.\n  if (!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a verifyAssertion with linking request.\n * @param {?Object} request The verifyAssertion request data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionLinkRequest_ = function(request) {\n  // idToken with either (requestUri and sessionId) or (requestUri and postBody)\n  // are required.\n  fireauth.RpcHandler.validateVerifyAssertionRequest_(request);\n  if (!request['idToken']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * @typedef {{\n *   autoCreate: (boolean|undefined),\n *   requestUri: string,\n *   postBody: (?string|undefined),\n *   pendingIdToken: (?string|undefined),\n *   sessionId: (?string|undefined),\n *   idToken: (?string|undefined),\n *   returnIdpCredential: (boolean|undefined)\n * }}\n */\nfireauth.RpcHandler.VerifyAssertionData;\n\n\n/**\n * Requests verifyAssertion endpoint. When resolved, promise returns the whole\n * response.\n * @param {!fireauth.RpcHandler.VerifyAssertionData} request\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyAssertion = function(request) {\n  // Force Auth credential to be returned on the following errors:\n  // FEDERATED_USER_ID_ALREADY_LINKED\n  // EMAIL_EXISTS\n  request['returnIdpCredential'] = true;\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION,\n      request);\n};\n\n\n/**\n * Requests verifyAssertion endpoint for federated account linking. When\n * resolved, promise returns the whole response.\n * @param {!fireauth.RpcHandler.VerifyAssertionData} request\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyAssertionForLinking = function(request) {\n  // Force Auth credential to be returned on the following errors:\n  // FEDERATED_USER_ID_ALREADY_LINKED\n  // EMAIL_EXISTS\n  request['returnIdpCredential'] = true;\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_LINKING,\n      request);\n};\n\n\n/**\n * Requests verifyAssertion endpoint for an existing federated account. When\n * resolved, promise returns the whole response. If not existing, a\n * user-not-found error is thrown.\n * @param {!fireauth.RpcHandler.VerifyAssertionData} request\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyAssertionForExisting = function(request) {\n  // Since we are setting returnIdpCredential to true, a response will be\n  // returned even though the account doesn't exist but an error message is\n  // appended with value set to USER_NOT_FOUND. If this flag is not passed, only\n  // the USER_NOT_FOUND error is thrown without any response.\n  request['returnIdpCredential'] = true;\n  // Do not create a new account if the user doesn't exist.\n  request['autoCreate'] = false;\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_EXISTING,\n      request);\n};\n\n\n/**\n * Validates a request that should contain an action code.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateApplyActionCodeRequest_ = function(request) {\n  if (!request['oobCode']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_OOB_CODE);\n  }\n};\n\n\n/**\n * Validates that a checkActionCode response contains the email and requestType\n * fields.\n * @param {!Object} response The raw response returned by the server.\n * @private\n */\nfireauth.RpcHandler.validateCheckActionCodeResponse_ = function(response) {\n  // If the code is invalid, usually a clear error would be returned.\n  // In this case, something unexpected happened.\n  // Email could be empty only if the request type is EMAIL_SIGNIN.\n  var operation = response['requestType'];\n  if (!operation || (!response['email'] && operation != 'EMAIL_SIGNIN')) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Requests resetPassword endpoint for password reset, returns promise that\n * resolves with user's email.\n * @param {string} code The email action code to confirm for password reset.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.confirmPasswordReset =\n    function(code, newPassword) {\n  var request = {\n    'oobCode': code,\n    'newPassword': newPassword\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.RESET_PASSWORD, request);\n};\n\n\n/**\n * Checks the validity of an email action code and returns the response\n * received.\n * @param {string} code The email action code to check.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.checkActionCode = function(code) {\n  var request = {\n    'oobCode': code\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.CHECK_ACTION_CODE, request);\n};\n\n\n/**\n * Applies an out-of-band email action code, such as an email verification code.\n * @param {string} code The email action code.\n * @return {!goog.Promise<string>} A promise that resolves with the user's\n *     email.\n */\nfireauth.RpcHandler.prototype.applyActionCode = function(code) {\n  var request = {\n    'oobCode': code\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.APPLY_OOB_CODE, request);\n};\n\n\n/**\n * The specification of an RPC call. The fields are:\n * <ul>\n * <li>cachebuster: defines whether to send a unique string with request to\n *     force the backend to return an uncached response to request.\n * <li>customErrorMap: A map of backend error codes to client-side errors.\n *     Any entries set here override the default handling of the backend error\n *     code.\n * <li>endpoint: defines the backend endpoint to call.\n * <li>httpMethod: defines the HTTP method to use, defaulting to POST if not\n *     specified.\n * <li>requestRequiredFields: an array of the fields that are required in the\n *     request. The RPC call will fail with an INTERNAL_ERROR error if a\n *     required field is not present or if it is null, undefined, or the empty\n *     string.\n * <li>requestValidator: a function that takes in the request object and throws\n *     an error if the request is invalid.\n * <li>responsePreprocessor: a function to modify the response before running\n *     validation. The function takes in the request and response object.\n * <li>responseValidator: a function that takes in the response object and\n *     throws an error if the response is invalid.\n * <li>responseField: the field of the response object that will be returned\n *     from the RPC call. If no field is specified, the entire response object\n *     will be returned.\n * <li>returnSecureToken: Set to true to explicitly request STS tokens instead\n *     of legacy Google Identity Toolkit tokens from the backend.\n * </ul>\n * @typedef {{\n *   cachebuster: (boolean|undefined),\n *   customErrorMap: (!fireauth.RpcHandler.ServerErrorMap|undefined),\n *   endpoint: string,\n *   httpMethod: (!fireauth.RpcHandler.HttpMethod|undefined),\n *   requestRequiredFields: (!Array<string>|undefined),\n *   requestValidator: (function(!Object):void|undefined),\n *   responsePreprocessor: ((function(!Object, !Object):!Object)|undefined),\n *   responseValidator: (function(!Object):void|undefined),\n *   responseField: (string|undefined),\n *   returnSecureToken: (boolean|undefined)\n * }}\n */\nfireauth.RpcHandler.ApiMethodHandler;\n\n\n/**\n * The specifications for the backend API methods.\n * @enum {!fireauth.RpcHandler.ApiMethodHandler}\n */\nfireauth.RpcHandler.ApiMethod = {\n  APPLY_OOB_CODE: {\n    endpoint: 'setAccountInfo',\n    requestValidator: fireauth.RpcHandler.validateApplyActionCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  CHECK_ACTION_CODE: {\n    endpoint: 'resetPassword',\n    requestValidator: fireauth.RpcHandler.validateApplyActionCodeRequest_,\n    responseValidator: fireauth.RpcHandler.validateCheckActionCodeResponse_\n  },\n  CREATE_ACCOUNT: {\n    endpoint: 'signupNewUser',\n    requestValidator: fireauth.RpcHandler.validateCreateAccountRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  CREATE_AUTH_URI: {\n    endpoint: 'createAuthUri'\n  },\n  DELETE_ACCOUNT: {\n    endpoint: 'deleteAccount',\n    requestRequiredFields: ['idToken']\n  },\n  DELETE_LINKED_ACCOUNTS: {\n    endpoint: 'setAccountInfo',\n    requestRequiredFields: ['idToken', 'deleteProvider'],\n    requestValidator: fireauth.RpcHandler.validateDeleteLinkedAccountsRequest_\n  },\n  EMAIL_LINK_SIGNIN: {\n    endpoint: 'emailLinkSignin',\n    requestRequiredFields: ['email', 'oobCode'],\n    requestValidator: fireauth.RpcHandler.validateRequestHasEmail_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  EMAIL_LINK_SIGNIN_FOR_LINKING: {\n    endpoint: 'emailLinkSignin',\n    requestRequiredFields: ['idToken', 'email', 'oobCode'],\n    requestValidator: fireauth.RpcHandler.validateRequestHasEmail_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  GET_ACCOUNT_INFO: {\n    endpoint: 'getAccountInfo'\n  },\n  GET_AUTH_URI: {\n    endpoint: 'createAuthUri',\n    requestValidator: fireauth.RpcHandler.validateGetAuthUriRequest_,\n    responseValidator: fireauth.RpcHandler.validateGetAuthResponse_\n  },\n  GET_EMAIL_SIGNIN_CODE: {\n    endpoint: 'getOobConfirmationCode',\n    requestRequiredFields: ['requestType'],\n    requestValidator: fireauth.RpcHandler.validateEmailSignInCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  GET_EMAIL_VERIFICATION_CODE: {\n    endpoint: 'getOobConfirmationCode',\n    requestRequiredFields: ['idToken', 'requestType'],\n    requestValidator: fireauth.RpcHandler.validateEmailVerificationCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  GET_OOB_CODE: {\n    endpoint: 'getOobConfirmationCode',\n    requestRequiredFields: ['requestType'],\n    requestValidator: fireauth.RpcHandler.validateOobCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  GET_PROJECT_CONFIG: {\n    // Microsoft edge caching bug. There are two getProjectConfig API calls,\n    // first from top level window and then from iframe. The second call has a\n    // response of 304 which means it's a cached response. We suspect the call\n    // from iframe is reusing the response from the first call and checks the\n    // allowed origin in the cached response, which only contains the domain for\n    // the top level window.\n    cachebuster: true,\n    endpoint: 'getProjectConfig',\n    httpMethod: fireauth.RpcHandler.HttpMethod.GET\n  },\n  GET_RECAPTCHA_PARAM: {\n    cachebuster: true,\n    endpoint: 'getRecaptchaParam',\n    httpMethod: fireauth.RpcHandler.HttpMethod.GET,\n    responseValidator: fireauth.RpcHandler.validateGetRecaptchaParamResponse_\n  },\n  RESET_PASSWORD: {\n    endpoint: 'resetPassword',\n    requestValidator: fireauth.RpcHandler.validateApplyActionCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  RETURN_DYNAMIC_LINK: {\n    cachebuster: true,\n    endpoint: 'getProjectConfig',\n    httpMethod: fireauth.RpcHandler.HttpMethod.GET,\n    responseField: fireauth.RpcHandler.AuthServerField.DYNAMIC_LINKS_DOMAIN\n  },\n  SEND_VERIFICATION_CODE: {\n    endpoint: 'sendVerificationCode',\n    // Currently only reCAPTCHA tokens supported.\n    requestRequiredFields: ['phoneNumber', 'recaptchaToken'],\n    responseField: fireauth.RpcHandler.AuthServerField.SESSION_INFO\n  },\n  SET_ACCOUNT_INFO: {\n    endpoint: 'setAccountInfo',\n    requestRequiredFields: ['idToken'],\n    requestValidator: fireauth.RpcHandler.validateEmailIfPresent_,\n    returnSecureToken: true // Maybe updating email will invalidate token in the\n                            // future, this will prevent breaking the client.\n  },\n  SET_ACCOUNT_INFO_SENSITIVE: {\n    endpoint: 'setAccountInfo',\n    requestRequiredFields: ['idToken'],\n    requestValidator: fireauth.RpcHandler.validateSetAccountInfoSensitive_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true // Updating password will send back new sts tokens.\n  },\n  SIGN_IN_ANONYMOUSLY: {\n    endpoint: 'signupNewUser',\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_ASSERTION: {\n    endpoint: 'verifyAssertion',\n    requestValidator: fireauth.RpcHandler.validateVerifyAssertionRequest_,\n    responsePreprocessor: fireauth.RpcHandler.processVerifyAssertionResponse_,\n    responseValidator: fireauth.RpcHandler.validateVerifyAssertionResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_ASSERTION_FOR_EXISTING: {\n    endpoint: 'verifyAssertion',\n    requestValidator: fireauth.RpcHandler.validateVerifyAssertionRequest_,\n    responsePreprocessor: fireauth.RpcHandler.processVerifyAssertionResponse_,\n    responseValidator:\n        fireauth.RpcHandler.validateVerifyAssertionForExistingResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_ASSERTION_FOR_LINKING: {\n    endpoint: 'verifyAssertion',\n    requestValidator: fireauth.RpcHandler.validateVerifyAssertionLinkRequest_,\n    responsePreprocessor: fireauth.RpcHandler.processVerifyAssertionResponse_,\n    responseValidator: fireauth.RpcHandler.validateVerifyAssertionResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_CUSTOM_TOKEN: {\n    endpoint: 'verifyCustomToken',\n    requestValidator: fireauth.RpcHandler.validateVerifyCustomTokenRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_PASSWORD: {\n    endpoint: 'verifyPassword',\n    requestValidator: fireauth.RpcHandler.validateVerifyPasswordRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_PHONE_NUMBER: {\n    endpoint: 'verifyPhoneNumber',\n    requestValidator: fireauth.RpcHandler.validateVerifyPhoneNumberRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_\n  },\n  VERIFY_PHONE_NUMBER_FOR_LINKING: {\n    endpoint: 'verifyPhoneNumber',\n    requestValidator: fireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_,\n    responseValidator:\n        fireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_\n  },\n  VERIFY_PHONE_NUMBER_FOR_EXISTING: {\n    customErrorMap: fireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_,\n    endpoint: 'verifyPhoneNumber',\n    requestValidator: fireauth.RpcHandler.validateVerifyPhoneNumberRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_\n  }\n};\n\n\n/**\n * @const {string} The parameter to send to the backend to specify that the\n *     client accepts STS tokens directly from Firebear backends.\n * @private\n */\nfireauth.RpcHandler.USE_STS_TOKEN_PARAM_ = 'returnSecureToken';\n\n\n/**\n * Invokes an RPC method according to the specification defined by\n * {@code fireauth.RpcHandler.ApiMethod}.\n * @param {!fireauth.RpcHandler.ApiMethod} method The method to invoke.\n * @param {!Object} request The input data to the method.\n * @return {!goog.Promise} A promise that resolves with the results of the RPC.\n *     The format of the results can be modified in\n *     {@code fireauth.RpcHandler.ApiMethod}.\n * @private\n */\nfireauth.RpcHandler.prototype.invokeRpc_ = function(method, request) {\n  if (!fireauth.object.hasNonEmptyFields(\n      request, method.requestRequiredFields)) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR));\n  }\n\n  var httpMethod = method.httpMethod || fireauth.RpcHandler.HttpMethod.POST;\n  var self = this;\n  var response;\n  return goog.Promise.resolve(request)\n      .then(method.requestValidator)\n      .then(function() {\n        if (method.returnSecureToken) {\n          // Signal that the client accepts STS tokens, for the legacy Google\n          // Identity Toolkit token to STS token migration.\n          request[fireauth.RpcHandler.USE_STS_TOKEN_PARAM_] = true;\n        }\n        return self.requestFirebaseEndpoint(method.endpoint, httpMethod,\n            request, method.customErrorMap, method.cachebuster || false);\n      })\n      .then(function(tempResponse) {\n        response = tempResponse;\n        // If response processor is available, pass request and response through\n        // it. Modifications would be made using response reference.\n        if (method.responsePreprocessor) {\n          return method.responsePreprocessor(request, response);\n        }\n        return response;\n      })\n      .then(method.responseValidator)\n      .then(function() {\n        if (!method.responseField) {\n          return response;\n        }\n        if (!(method.responseField in response)) {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.INTERNAL_ERROR);\n        }\n        return response[method.responseField];\n      });\n};\n\n\n/**\n * Checks if the server response contains errors.\n * @param {!Object} resp The API response.\n * @return {boolean} {@code true} if the response contains errors.\n * @private\n */\nfireauth.RpcHandler.hasError_ = function(resp) {\n  return !!resp['error'];\n};\n\n\n/**\n * Returns the developer facing error corresponding to the server code provided.\n * @param {string} serverErrorCode The server error message.\n * @return {!fireauth.AuthError} The corresponding error object.\n * @private\n */\nfireauth.RpcHandler.getDeveloperErrorFromCode_ = function(serverErrorCode) {\n  // Encapsulate the server error code in a typical server error response with\n  // the code populated within. This will convert the response to a developer\n  // facing one.\n  return fireauth.RpcHandler.getDeveloperError_({\n    'error': {\n      'errors': [\n        {\n          'message': serverErrorCode\n        }\n      ],\n      'code': 400,\n      'message': serverErrorCode\n    }\n  });\n};\n\n\n/**\n * Converts a server response with errors to a developer-facing AuthError.\n * @param {!Object} response The server response.\n * @param {?fireauth.RpcHandler.ServerErrorMap=} opt_customErrorMap A map of\n *     backend error codes to client-side errors. Any entries set here\n *     override the default handling of the backend error code.\n * @return {!fireauth.AuthError} The corresponding error object.\n * @private\n */\nfireauth.RpcHandler.getDeveloperError_ =\n    function(response, opt_customErrorMap) {\n  var errorMessage;\n  var apiaryError = fireauth.RpcHandler.getApiaryError_(response);\n  if (apiaryError) {\n    return apiaryError;\n  }\n\n  var serverErrorCode = fireauth.RpcHandler.getErrorCode_(response);\n\n  var errorMap = {};\n\n  // Custom token errors.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CUSTOM_TOKEN] =\n      fireauth.authenum.Error.INVALID_CUSTOM_TOKEN;\n  errorMap[fireauth.RpcHandler.ServerError.CREDENTIAL_MISMATCH] =\n      fireauth.authenum.Error.CREDENTIAL_MISMATCH;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_CUSTOM_TOKEN] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Create Auth URI errors.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_IDENTIFIER] =\n      fireauth.authenum.Error.INVALID_EMAIL;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_CONTINUE_URI] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Sign in with email and password errors (some apply to sign up too).\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_EMAIL] =\n      fireauth.authenum.Error.INVALID_EMAIL;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PASSWORD] =\n      fireauth.authenum.Error.INVALID_PASSWORD;\n  errorMap[fireauth.RpcHandler.ServerError.USER_DISABLED] =\n      fireauth.authenum.Error.USER_DISABLED;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_PASSWORD] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Sign up with email and password errors.\n  errorMap[fireauth.RpcHandler.ServerError.EMAIL_EXISTS] =\n      fireauth.authenum.Error.EMAIL_EXISTS;\n  errorMap[fireauth.RpcHandler.ServerError.PASSWORD_LOGIN_DISABLED] =\n      fireauth.authenum.Error.OPERATION_NOT_ALLOWED;\n\n  // Verify assertion for sign in with credential errors:\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_IDP_RESPONSE] =\n      fireauth.authenum.Error.INVALID_IDP_RESPONSE;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PENDING_TOKEN] =\n      fireauth.authenum.Error.INVALID_IDP_RESPONSE;\n  errorMap[fireauth.RpcHandler.ServerError.FEDERATED_USER_ID_ALREADY_LINKED] =\n      fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_OR_INVALID_NONCE] =\n      fireauth.authenum.Error.MISSING_OR_INVALID_NONCE;\n\n  // Email template errors while sending emails:\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_MESSAGE_PAYLOAD] =\n      fireauth.authenum.Error.INVALID_MESSAGE_PAYLOAD;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_RECIPIENT_EMAIL] =\n      fireauth.authenum.Error.INVALID_RECIPIENT_EMAIL;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_SENDER] =\n      fireauth.authenum.Error.INVALID_SENDER;\n\n  // Send Password reset email errors:\n  errorMap[fireauth.RpcHandler.ServerError.EMAIL_NOT_FOUND] =\n      fireauth.authenum.Error.USER_DELETED;\n  errorMap[fireauth.RpcHandler.ServerError.RESET_PASSWORD_EXCEED_LIMIT] =\n      fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER;    \n\n  // Reset password errors:\n  errorMap[fireauth.RpcHandler.ServerError.EXPIRED_OOB_CODE] =\n      fireauth.authenum.Error.EXPIRED_OOB_CODE;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_OOB_CODE] =\n      fireauth.authenum.Error.INVALID_OOB_CODE;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_OOB_CODE] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Get Auth URI errors:\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PROVIDER_ID] =\n      fireauth.authenum.Error.INVALID_PROVIDER_ID;\n\n  // Operations that require ID token in request:\n  errorMap[fireauth.RpcHandler.ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN] =\n      fireauth.authenum.Error.CREDENTIAL_TOO_OLD_LOGIN_AGAIN;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_ID_TOKEN] =\n      fireauth.authenum.Error.INVALID_AUTH;\n  errorMap[fireauth.RpcHandler.ServerError.TOKEN_EXPIRED] =\n      fireauth.authenum.Error.TOKEN_EXPIRED;\n  errorMap[fireauth.RpcHandler.ServerError.USER_NOT_FOUND] =\n      fireauth.authenum.Error.TOKEN_EXPIRED;\n\n  // CORS issues.\n  errorMap[fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED] =\n      fireauth.authenum.Error.CORS_UNSUPPORTED;\n\n  // Dynamic link not activated.\n  errorMap[fireauth.RpcHandler.ServerError.DYNAMIC_LINK_NOT_ACTIVATED] =\n      fireauth.authenum.Error.DYNAMIC_LINK_NOT_ACTIVATED;\n\n  // iosBundleId or androidPackageName not valid error.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_APP_ID] =\n      fireauth.authenum.Error.INVALID_APP_ID;\n\n  // Other errors.\n  errorMap[fireauth.RpcHandler.ServerError.TOO_MANY_ATTEMPTS_TRY_LATER] =\n      fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER;\n  errorMap[fireauth.RpcHandler.ServerError.WEAK_PASSWORD] =\n      fireauth.authenum.Error.WEAK_PASSWORD;\n  errorMap[fireauth.RpcHandler.ServerError.OPERATION_NOT_ALLOWED] =\n      fireauth.authenum.Error.OPERATION_NOT_ALLOWED;\n  errorMap[fireauth.RpcHandler.ServerError.USER_CANCELLED] =\n      fireauth.authenum.Error.USER_CANCELLED;\n\n  // Phone Auth related errors.\n  errorMap[fireauth.RpcHandler.ServerError.CAPTCHA_CHECK_FAILED] =\n      fireauth.authenum.Error.CAPTCHA_CHECK_FAILED;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_APP_CREDENTIAL] =\n      fireauth.authenum.Error.INVALID_APP_CREDENTIAL;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CODE] =\n      fireauth.authenum.Error.INVALID_CODE;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PHONE_NUMBER] =\n      fireauth.authenum.Error.INVALID_PHONE_NUMBER;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_SESSION_INFO] =\n      fireauth.authenum.Error.INVALID_SESSION_INFO;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_TEMPORARY_PROOF] =\n      fireauth.authenum.Error.INVALID_IDP_RESPONSE;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_APP_CREDENTIAL] =\n      fireauth.authenum.Error.MISSING_APP_CREDENTIAL;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_CODE] =\n      fireauth.authenum.Error.MISSING_CODE;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_PHONE_NUMBER] =\n      fireauth.authenum.Error.MISSING_PHONE_NUMBER;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_SESSION_INFO] =\n      fireauth.authenum.Error.MISSING_SESSION_INFO;\n  errorMap[fireauth.RpcHandler.ServerError.QUOTA_EXCEEDED] =\n      fireauth.authenum.Error.QUOTA_EXCEEDED;\n  errorMap[fireauth.RpcHandler.ServerError.SESSION_EXPIRED] =\n      fireauth.authenum.Error.CODE_EXPIRED;\n  errorMap[fireauth.RpcHandler.ServerError.REJECTED_CREDENTIAL] =\n      fireauth.authenum.Error.REJECTED_CREDENTIAL;\n\n  // Other action code errors when additional settings passed.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CONTINUE_URI] =\n      fireauth.authenum.Error.INVALID_CONTINUE_URI;\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_ANDROID_PACKAGE_NAME] =\n      fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_IOS_BUNDLE_ID] =\n      fireauth.authenum.Error.MISSING_IOS_BUNDLE_ID;\n  errorMap[fireauth.RpcHandler.ServerError.UNAUTHORIZED_DOMAIN] =\n      fireauth.authenum.Error.UNAUTHORIZED_DOMAIN;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_DYNAMIC_LINK_DOMAIN] =\n      fireauth.authenum.Error.INVALID_DYNAMIC_LINK_DOMAIN;\n\n  // getProjectConfig errors when clientId is passed.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_OAUTH_CLIENT_ID] =\n      fireauth.authenum.Error.INVALID_OAUTH_CLIENT_ID;\n  // getProjectConfig errors when sha1Cert is passed.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CERT_HASH] =\n      fireauth.authenum.Error.INVALID_CERT_HASH;\n\n  // Override errors set in the custom map.\n  var customErrorMap = opt_customErrorMap || {};\n  goog.object.extend(errorMap, customErrorMap);\n\n  // Get detailed message if available.\n  errorMessage = fireauth.RpcHandler.getErrorCodeDetails(serverErrorCode);\n\n  // Handle backend errors where the error code can be a prefix of the message\n  // (e.g. \"WEAK_PASSWORD : Password should be at least 6 characters\").\n  // Use the details after the colon as the error message. If none available,\n  // pass undefined, which will default to the client hard coded error messages.\n  for (var prefixCode in errorMap) {\n    if (serverErrorCode.indexOf(prefixCode) === 0) {\n      return new fireauth.AuthError(errorMap[prefixCode], errorMessage);\n    }\n  }\n\n  // No error message found, return the serialized response as the message.\n  // This is likely to be an Apiary error for unexpected cases like keyExpired,\n  // etc.\n  if (!errorMessage && response) {\n     errorMessage = fireauth.util.stringifyJSON(response);\n  }\n  // The backend returned some error we don't recognize; this is an error on\n  // our side.\n  return new fireauth.AuthError(\n      fireauth.authenum.Error.INTERNAL_ERROR, errorMessage);\n};\n\n\n/**\n * @param {string} serverMessage The server error code.\n * @return {string|undefined} The detailed error code message.\n */\nfireauth.RpcHandler.getErrorCodeDetails = function(serverMessage) {\n  // Use the error details part as the autherror message.\n  // For a message INVALID_CUSTOM_TOKEN : [error detail here],\n  // The Auth error message should be [error detail here].\n  // No space should be contained in the error code, otherwise no detailed error\n  // message returned.\n  var matches = serverMessage.match(/^[^\\s]+\\s*:\\s*(.*)$/);\n  if (matches && matches.length > 1) {\n    return matches[1];\n  }\n  return undefined;\n};\n\n\n/**\n * Gets the Apiary error from a backend response, if applicable.\n * @param {!Object} response The API response.\n * @return {?fireauth.AuthError} The error, if applicable.\n * @private\n */\nfireauth.RpcHandler.getApiaryError_ = function(response) {\n  var error = response['error'] && response['error']['errors'] &&\n      response['error']['errors'][0] || {};\n  var reason = error['reason'] || '';\n\n  var errorReasonMap = {\n    'keyInvalid': fireauth.authenum.Error.INVALID_API_KEY,\n    'ipRefererBlocked': fireauth.authenum.Error.APP_NOT_AUTHORIZED\n  };\n\n  if (errorReasonMap[reason]) {\n    return new fireauth.AuthError(errorReasonMap[reason]);\n  }\n\n  return null;\n};\n\n\n/**\n * Gets the server error code from the response.\n * @param {!Object} resp The API response.\n * @return {string} The error code if present.\n * @private\n */\nfireauth.RpcHandler.getErrorCode_ = function(resp) {\n  return (resp['error'] && resp['error']['message']) || '';\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview The headless Auth class used for authenticating Firebase users.\n */\n\ngoog.provide('fireauth.Auth');\n\ngoog.require('fireauth.ActionCodeInfo');\ngoog.require('fireauth.ActionCodeSettings');\ngoog.require('fireauth.AdditionalUserInfo');\ngoog.require('fireauth.AuthCredential');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthEventHandler');\ngoog.require('fireauth.AuthEventManager');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.AuthSettings');\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.ConfirmationResult');\ngoog.require('fireauth.EmailAuthProvider');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.UserEventType');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.deprecation');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.object');\ngoog.require('fireauth.storage.RedirectUserManager');\ngoog.require('fireauth.storage.UserManager');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.object');\n\n\n\n/**\n * Creates the Firebase Auth corresponding for the App provided.\n *\n * @param {!firebase.app.App} app The corresponding Firebase App.\n * @constructor\n * @implements {fireauth.AuthEventHandler}\n * @implements {firebase.Service}\n * @extends {goog.events.EventTarget}\n */\nfireauth.Auth = function(app) {\n  /** @private {boolean} Whether this instance is deleted. */\n  this.deleted_ = false;\n  /** The Auth instance's settings object. */\n  fireauth.object.setReadonlyProperty(\n      this, 'settings', new fireauth.AuthSettings());\n  /** Auth's corresponding App. */\n  fireauth.object.setReadonlyProperty(this, 'app', app);\n  // Initialize RPC handler.\n  // API key is required for web client RPC calls.\n  if (this.app_().options && this.app_().options['apiKey']) {\n    var clientFullVersion = firebase.SDK_VERSION ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION) :\n        null;\n    this.rpcHandler_ = new fireauth.RpcHandler(\n        this.app_().options && this.app_().options['apiKey'],\n        // Get the client Auth endpoint used.\n        fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),\n        clientFullVersion);\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_API_KEY);\n  }\n  /** @private {!Array<!goog.Promise<*, *>|!goog.Promise<void>>} List of\n   *      pending promises. */\n  this.pendingPromises_ = [];\n  /** @private {!Array<!function(?string)>} Auth token listeners. */\n  this.authListeners_ = [];\n  /** @private {!Array<!function(?string)>} User change listeners. */\n  this.userChangeListeners_ = [];\n  /**\n   * @private {!firebase.Subscribe} The subscribe function to the Auth ID token\n   *     change observer. This will trigger on ID token changes, including\n   *     token refresh on the same user.\n   */\n  this.onIdTokenChanged_ = firebase.INTERNAL.createSubscribe(\n      goog.bind(this.initIdTokenChangeObserver_, this));\n  /**\n   * @private {?string|undefined} The UID of the user that last triggered the\n   *     user state change listener.\n   */\n  this.userStateChangeUid_ = undefined;\n  /**\n   * @private {!firebase.Subscribe} The subscribe function to the user state\n   *     change observer.\n   */\n  this.onUserStateChanged_ = firebase.INTERNAL.createSubscribe(\n      goog.bind(this.initUserStateObserver_, this));\n  // Set currentUser to null.\n  this.setCurrentUser_(null);\n  /**\n   * @private {!fireauth.storage.UserManager} The Auth user storage\n   *     manager instance.\n   */\n  this.userStorageManager_ =\n      new fireauth.storage.UserManager(this.getStorageKey());\n  /**\n   * @private {!fireauth.storage.RedirectUserManager} The redirect user\n   *     storagemanager instance.\n   */\n  this.redirectUserStorageManager_ =\n      new fireauth.storage.RedirectUserManager(this.getStorageKey());\n  /**\n   * @private {!goog.Promise<undefined>} Promise that resolves when initial\n   *     state is loaded from storage.\n   */\n  this.authStateLoaded_ = this.registerPendingPromise_(this.initAuthState_());\n  /**\n   * @private {!goog.Promise<undefined>} Promise that resolves when state and\n   *     redirect result is ready, after which sign in and sign out operations\n   *     are safe to execute.\n   */\n  this.redirectStateIsReady_ = this.registerPendingPromise_(\n      this.initAuthRedirectState_());\n  /** @private {boolean} Whether initial state has already been resolved. */\n  this.isStateResolved_ = false;\n  /**\n   * @private {!function()} The syncAuthChanges function with context set to\n   *     auth instance.\n   */\n  this.getSyncAuthUserChanges_ = goog.bind(this.syncAuthUserChanges_, this);\n  /** @private {!function(!fireauth.AuthUser):!goog.Promise} The handler for\n   *      user state changes. */\n  this.userStateChangeListener_ =\n      goog.bind(this.handleUserStateChange_, this);\n  /** @private {!function(!Object)} The handler for user token changes. */\n  this.userTokenChangeListener_ =\n      goog.bind(this.handleUserTokenChange_, this);\n  /** @private {!function(!Object)} The handler for user deletion. */\n  this.userDeleteListener_ = goog.bind(this.handleUserDelete_, this);\n  /** @private {!function(!Object)} The handler for user invalidation. */\n  this.userInvalidatedListener_ = goog.bind(this.handleUserInvalidated_, this);\n  // TODO: find better way to enable or disable auth event manager.\n  if (fireauth.AuthEventManager.ENABLED) {\n    // Initialize Auth event manager to handle popup and redirect operations.\n    this.initAuthEventManager_();\n  }\n\n  // Export INTERNAL namespace.\n  this.INTERNAL = {};\n  this.INTERNAL['delete'] = goog.bind(this.delete, this);\n  this.INTERNAL['logFramework'] = goog.bind(this.logFramework, this);\n  /**\n   * @private {number} The number of Firebase services subscribed to Auth\n   *     changes.\n   */\n  this.firebaseServices_ = 0;\n  // Add call to superclass constructor.\n  fireauth.Auth.base(this, 'constructor');\n  // Initialize readable/writable Auth properties.\n  this.initializeReadableWritableProps_();\n  /**\n   * @private {!Array<string>} List of Firebase frameworks/libraries used. This\n   *     is currently only used to log FirebaseUI.\n   */\n  this.frameworks_ = [];\n};\ngoog.inherits(fireauth.Auth, goog.events.EventTarget);\n\n\n/**\n * Language code change custom event.\n * @param {?string} languageCode The new language code.\n * @constructor\n * @extends {goog.events.Event}\n */\nfireauth.Auth.LanguageCodeChangeEvent = function(languageCode) {\n  goog.events.Event.call(\n      this, fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED);\n  this.languageCode = languageCode;\n};\ngoog.inherits(fireauth.Auth.LanguageCodeChangeEvent, goog.events.Event);\n\n\n/**\n * Framework change custom event.\n * @param {!Array<string>} frameworks The new frameworks array.\n * @constructor\n * @extends {goog.events.Event}\n */\nfireauth.Auth.FrameworkChangeEvent = function(frameworks) {\n  goog.events.Event.call(\n      this, fireauth.constants.AuthEventType.FRAMEWORK_CHANGED);\n  this.frameworks = frameworks;\n};\ngoog.inherits(fireauth.Auth.FrameworkChangeEvent, goog.events.Event);\n\n\n/**\n * Changes the Auth state persistence to the specified one.\n * @param {!fireauth.authStorage.Persistence} persistence The Auth state\n *     persistence mechanism.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.setPersistence = function(persistence) {\n  // TODO: fix auth.delete() behavior and how this affects persistence\n  // change after deletion.\n  // Throw an error if already destroyed.\n  // Set current persistence.\n  var p = this.userStorageManager_.setPersistence(persistence);\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(p));\n};\n\n\n/**\n * Get rid of Closure warning - the property is adding in the constructor.\n * @type {!firebase.app.App}\n */\nfireauth.Auth.prototype.app;\n\n\n/**\n * Sets the language code.\n * @param {?string} languageCode\n */\nfireauth.Auth.prototype.setLanguageCode = function(languageCode) {\n  // Don't do anything if no change detected.\n  if (this.languageCode_ !== languageCode && !this.deleted_) {\n    this.languageCode_ = languageCode;\n    // Update custom Firebase locale field.\n    this.rpcHandler_.updateCustomLocaleHeader(this.languageCode_);\n    // Notify external language code change listeners.\n    this.notifyLanguageCodeListeners_();\n  }\n};\n\n\n/**\n * Returns the current auth instance's language code if available.\n * @return {?string}\n */\nfireauth.Auth.prototype.getLanguageCode = function() {\n  return this.languageCode_;\n};\n\n\n/**\n * Sets the current language to the default device/browser preference.\n */\nfireauth.Auth.prototype.useDeviceLanguage = function() {\n  this.setLanguageCode(fireauth.util.getUserLanguage());\n};\n\n\n/**\n * @param {string} frameworkId The framework identifier.\n */\nfireauth.Auth.prototype.logFramework = function(frameworkId) {\n  // Theoretically multiple frameworks could be used\n  // (angularfire and FirebaseUI). Once a framework is used, it is not going\n  // to be unused, so no point adding a method to remove the framework ID.\n  this.frameworks_.push(frameworkId);\n  // Update the client version in RPC handler with the new frameworks.\n  this.rpcHandler_.updateClientVersion(firebase.SDK_VERSION ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION,\n            this.frameworks_) :\n        null);\n  this.dispatchEvent(new fireauth.Auth.FrameworkChangeEvent(\n      this.frameworks_));\n};\n\n\n/** @return {!Array<string>} The current Firebase frameworks. */\nfireauth.Auth.prototype.getFramework = function() {\n  return goog.array.clone(this.frameworks_);\n};\n\n\n/**\n * Updates the framework list on the provided user and configures the user to\n * listen to the Auth instance for any framework ID changes.\n * @param {!fireauth.AuthUser} user The user to whose framework list needs to be\n *     updated.\n * @private\n */\nfireauth.Auth.prototype.setUserFramework_ = function(user) {\n  // Sets the framework ID on the user.\n  user.setFramework(this.frameworks_);\n  // Sets current Auth instance as framework list change dispatcher on the user.\n  user.setFrameworkChangeDispatcher(this);\n};\n\n\n/**\n * Initializes readable/writable properties on Auth.\n * @suppress {invalidCasts}\n * @private\n */\nfireauth.Auth.prototype.initializeReadableWritableProps_ = function() {\n  Object.defineProperty(/** @type {!Object} */ (this), 'lc', {\n    /**\n     * @this {!Object}\n     * @return {?string} The current language code.\n     */\n    get: function() {\n      return this.getLanguageCode();\n    },\n    /**\n     * @this {!Object}\n     * @param {string} value The new language code.\n     */\n    set: function(value) {\n      this.setLanguageCode(value);\n    },\n    enumerable: false\n  });\n  // Initialize to null.\n  /** @private {?string} The current Auth instance's language code. */\n  this.languageCode_ = null;\n};\n\n\n/**\n * Notifies all external listeners of the language code change.\n * @private\n */\nfireauth.Auth.prototype.notifyLanguageCodeListeners_ = function() {\n  // Notify external listeners on the language code change.\n  this.dispatchEvent(new fireauth.Auth.LanguageCodeChangeEvent(\n      this.getLanguageCode()));\n};\n\n\n\n\n\n/**\n * @return {!Object} The object representation of the Auth instance.\n * @override\n */\nfireauth.Auth.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // an Auth instance.\n  return {\n    'apiKey': this.app_().options['apiKey'],\n    'authDomain': this.app_().options['authDomain'],\n    'appName': this.app_().name,\n    'currentUser': this.currentUser_() && this.currentUser_().toPlainObject()\n  };\n};\n\n\n/**\n * Returns the Auth event manager promise.\n * @return {!goog.Promise<!fireauth.AuthEventManager>}\n * @private\n */\nfireauth.Auth.prototype.getAuthEventManager_ = function() {\n  // Either return cached Auth event manager promise provider if available or a\n  // promise that rejects with missing Auth domain error.\n  return this.eventManagerProviderPromise_ ||\n      goog.Promise.reject(\n          new fireauth.AuthError(fireauth.authenum.Error.MISSING_AUTH_DOMAIN));\n};\n\n\n/**\n * Initializes the Auth event manager when state is ready.\n * @private\n */\nfireauth.Auth.prototype.initAuthEventManager_ = function() {\n  // Initialize Auth event manager on initState.\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  var apiKey = this.app_().options['apiKey'];\n  // Make sure environment also supports popup and redirect.\n  if (authDomain && fireauth.util.isPopupRedirectSupported()) {\n    // Auth domain is required for Auth event manager to resolve.\n    // Auth state has to be loaded first. One reason is to process link events.\n    this.eventManagerProviderPromise_ = this.authStateLoaded_.then(function() {\n      if (self.deleted_) {\n        return;\n      }\n      // By this time currentUser should be ready if available and will be able\n      // to resolve linkWithRedirect if detected.\n      self.authEventManager_ = fireauth.AuthEventManager.getManager(\n          authDomain, apiKey, self.app_().name);\n      // Subscribe Auth instance.\n      self.authEventManager_.subscribe(self);\n      // Subscribe current user by enabling popup and redirect on that user.\n      if (self.currentUser_()) {\n        self.currentUser_().enablePopupRedirect();\n      }\n      // If a redirect user is present, subscribe to popup and redirect events.\n      // In case current user was not available and the developer called link\n      // with redirect on a signed out user, this will work and the linked\n      // logged out user will be returned in getRedirectResult.\n      // current user and redirect user are the same (was already logged in),\n      // currentUser will have priority as it is subscribed before redirect\n      // user. This change will also allow further popup and redirect events on\n      // the redirect user going forward.\n      if (self.redirectUser_) {\n        self.redirectUser_.enablePopupRedirect();\n        // Set the user language for the redirect user.\n        self.setUserLanguage_(\n            /** @type {!fireauth.AuthUser} */ (self.redirectUser_));\n        // Set the user Firebase frameworks for the redirect user.\n        self.setUserFramework_(\n            /** @type {!fireauth.AuthUser} */ (self.redirectUser_));\n        // Reference to redirect user no longer needed.\n        self.redirectUser_ = null;\n      }\n      return self.authEventManager_;\n    });\n  }\n};\n\n\n/**\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The event ID.\n * @return {boolean} Whether the auth event handler can handler the provided\n *     event.\n * @override\n */\nfireauth.Auth.prototype.canHandleAuthEvent = function(mode, opt_eventId) {\n  // Only sign in events are handled.\n  switch (mode) {\n    // Accept all general sign in with redirect and unknowns.\n    // Migrating redirect events to use session storage will prevent this event\n    // from leaking to other tabs.\n    case fireauth.AuthEvent.Type.UNKNOWN:\n    case fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT:\n      return true;\n    case fireauth.AuthEvent.Type. SIGN_IN_VIA_POPUP:\n      // Pending sign in with popup event must match the stored popup event ID.\n      return this.popupEventId_ == opt_eventId &&\n          !!this.pendingPopupResolvePromise_;\n    default:\n      return false;\n  }\n};\n\n\n/**\n * Completes the pending popup operation. If error is not null, rejects with the\n * error. Otherwise, it resolves with the popup redirect result.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The result\n *     to resolve with when no error supplied.\n * @param {?fireauth.AuthError} error When supplied, the promise will reject.\n * @param {?string=} opt_eventId The event ID.\n * @override\n */\nfireauth.Auth.prototype.resolvePendingPopupEvent =\n    function(mode, popupRedirectResult, error, opt_eventId) {\n  // Only handles popup events of type sign in and which match popup event ID.\n  if (mode != fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP ||\n      this.popupEventId_ != opt_eventId) {\n    return;\n  }\n  if (error && this.pendingPopupRejectPromise_) {\n    // Reject with error for supplied mode.\n    this.pendingPopupRejectPromise_(error);\n  } else if (popupRedirectResult &&\n             !error &&\n             this.pendingPopupResolvePromise_) {\n    // Resolve with result for supplied mode.\n    this.pendingPopupResolvePromise_(popupRedirectResult);\n  }\n  // Now that event is resolved, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  // Delete pending promises.\n  delete this.pendingPopupResolvePromise_;\n  delete this.pendingPopupRejectPromise_;\n};\n\n\n/**\n * Returns the handler's appropriate popup and redirect sign in operation\n * finisher.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {?function(string,\n *     string, ?string=):!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @override\n */\nfireauth.Auth.prototype.getAuthEventHandlerFinisher =\n    function(mode, opt_eventId) {\n  // Sign in events will be completed by finishPopupAndRedirectSignIn.\n  if (mode == fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT) {\n    return goog.bind(this.finishPopupAndRedirectSignIn, this);\n  } else if (mode == fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP &&\n             this.popupEventId_ == opt_eventId &&\n             this.pendingPopupResolvePromise_) {\n    return goog.bind(this.finishPopupAndRedirectSignIn, this);\n  }\n  return null;\n};\n\n\n/**\n * Finishes the popup and redirect sign in operations.\n * @param {string} requestUri The callback url with the oauth response.\n * @param {string} sessionId The session id used to generate the authUri.\n * @param {?string=} opt_postBody The optional POST body content.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.finishPopupAndRedirectSignIn =\n    function(requestUri, sessionId, opt_postBody) {\n  var self = this;\n  // Verify assertion request.\n  var request = {\n    'requestUri': requestUri,\n    'postBody': opt_postBody,\n    'sessionId': sessionId\n  };\n  // Now that popup has responded, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  // This routine could be run before init state, make sure it waits for that to\n  // complete.\n  var credential = null;\n  var additionalUserInfo = null;\n  var idTokenResolver = self.rpcHandler_.verifyAssertion(request)\n      .then(function(response) {\n        // Get Auth credential from verify assert request and save it.\n        credential = fireauth.AuthProvider.getCredentialFromResponse(response);\n        // Get additional IdP data if available in the response.\n        additionalUserInfo = fireauth.AdditionalUserInfo.fromPlainObject(\n            response);\n        return response;\n      });\n  // When state is ready, run verify assertion request.\n  // This will only run either after initial and redirect state is ready for\n  // popups or after initial state is ready for redirect resolution.\n  var p = self.authStateLoaded_.then(function() {\n    return idTokenResolver;\n  }).then(function(idTokenResponse) {\n    // Use ID token response to sign in the Auth user.\n    return self.signInWithIdTokenResponse(idTokenResponse);\n  }).then(function() {\n    // On sign in success, construct redirect and popup result and return a\n    // readonly copy of it.\n    return fireauth.object.makeReadonlyCopy({\n      'user': self.currentUser_(),\n      'credential': credential,\n      'additionalUserInfo': additionalUserInfo,\n      // Sign in operation type.\n      'operationType': fireauth.constants.OperationType.SIGN_IN\n    });\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * @return {string} The generated event ID used to identify a popup event.\n * @private\n */\nfireauth.Auth.prototype.generateEventId_ = function() {\n  return fireauth.util.generateEventId();\n};\n\n\n/**\n * Signs in to Auth provider via popup.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithPopup = function(provider) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  var mode = fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP;\n  var self = this;\n  // Popup the window immediately to make sure the browser associates the\n  // popup with the click that triggered it.\n\n  // Get provider settings.\n  var settings = fireauth.idp.getIdpSettings(provider['providerId']);\n  // There could multiple sign in with popup events in different windows.\n  // We need to match the correct popup to the correct pending promise.\n  var eventId = this.generateEventId_();\n  // If incapable of redirecting popup from opener, popup destination URL\n  // directly. This could also happen in a sandboxed iframe.\n  var oauthHelperWidgetUrl = null;\n  if ((!fireauth.util.runsInBackground() || fireauth.util.isIframe()) &&\n      this.app_().options['authDomain'] &&\n      provider['isOAuthProvider']) {\n    oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            this.app_().options['authDomain'],\n            this.app_().options['apiKey'],\n            this.app_().name,\n            mode,\n            provider,\n            null,\n            eventId,\n            firebase.SDK_VERSION || null);\n  }\n  // The popup must have a name, otherwise when successive popups are triggered\n  // they will all render in the same instance and none will succeed since the\n  // popup cancel of first window will close the shared popup window instance.\n  var popupWin =\n      fireauth.util.popup(\n          oauthHelperWidgetUrl,\n          fireauth.util.generateRandomString(),\n          settings && settings.popupWidth,\n          settings && settings.popupHeight);\n  // Auth event manager must be available for popup sign in to be possible.\n  var p = this.getAuthEventManager_().then(function(manager) {\n    // Process popup request tagging it with newly created event ID.\n    return manager.processPopup(\n        popupWin, mode, provider, eventId, !!oauthHelperWidgetUrl);\n  }).then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      // Expire other pending promises if still available..\n      self.resolvePendingPopupEvent(\n          mode,\n          null,\n          new fireauth.AuthError(fireauth.authenum.Error.EXPIRED_POPUP_REQUEST),\n          // Existing pending popup event ID.\n          self.popupEventId_);\n      // Save current pending promises.\n      self.pendingPopupResolvePromise_ = resolve;\n      self.pendingPopupRejectPromise_ = reject;\n      // Overwrite popup event ID with new one corresponding to popup.\n      self.popupEventId_ = eventId;\n      // Keep track of timeout promise to cancel it on promise resolution before\n      // it times out.\n      self.popupTimeoutPromise_ =\n          self.authEventManager_.startPopupTimeout(\n              self, mode, /** @type {!Window} */ (popupWin), eventId);\n    });\n  }).then(function(result) {\n    // On resolution, close popup if still opened and pass result through.\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    if (result) {\n      return fireauth.object.makeReadonlyCopy(result);\n    }\n    return null;\n  }).thenCatch(function(error) {\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    throw error;\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Signs in to Auth provider via redirect.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.signInWithRedirect = function(provider) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  var self = this;\n  var mode = fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT;\n  // Auth event manager must be available for sign in via redirect to be\n  // possible.\n  var p = this.getAuthEventManager_().then(function(manager) {\n    // Remember current persistence to apply it on the next page.\n    // This is the only time the state is passed to the next page (when user is\n    // not already logged in).\n    // This is not needed for link and reauthenticate as the user is already\n    // stored with specified persistence.\n    return self.userStorageManager_.savePersistenceForRedirect();\n  }).then(function() {\n    // Process redirect operation.\n    return self.authEventManager_.processRedirect(mode, provider);\n  });\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(p));\n};\n\n\n/**\n * Returns the redirect result. If coming back from a successful redirect sign\n * in, will resolve to the signed in user. If coming back from an unsuccessful\n * redirect sign, will reject with the proper error. If no redirect operation\n * called, resolves with null.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.getRedirectResult = function() {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  var self = this;\n  // Auth event manager must be available for get redirect result to be\n  // possible.\n  var p = this.getAuthEventManager_().then(function(manager) {\n    // Return redirect result when resolved.\n    return self.authEventManager_.getRedirectResult();\n  }).then(function(result) {\n    if (result) {\n      return fireauth.object.makeReadonlyCopy(result);\n    }\n    return null;\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Asynchronously sets the provided user as currentUser on the current Auth\n * instance.\n * @param {?fireauth.AuthUser} user The user to be copied to Auth instance.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.updateCurrentUser = function(user) {\n  if (!user) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.NULL_USER));\n  }\n  var self = this;\n  var options = {};\n  options['apiKey'] = this.app_().options['apiKey'];\n  options['authDomain'] = this.app_().options['authDomain'];\n  options['appName'] = this.app_().name;\n  var newUser = fireauth.AuthUser.copyUser(user, options,\n      self.redirectUserStorageManager_, self.getFramework());\n  return this.registerPendingPromise_(\n      this.redirectStateIsReady_.then(function() {\n        if (self.app_().options['apiKey'] != user.getApiKey()) {\n          // Throws auth/invalid-user-token if user doesn't belong to app.\n          // Throws auth/user-token-expired if token expires.\n          return newUser.reload();\n        }\n      }).then(function() {\n        if (self.currentUser_() && user['uid'] == self.currentUser_()['uid']) {\n          // Same user signed in. Update user data and notify Auth listeners.\n          // No need to resubscribe to user events.\n          // TODO: Check if the user to copy is older than current user and skip\n          // the copy logic in that case.\n          self.currentUser_().copy(user);\n          return self.handleUserStateChange_(user);\n        }\n        self.setCurrentUser_(newUser);\n        // Enable popup and redirect events.\n        newUser.enablePopupRedirect();\n        // Save user changes.\n        return self.handleUserStateChange_(newUser);\n      }).then(function(user) {\n        self.notifyAuthListeners_();\n      }));\n};\n\n\n/**\n * Completes the headless sign in with the server response containing the STS\n * access and refresh tokens, and sets the Auth user as current user while\n * setting all listeners to it and saving it to storage.\n * @param {!Object<string, string>} idTokenResponse The ID token response from\n *     the server.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.signInWithIdTokenResponse =\n    function(idTokenResponse) {\n  var self = this;\n  var options = {};\n  options['apiKey'] = self.app_().options['apiKey'];\n  options['authDomain'] = self.app_().options['authDomain'];\n  options['appName'] = self.app_().name;\n  // Wait for state to be ready.\n  // This is used internally and is also used for redirect sign in so there is\n  // no need for waiting for redirect result to resolve since redirect result\n  // depends on it.\n  return this.authStateLoaded_.then(function() {\n    // Initialize an Auth user using the provided ID token response.\n    return fireauth.AuthUser.initializeFromIdTokenResponse(\n        options,\n        idTokenResponse,\n        /** @type {!fireauth.storage.RedirectUserManager} */ (\n            self.redirectUserStorageManager_),\n        // Pass frameworks so they are logged in getAccountInfo while populating\n        // the user info.\n        self.getFramework());\n  }).then(function(user) {\n    // Check if the same user is already signed in.\n    if (self.currentUser_() &&\n        user['uid'] == self.currentUser_()['uid']) {\n      // Same user signed in. Update user data and notify Auth listeners.\n      // No need to resubscribe to user events.\n      self.currentUser_().copy(user);\n      return self.handleUserStateChange_(user);\n    }\n    // New user.\n    // Set current user and attach all listeners to it.\n    self.setCurrentUser_(user);\n    // Enable popup and redirect events.\n    user.enablePopupRedirect();\n    // Save user changes.\n    return self.handleUserStateChange_(user);\n  }).then(function() {\n    // Notify external Auth listeners only when state is ready.\n    self.notifyAuthListeners_();\n  });\n};\n\n\n/**\n * Updates the current auth user and attaches event listeners to changes on it.\n * Also removes all event listeners from previously signed in user.\n * @param {?fireauth.AuthUser} user The current user instance.\n * @private\n */\nfireauth.Auth.prototype.setCurrentUser_ = function(user) {\n  // Must be called first before updating currentUser reference.\n  this.attachEventListeners_(user);\n  // Update currentUser property.\n  fireauth.object.setReadonlyProperty(this, 'currentUser', user);\n  if (user) {\n    // If a user is available, set the language code on it and set current Auth\n    // instance as language code change dispatcher.\n    this.setUserLanguage_(user);\n    // Set the current frameworks used on the user and set current Auth instance\n    // as the framework change dispatcher.\n    this.setUserFramework_(user);\n  }\n};\n\n\n/**\n * Signs out the current user while deleting the Auth user from storage and\n * removing all listeners from it.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.signOut = function() {\n  var self = this;\n  // Wait for final state to be ready first, otherwise a signed out user could\n  // come back to life.\n  var p = this.redirectStateIsReady_.then(function() {\n    // Ignore if already signed out.\n    if (!self.currentUser_()) {\n      return goog.Promise.resolve();\n    }\n    // Detach all event listeners.\n    // Set current user to null.\n    self.setCurrentUser_(null);\n    // Remove current user from storage\n    return /** @type {!fireauth.storage.UserManager} */ (\n        self.userStorageManager_).removeCurrentUser()\n        .then(function() {\n          // Notify external Auth listeners of this Auth change event.\n          self.notifyAuthListeners_();\n        });\n  });\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(p));\n};\n\n\n/**\n * @return {!goog.Promise} A promise that resolved when any stored redirect user\n *     is loaded and removed from session storage and then stored locally.\n * @private\n */\nfireauth.Auth.prototype.initRedirectUser_ = function() {\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  // Get any saved redirect user and delete from session storage.\n  // Override user's authDomain with app's authDomain if there is a mismatch.\n  var p = /** @type {!fireauth.storage.RedirectUserManager} */ (\n      this.redirectUserStorageManager_).getRedirectUser(authDomain)\n          .then(function(user) {\n            // Save redirect user.\n            self.redirectUser_ = user;\n            if (user) {\n              // Set redirect storage manager on user.\n              user.setRedirectStorageManager(\n                  /** @type {!fireauth.storage.RedirectUserManager} */ (\n                      self.redirectUserStorageManager_));\n            }\n            // Delete redirect user.\n            return /** @type {!fireauth.storage.RedirectUserManager} */ (\n                self.redirectUserStorageManager_).removeRedirectUser();\n          });\n  return /** @type {!goog.Promise<undefined>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Loads the initial Auth state for current application from web storage and\n * initializes Auth user accordingly to reflect that state. This routine does\n * not wait for any pending redirect result to be resolved.\n * @return {!goog.Promise<undefined>} Promise that resolves when state is ready,\n *     loaded from storage.\n * @private\n */\nfireauth.Auth.prototype.initAuthState_ = function() {\n  // Load current user from storage.\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  // Get any saved redirected user first.\n  var p = this.initRedirectUser_().then(function() {\n    // Override user's authDomain with app's authDomain if there is a mismatch.\n    return /** @type {!fireauth.storage.UserManager} */ (\n        self.userStorageManager_).getCurrentUser(authDomain);\n  }).then(function(user) {\n    // Logged in user.\n    if (user) {\n      // Set redirect storage manager on user.\n      user.setRedirectStorageManager(\n          /** @type {!fireauth.storage.RedirectUserManager} */ (\n              self.redirectUserStorageManager_));\n      // If the current user is undergoing a redirect operation, do not reload\n      // as that could could potentially delete the user if the token is\n      // expired. Instead any token problems will be detected via the\n      // verifyAssertion flow or the remaining flow. This is critical for\n      // reauthenticateWithRedirect as this flow is potentially used to recover\n      // from a token expiration error.\n      if (self.redirectUser_ &&\n          self.redirectUser_.getRedirectEventId() ==\n          user.getRedirectEventId()) {\n        return user;\n      }\n      // Confirm user valid first before setting listeners.\n      return user.reload().then(function() {\n        // Force user saving after reload as state change listeners not\n        // subscribed yet below via setCurrentUser_. Changes may have happened\n        // externally such as email actions or changes on another device.\n        return self.userStorageManager_.setCurrentUser(user).then(function() {\n          return user;\n        });\n      }).thenCatch(function(error) {\n        if (error['code'] == 'auth/network-request-failed') {\n          // Do not delete the user from storage if connection is lost or app is\n          // offline.\n          return user;\n        }\n        // Invalid user, could be deleted, remove from storage and resolve with\n        // null.\n        return /** @type {!fireauth.storage.UserManager} */(\n            self.userStorageManager_).removeCurrentUser();\n      });\n    }\n    // No logged in user, resolve with null;\n    return null;\n  }).then(function(user) {\n    // Even though state not ready yet pending any redirect result.\n    // Current user needs to be available for link with redirect to complete.\n    // This will also set listener on the user changes in case state changes\n    // occur they would get updated in storage too.\n    self.setCurrentUser_(user || null);\n  });\n  // In case the app is deleted before it is initialized with state from\n  // storage.\n  return /** @type {!goog.Promise<undefined>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * After initial Auth state is loaded, waits for any pending redirect result,\n * resolves it and then adds the external Auth state change listeners and\n * triggers first state of all observers.\n * @return {!goog.Promise<undefined>} Promise that resolves when state is ready\n *     taking into account any pending redirect result.\n * @private\n */\nfireauth.Auth.prototype.initAuthRedirectState_ = function() {\n  var self = this;\n  // Wait first for state to be loaded from storage.\n  return this.authStateLoaded_.then(function() {\n    // Resolve any pending redirect result.\n    return self.getRedirectResult();\n  }).thenCatch(function(error) {\n    // Ignore any error in the process. Redirect could be not supported.\n    return;\n  }).then(function() {\n    // Make sure instance was not deleted before proceeding.\n    if (self.deleted_) {\n      return;\n    }\n    // Between init Auth state and get redirect result resolution there\n    // could have been a sign in attempt in another window.\n    // Force sync and then add listener to run sync on change below.\n    return self.getSyncAuthUserChanges_();\n  }).thenCatch(function(error) {\n    // Ignore any error in the process.\n    return;\n  }).then(function() {\n    // Now that final state is ready, make sure instance was not deleted before\n    // proceeding.\n    if (self.deleted_) {\n      return;\n    }\n    // Initial state has been resolved.\n    self.isStateResolved_ = true;\n    // Add user state change listener so changes are synchronized with\n    // other windows and tabs.\n    /** @type {!fireauth.storage.UserManager} */ (self.userStorageManager_\n        ).addCurrentUserChangeListener(self.getSyncAuthUserChanges_);\n  });\n};\n\n\n/**\n * Synchronizes current Auth to stored auth state, used when external state\n * changes occur.\n * @return {!goog.Promise<void>}\n * @private\n */\nfireauth.Auth.prototype.syncAuthUserChanges_ = function() {\n  // Get Auth user state from storage and compare to current state.\n  // Safe to run when no external change is detected.\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  // Override user's authDomain with app's authDomain if there is a mismatch.\n  return /** @type {!fireauth.storage.UserManager} */ (\n      this.userStorageManager_).getCurrentUser(authDomain)\n      .then(function(user) {\n        // In case this was deleted.\n        if (self.deleted_) {\n          return;\n        }\n        // Since the authDomain could be modified here, saving to storage here\n        // could trigger an infinite loop of changes between this tab and\n        // another tab using different Auth domain but since sync Auth user\n        // changes does not save changes to storage, except for getToken below\n        // if the token needs refreshing but will stop triggering the first time\n        // the token is refreshed on one of the first tab that refreshes it.\n        // The latter should not happen anyway since getToken should be valid\n        // at all times since anything that triggers the storage change should\n        // have communicated with the backend and that requires a valid token.\n        // In addition, authDomain difference is an edge case to begin with.\n\n        // If the same user is to be synchronized.\n        if (self.currentUser_() &&\n            user &&\n            self.currentUser_().hasSameUserIdAs(user)) {\n          // Data update, simply copy data changes.\n          self.currentUser_().copy(user);\n          // If tokens changed from previous user tokens, this will trigger\n          // notifyAuthListeners_.\n          return self.currentUser_().getIdToken();\n        } else if (!self.currentUser_() && !user) {\n          // No change, do nothing (was signed out and remained signed out).\n          return;\n        } else {\n          // Update current Auth state. Either a new login or logout.\n          self.setCurrentUser_(user);\n          // If a new user is signed in, enabled popup and redirect on that\n          // user.\n          if (user) {\n            user.enablePopupRedirect();\n            // Set redirect storage manager on user.\n            user.setRedirectStorageManager(\n                /** @type {!fireauth.storage.RedirectUserManager} */ (\n                    self.redirectUserStorageManager_));\n          }\n          if (self.authEventManager_) {\n            self.authEventManager_.subscribe(self);\n          }\n          // Notify external Auth changes of Auth change event.\n          self.notifyAuthListeners_();\n        }\n      });\n};\n\n\n/**\n * Updates the language code on the provided user and configures the user to\n * listen to the Auth instance for any language code changes.\n * @param {!fireauth.AuthUser} user The user to whose language needs to be set.\n * @private\n */\nfireauth.Auth.prototype.setUserLanguage_ = function(user) {\n  // Sets the current language code on the user.\n  user.setLanguageCode(this.getLanguageCode());\n  // Sets current Auth instance as language code change dispatcher on the user.\n  user.setLanguageCodeChangeDispatcher(this);\n};\n\n\n/**\n * Handles user state changes.\n * @param {!fireauth.AuthUser} user The user which triggered the state changes.\n * @return {!goog.Promise} The promise that resolves when state changes are\n *     handled.\n * @private\n */\nfireauth.Auth.prototype.handleUserStateChange_ = function(user) {\n  // Save Auth user state changes.\n  return /** @type {!fireauth.storage.UserManager} */ (\n      this.userStorageManager_).setCurrentUser(user);\n};\n\n\n/**\n * Handles user token changes.\n * @param {!Object} event The token change event.\n * @private\n */\nfireauth.Auth.prototype.handleUserTokenChange_ = function(event) {\n  // This is only called when user is ready and Auth state has been resolved.\n  // Notify external Auth change listeners.\n  this.notifyAuthListeners_();\n  // Save user token changes.\n  this.handleUserStateChange_(/** @type {!fireauth.AuthUser} */ (\n      this.currentUser_()));\n};\n\n\n/**\n * Handles user deletion events.\n * @param {!Object} event The user delete event.\n * @private\n */\nfireauth.Auth.prototype.handleUserDelete_ = function(event) {\n  // A deleted user will be treated like a sign out event.\n  this.signOut();\n};\n\n\n/**\n * Handles user invalidation events.\n * @param {!Object} event The user invalidation event.\n * @private\n */\nfireauth.Auth.prototype.handleUserInvalidated_ = function(event) {\n  // An invalidated user will be treated like a sign out event.\n  this.signOut();\n};\n\n\n/**\n * Detaches all previous listeners on current user and reattach new listeners to\n * provided user if not null.\n * @param {?fireauth.AuthUser} user The user to attach event listeners to.\n * @private\n */\nfireauth.Auth.prototype.attachEventListeners_ = function(user) {\n  // Remove existing event listeners from previous current user if available.\n  if (this.currentUser_()) {\n    this.currentUser_().removeStateChangeListener(\n        this.userStateChangeListener_);\n    goog.events.unlisten(\n        this.currentUser_(),\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n    goog.events.unlisten(\n        this.currentUser_(),\n        fireauth.UserEventType.USER_DELETED,\n        this.userDeleteListener_);\n    goog.events.unlisten(\n        this.currentUser_(),\n        fireauth.UserEventType.USER_INVALIDATED,\n        this.userInvalidatedListener_);\n    // Stop proactive token refresh on the current user.\n    this.currentUser_().stopProactiveRefresh();\n  }\n  // If a new user is provided, attach event listeners to state, token, user\n  // invalidation and delete events.\n  if (user) {\n    user.addStateChangeListener(this.userStateChangeListener_);\n    goog.events.listen(\n        user,\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n    goog.events.listen(\n        user,\n        fireauth.UserEventType.USER_DELETED,\n        this.userDeleteListener_);\n     goog.events.listen(\n        user,\n        fireauth.UserEventType.USER_INVALIDATED,\n        this.userInvalidatedListener_);\n    // Start proactive token refresh on new user if there is at least one\n    // Firebase service subscribed to Auth changes.\n    if (this.firebaseServices_ > 0) {\n      user.startProactiveRefresh();\n    }\n  }\n};\n\n\n/**\n * Signs in with ID token promise provider.\n * @param {!goog.Promise<!Object>} idTokenPromise\n *     The rpc handler method that returns a promise which resolves with an ID\n *     token.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @private\n */\nfireauth.Auth.prototype.signInWithIdTokenProvider_ = function(idTokenPromise) {\n  var self = this;\n  var credential = null;\n  var additionalUserInfo = null;\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(\n          idTokenPromise\n          .then(function(idTokenResponse) {\n            // Get credential if available in the response.\n            credential = fireauth.AuthProvider.getCredentialFromResponse(\n                idTokenResponse);\n            // Get additional IdP data if available in the response.\n            additionalUserInfo = fireauth.AdditionalUserInfo.fromPlainObject(\n                idTokenResponse);\n            // When custom token is exchanged for idToken, continue sign in with\n            // ID token and return firebase Auth user.\n            return self.signInWithIdTokenResponse(idTokenResponse);\n          })\n          .then(function() {\n            // Resolve promise with a readonly user credential object.\n            return fireauth.object.makeReadonlyCopy({\n              // Return the current user reference.\n              'user': self.currentUser_(),\n              // Return any credential passed from the backend.\n              'credential': credential,\n              // Return any additional IdP data passed from the backend.\n              'additionalUserInfo': additionalUserInfo,\n              // Sign in operation type.\n              'operationType': fireauth.constants.OperationType.SIGN_IN\n            });\n          })));\n};\n\n\n/**\n * Initializes the Auth state change observer returned by the\n * firebase.INTERNAL.createSubscribe helper.\n * @param {!firebase.Observer} observer The Auth state change observer.\n * @private\n */\nfireauth.Auth.prototype.initIdTokenChangeObserver_ = function(observer) {\n  var self = this;\n  // Adds a listener that will transmit the event everytime it's called.\n  this.addAuthTokenListener(function(accessToken) {\n    observer.next(self.currentUser_());\n  });\n};\n\n\n/**\n * Initializes the user state change observer returned by the\n * firebase.INTERNAL.createSubscribe helper.\n * @param {!firebase.Observer} observer The user state change observer.\n * @private\n */\nfireauth.Auth.prototype.initUserStateObserver_ = function(observer) {\n  var self = this;\n  // Adds a listener that will transmit the event everytime it's called.\n  this.addUserChangeListener_(function(accessToken) {\n    observer.next(self.currentUser_());\n  });\n};\n\n\n/**\n * Adds an observer for Auth state changes, we need to wrap the call as\n * the args checking code needs a method defined on the prototype this way,\n * not within the constructor, and we also have to implement the behavior\n * that will trigger an observer right away if state is ready.\n * @param {!firebase.Observer|function(?fireauth.AuthUser)}\n *     nextOrObserver An observer object or a function triggered on change.\n * @param {function(!fireauth.AuthError)=} opt_error Optional A function\n *     triggered on Auth error.\n * @param {function()=} opt_completed Optional A function triggered when the\n *     observer is removed.\n * @return {!function()} The unsubscribe function for the observer.\n */\nfireauth.Auth.prototype.onIdTokenChanged = function(\n    nextOrObserver, opt_error, opt_completed) {\n  var self = this;\n  // State already determined. Trigger immediately, otherwise initState will\n  // take care of notifying all pending listeners on initialization.\n  // In this case we do not trigger synchronously and trigger via a resolved\n  // promise as required by specs.\n  if (this.isStateResolved_) {\n    // The observer cannot be called synchronously. We're using the\n    // firebase.Promise implementation as otherwise it creates weird behavior\n    // where the order of promises resolution would not be as expected.\n    // It is due to the fact fireauth and firebase.app use their own\n    // and different promises library and this leads to calls resolutions order\n    // being different from the promises registration order.\n    firebase.Promise.resolve().then(function() {\n      if (goog.isFunction(nextOrObserver)) {\n        nextOrObserver(self.currentUser_());\n      } else if (goog.isFunction(nextOrObserver['next'])) {\n        nextOrObserver['next'](self.currentUser_());\n      }\n    });\n  }\n  return this.onIdTokenChanged_(\n      /** @type {!firebase.Observer|function(*)|undefined} */ (nextOrObserver),\n      /** @type {function(!Error)|undefined} */ (opt_error),\n      opt_completed);\n};\n\n\n/**\n * Adds an observer for user state changes, we need to wrap the call as\n * the args checking code needs a method defined on the prototype this way,\n * not within the constructor, and we also have to implement the behavior\n * that will trigger an observer right away if state is ready.\n * @param {!firebase.Observer|function(?fireauth.AuthUser)}\n *     nextOrObserver An observer object or a function triggered on change.\n * @param {function(!fireauth.AuthError)=} opt_error Optional A function\n *     triggered on Auth error.\n * @param {function()=} opt_completed Optional A function triggered when the\n *     observer is removed.\n * @return {!function()} The unsubscribe function for the observer.\n */\nfireauth.Auth.prototype.onAuthStateChanged = function(\n    nextOrObserver, opt_error, opt_completed) {\n  var self = this;\n  // State already determined. Trigger immediately, otherwise initState will\n  // take care of notifying all pending listeners on initialization.\n  // In this case we do not trigger synchronously and trigger via a resolved\n  // promise as required by specs.\n  if (this.isStateResolved_) {\n    // The observer cannot be called synchronously. We're using the\n    // firebase.Promise implementation as otherwise it creates weird behavior\n    // where the order of promises resolution would not be as expected.\n    // It is due to the fact fireauth and firebase.app use their own\n    // and different promises library and this leads to calls resolutions order\n    // being different from the promises registration order.\n    firebase.Promise.resolve().then(function() {\n      // This ensures that the first time notifyAuthListeners_ is triggered,\n      // it has the correct UID before triggering the user state change\n      // listeners.\n      self.userStateChangeUid_ = self.getUid();\n      if (goog.isFunction(nextOrObserver)) {\n        nextOrObserver(self.currentUser_());\n      } else if (goog.isFunction(nextOrObserver['next'])) {\n        nextOrObserver['next'](self.currentUser_());\n      }\n    });\n  }\n  return this.onUserStateChanged_(\n      /** @type {!firebase.Observer|function(*)|undefined} */ (nextOrObserver),\n      /** @type {function(!Error)|undefined} */ (opt_error),\n      opt_completed);\n};\n\n\n/**\n * Returns an STS token. If the cached one is unexpired it is directly returned.\n * Otherwise the existing ID token or refresh token is exchanged for a new one.\n * If there is no user signed in, returns null.\n *\n * This method is called getIdTokenInternal as the symbol getIdToken is not\n * obfuscated, which could lead to developers incorrectly calling\n * firebase.auth().getIdToken().\n *\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<?Object>}\n */\nfireauth.Auth.prototype.getIdTokenInternal = function(opt_forceRefresh) {\n  var self = this;\n  // Wait for state to be ready.\n  var p = this.redirectStateIsReady_.then(function() {\n    // Call user's underlying getIdToken method.\n    if (self.currentUser_()) {\n      return self.currentUser_().getIdToken(opt_forceRefresh)\n          .then(function(stsAccessToken) {\n            // This is used internally by other services which expect the access\n            // token to be returned in an object.\n            return {\n              'accessToken': stsAccessToken\n            };\n          });\n    }\n    // No logged in user, return null token.\n    return null;\n  });\n  return /** @type {!goog.Promise<?Object>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Signs in a user asynchronously using a custom token and returns any\n * additional user info data or credentials returned form the backend.\n * @param {string} token The custom token to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithCustomToken = function(token) {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    return self.signInWithIdTokenProvider_(\n        self.getRpcHandler().verifyCustomToken(token));\n  }).then(function(result) {\n    var user = result['user'];\n    // Manually sets the isAnonymous flag to false as the GetAccountInfo\n    // response will look like an anonymous user (no credentials visible).\n    user.updateProperty('isAnonymous', false);\n    // Save isAnonymous flag changes to current user in storage.\n    self.handleUserStateChange_(user);\n    return result;\n  });\n};\n\n\n/**\n * Signs in a user asynchronously using a custom token and returns any\n * additional user info data or credentials returned form the backend. It has\n * been deprecated in favor of signInWithCustomToken.\n * @param {string} token The custom token to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAndRetrieveDataWithCustomToken = function(token) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_WITH_CUSTOM_TOKEN);\n  return this.signInWithCustomToken(token);\n};\n\n\n/**\n * Sign in using an email and password and returns any additional user info\n * data or credentials returned form the backend. It has been deprecated in\n * favor of signInWithEmailAndPassword.\n * @param {string} email The email to sign in with.\n * @param {string} password The password to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAndRetrieveDataWithEmailAndPassword =\n    function(email, password) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_WITH_EMAIL_AND_PASSWORD);\n  return this.signInWithEmailAndPassword(email, password);\n};\n\n\n/**\n * Sign in using an email and password and returns any additional user info\n * data or credentials returned form the backend.\n * @param {string} email The email to sign in with.\n * @param {string} password The password to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithEmailAndPassword =\n    function(email, password) {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    return self.signInWithIdTokenProvider_(\n        self.getRpcHandler().verifyPassword(email, password));\n  });\n};\n\n\n/**\n * Creates a new email and password account and returns any additional user\n * info data or credentials returned form the backend.\n * @param {string} email The email to sign up with.\n * @param {string} password The password to sign up with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.createUserWithEmailAndPassword =\n    function(email, password) {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    return self.signInWithIdTokenProvider_(\n        self.getRpcHandler().createAccount(email, password));\n  });\n};\n\n\n/**\n * Creates a new email and password account and returns any additional user\n * info data or credentials returned form the backend. It has been deprecated\n * in favor of createUserWithEmailAndPassword.\n * @param {string} email The email to sign up with.\n * @param {string} password The password to sign up with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.createUserAndRetrieveDataWithEmailAndPassword =\n    function(email, password) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.CREATE_USER_WITH_EMAIL_AND_PASSWORD);\n  return this.createUserWithEmailAndPassword(email, password);\n};\n\n\n/**\n * Logs into Firebase with the given 3rd party credentials. It has been\n * deprecated in favor of signInAndRetrieveDataWithCredential.\n * @param {!fireauth.AuthCredential} credential The auth credential.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.Auth.prototype.signInWithCredential = function(credential) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_WITH_CREDENTIAL);\n  // Get signInAndRetrieveDataWithCredential result and return the user only.\n  return this.signInAndRetrieveDataWithCredential(credential)\n      .then(function(result) {\n        return result['user'];\n      });\n};\n\n\n/**\n * Logs into Firebase with the given 3rd party credentials and returns any\n * additional user info data or credentials returned form the backend.\n * @param {!fireauth.AuthCredential} credential The Auth credential.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAndRetrieveDataWithCredential =\n    function(credential) {\n  // Credential could be extended in the future, so leave it to credential to\n  // decide how to retrieve ID token.\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    // Return the full response object and not just the user.\n    return self.signInWithIdTokenProvider_(\n        credential.getIdTokenProvider(self.getRpcHandler()));\n  });\n};\n\n\n/**\n * Signs in a user anonymously and returns any additional user info data or\n * credentials returned form the backend.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAnonymously = function() {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    var user = self.currentUser_();\n    // If an anonymous user is already signed in, no need to sign him again.\n    if (user && user['isAnonymous']) {\n      var additionalUserInfo = fireauth.object.makeReadonlyCopy({\n        'providerId': null,\n        'isNewUser': false\n      });\n      return fireauth.object.makeReadonlyCopy({\n        // Return the signed in user reference.\n        'user': user,\n        // Do not return credential for anonymous user.\n        'credential': null,\n        // Return any additional IdP data.\n        'additionalUserInfo': additionalUserInfo,\n        // Sign in operation type.\n        'operationType': fireauth.constants.OperationType.SIGN_IN\n      });\n    } else {\n      // No anonymous user currently signed in.\n      return self.signInWithIdTokenProvider_(\n          self.getRpcHandler().signInAnonymously())\n          .then(function(result) {\n            var user = result['user'];\n            // Manually sets the isAnonymous flag to true as\n            // initializeFromIdTokenResponse uses the default value of false and\n            // even though getAccountInfo sets that to true, it will be reverted\n            // to false in reloadWithoutSaving.\n            // TODO: consider optimizing this and cleaning these manual\n            // overwrites.\n            user.updateProperty('isAnonymous', true);\n            // Save isAnonymous flag changes to current user in storage.\n            self.handleUserStateChange_(user);\n            return result;\n          });\n    }\n  });\n};\n\n\n/**\n * Signs in a user anonymously and returns any additional user info data or\n * credentials returned form the backend. It has been deprecated in favor of\n * signInWithAnonymously.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAnonymouslyAndRetrieveData = function() {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_ANONYMOUSLY);\n  return this.signInAnonymously();\n};\n\n\n/**\n * @return {string} The key used for storing Auth state.\n */\nfireauth.Auth.prototype.getStorageKey = function() {\n  return fireauth.util.createStorageKey(\n      this.app_().options['apiKey'],\n      this.app_().name);\n};\n\n\n/**\n * @return {!firebase.app.App} The Firebase App this auth object is connected\n *     to.\n * @private\n */\nfireauth.Auth.prototype.app_ = function() {\n  return this['app'];\n};\n\n\n/**\n * @return {!fireauth.RpcHandler} The RPC handler.\n */\nfireauth.Auth.prototype.getRpcHandler = function() {\n  return this.rpcHandler_;\n};\n\n\n/**\n * @return {?fireauth.AuthUser} The currently logged in user.\n * @private\n */\nfireauth.Auth.prototype.currentUser_ = function() {\n  return this['currentUser'];\n};\n\n\n/** @return {?string} The current user UID if available, null if not. */\nfireauth.Auth.prototype.getUid = function() {\n  return (this.currentUser_() && this.currentUser_()['uid']) || null;\n};\n\n\n/**\n * @return {?string} The last cached access token.\n * @private\n */\nfireauth.Auth.prototype.getLastAccessToken_ = function() {\n  return (this.currentUser_() && this.currentUser_()['_lat']) || null;\n};\n\n\n\n/**\n * Called internally on Auth state change to notify listeners.\n * @private\n */\nfireauth.Auth.prototype.notifyAuthListeners_ = function() {\n  // Only run when state is resolved. After state is resolved, the Auth listener\n  // will always trigger.\n  if (this.isStateResolved_) {\n    for (var i = 0; i < this.authListeners_.length; i++) {\n      if (this.authListeners_[i]) {\n        this.authListeners_[i](this.getLastAccessToken_());\n      }\n    }\n    // Trigger user change only if UID changed.\n    if (this.userStateChangeUid_ !== this.getUid() &&\n        this.userChangeListeners_.length) {\n      // Update user state change UID.\n      this.userStateChangeUid_ = this.getUid();\n      // Trigger all subscribed user state change listeners.\n      for (var i = 0; i < this.userChangeListeners_.length; i++) {\n        if (this.userChangeListeners_[i]) {\n          this.userChangeListeners_[i](this.getLastAccessToken_());\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Attaches a listener function to Auth state change.\n * This is used only by internal Firebase services.\n * @param {!function(?string)} listener The auth state change listener.\n */\nfireauth.Auth.prototype.addAuthTokenListenerInternal = function(listener) {\n  this.addAuthTokenListener(listener);\n  // This is not exact science but should be good enough to detect Firebase\n  // services subscribing to Auth token changes.\n  // This is needed to start proactive token refresh on a user.\n  this.firebaseServices_++;\n  if (this.firebaseServices_ > 0 && this.currentUser_()) {\n    // Start proactive token refresh on the current user.\n    this.currentUser_().startProactiveRefresh();\n  }\n};\n\n\n/**\n * Detaches the provided listener from Auth state change event.\n * This is used only by internal Firebase services.\n * @param {!function(?string)} listener The Auth state change listener.\n */\nfireauth.Auth.prototype.removeAuthTokenListenerInternal = function(listener) {\n  // This is unlikely to be called by Firebase services. Services are unlikely\n  // to remove Auth token listeners.\n  // Make sure listener is still subscribed before decrementing.\n  var self = this;\n  goog.array.forEach(this.authListeners_, function(ele) {\n    // This covers the case where the same listener is subscribed more than\n    // once.\n    if (ele == listener) {\n      self.firebaseServices_--;\n    }\n  });\n  if (this.firebaseServices_ < 0) {\n    this.firebaseServices_ = 0;\n  }\n  if (this.firebaseServices_ == 0 && this.currentUser_()) {\n    // Stop proactive token refresh on the current user.\n    this.currentUser_().stopProactiveRefresh();\n  }\n  this.removeAuthTokenListener(listener);\n};\n\n\n/**\n * Attaches a listener function to Auth state change.\n * @param {!function(?string)} listener The Auth state change listener.\n */\nfireauth.Auth.prototype.addAuthTokenListener = function(listener) {\n  var self = this;\n  // Save listener.\n  this.authListeners_.push(listener);\n  // Make sure redirect state is ready and then trigger listener.\n  this.registerPendingPromise_(this.redirectStateIsReady_.then(function() {\n    // Do nothing if deleted.\n    if (self.deleted_) {\n      return;\n    }\n    // Make sure listener is still subscribed.\n    if (goog.array.contains(self.authListeners_, listener)) {\n      // Trigger the first call for this now that redirect state is resolved.\n      listener(self.getLastAccessToken_());\n    }\n  }));\n};\n\n\n/**\n * Detaches the provided listener from Auth state change event.\n * @param {!function(?string)} listener The Auth state change listener.\n */\nfireauth.Auth.prototype.removeAuthTokenListener = function(listener) {\n  // Remove from Auth listeners.\n  goog.array.removeAllIf(this.authListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n\n/**\n * Attaches a listener function to user state change.\n * @param {!function(?string)} listener The user state change listener.\n * @private\n */\nfireauth.Auth.prototype.addUserChangeListener_ = function(listener) {\n  var self = this;\n  // Save listener.\n  this.userChangeListeners_.push(listener);\n  // Make sure redirect state is ready and then trigger listener.\n  this.registerPendingPromise_(this.redirectStateIsReady_.then(function() {\n    // Do nothing if deleted.\n    if (self.deleted_) {\n      return;\n    }\n    // Make sure listener is still subscribed.\n    if (goog.array.contains(self.userChangeListeners_, listener)) {\n      // Confirm UID change before triggering.\n      if (self.userStateChangeUid_ !== self.getUid()) {\n        self.userStateChangeUid_ = self.getUid();\n        // Trigger the first call for this now that redirect state is resolved.\n        listener(self.getLastAccessToken_());\n      }\n    }\n  }));\n};\n\n\n/**\n * Deletes the Auth instance, handling cancellation of all pending async Auth\n * operations.\n * @return {!firebase.Promise<void>}\n */\nfireauth.Auth.prototype.delete = function() {\n  this.deleted_ = true;\n  // Cancel all pending promises.\n  for (var i = 0; i < this.pendingPromises_.length; i++) {\n    this.pendingPromises_[i].cancel(fireauth.authenum.Error.MODULE_DESTROYED);\n  }\n\n  // Empty pending promises array.\n  this.pendingPromises_ = [];\n  // Remove current user change listener.\n  if (this.userStorageManager_) {\n    this.userStorageManager_.removeCurrentUserChangeListener(\n        this.getSyncAuthUserChanges_);\n  }\n  // Unsubscribe from Auth event handling.\n  if (this.authEventManager_) {\n    this.authEventManager_.unsubscribe(this);\n    this.authEventManager_.clearRedirectResult();\n  }\n  return firebase.Promise.resolve();\n};\n\n\n/** @return {boolean} Whether Auth instance has pending promises. */\nfireauth.Auth.prototype.hasPendingPromises = function() {\n  return this.pendingPromises_.length != 0;\n};\n\n\n/**\n * Takes in a pending promise, saves it and adds a clean up callback which\n * forgets the pending promise after it is fulfilled and echoes the promise\n * back.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.Auth.prototype.registerPendingPromise_ = function(p) {\n  var self = this;\n  // Save created promise in pending list.\n  this.pendingPromises_.push(p);\n  p.thenAlways(function() {\n    // When fulfilled, remove from pending list.\n    goog.array.remove(self.pendingPromises_, p);\n  });\n  // Return the promise.\n  return p;\n};\n\n\n/**\n * Gets the list of IDPs that can be used to log in for the given email address.\n * It has been deprecated in favor of fetchSignInMethodsForEmail.\n * @param {string} email The email address.\n * @return {!goog.Promise<!Array<!fireauth.idp.ProviderId>>}\n */\nfireauth.Auth.prototype.fetchProvidersForEmail = function(email) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.FETCH_PROVIDERS_FOR_EMAIL);\n  return /** @type {!goog.Promise<!Array<!fireauth.idp.ProviderId>>} */ (\n      this.registerPendingPromise_(\n      this.getRpcHandler().fetchProvidersForIdentifier(email)\n      ));\n};\n\n\n/**\n * Gets the list of possible sign in methods for the given email address.\n * @param {string} email The email address.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.Auth.prototype.fetchSignInMethodsForEmail = function(email) {\n  return /** @type {!goog.Promise<!Array<string>>} */ (\n      this.registerPendingPromise_(\n          this.getRpcHandler().fetchSignInMethodsForIdentifier(email)));\n};\n\n\n/**\n * @param {string} emailLink The email link.\n * @return {boolean} Whether the link is a sign in with email link.\n */\nfireauth.Auth.prototype.isSignInWithEmailLink = function(emailLink) {\n  return  !!fireauth.EmailAuthProvider\n      .getActionCodeFromSignInEmailLink(emailLink);\n};\n\n\n/**\n * Sends the sign-in with email link for the email account provided.\n * @param {string} email The email account to sign in with.\n * @param {!Object} actionCodeSettings The action code settings object.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.sendSignInLinkToEmail = function(\n    email, actionCodeSettings) {\n  var self = this;\n  return this.registerPendingPromise_(\n      // Wrap in promise as ActionCodeSettings constructor could throw a\n      // synchronous error if invalid arguments are specified.\n      goog.Promise.resolve()\n          .then(function() {\n            var actionCodeSettingsBuilder =\n                new fireauth.ActionCodeSettings(actionCodeSettings);\n            if (!actionCodeSettingsBuilder.canHandleCodeInApp()) {\n              throw new fireauth.AuthError(\n                  fireauth.authenum.Error.ARGUMENT_ERROR,\n                  fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP +\n                  ' must be true when sending sign in link to email');\n            }\n            return actionCodeSettingsBuilder.buildRequest();\n          }).then(function(additionalRequestData) {\n            return self.getRpcHandler().sendSignInLinkToEmail(\n                email, additionalRequestData);\n          }).then(function(email) {\n            // Do not return the email.\n          }));\n};\n\n\n/**\n * Verifies an email action code for password reset and returns a promise\n * that resolves with the associated email if verified.\n * @param {string} code The email action code to verify for password reset.\n * @return {!goog.Promise<string>}\n */\nfireauth.Auth.prototype.verifyPasswordResetCode = function(code) {\n  return this.checkActionCode(code).then(function(info) {\n    return info['data']['email'];\n  });\n};\n\n\n/**\n * Requests resetPassword endpoint for password reset, verifies the action code\n * and updates the new password, returns an empty promise.\n * @param {string} code The email action code to confirm for password reset.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<undefined, !fireauth.AuthError>}\n */\nfireauth.Auth.prototype.confirmPasswordReset = function(code, newPassword) {\n  return this.registerPendingPromise_(\n      this.getRpcHandler().confirmPasswordReset(code, newPassword)\n      .then(function(email) {\n        // Do not return the email.\n      }));\n};\n\n\n/**\n * Verifies an email action code and returns an empty promise if verified.\n * @param {string} code The email action code to verify for password reset.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.Auth.prototype.checkActionCode = function(code) {\n  return this.registerPendingPromise_(\n      this.getRpcHandler().checkActionCode(code)\n      .then(function(response) {\n        return new fireauth.ActionCodeInfo(response);\n      }));\n};\n\n\n/**\n * Applies an out-of-band email action code, such as an email verification code.\n * @param {string} code The email action code.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.applyActionCode = function(code) {\n  return this.registerPendingPromise_(\n      this.getRpcHandler().applyActionCode(code)\n      .then(function(email) {\n        // Returns nothing.\n      }));\n};\n\n\n/**\n * Sends the password reset email for the email account provided.\n * @param {string} email The email account with the password to be reset.\n * @param {?Object=} opt_actionCodeSettings The optional action code settings\n *     object.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.sendPasswordResetEmail =\n    function(email, opt_actionCodeSettings) {\n  var self = this;\n  return this.registerPendingPromise_(\n      // Wrap in promise as ActionCodeSettings constructor could throw a\n      // synchronous error if invalid arguments are specified.\n      goog.Promise.resolve().then(function() {\n        if (typeof opt_actionCodeSettings !== 'undefined' &&\n            // Ignore empty objects.\n            !goog.object.isEmpty(opt_actionCodeSettings)) {\n          return new fireauth.ActionCodeSettings(\n              /** @type {!Object} */ (opt_actionCodeSettings)).buildRequest();\n        }\n        return {};\n      })\n      .then(function(additionalRequestData) {\n        return self.getRpcHandler().sendPasswordResetEmail(\n            email, additionalRequestData);\n      }).then(function(email) {\n        // Do not return the email.\n      }));\n};\n\n\n/**\n * Signs in with a phone number using the app verifier instance and returns a\n * promise that resolves with the confirmation result which on confirmation\n * will resolve with the UserCredential object.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.Auth.prototype.signInWithPhoneNumber =\n    function(phoneNumber, appVerifier) {\n  return /** @type {!goog.Promise<!fireauth.ConfirmationResult>} */ (\n      this.registerPendingPromise_(fireauth.ConfirmationResult.initialize(\n          this,\n          phoneNumber,\n          appVerifier,\n          // This will wait for redirectStateIsReady to resolve first.\n          goog.bind(this.signInAndRetrieveDataWithCredential, this))));\n};\n\n\n/**\n * Signs in a Firebase User with the provided email and the passwordless\n * sign-in email link.\n * @param {string} email The email account to sign in with.\n * @param {?string=} opt_link The optional link which contains the OTP needed\n *     to complete the sign in with email link. If not specified, the current\n *     URL is used instead.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithEmailLink = function(email, opt_link) {\n  var self = this;\n  return this.registerPendingPromise_(\n      goog.Promise.resolve().then(function() {\n        var credential = fireauth.EmailAuthProvider.credentialWithLink(\n            email, opt_link || fireauth.util.getCurrentUrl());\n        return self.signInAndRetrieveDataWithCredential(credential);\n      }));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Low level handling of XMLHttpRequest.\n * @author arv@google.com (Erik Arvidsson)\n * @author dbk@google.com (David Barrett-Kahn)\n */\n\ngoog.provide('goog.net.DefaultXmlHttpFactory');\ngoog.provide('goog.net.XmlHttp');\ngoog.provide('goog.net.XmlHttp.OptionType');\ngoog.provide('goog.net.XmlHttp.ReadyState');\ngoog.provide('goog.net.XmlHttpDefines');\n\ngoog.require('goog.asserts');\ngoog.require('goog.net.WrapperXmlHttpFactory');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n/**\n * Static class for creating XMLHttpRequest objects.\n * @return {!goog.net.XhrLike.OrNative} A new XMLHttpRequest object.\n */\ngoog.net.XmlHttp = function() {\n  return goog.net.XmlHttp.factory_.createInstance();\n};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true bypasses the ActiveX probing code.\n * NOTE(ruilopes): Due to the way JSCompiler works, this define *will not* strip\n * out the ActiveX probing code from binaries.  To achieve this, use\n * `goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR` instead.\n * TODO(ruilopes): Collapse both defines.\n */\ngoog.define('goog.net.XmlHttp.ASSUME_NATIVE_XHR', false);\n\n\n/** @const */\ngoog.net.XmlHttpDefines = {};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true eliminates the ActiveX probing code.\n */\ngoog.define('goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR', false);\n\n\n/**\n * Gets the options to use with the XMLHttpRequest objects obtained using\n * the static methods.\n * @return {Object} The options.\n */\ngoog.net.XmlHttp.getOptions = function() {\n  return goog.net.XmlHttp.factory_.getOptions();\n};\n\n\n/**\n * Type of options that an XmlHttp object can have.\n * @enum {number}\n */\ngoog.net.XmlHttp.OptionType = {\n  /**\n   * Whether a goog.nullFunction should be used to clear the onreadystatechange\n   * handler instead of null.\n   */\n  USE_NULL_FUNCTION: 0,\n\n  /**\n   * NOTE(user): In IE if send() errors on a *local* request the readystate\n   * is still changed to COMPLETE.  We need to ignore it and allow the\n   * try/catch around send() to pick up the error.\n   */\n  LOCAL_REQUEST_ERROR: 1\n};\n\n\n/**\n * Status constants for XMLHTTP, matches:\n * https://msdn.microsoft.com/en-us/library/ms534361(v=vs.85).aspx\n * @enum {number}\n */\ngoog.net.XmlHttp.ReadyState = {\n  /**\n   * Constant for when xmlhttprequest.readyState is uninitialized\n   */\n  UNINITIALIZED: 0,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loading.\n   */\n  LOADING: 1,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loaded.\n   */\n  LOADED: 2,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is in an interactive state.\n   */\n  INTERACTIVE: 3,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is completed\n   */\n  COMPLETE: 4\n};\n\n\n/**\n * The global factory instance for creating XMLHttpRequest objects.\n * @type {goog.net.XmlHttpFactory}\n * @private\n */\ngoog.net.XmlHttp.factory_;\n\n\n/**\n * Sets the factories for creating XMLHttpRequest objects and their options.\n * @param {Function} factory The factory for XMLHttpRequest objects.\n * @param {Function} optionsFactory The factory for options.\n * @deprecated Use setGlobalFactory instead.\n */\ngoog.net.XmlHttp.setFactory = function(factory, optionsFactory) {\n  goog.net.XmlHttp.setGlobalFactory(\n      new goog.net.WrapperXmlHttpFactory(\n          goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));\n};\n\n\n/**\n * Sets the global factory object.\n * @param {!goog.net.XmlHttpFactory} factory New global factory object.\n */\ngoog.net.XmlHttp.setGlobalFactory = function(factory) {\n  goog.net.XmlHttp.factory_ = factory;\n};\n\n\n\n/**\n * Default factory to use when creating xhr objects.  You probably shouldn't be\n * instantiating this directly, but rather using it via goog.net.XmlHttp.\n * @extends {goog.net.XmlHttpFactory}\n * @constructor\n */\ngoog.net.DefaultXmlHttpFactory = function() {\n  goog.net.XmlHttpFactory.call(this);\n};\ngoog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {\n  var progId = this.getProgId_();\n  if (progId) {\n    return new ActiveXObject(progId);\n  } else {\n    return new XMLHttpRequest();\n  }\n};\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {\n  var progId = this.getProgId_();\n  var options = {};\n  if (progId) {\n    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;\n    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;\n  }\n  return options;\n};\n\n\n/**\n * The ActiveX PROG ID string to use to create xhr's in IE. Lazily initialized.\n * @type {string|undefined}\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.ieProgId_;\n\n\n/**\n * Initialize the private state used by other functions.\n * @return {string} The ActiveX PROG ID string to use to create xhr's in IE.\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {\n  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR ||\n      goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {\n    return '';\n  }\n\n  // The following blog post describes what PROG IDs to use to create the\n  // XMLHTTP object in Internet Explorer:\n  // http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\n  // However we do not (yet) fully trust that this will be OK for old versions\n  // of IE on Win9x so we therefore keep the last 2.\n  if (!this.ieProgId_ && typeof XMLHttpRequest == 'undefined' &&\n      typeof ActiveXObject != 'undefined') {\n    // Candidate Active X types.\n    var ACTIVE_X_IDENTS = [\n      'MSXML2.XMLHTTP.6.0', 'MSXML2.XMLHTTP.3.0', 'MSXML2.XMLHTTP',\n      'Microsoft.XMLHTTP'\n    ];\n    for (var i = 0; i < ACTIVE_X_IDENTS.length; i++) {\n      var candidate = ACTIVE_X_IDENTS[i];\n\n      try {\n        new ActiveXObject(candidate);\n        // NOTE(user): cannot assign progid and return candidate in one line\n        // because JSCompiler complaings: BUG 658126\n        this.ieProgId_ = candidate;\n        return candidate;\n      } catch (e) {\n        // do nothing; try next choice\n      }\n    }\n\n    // couldn't find any matches\n    throw new Error(\n        'Could not create ActiveXObject. ActiveX might be disabled,' +\n        ' or MSXML might not be installed');\n  }\n\n  return /** @type {string} */ (this.ieProgId_);\n};\n\n\n// Set the global factory to an instance of the default factory.\ngoog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory());\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the invalid origin error, a subclass of\n * fireauth.AuthError.\n */\n\n\ngoog.provide('fireauth.InvalidOriginError');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('goog.Uri');\ngoog.require('goog.string');\n\n\n\n/**\n * Invalid origin error that can be returned to the developer.\n * @param {string} origin The invalid domain name.\n * @constructor\n * @extends {fireauth.AuthError}\n */\nfireauth.InvalidOriginError = function(origin) {\n  var code = fireauth.authenum.Error.INVALID_ORIGIN;\n  var message = undefined;\n  var uri = goog.Uri.parse(origin);\n  // Get domain.\n  var domain = uri.getDomain();\n  // Get scheme.\n  var scheme = uri.getScheme();\n  // Only http, https and chrome-extension currently supported.\n  if (scheme == 'chrome-extension') {\n    // Chrome extension whitelisting.\n    // Replace chrome-extension://CHROME_EXT_ID in error message template.\n    message = goog.string.subs(\n        fireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_,\n        domain);\n  } else if (scheme == 'http' || scheme == 'https') {\n    // Replace domain in error message template.\n    message = goog.string.subs(\n        fireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_,\n        domain);\n  } else {\n    // Throw operation not supported when non http, https or Chrome extension\n    // protocol.\n    code = fireauth.authenum.Error.OPERATION_NOT_SUPPORTED;\n  }\n  fireauth.InvalidOriginError.base(this, 'constructor', code, message);\n};\ngoog.inherits(fireauth.InvalidOriginError, fireauth.AuthError);\n\n\n/** @private @const {string} The http invalid origin message template. */\nfireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_ = 'This domain (%s) is no' +\n    't authorized to run this operation. Add it to the OAuth redirect domain' +\n    's list in the Firebase console -> Auth section -> Sign in method tab.';\n\n\n/**\n * @private @const {string} The Chrome extension invalid origin message\n *     template.\n */\nfireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_ = 'This chrom' +\n    'e extension ID (chrome-extension://%s) is not authorized to run this op' +\n    'eration. Add it to the OAuth redirect domains list in the Firebase cons' +\n    'ole -> Auth section -> Sign in method tab.';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Auth errors that include emails and an Auth\n * credential, a subclass of fireauth.AuthError.\n */\n\n\ngoog.provide('fireauth.AuthErrorWithCredential');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.object');\ngoog.require('goog.object');\n\n\n/**\n * Error with email and credential that can be returned to the developer.\n * @param {fireauth.authenum.Error} code The error code.\n * @param {?fireauth.AuthErrorWithCredential.CredentialInfo=} opt_credentialInfo\n *     Additional credential information to associate with the error.\n * @param {string=} opt_message The human-readable message.\n * @constructor\n * @extends {fireauth.AuthError}\n */\nfireauth.AuthErrorWithCredential =\n    function(code, opt_credentialInfo, opt_message) {\n  fireauth.AuthErrorWithCredential.base(\n      this, 'constructor', code, opt_message);\n  var credentialInfo = opt_credentialInfo || {};\n\n  // These properties are public.\n  if (credentialInfo.email) {\n    fireauth.object.setReadonlyProperty(this, 'email', credentialInfo.email);\n  }\n  if (credentialInfo.phoneNumber) {\n    fireauth.object.setReadonlyProperty(this, 'phoneNumber',\n        credentialInfo.phoneNumber);\n  }\n  if (credentialInfo.credential) {\n    fireauth.object.setReadonlyProperty(this, 'credential',\n        credentialInfo.credential);\n  }\n};\ngoog.inherits(fireauth.AuthErrorWithCredential, fireauth.AuthError);\n\n\n/**\n * Additional credential information to associate with an error, so that the\n * user does not have to execute the Auth flow again on linking errors.\n * @typedef {{\n *   email: (?string|undefined),\n *   phoneNumber: (?string|undefined),\n *   credential: (?fireauth.AuthCredential|undefined),\n * }}\n */\nfireauth.AuthErrorWithCredential.CredentialInfo;\n\n\n/**\n * @return {!Object} The plain object form of the error.\n * @override\n */\nfireauth.AuthErrorWithCredential.prototype.toPlainObject = function() {\n  var obj = {\n    'code': this['code'],\n    'message': this.message\n  };\n  if (this['email']) {\n    obj['email'] = this['email'];\n  }\n  if (this['phoneNumber']) {\n    obj['phoneNumber'] = this['phoneNumber'];\n  }\n\n  var credential = this['credential'] && this['credential'].toPlainObject();\n  if (credential){\n    goog.object.extend(obj, credential);\n  }\n  return obj;\n};\n\n\n/**\n * @return {!Object} The plain object form of the error. This is used by\n *     JSON.toStringify() to return the stringified representation of the error;\n * @override\n */\nfireauth.AuthErrorWithCredential.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // an Auth error instance.\n  return this.toPlainObject();\n};\n\n\n/**\n * @param {?Object|undefined} response The object response to convert to a\n *     fireauth.AuthErrorWithCredential.\n * @return {?fireauth.AuthError} The error representation of the response.\n * @override\n */\nfireauth.AuthErrorWithCredential.fromPlainObject = function(response) {\n  // Code included.\n  if (response['code']) {\n    var code = response['code'] || '';\n    // Remove prefix from name if available.\n    if (code.indexOf(fireauth.AuthError.ERROR_CODE_PREFIX) == 0) {\n      code = code.substring(fireauth.AuthError.ERROR_CODE_PREFIX.length);\n    }\n\n    // Credentials in response.\n    var credentialInfo = {\n      credential: fireauth.AuthProvider.getCredentialFromResponse(response)\n    };\n    if (response['email']) {\n      credentialInfo.email = response['email'];\n    } else if (response['phoneNumber']) {\n      credentialInfo.phoneNumber = response['phoneNumber'];\n    } else if (!credentialInfo.credential) {\n      // Neither email, phone number or credentials are set; return a generic\n      // error.\n      return new fireauth.AuthError(code, response['message'] || undefined);\n    }\n\n    return new fireauth.AuthErrorWithCredential(code, credentialInfo,\n        response['message']);\n  }\n  // No error or invalid response.\n  return null;\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Interface for a factory for creating XMLHttpRequest objects\n * and metadata about them.\n * @author dbk@google.com (David Barrett-Kahn)\n */\n\ngoog.provide('goog.net.XmlHttpFactory');\n\n/** @suppress {extraRequire} Typedef. */\ngoog.require('goog.net.XhrLike');\n\n\n\n/**\n * Abstract base class for an XmlHttpRequest factory.\n * @constructor\n */\ngoog.net.XmlHttpFactory = function() {};\n\n\n/**\n * Cache of options - we only actually call internalGetOptions once.\n * @type {Object}\n * @private\n */\ngoog.net.XmlHttpFactory.prototype.cachedOptions_ = null;\n\n\n/**\n * @return {!goog.net.XhrLike.OrNative} A new XhrLike instance.\n */\ngoog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;\n\n\n/**\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n */\ngoog.net.XmlHttpFactory.prototype.getOptions = function() {\n  return this.cachedOptions_ ||\n      (this.cachedOptions_ = this.internalGetOptions());\n};\n\n\n/**\n * Override this method in subclasses to preserve the caching offered by\n * getOptions().\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n * @protected\n */\ngoog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview This file contain classes that add support for cross-domain XHR\n * requests (see http://www.w3.org/TR/cors/). Most modern browsers are able to\n * use a regular XMLHttpRequest for that, but IE 8 use XDomainRequest object\n * instead. This file provides an adapter from this object to a goog.net.XhrLike\n * and a factory to allow using this with a goog.net.XhrIo instance.\n *\n * IE 7 and older versions are not supported (given that they do not support\n * CORS requests).\n */\ngoog.provide('goog.net.CorsXmlHttpFactory');\ngoog.provide('goog.net.IeCorsXhrAdapter');\n\ngoog.require('goog.net.HttpStatus');\ngoog.require('goog.net.XhrLike');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * A factory of XML http request objects that supports cross domain requests.\n * This class should be instantiated and passed as the parameter of a\n * goog.net.XhrIo constructor to allow cross-domain requests in every browser.\n *\n * @extends {goog.net.XmlHttpFactory}\n * @constructor\n * @final\n */\ngoog.net.CorsXmlHttpFactory = function() {\n  goog.net.XmlHttpFactory.call(this);\n};\ngoog.inherits(goog.net.CorsXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.CorsXmlHttpFactory.prototype.createInstance = function() {\n  var xhr = new XMLHttpRequest();\n  if (('withCredentials' in xhr)) {\n    return xhr;\n  } else if (typeof XDomainRequest != 'undefined') {\n    return new goog.net.IeCorsXhrAdapter();\n  } else {\n    throw new Error('Unsupported browser');\n  }\n};\n\n\n/** @override */\ngoog.net.CorsXmlHttpFactory.prototype.internalGetOptions = function() {\n  return {};\n};\n\n\n\n/**\n * An adapter around Internet Explorer's XDomainRequest object that makes it\n * look like a standard XMLHttpRequest. This can be used instead of\n * XMLHttpRequest to support CORS.\n *\n * @implements {goog.net.XhrLike}\n * @constructor\n * @struct\n * @final\n */\ngoog.net.IeCorsXhrAdapter = function() {\n  /**\n   * The underlying XDomainRequest used to make the HTTP request.\n   * @type {!XDomainRequest}\n   * @private\n   */\n  this.xdr_ = new XDomainRequest();\n\n  /**\n   * The simulated ready state.\n   * @type {number}\n   */\n  this.readyState = goog.net.XmlHttp.ReadyState.UNINITIALIZED;\n\n  /**\n   * The simulated ready state change callback function.\n   * @type {Function}\n   */\n  this.onreadystatechange = null;\n\n  /**\n   * The simulated response text parameter.\n   * @type {string}\n   */\n  this.responseText = '';\n\n  /**\n   * The simulated status code\n   * @type {number}\n   */\n  this.status = -1;\n\n  /** @override */\n  this.responseXML = null;\n\n  /** @override */\n  this.statusText = '';\n\n  this.xdr_.onload = goog.bind(this.handleLoad_, this);\n  this.xdr_.onerror = goog.bind(this.handleError_, this);\n  this.xdr_.onprogress = goog.bind(this.handleProgress_, this);\n  this.xdr_.ontimeout = goog.bind(this.handleTimeout_, this);\n};\n\n\n/**\n * Opens a connection to the provided URL.\n * @param {string} method The HTTP method to use. Valid methods include GET and\n *     POST.\n * @param {string} url The URL to contact. The authority of this URL must match\n *     the authority of the current page's URL (e.g. http or https).\n * @param {?boolean=} opt_async Whether the request is asynchronous, defaulting\n *     to true. XDomainRequest does not support syncronous requests, so setting\n *     it to false will actually raise an exception.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.open = function(method, url, opt_async) {\n  if (goog.isDefAndNotNull(opt_async) && (!opt_async)) {\n    throw new Error('Only async requests are supported.');\n  }\n  this.xdr_.open(method, url);\n};\n\n\n/**\n * Sends the request to the remote server. Before calling this function, always\n * call {@link open}.\n * @param {(ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string)=}\n *     opt_content The content to send as POSTDATA, if any. Only string data is\n *     supported by this implementation.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.send = function(opt_content) {\n  if (opt_content) {\n    if (typeof opt_content == 'string') {\n      this.xdr_.send(opt_content);\n    } else {\n      throw new Error('Only string data is supported');\n    }\n  } else {\n    this.xdr_.send();\n  }\n};\n\n\n/**\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.abort = function() {\n  this.xdr_.abort();\n};\n\n\n/**\n * Sets a request header to send to the remote server. Because this\n * implementation does not support request headers, this function does nothing.\n * @param {string} key The name of the HTTP header to set. Ignored.\n * @param {string} value The value to set for the HTTP header. Ignored.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.setRequestHeader = function(key, value) {\n  // Unsupported; ignore the header.\n};\n\n\n/**\n * Returns the value of the response header identified by key. This\n * implementation only supports the 'content-type' header.\n * @param {string} key The request header to fetch. If this parameter is set to\n *     'content-type' (case-insensitive), this function returns the value of\n *     the 'content-type' request header. If this parameter is set to any other\n *     value, this function always returns an empty string.\n * @return {string} The value of the response header, or an empty string if key\n *     is not 'content-type' (case-insensitive).\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.getResponseHeader = function(key) {\n  if (key.toLowerCase() == 'content-type') {\n    return this.xdr_.contentType;\n  }\n  return '';\n};\n\n\n/**\n * Handles a request that has fully loaded successfully.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleLoad_ = function() {\n  // IE only calls onload if the status is 200, so the status code must be OK.\n  this.status = goog.net.HttpStatus.OK;\n  this.responseText = this.xdr_.responseText;\n  this.setReadyState_(goog.net.XmlHttp.ReadyState.COMPLETE);\n};\n\n\n/**\n * Handles a request that has failed to load.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleError_ = function() {\n  // IE doesn't tell us what the status code actually is (other than the fact\n  // that it is not 200), so simulate an INTERNAL_SERVER_ERROR.\n  this.status = goog.net.HttpStatus.INTERNAL_SERVER_ERROR;\n  this.responseText = '';\n  this.setReadyState_(goog.net.XmlHttp.ReadyState.COMPLETE);\n};\n\n\n/**\n * Handles a request that timed out.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleTimeout_ = function() {\n  this.handleError_();\n};\n\n\n/**\n * Handles a request that is in the process of loading.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleProgress_ = function() {\n  // IE only calls onprogress if the status is 200, so the status code must be\n  // OK.\n  this.status = goog.net.HttpStatus.OK;\n  this.setReadyState_(goog.net.XmlHttp.ReadyState.LOADING);\n};\n\n\n/**\n * Sets this XHR's ready state and fires the onreadystatechange listener (if one\n * is set).\n * @param {number} readyState The new ready state.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.setReadyState_ = function(readyState) {\n  this.readyState = readyState;\n  if (this.onreadystatechange) {\n    this.onreadystatechange();\n  }\n};\n\n\n/**\n * Returns the response headers from the server. This implemntation only returns\n * the 'content-type' header.\n * @return {string} The headers returned from the server.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.getAllResponseHeaders = function() {\n  return 'content-type: ' + this.xdr_.contentType;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Definition of the LogRecord class. Please minimize\n * dependencies this file has on other closure classes as any dependency it\n * takes won't be able to use the logging infrastructure.\n *\n */\n\ngoog.provide('goog.debug.LogRecord');\n\n\n\n/**\n * LogRecord objects are used to pass logging requests between\n * the logging framework and individual log Handlers.\n * @constructor\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {string} msg The string message.\n * @param {string} loggerName The name of the source logger.\n * @param {number=} opt_time Time this log record was created if other than now.\n *     If 0, we use #goog.now.\n * @param {number=} opt_sequenceNumber Sequence number of this log record. This\n *     should only be passed in when restoring a log record from persistence.\n */\ngoog.debug.LogRecord = function(\n    level, msg, loggerName, opt_time, opt_sequenceNumber) {\n  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);\n};\n\n\n/**\n * Time the LogRecord was created.\n * @type {number}\n * @private\n */\ngoog.debug.LogRecord.prototype.time_;\n\n\n/**\n * Level of the LogRecord\n * @type {goog.debug.Logger.Level}\n * @private\n */\ngoog.debug.LogRecord.prototype.level_;\n\n\n/**\n * Message associated with the record\n * @type {string}\n * @private\n */\ngoog.debug.LogRecord.prototype.msg_;\n\n\n/**\n * Name of the logger that created the record.\n * @type {string}\n * @private\n */\ngoog.debug.LogRecord.prototype.loggerName_;\n\n\n/**\n * Sequence number for the LogRecord. Each record has a unique sequence number\n * that is greater than all log records created before it.\n * @type {number}\n * @private\n */\ngoog.debug.LogRecord.prototype.sequenceNumber_ = 0;\n\n\n/**\n * Exception associated with the record\n * @type {Object}\n * @private\n */\ngoog.debug.LogRecord.prototype.exception_ = null;\n\n\n/**\n * @define {boolean} Whether to enable log sequence numbers.\n */\ngoog.define('goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS', true);\n\n\n/**\n * A sequence counter for assigning increasing sequence numbers to LogRecord\n * objects.\n * @type {number}\n * @private\n */\ngoog.debug.LogRecord.nextSequenceNumber_ = 0;\n\n\n/**\n * Sets all fields of the log record.\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {string} msg The string message.\n * @param {string} loggerName The name of the source logger.\n * @param {number=} opt_time Time this log record was created if other than now.\n *     If 0, we use #goog.now.\n * @param {number=} opt_sequenceNumber Sequence number of this log record. This\n *     should only be passed in when restoring a log record from persistence.\n */\ngoog.debug.LogRecord.prototype.reset = function(\n    level, msg, loggerName, opt_time, opt_sequenceNumber) {\n  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {\n    this.sequenceNumber_ = typeof opt_sequenceNumber == 'number' ?\n        opt_sequenceNumber :\n        goog.debug.LogRecord.nextSequenceNumber_++;\n  }\n\n  this.time_ = opt_time || goog.now();\n  this.level_ = level;\n  this.msg_ = msg;\n  this.loggerName_ = loggerName;\n  delete this.exception_;\n};\n\n\n/**\n * Get the source Logger's name.\n *\n * @return {string} source logger name (may be null).\n */\ngoog.debug.LogRecord.prototype.getLoggerName = function() {\n  return this.loggerName_;\n};\n\n\n/**\n * Get the exception that is part of the log record.\n *\n * @return {Object} the exception.\n */\ngoog.debug.LogRecord.prototype.getException = function() {\n  return this.exception_;\n};\n\n\n/**\n * Set the exception that is part of the log record.\n *\n * @param {Object} exception the exception.\n */\ngoog.debug.LogRecord.prototype.setException = function(exception) {\n  this.exception_ = exception;\n};\n\n\n/**\n * Get the source Logger's name.\n *\n * @param {string} loggerName source logger name (may be null).\n */\ngoog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {\n  this.loggerName_ = loggerName;\n};\n\n\n/**\n * Get the logging message level, for example Level.SEVERE.\n * @return {goog.debug.Logger.Level} the logging message level.\n */\ngoog.debug.LogRecord.prototype.getLevel = function() {\n  return this.level_;\n};\n\n\n/**\n * Set the logging message level, for example Level.SEVERE.\n * @param {goog.debug.Logger.Level} level the logging message level.\n */\ngoog.debug.LogRecord.prototype.setLevel = function(level) {\n  this.level_ = level;\n};\n\n\n/**\n * Get the \"raw\" log message, before localization or formatting.\n *\n * @return {string} the raw message string.\n */\ngoog.debug.LogRecord.prototype.getMessage = function() {\n  return this.msg_;\n};\n\n\n/**\n * Set the \"raw\" log message, before localization or formatting.\n *\n * @param {string} msg the raw message string.\n */\ngoog.debug.LogRecord.prototype.setMessage = function(msg) {\n  this.msg_ = msg;\n};\n\n\n/**\n * Get event time in milliseconds since 1970.\n *\n * @return {number} event time in millis since 1970.\n */\ngoog.debug.LogRecord.prototype.getMillis = function() {\n  return this.time_;\n};\n\n\n/**\n * Set event time in milliseconds since 1970.\n *\n * @param {number} time event time in millis since 1970.\n */\ngoog.debug.LogRecord.prototype.setMillis = function(time) {\n  this.time_ = time;\n};\n\n\n/**\n * Get the sequence number.\n * <p>\n * Sequence numbers are normally assigned in the LogRecord\n * constructor, which assigns unique sequence numbers to\n * each new LogRecord in increasing order.\n * @return {number} the sequence number.\n */\ngoog.debug.LogRecord.prototype.getSequenceNumber = function() {\n  return this.sequenceNumber_;\n};\n","// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Constants for HTTP status codes.\n */\n\ngoog.provide('goog.net.HttpStatus');\n\n\n/**\n * HTTP Status Codes defined in RFC 2616 and RFC 6585.\n * @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n * @see http://tools.ietf.org/html/rfc6585\n * @enum {number}\n */\ngoog.net.HttpStatus = {\n  // Informational 1xx\n  CONTINUE: 100,\n  SWITCHING_PROTOCOLS: 101,\n\n  // Successful 2xx\n  OK: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  NON_AUTHORITATIVE_INFORMATION: 203,\n  NO_CONTENT: 204,\n  RESET_CONTENT: 205,\n  PARTIAL_CONTENT: 206,\n\n  // Redirection 3xx\n  MULTIPLE_CHOICES: 300,\n  MOVED_PERMANENTLY: 301,\n  FOUND: 302,\n  SEE_OTHER: 303,\n  NOT_MODIFIED: 304,\n  USE_PROXY: 305,\n  TEMPORARY_REDIRECT: 307,\n\n  // Client Error 4xx\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n  LENGTH_REQUIRED: 411,\n  PRECONDITION_FAILED: 412,\n  REQUEST_ENTITY_TOO_LARGE: 413,\n  REQUEST_URI_TOO_LONG: 414,\n  UNSUPPORTED_MEDIA_TYPE: 415,\n  REQUEST_RANGE_NOT_SATISFIABLE: 416,\n  EXPECTATION_FAILED: 417,\n  PRECONDITION_REQUIRED: 428,\n  TOO_MANY_REQUESTS: 429,\n  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n\n  // Server Error 5xx\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n  GATEWAY_TIMEOUT: 504,\n  HTTP_VERSION_NOT_SUPPORTED: 505,\n  NETWORK_AUTHENTICATION_REQUIRED: 511,\n\n  /*\n   * IE returns this code for 204 due to its use of URLMon, which returns this\n   * code for 'Operation Aborted'. The status text is 'Unknown', the response\n   * headers are ''. Known to occur on IE 6 on XP through IE9 on Win7.\n   */\n  QUIRK_IE_NO_CONTENT: 1223\n};\n\n\n/**\n * Returns whether the given status should be considered successful.\n *\n * Successful codes are OK (200), CREATED (201), ACCEPTED (202),\n * NO CONTENT (204), PARTIAL CONTENT (206), NOT MODIFIED (304),\n * and IE's no content code (1223).\n *\n * @param {number} status The status code to test.\n * @return {boolean} Whether the status code should be considered successful.\n */\ngoog.net.HttpStatus.isSuccess = function(status) {\n  switch (status) {\n    case goog.net.HttpStatus.OK:\n    case goog.net.HttpStatus.CREATED:\n    case goog.net.HttpStatus.ACCEPTED:\n    case goog.net.HttpStatus.NO_CONTENT:\n    case goog.net.HttpStatus.PARTIAL_CONTENT:\n    case goog.net.HttpStatus.NOT_MODIFIED:\n    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:\n      return true;\n\n    default:\n      return false;\n  }\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Definition of the Logger class. Please minimize dependencies\n * this file has on other closure classes as any dependency it takes won't be\n * able to use the logging infrastructure.\n *\n * @see ../demos/debug.html\n */\n\ngoog.provide('goog.debug.LogManager');\ngoog.provide('goog.debug.Loggable');\ngoog.provide('goog.debug.Logger');\ngoog.provide('goog.debug.Logger.Level');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.debug');\ngoog.require('goog.debug.LogBuffer');\ngoog.require('goog.debug.LogRecord');\n\n\n/**\n * A message value that can be handled by a Logger.\n *\n * Functions are treated like callbacks, but are only called when the event's\n * log level is enabled. This is useful for logging messages that are expensive\n * to construct.\n *\n * @typedef {string|function(): string}\n */\ngoog.debug.Loggable;\n\n\n\n/**\n * The Logger is an object used for logging debug messages. Loggers are\n * normally named, using a hierarchical dot-separated namespace. Logger names\n * can be arbitrary strings, but they should normally be based on the package\n * name or class name of the logged component, such as goog.net.BrowserChannel.\n *\n * The Logger object is loosely based on the java class\n * java.util.logging.Logger. It supports different levels of filtering for\n * different loggers.\n *\n * The logger object should never be instantiated by application code. It\n * should always use the goog.debug.Logger.getLogger function.\n *\n * @constructor\n * @param {string} name The name of the Logger.\n * @final\n */\ngoog.debug.Logger = function(name) {\n  /**\n   * Name of the Logger. Generally a dot-separated namespace\n   * @private {string}\n   */\n  this.name_ = name;\n\n  /**\n   * Parent Logger.\n   * @private {goog.debug.Logger}\n   */\n  this.parent_ = null;\n\n  /**\n   * Level that this logger only filters above. Null indicates it should\n   * inherit from the parent.\n   * @private {goog.debug.Logger.Level}\n   */\n  this.level_ = null;\n\n  /**\n   * Map of children loggers. The keys are the leaf names of the children and\n   * the values are the child loggers.\n   * @private {Object}\n   */\n  this.children_ = null;\n\n  /**\n   * Handlers that are listening to this logger.\n   * @private {Array<Function>}\n   */\n  this.handlers_ = null;\n};\n\n\n/** @const */\ngoog.debug.Logger.ROOT_LOGGER_NAME = '';\n\n\n/**\n * @define {boolean} Toggles whether loggers other than the root logger can have\n *     log handlers attached to them and whether they can have their log level\n *     set. Logging is a bit faster when this is set to false.\n */\ngoog.define('goog.debug.Logger.ENABLE_HIERARCHY', true);\n\n\n/**\n * @define {boolean} Toggles whether active log statements are also recorded\n *     to the profiler.\n */\ngoog.define('goog.debug.Logger.ENABLE_PROFILER_LOGGING', false);\n\n\nif (!goog.debug.Logger.ENABLE_HIERARCHY) {\n  /**\n   * @type {!Array<Function>}\n   * @private\n   */\n  goog.debug.Logger.rootHandlers_ = [];\n\n\n  /**\n   * @type {goog.debug.Logger.Level}\n   * @private\n   */\n  goog.debug.Logger.rootLevel_;\n}\n\n\n\n/**\n * The Level class defines a set of standard logging levels that\n * can be used to control logging output.  The logging Level objects\n * are ordered and are specified by ordered integers.  Enabling logging\n * at a given level also enables logging at all higher levels.\n * <p>\n * Clients should normally use the predefined Level constants such\n * as Level.SEVERE.\n * <p>\n * The levels in descending order are:\n * <ul>\n * <li>SEVERE (highest value)\n * <li>WARNING\n * <li>INFO\n * <li>CONFIG\n * <li>FINE\n * <li>FINER\n * <li>FINEST  (lowest value)\n * </ul>\n * In addition there is a level OFF that can be used to turn\n * off logging, and a level ALL that can be used to enable\n * logging of all messages.\n *\n * @param {string} name The name of the level.\n * @param {number} value The numeric value of the level.\n * @constructor\n * @final\n */\ngoog.debug.Logger.Level = function(name, value) {\n  /**\n   * The name of the level\n   * @type {string}\n   */\n  this.name = name;\n\n  /**\n   * The numeric value of the level\n   * @type {number}\n   */\n  this.value = value;\n};\n\n\n/**\n * @return {string} String representation of the logger level.\n * @override\n */\ngoog.debug.Logger.Level.prototype.toString = function() {\n  return this.name;\n};\n\n\n/**\n * OFF is a special level that can be used to turn off logging.\n * This level is initialized to <CODE>Infinity</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.OFF = new goog.debug.Logger.Level('OFF', Infinity);\n\n\n/**\n * SHOUT is a message level for extra debugging loudness.\n * This level is initialized to <CODE>1200</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level('SHOUT', 1200);\n\n\n/**\n * SEVERE is a message level indicating a serious failure.\n * This level is initialized to <CODE>1000</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level('SEVERE', 1000);\n\n\n/**\n * WARNING is a message level indicating a potential problem.\n * This level is initialized to <CODE>900</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level('WARNING', 900);\n\n\n/**\n * INFO is a message level for informational messages.\n * This level is initialized to <CODE>800</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.INFO = new goog.debug.Logger.Level('INFO', 800);\n\n\n/**\n * CONFIG is a message level for static configuration messages.\n * This level is initialized to <CODE>700</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level('CONFIG', 700);\n\n\n/**\n * FINE is a message level providing tracing information.\n * This level is initialized to <CODE>500</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.FINE = new goog.debug.Logger.Level('FINE', 500);\n\n\n/**\n * FINER indicates a fairly detailed tracing message.\n * This level is initialized to <CODE>400</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.FINER = new goog.debug.Logger.Level('FINER', 400);\n\n/**\n * FINEST indicates a highly detailed tracing message.\n * This level is initialized to <CODE>300</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\n\ngoog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level('FINEST', 300);\n\n\n/**\n * ALL indicates that all messages should be logged.\n * This level is initialized to <CODE>0</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.ALL = new goog.debug.Logger.Level('ALL', 0);\n\n\n/**\n * The predefined levels.\n * @type {!Array<!goog.debug.Logger.Level>}\n * @final\n */\ngoog.debug.Logger.Level.PREDEFINED_LEVELS = [\n  goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT,\n  goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING,\n  goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG,\n  goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER,\n  goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL\n];\n\n\n/**\n * A lookup map used to find the level object based on the name or value of\n * the level object.\n * @type {Object}\n * @private\n */\ngoog.debug.Logger.Level.predefinedLevelsCache_ = null;\n\n\n/**\n * Creates the predefined levels cache and populates it.\n * @private\n */\ngoog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {\n  goog.debug.Logger.Level.predefinedLevelsCache_ = {};\n  for (var i = 0, level; level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];\n       i++) {\n    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;\n    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;\n  }\n};\n\n\n/**\n * Gets the predefined level with the given name.\n * @param {string} name The name of the level.\n * @return {goog.debug.Logger.Level} The level, or null if none found.\n */\ngoog.debug.Logger.Level.getPredefinedLevel = function(name) {\n  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {\n    goog.debug.Logger.Level.createPredefinedLevelsCache_();\n  }\n\n  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;\n};\n\n\n/**\n * Gets the highest predefined level <= #value.\n * @param {number} value Level value.\n * @return {goog.debug.Logger.Level} The level, or null if none found.\n */\ngoog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {\n  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {\n    goog.debug.Logger.Level.createPredefinedLevelsCache_();\n  }\n\n  if (value in /** @type {!Object} */ (\n          goog.debug.Logger.Level.predefinedLevelsCache_)) {\n    return goog.debug.Logger.Level.predefinedLevelsCache_[value];\n  }\n\n  for (var i = 0; i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length; ++i) {\n    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];\n    if (level.value <= value) {\n      return level;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Finds or creates a logger for a named subsystem. If a logger has already been\n * created with the given name it is returned. Otherwise a new logger is\n * created. If a new logger is created its log level will be configured based\n * on the LogManager configuration and it will configured to also send logging\n * output to its parent's handlers. It will be registered in the LogManager\n * global namespace.\n *\n * @param {string} name A name for the logger. This should be a dot-separated\n * name and should normally be based on the package name or class name of the\n * subsystem, such as goog.net.BrowserChannel.\n * @return {!goog.debug.Logger} The named logger.\n * @deprecated use {@link goog.log} instead.\n */\ngoog.debug.Logger.getLogger = function(name) {\n  return goog.debug.LogManager.getLogger(name);\n};\n\n\n/**\n * Logs a message to profiling tools, if available.\n * {@see https://developers.google.com/web-toolkit/speedtracer/logging-api}\n * {@see http://msdn.microsoft.com/en-us/library/dd433074(VS.85).aspx}\n * @param {string} msg The message to log.\n */\ngoog.debug.Logger.logToProfilers = function(msg) {\n  // Some browsers also log timeStamp calls to the console, only log\n  // if actually asked.\n  if (goog.debug.Logger.ENABLE_PROFILER_LOGGING) {\n    var msWriteProfilerMark = goog.global['msWriteProfilerMark'];\n    if (msWriteProfilerMark) {\n      // Logs a message to the Microsoft profiler\n      // On IE, console['timeStamp'] may output to console\n      msWriteProfilerMark(msg);\n      return;\n    }\n\n    // Using goog.global, as loggers might be used in window-less contexts.\n    var console = goog.global['console'];\n    if (console && console['timeStamp']) {\n      // Logs a message to Firebug, Web Inspector, SpeedTracer, etc.\n      console['timeStamp'](msg);\n    }\n  }\n};\n\n\n/**\n * Gets the name of this logger.\n * @return {string} The name of this logger.\n */\ngoog.debug.Logger.prototype.getName = function() {\n  return this.name_;\n};\n\n\n/**\n * Adds a handler to the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {Function} handler Handler function to add.\n */\ngoog.debug.Logger.prototype.addHandler = function(handler) {\n  if (goog.debug.LOGGING_ENABLED) {\n    if (goog.debug.Logger.ENABLE_HIERARCHY) {\n      if (!this.handlers_) {\n        this.handlers_ = [];\n      }\n      this.handlers_.push(handler);\n    } else {\n      goog.asserts.assert(\n          !this.name_, 'Cannot call addHandler on a non-root logger when ' +\n              'goog.debug.Logger.ENABLE_HIERARCHY is false.');\n      goog.debug.Logger.rootHandlers_.push(handler);\n    }\n  }\n};\n\n\n/**\n * Removes a handler from the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {Function} handler Handler function to remove.\n * @return {boolean} Whether the handler was removed.\n */\ngoog.debug.Logger.prototype.removeHandler = function(handler) {\n  if (goog.debug.LOGGING_ENABLED) {\n    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ?\n        this.handlers_ :\n        goog.debug.Logger.rootHandlers_;\n    return !!handlers && goog.array.remove(handlers, handler);\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * Returns the parent of this logger.\n * @return {goog.debug.Logger} The parent logger or null if this is the root.\n */\ngoog.debug.Logger.prototype.getParent = function() {\n  return this.parent_;\n};\n\n\n/**\n * Returns the children of this logger as a map of the child name to the logger.\n * @return {!Object} The map where the keys are the child leaf names and the\n *     values are the Logger objects.\n */\ngoog.debug.Logger.prototype.getChildren = function() {\n  if (!this.children_) {\n    this.children_ = {};\n  }\n  return this.children_;\n};\n\n\n/**\n * Set the log level specifying which message levels will be logged by this\n * logger. Message levels lower than this value will be discarded.\n * The level value Level.OFF can be used to turn off logging. If the new level\n * is null, it means that this node should inherit its level from its nearest\n * ancestor with a specific (non-null) level value.\n *\n * @param {goog.debug.Logger.Level} level The new level.\n */\ngoog.debug.Logger.prototype.setLevel = function(level) {\n  if (goog.debug.LOGGING_ENABLED) {\n    if (goog.debug.Logger.ENABLE_HIERARCHY) {\n      this.level_ = level;\n    } else {\n      goog.asserts.assert(\n          !this.name_, 'Cannot call setLevel() on a non-root logger when ' +\n              'goog.debug.Logger.ENABLE_HIERARCHY is false.');\n      goog.debug.Logger.rootLevel_ = level;\n    }\n  }\n};\n\n\n/**\n * Gets the log level specifying which message levels will be logged by this\n * logger. Message levels lower than this value will be discarded.\n * The level value Level.OFF can be used to turn off logging. If the level\n * is null, it means that this node should inherit its level from its nearest\n * ancestor with a specific (non-null) level value.\n *\n * @return {goog.debug.Logger.Level} The level.\n */\ngoog.debug.Logger.prototype.getLevel = function() {\n  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;\n};\n\n\n/**\n * Returns the effective level of the logger based on its ancestors' levels.\n * @return {goog.debug.Logger.Level} The level.\n */\ngoog.debug.Logger.prototype.getEffectiveLevel = function() {\n  if (!goog.debug.LOGGING_ENABLED) {\n    return goog.debug.Logger.Level.OFF;\n  }\n\n  if (!goog.debug.Logger.ENABLE_HIERARCHY) {\n    return goog.debug.Logger.rootLevel_;\n  }\n  if (this.level_) {\n    return this.level_;\n  }\n  if (this.parent_) {\n    return this.parent_.getEffectiveLevel();\n  }\n  goog.asserts.fail('Root logger has no level set.');\n  return null;\n};\n\n\n/**\n * Checks if a message of the given level would actually be logged by this\n * logger. This check is based on the Loggers effective level, which may be\n * inherited from its parent.\n * @param {goog.debug.Logger.Level} level The level to check.\n * @return {boolean} Whether the message would be logged.\n */\ngoog.debug.Logger.prototype.isLoggable = function(level) {\n  return goog.debug.LOGGING_ENABLED &&\n      level.value >= this.getEffectiveLevel().value;\n};\n\n\n/**\n * Logs a message. If the logger is currently enabled for the\n * given message level then the given message is forwarded to all the\n * registered output Handler objects.\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error|Object=} opt_exception An exception associated with the\n *     message.\n */\ngoog.debug.Logger.prototype.log = function(level, msg, opt_exception) {\n  // java caches the effective level, not sure it's necessary here\n  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {\n    // Message callbacks can be useful when a log message is expensive to build.\n    if (goog.isFunction(msg)) {\n      msg = msg();\n    }\n\n    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));\n  }\n};\n\n\n/**\n * Creates a new log record and adds the exception (if present) to it.\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {string} msg The string message.\n * @param {Error|Object=} opt_exception An exception associated with the\n *     message.\n * @return {!goog.debug.LogRecord} A log record.\n * @suppress {es5Strict}\n */\ngoog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {\n  if (goog.debug.LogBuffer.isBufferingEnabled()) {\n    var logRecord =\n        goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_);\n  } else {\n    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);\n  }\n  if (opt_exception) {\n    logRecord.setException(opt_exception);\n  }\n  return logRecord;\n};\n\n\n/**\n * Logs a message at the Logger.Level.SHOUT level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.shout = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.SEVERE level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.severe = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.WARNING level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.warning = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.INFO level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.info = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.CONFIG level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.config = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.FINE level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.fine = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.FINER level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.finer = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.FINEST level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.finest = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a LogRecord. If the logger is currently enabled for the\n * given message level then the given message is forwarded to all the\n * registered output Handler objects.\n * @param {goog.debug.LogRecord} logRecord A log record to log.\n */\ngoog.debug.Logger.prototype.logRecord = function(logRecord) {\n  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {\n    this.doLogRecord_(logRecord);\n  }\n};\n\n\n/**\n * Logs a LogRecord.\n * @param {goog.debug.LogRecord} logRecord A log record to log.\n * @private\n */\ngoog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {\n  if (goog.debug.Logger.ENABLE_PROFILER_LOGGING) {\n    goog.debug.Logger.logToProfilers('log:' + logRecord.getMessage());\n  }\n  if (goog.debug.Logger.ENABLE_HIERARCHY) {\n    var target = this;\n    while (target) {\n      target.callPublish_(logRecord);\n      target = target.getParent();\n    }\n  } else {\n    for (var i = 0, handler; handler = goog.debug.Logger.rootHandlers_[i++];) {\n      handler(logRecord);\n    }\n  }\n};\n\n\n/**\n * Calls the handlers for publish.\n * @param {goog.debug.LogRecord} logRecord The log record to publish.\n * @private\n */\ngoog.debug.Logger.prototype.callPublish_ = function(logRecord) {\n  if (this.handlers_) {\n    for (var i = 0, handler; handler = this.handlers_[i]; i++) {\n      handler(logRecord);\n    }\n  }\n};\n\n\n/**\n * Sets the parent of this logger. This is used for setting up the logger tree.\n * @param {goog.debug.Logger} parent The parent logger.\n * @private\n */\ngoog.debug.Logger.prototype.setParent_ = function(parent) {\n  this.parent_ = parent;\n};\n\n\n/**\n * Adds a child to this logger. This is used for setting up the logger tree.\n * @param {string} name The leaf name of the child.\n * @param {goog.debug.Logger} logger The child logger.\n * @private\n */\ngoog.debug.Logger.prototype.addChild_ = function(name, logger) {\n  this.getChildren()[name] = logger;\n};\n\n\n/**\n * There is a single global LogManager object that is used to maintain a set of\n * shared state about Loggers and log services. This is loosely based on the\n * java class java.util.logging.LogManager.\n * @const\n */\ngoog.debug.LogManager = {};\n\n\n/**\n * Map of logger names to logger objects.\n *\n * @type {!Object<string, !goog.debug.Logger>}\n * @private\n */\ngoog.debug.LogManager.loggers_ = {};\n\n\n/**\n * The root logger which is the root of the logger tree.\n * @type {goog.debug.Logger}\n * @private\n */\ngoog.debug.LogManager.rootLogger_ = null;\n\n\n/**\n * Initializes the LogManager if not already initialized.\n */\ngoog.debug.LogManager.initialize = function() {\n  if (!goog.debug.LogManager.rootLogger_) {\n    goog.debug.LogManager.rootLogger_ =\n        new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);\n    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] =\n        goog.debug.LogManager.rootLogger_;\n    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);\n  }\n};\n\n\n/**\n * Returns all the loggers.\n * @return {!Object<string, !goog.debug.Logger>} Map of logger names to logger\n *     objects.\n */\ngoog.debug.LogManager.getLoggers = function() {\n  return goog.debug.LogManager.loggers_;\n};\n\n\n/**\n * Returns the root of the logger tree namespace, the logger with the empty\n * string as its name.\n *\n * @return {!goog.debug.Logger} The root logger.\n */\ngoog.debug.LogManager.getRoot = function() {\n  goog.debug.LogManager.initialize();\n  return /** @type {!goog.debug.Logger} */ (goog.debug.LogManager.rootLogger_);\n};\n\n\n/**\n * Finds a named logger.\n *\n * @param {string} name A name for the logger. This should be a dot-separated\n * name and should normally be based on the package name or class name of the\n * subsystem, such as goog.net.BrowserChannel.\n * @return {!goog.debug.Logger} The named logger.\n */\ngoog.debug.LogManager.getLogger = function(name) {\n  goog.debug.LogManager.initialize();\n  var ret = goog.debug.LogManager.loggers_[name];\n  return ret || goog.debug.LogManager.createLogger_(name);\n};\n\n\n/**\n * Creates a function that can be passed to goog.debug.catchErrors. The function\n * will log all reported errors using the given logger.\n * @param {goog.debug.Logger=} opt_logger The logger to log the errors to.\n *     Defaults to the root logger.\n * @return {function(Object)} The created function.\n */\ngoog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {\n  return function(info) {\n    var logger = opt_logger || goog.debug.LogManager.getRoot();\n    logger.severe(\n        'Error: ' + info.message + ' (' + info.fileName + ' @ Line: ' +\n        info.line + ')');\n  };\n};\n\n\n/**\n * Creates the named logger. Will also create the parents of the named logger\n * if they don't yet exist.\n * @param {string} name The name of the logger.\n * @return {!goog.debug.Logger} The named logger.\n * @private\n */\ngoog.debug.LogManager.createLogger_ = function(name) {\n  // find parent logger\n  var logger = new goog.debug.Logger(name);\n  if (goog.debug.Logger.ENABLE_HIERARCHY) {\n    var lastDotIndex = name.lastIndexOf('.');\n    var parentName = name.substr(0, lastDotIndex);\n    var leafName = name.substr(lastDotIndex + 1);\n    var parentLogger = goog.debug.LogManager.getLogger(parentName);\n\n    // tell the parent about the child and the child about the parent\n    parentLogger.addChild_(leafName, logger);\n    logger.setParent_(parentLogger);\n  }\n\n  goog.debug.LogManager.loggers_[name] = logger;\n  return logger;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Basic strippable logging definitions.\n * @see http://go/closurelogging\n *\n * @author johnlenz@google.com (John Lenz)\n */\n\ngoog.provide('goog.log');\ngoog.provide('goog.log.Level');\ngoog.provide('goog.log.LogRecord');\ngoog.provide('goog.log.Logger');\n\ngoog.require('goog.debug');\ngoog.require('goog.debug.LogManager');\ngoog.require('goog.debug.LogRecord');\ngoog.require('goog.debug.Logger');\n\n\n/** @define {boolean} Whether logging is enabled. */\ngoog.define('goog.log.ENABLED', goog.debug.LOGGING_ENABLED);\n\n\n/** @const {string} */\ngoog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;\n\n\n\n/**\n * @constructor\n * @final\n */\ngoog.log.Logger = goog.debug.Logger;\n\n\n\n/**\n * @constructor\n * @final\n */\ngoog.log.Level = goog.debug.Logger.Level;\n\n\n\n/**\n * @constructor\n * @final\n */\ngoog.log.LogRecord = goog.debug.LogRecord;\n\n\n/**\n * Finds or creates a logger for a named subsystem. If a logger has already been\n * created with the given name it is returned. Otherwise a new logger is\n * created. If a new logger is created its log level will be configured based\n * on the goog.debug.LogManager configuration and it will configured to also\n * send logging output to its parent's handlers.\n * @see goog.debug.LogManager\n *\n * @param {string} name A name for the logger. This should be a dot-separated\n *     name and should normally be based on the package name or class name of\n *     the subsystem, such as goog.net.BrowserChannel.\n * @param {goog.log.Level=} opt_level If provided, override the\n *     default logging level with the provided level.\n * @return {goog.log.Logger} The named logger or null if logging is disabled.\n */\ngoog.log.getLogger = function(name, opt_level) {\n  if (goog.log.ENABLED) {\n    var logger = goog.debug.LogManager.getLogger(name);\n    if (opt_level && logger) {\n      logger.setLevel(opt_level);\n    }\n    return logger;\n  } else {\n    return null;\n  }\n};\n\n\n// TODO(johnlenz): try to tighten the types to these functions.\n/**\n * Adds a handler to the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {goog.log.Logger} logger\n * @param {Function} handler Handler function to add.\n */\ngoog.log.addHandler = function(logger, handler) {\n  if (goog.log.ENABLED && logger) {\n    logger.addHandler(handler);\n  }\n};\n\n\n/**\n * Removes a handler from the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {goog.log.Logger} logger\n * @param {Function} handler Handler function to remove.\n * @return {boolean} Whether the handler was removed.\n */\ngoog.log.removeHandler = function(logger, handler) {\n  if (goog.log.ENABLED && logger) {\n    return logger.removeHandler(handler);\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * Logs a message. If the logger is currently enabled for the\n * given message level then the given message is forwarded to all the\n * registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.log.Level} level One of the level identifiers.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error|Object=} opt_exception An exception associated with the\n *     message.\n */\ngoog.log.log = function(logger, level, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.log(level, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.SEVERE level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.error = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.severe(msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.WARNING level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.warning = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.warning(msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.INFO level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.info = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.info(msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.Fine level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.fine = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.fine(msg, opt_exception);\n  }\n};\n","// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.net.FetchXmlHttp');\ngoog.provide('goog.net.FetchXmlHttpFactory');\n\ngoog.require('goog.asserts');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.functions');\ngoog.require('goog.log');\ngoog.require('goog.net.XhrLike');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * Factory for creating Xhr objects that uses the native fetch() method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n * Note that this factory is intended for use in Service Worker only.\n * @param {!WorkerGlobalScope} worker The Service Worker global scope.\n * @extends {goog.net.XmlHttpFactory}\n * @struct\n * @constructor\n */\ngoog.net.FetchXmlHttpFactory = function(worker) {\n  goog.net.FetchXmlHttpFactory.base(this, 'constructor');\n\n  /** @private @final {!WorkerGlobalScope} */\n  this.worker_ = worker;\n\n  /** @private {!RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {!RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n};\ngoog.inherits(goog.net.FetchXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.createInstance = function() {\n  var instance = new goog.net.FetchXmlHttp(this.worker_);\n  if (this.credentialsMode_) {\n    instance.setCredentialsMode(this.credentialsMode_);\n  }\n  if (this.cacheMode_) {\n    instance.setCacheMode(this.cacheMode_);\n  }\n  return instance;\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.internalGetOptions =\n    goog.functions.constant({});\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCredentialsMode = function(\n    credentialsMode) {\n  this.credentialsMode_ = credentialsMode;\n};\n\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCacheMode = function(cacheMode) {\n  this.cacheMode_ = cacheMode;\n};\n\n\n\n/**\n * FetchXmlHttp object constructor.\n * @param {!WorkerGlobalScope} worker\n * @extends {goog.events.EventTarget}\n * @implements {goog.net.XhrLike}\n * @constructor\n * @struct\n */\ngoog.net.FetchXmlHttp = function(worker) {\n  goog.net.FetchXmlHttp.base(this, 'constructor');\n\n  /** @private @final {!WorkerGlobalScope} */\n  this.worker_ = worker;\n\n  /** @private {RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n\n  /**\n   * Request state.\n   * @type {goog.net.FetchXmlHttp.RequestState}\n   */\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n\n  /**\n   * HTTP status.\n   * @type {number}\n   */\n  this.status = 0;\n\n  /**\n   * HTTP status string.\n   * @type {string}\n   */\n  this.statusText = '';\n\n  /**\n   * Content of the response.\n   * @type {string}\n   */\n  this.responseText = '';\n\n  /**\n   * Document response entity body.\n   * NOTE: This is always null and not supported by this class.\n   * @final {null}\n   */\n  this.responseXML = null;\n\n  /**\n   * Method to call when the state changes.\n   * @type {?function()}\n   */\n  this.onreadystatechange = null;\n\n  /** @private {!Headers} */\n  this.requestHeaders_ = new Headers();\n\n  /** @private {?Headers} */\n  this.responseHeaders_ = null;\n\n  /**\n   * Request method (GET or POST).\n   * @private {string}\n   */\n  this.method_ = 'GET';\n\n  /**\n   * Request URL.\n   * @private {string}\n   */\n  this.url_ = '';\n\n  /**\n   * Whether the request is in progress.\n   * @private {boolean}\n   */\n  this.inProgress_ = false;\n\n  /** @private @final {?goog.log.Logger} */\n  this.logger_ = goog.log.getLogger('goog.net.FetchXmlHttp');\n\n};\ngoog.inherits(goog.net.FetchXmlHttp, goog.events.EventTarget);\n\n\n/**\n * State of the requests.\n * @enum {number}\n */\ngoog.net.FetchXmlHttp.RequestState = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADER_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.open = function(method, url, opt_async) {\n  goog.asserts.assert(!!opt_async, 'Only async requests are supported.');\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.UNSENT) {\n    this.abort();\n    throw new Error('Error reopening a connection');\n  }\n\n  this.method_ = method;\n  this.url_ = url;\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.OPENED;\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.send = function(opt_data) {\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.OPENED) {\n    this.abort();\n    throw new Error('need to call open() first. ');\n  }\n\n  this.inProgress_ = true;\n  var requestInit = {\n    headers: this.requestHeaders_,\n    method: this.method_,\n    credentials: this.credentialsMode_,\n    cache: this.cacheMode_\n  };\n  if (opt_data) {\n    requestInit['body'] = opt_data;\n  }\n  this.worker_\n      .fetch(new Request(this.url_, /** @type {!RequestInit} */ (requestInit)))\n      .then(\n          this.handleResponse_.bind(this), this.handleSendFailure_.bind(this));\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.abort = function() {\n  this.responseText = '';\n  this.requestHeaders_ = new Headers();\n  this.status = 0;\n  if (((this.readyState >= goog.net.FetchXmlHttp.RequestState.OPENED) &&\n       this.inProgress_) &&\n      (this.readyState != goog.net.FetchXmlHttp.RequestState.DONE)) {\n    this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n    this.inProgress_ = false;\n    this.dispatchCallback_();\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n};\n\n\n/**\n * Handles the fetch response.\n * @param {!Response} response\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponse_ = function(response) {\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  if (!this.responseHeaders_) {\n    this.responseHeaders_ = response.headers;\n    this.readyState = goog.net.FetchXmlHttp.RequestState.HEADER_RECEIVED;\n    this.dispatchCallback_();\n  }\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.LOADING;\n  this.dispatchCallback_();\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  response.text().then(\n      this.handleResponseText_.bind(this, response),\n      this.handleSendFailure_.bind(this));\n};\n\n\n/**\n * Handles the response text.\n * @param {!Response} response\n * @param {string} responseText\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponseText_ = function(\n    response, responseText) {\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.status = response.status;\n  this.statusText = response.statusText;\n  this.responseText = responseText;\n  this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n  this.dispatchCallback_();\n};\n\n\n/**\n * Handles the send failure.\n * @param {*} error\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleSendFailure_ = function(error) {\n  var e = error instanceof Error ? error : Error(error);\n  goog.log.warning(this.logger_, 'Failed to fetch url ' + this.url_, e);\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.setRequestHeader = function(header, value) {\n  this.requestHeaders_.append(header, value);\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getResponseHeader = function(header) {\n  // TODO(b/70808323): This method should return null when the headers are not\n  // present or the specified header is missing. The externs need to be fixed.\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get response header but no headers have been received ' +\n            'for url: ' + this.url_);\n    return '';\n  }\n  return this.responseHeaders_.get(header.toLowerCase()) || '';\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getAllResponseHeaders = function() {\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get all response headers but no headers have been ' +\n            'received for url: ' + this.url_);\n    return '';\n  }\n  var lines = [];\n  var iter = this.responseHeaders_.entries();\n  var entry = iter.next();\n  while (!entry.done) {\n    var pair = entry.value;\n    lines.push(pair[0] + ': ' + pair[1]);\n    entry = iter.next();\n  }\n  return lines.join('\\r\\n');\n};\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCredentialsMode = function(credentialsMode) {\n  this.credentialsMode_ = credentialsMode;\n};\n\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCacheMode = function(cacheMode) {\n  this.cacheMode_ = cacheMode;\n};\n\n\n/**\n * Dispatches the callback, if the callback attribute is defined.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.dispatchCallback_ = function() {\n  if (this.onreadystatechange) {\n    this.onreadystatechange.call(this);\n  }\n};\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for creating functions. Loosely inspired by the\n * java classes: http://goo.gl/GM0Hmu and http://goo.gl/6k7nI8.\n *\n * @author nicksantos@google.com (Nick Santos)\n */\n\n\ngoog.provide('goog.functions');\n\n\n/**\n * Creates a function that always returns the same value.\n * @param {T} retValue The value to return.\n * @return {function():T} The new function.\n * @template T\n */\ngoog.functions.constant = function(retValue) {\n  return function() { return retValue; };\n};\n\n\n/**\n * Always returns false.\n * @type {function(...): boolean}\n */\ngoog.functions.FALSE = goog.functions.constant(false);\n\n\n/**\n * Always returns true.\n * @type {function(...): boolean}\n */\ngoog.functions.TRUE = goog.functions.constant(true);\n\n\n/**\n * Always returns NULL.\n * @type {function(...): null}\n */\ngoog.functions.NULL = goog.functions.constant(null);\n\n\n/**\n * A simple function that returns the first argument of whatever is passed\n * into it.\n * @param {T=} opt_returnValue The single value that will be returned.\n * @param {...*} var_args Optional trailing arguments. These are ignored.\n * @return {T} The first argument passed in, or undefined if nothing was passed.\n * @template T\n */\ngoog.functions.identity = function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\n\n\n/**\n * Creates a function that always throws an error with the given message.\n * @param {string} message The error message.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.error = function(message) {\n  return function() {\n    throw new Error(message);\n  };\n};\n\n\n/**\n * Creates a function that throws the given object.\n * @param {*} err An object to be thrown.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.fail = function(err) {\n  return function() { throw err; };\n};\n\n\n/**\n * Given a function, create a function that keeps opt_numArgs arguments and\n * silently discards all additional arguments.\n * @param {Function} f The original function.\n * @param {number=} opt_numArgs The number of arguments to keep. Defaults to 0.\n * @return {!Function} A version of f that only keeps the first opt_numArgs\n *     arguments.\n */\ngoog.functions.lock = function(f, opt_numArgs) {\n  opt_numArgs = opt_numArgs || 0;\n  return function() {\n    var self = /** @type {*} */ (this);\n    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));\n  };\n};\n\n\n/**\n * Creates a function that returns its nth argument.\n * @param {number} n The position of the return argument.\n * @return {!Function} A new function.\n */\ngoog.functions.nth = function(n) {\n  return function() { return arguments[n]; };\n};\n\n\n/**\n * Like goog.partial(), except that arguments are added after arguments to the\n * returned function.\n *\n * Usage:\n * function f(arg1, arg2, arg3, arg4) { ... }\n * var g = goog.functions.partialRight(f, arg3, arg4);\n * g(arg1, arg2);\n *\n * @param {!Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn\n *     at the end.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.functions.partialRight = function(fn, var_args) {\n  var rightArgs = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    var self = /** @type {*} */ (this);\n    var newArgs = Array.prototype.slice.call(arguments);\n    newArgs.push.apply(newArgs, rightArgs);\n    return fn.apply(self, newArgs);\n  };\n};\n\n\n/**\n * Given a function, create a new function that swallows its return value\n * and replaces it with a new one.\n * @param {Function} f A function.\n * @param {T} retValue A new return value.\n * @return {function(...?):T} A new function.\n * @template T\n */\ngoog.functions.withReturnValue = function(f, retValue) {\n  return goog.functions.sequence(f, goog.functions.constant(retValue));\n};\n\n\n/**\n * Creates a function that returns whether its argument equals the given value.\n *\n * Example:\n * var key = goog.object.findKey(obj, goog.functions.equalTo('needle'));\n *\n * @param {*} value The value to compare to.\n * @param {boolean=} opt_useLooseComparison Whether to use a loose (==)\n *     comparison rather than a strict (===) one. Defaults to false.\n * @return {function(*):boolean} The new function.\n */\ngoog.functions.equalTo = function(value, opt_useLooseComparison) {\n  return function(other) {\n    return opt_useLooseComparison ? (value == other) : (value === other);\n  };\n};\n\n\n/**\n * Creates the composition of the functions passed in.\n * For example, (goog.functions.compose(f, g))(a) is equivalent to f(g(a)).\n * @param {function(...?):T} fn The final function.\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):T} The composition of all inputs.\n * @template T\n */\ngoog.functions.compose = function(fn, var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    var result;\n    if (length) {\n      result = functions[length - 1].apply(self, arguments);\n    }\n\n    for (var i = length - 2; i >= 0; i--) {\n      result = functions[i].call(self, result);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that calls the functions passed in in sequence, and\n * returns the value of the last function. For example,\n * (goog.functions.sequence(f, g))(x) is equivalent to f(x),g(x).\n * @param {...Function} var_args A list of functions.\n * @return {!Function} A function that calls all inputs in sequence.\n */\ngoog.functions.sequence = function(var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    var result;\n    for (var i = 0; i < length; i++) {\n      result = functions[i].apply(self, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that returns true if each of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns false.\n * For example, (goog.functions.and(f, g))(x) is equivalent to f(x) && g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ANDs its component\n *      functions.\n */\ngoog.functions.and = function(var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    for (var i = 0; i < length; i++) {\n      if (!functions[i].apply(self, arguments)) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\n\n\n/**\n * Creates a function that returns true if any of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns true.\n * For example, (goog.functions.or(f, g))(x) is equivalent to f(x) || g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ORs its component\n *    functions.\n */\ngoog.functions.or = function(var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    for (var i = 0; i < length; i++) {\n      if (functions[i].apply(self, arguments)) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\n\n/**\n * Creates a function that returns the Boolean opposite of a provided function.\n * For example, (goog.functions.not(f))(x) is equivalent to !f(x).\n * @param {!Function} f The original function.\n * @return {function(...?):boolean} A function that delegates to f and returns\n * opposite.\n */\ngoog.functions.not = function(f) {\n  return function() {\n    var self = /** @type {*} */ (this);\n    return !f.apply(self, arguments);\n  };\n};\n\n\n/**\n * Generic factory function to construct an object given the constructor\n * and the arguments. Intended to be bound to create object factories.\n *\n * Example:\n *\n * var factory = goog.partial(goog.functions.create, Class);\n *\n * @param {function(new:T, ...)} constructor The constructor for the Object.\n * @param {...*} var_args The arguments to be passed to the constructor.\n * @return {T} A new instance of the class given in `constructor`.\n * @template T\n */\ngoog.functions.create = function(constructor, var_args) {\n  /**\n   * @constructor\n   * @final\n   */\n  var temp = function() {};\n  temp.prototype = constructor.prototype;\n\n  // obj will have constructor's prototype in its chain and\n  // 'obj instanceof constructor' will be true.\n  var obj = new temp();\n\n  // obj is initialized by constructor.\n  // arguments is only array-like so lacks shift(), but can be used with\n  // the Array prototype function.\n  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));\n  return obj;\n};\n\n\n/**\n * @define {boolean} Whether the return value cache should be used.\n *    This should only be used to disable caches when testing.\n */\ngoog.define('goog.functions.CACHE_RETURN_VALUE', true);\n\n\n/**\n * Gives a wrapper function that caches the return value of a parameterless\n * function when first called.\n *\n * When called for the first time, the given function is called and its\n * return value is cached (thus this is only appropriate for idempotent\n * functions).  Subsequent calls will return the cached return value. This\n * allows the evaluation of expensive functions to be delayed until first used.\n *\n * To cache the return values of functions with parameters, see goog.memoize.\n *\n * @param {function():T} fn A function to lazily evaluate.\n * @return {function():T} A wrapped version the function.\n * @template T\n */\ngoog.functions.cacheReturnValue = function(fn) {\n  var called = false;\n  var value;\n\n  return function() {\n    if (!goog.functions.CACHE_RETURN_VALUE) {\n      return fn();\n    }\n\n    if (!called) {\n      value = fn();\n      called = true;\n    }\n\n    return value;\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once. All\n * additional calls are no-ops.\n *\n * This is particularly useful for initialization functions\n * that should be called, at most, once.\n *\n * @param {function():*} f Function to call.\n * @return {function():undefined} Wrapped function.\n */\ngoog.functions.once = function(f) {\n  // Keep a reference to the function that we null out when we're done with\n  // it -- that way, the function can be GC'd when we're done with it.\n  var inner = f;\n  return function() {\n    if (inner) {\n      var tmp = inner;\n      inner = null;\n      tmp();\n    }\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the Nth call will go through.\n *\n * This is particularly useful for batching up repeated actions where the\n * last action should win. This can be used, for example, for refreshing an\n * autocomplete pop-up every so often rather than updating with every keystroke,\n * since the final text typed by the user is the one that should produce the\n * final autocomplete results. For more stateful debouncing with support for\n * pausing, resuming, and canceling debounced actions, use\n * `goog.async.Debouncer`.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to debounce. The function will\n *     only be called after the full interval has elapsed since the last call.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.debounce = function(f, interval, opt_scope) {\n  var timeout = 0;\n  return /** @type {function(...?)} */ (function(var_args) {\n    goog.global.clearTimeout(timeout);\n    var args = arguments;\n    timeout = goog.global.setTimeout(function() {\n      f.apply(opt_scope, args);\n    }, interval);\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times in\n * that interval, both the 1st and the Nth calls will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * the last action should win, but you also don't want to wait until the end of\n * the interval before sending a request out, as it leads to a perception of\n * slowness for the user.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to throttle. The function can\n *     only be called once per interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.throttle = function(f, interval, opt_scope) {\n  var timeout = 0;\n  var shouldFire = false;\n  var args = [];\n\n  var handleTimeout = function() {\n    timeout = 0;\n    if (shouldFire) {\n      shouldFire = false;\n      fire();\n    }\n  };\n\n  var fire = function() {\n    timeout = goog.global.setTimeout(handleTimeout, interval);\n    f.apply(opt_scope, args);\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    args = arguments;\n    if (!timeout) {\n      fire();\n    } else {\n      shouldFire = true;\n    }\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the 1st call will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * first request is guaranteed to have all the data required to perform the\n * final action, so there's no need to wait until the end of the interval before\n * sending the request out.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to rate-limit. The function will\n *     only be called once per interval, and ignored for the remainer of the\n *     interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.rateLimit = function(f, interval, opt_scope) {\n  var timeout = 0;\n\n  var handleTimeout = function() {\n    timeout = 0;\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    if (!timeout) {\n      timeout = goog.global.setTimeout(handleTimeout, interval);\n      f.apply(opt_scope, arguments);\n    }\n  });\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Wrapper class for handling XmlHttpRequests.\n *\n * One off requests can be sent through goog.net.XhrIo.send() or an\n * instance can be created to send multiple requests.  Each request uses its\n * own XmlHttpRequest object and handles clearing of the event callback to\n * ensure no leaks.\n *\n * XhrIo is event based, it dispatches events on success, failure, finishing,\n * ready-state change, or progress (download and upload).\n *\n * The ready-state or timeout event fires first, followed by\n * a generic completed event. Then the abort, error, or success event\n * is fired as appropriate. Progress events are fired as they are\n * received. Lastly, the ready event will fire to indicate that the\n * object may be used to make another request.\n *\n * The error event may also be called before completed and\n * ready-state-change if the XmlHttpRequest.open() or .send() methods throw.\n *\n * This class does not support multiple requests, queuing, or prioritization.\n *\n * When progress events are supported by the browser, and progress is\n * enabled via .setProgressEventsEnabled(true), the\n * goog.net.EventType.PROGRESS event will be the re-dispatched browser\n * progress event. Additionally, a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event\n * will be fired for download and upload progress respectively.\n *\n */\n\n\ngoog.provide('goog.net.XhrIo');\ngoog.provide('goog.net.XhrIo.ResponseType');\n\ngoog.require('goog.Timer');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.json.hybrid');\ngoog.require('goog.log');\ngoog.require('goog.net.ErrorCode');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.HttpStatus');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.string');\ngoog.require('goog.structs');\ngoog.require('goog.structs.Map');\ngoog.require('goog.uri.utils');\ngoog.require('goog.userAgent');\n\ngoog.forwardDeclare('goog.Uri');\n\n\n\n/**\n * Basic class for handling XMLHttpRequests.\n * @param {goog.net.XmlHttpFactory=} opt_xmlHttpFactory Factory to use when\n *     creating XMLHttpRequest objects.\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.net.XhrIo = function(opt_xmlHttpFactory) {\n  goog.net.XhrIo.base(this, 'constructor');\n\n  /**\n   * Map of default headers to add to every request, use:\n   * XhrIo.headers.set(name, value)\n   * @type {!goog.structs.Map}\n   */\n  this.headers = new goog.structs.Map();\n\n  /**\n   * Optional XmlHttpFactory\n   * @private {goog.net.XmlHttpFactory}\n   */\n  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;\n\n  /**\n   * Whether XMLHttpRequest is active.  A request is active from the time send()\n   * is called until onReadyStateChange() is complete, or error() or abort()\n   * is called.\n   * @private {boolean}\n   */\n  this.active_ = false;\n\n  /**\n   * The XMLHttpRequest object that is being used for the transfer.\n   * @private {?goog.net.XhrLike.OrNative}\n   */\n  this.xhr_ = null;\n\n  /**\n   * The options to use with the current XMLHttpRequest object.\n   * @private {Object}\n   */\n  this.xhrOptions_ = null;\n\n  /**\n   * Last URL that was requested.\n   * @private {string|goog.Uri}\n   */\n  this.lastUri_ = '';\n\n  /**\n   * Method for the last request.\n   * @private {string}\n   */\n  this.lastMethod_ = '';\n\n  /**\n   * Last error code.\n   * @private {!goog.net.ErrorCode}\n   */\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n\n  /**\n   * Last error message.\n   * @private {Error|string}\n   */\n  this.lastError_ = '';\n\n  /**\n   * Used to ensure that we don't dispatch an multiple ERROR events. This can\n   * happen in IE when it does a synchronous load and one error is handled in\n   * the ready statte change and one is handled due to send() throwing an\n   * exception.\n   * @private {boolean}\n   */\n  this.errorDispatched_ = false;\n\n  /**\n   * Used to make sure we don't fire the complete event from inside a send call.\n   * @private {boolean}\n   */\n  this.inSend_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.open.\n   * @private {boolean}\n   */\n  this.inOpen_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.abort.\n   * @private {boolean}\n   */\n  this.inAbort_ = false;\n\n  /**\n   * Number of milliseconds after which an incomplete request will be aborted\n   * and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no timeout\n   * is set.\n   * @private {number}\n   */\n  this.timeoutInterval_ = 0;\n\n  /**\n   * Timer to track request timeout.\n   * @private {?number}\n   */\n  this.timeoutId_ = null;\n\n  /**\n   * The requested type for the response. The empty string means use the default\n   * XHR behavior.\n   * @private {goog.net.XhrIo.ResponseType}\n   */\n  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;\n\n  /**\n   * Whether a \"credentialed\" request is to be sent (one that is aware of\n   * cookies and authentication). This is applicable only for cross-domain\n   * requests and more recent browsers that support this part of the HTTP Access\n   * Control standard.\n   *\n   * @see http://www.w3.org/TR/XMLHttpRequest/#the-withcredentials-attribute\n   *\n   * @private {boolean}\n   */\n  this.withCredentials_ = false;\n\n  /**\n   * Whether progress events are enabled for this request. This is\n   * disabled by default because setting a progress event handler\n   * causes pre-flight OPTIONS requests to be sent for CORS requests,\n   * even in cases where a pre-flight request would not otherwise be\n   * sent.\n   *\n   * @see http://xhr.spec.whatwg.org/#security-considerations\n   *\n   * Note that this can cause problems for Firefox 22 and below, as an\n   * older \"LSProgressEvent\" will be dispatched by the browser. That\n   * progress event is no longer supported, and can lead to failures,\n   * including throwing exceptions.\n   *\n   * @see http://bugzilla.mozilla.org/show_bug.cgi?id=845631\n   * @see b/23469793\n   *\n   * @private {boolean}\n   */\n  this.progressEventsEnabled_ = false;\n\n  /**\n   * True if we can use XMLHttpRequest's timeout directly.\n   * @private {boolean}\n   */\n  this.useXhr2Timeout_ = false;\n};\ngoog.inherits(goog.net.XhrIo, goog.events.EventTarget);\n\n\n/**\n * Response types that may be requested for XMLHttpRequests.\n * @enum {string}\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-responsetype-attribute\n */\ngoog.net.XhrIo.ResponseType = {\n  DEFAULT: '',\n  TEXT: 'text',\n  DOCUMENT: 'document',\n  // Not supported as of Chrome 10.0.612.1 dev\n  BLOB: 'blob',\n  ARRAY_BUFFER: 'arraybuffer'\n};\n\n\n/**\n * A reference to the XhrIo logger\n * @private {?goog.log.Logger}\n * @const\n */\ngoog.net.XhrIo.prototype.logger_ = goog.log.getLogger('goog.net.XhrIo');\n\n\n/**\n * The Content-Type HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TYPE_HEADER = 'Content-Type';\n\n\n/**\n * The Content-Transfer-Encoding HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\n\n\n/**\n * The pattern matching the 'http' and 'https' URI schemes\n * @type {!RegExp}\n */\ngoog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;\n\n\n/**\n * The methods that typically come along with form data.  We set different\n * headers depending on whether the HTTP action is one of these.\n * @type {!Array<string>}\n */\ngoog.net.XhrIo.METHODS_WITH_FORM_DATA = ['POST', 'PUT'];\n\n\n/**\n * The Content-Type HTTP header value for a url-encoded form\n * @type {string}\n */\ngoog.net.XhrIo.FORM_CONTENT_TYPE =\n    'application/x-www-form-urlencoded;charset=utf-8';\n\n\n/**\n * The XMLHttpRequest Level two timeout delay ms property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_TIMEOUT_ = 'timeout';\n\n\n/**\n * The XMLHttpRequest Level two ontimeout handler property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_ON_TIMEOUT_ = 'ontimeout';\n\n\n/**\n * All non-disposed instances of goog.net.XhrIo created\n * by {@link goog.net.XhrIo.send} are in this Array.\n * @see goog.net.XhrIo.cleanup\n * @private {!Array<!goog.net.XhrIo>}\n */\ngoog.net.XhrIo.sendInstances_ = [];\n\n\n/**\n * Static send that creates a short lived instance of XhrIo to send the\n * request.\n * @see goog.net.XhrIo.cleanup\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {?function(this:goog.net.XhrIo, ?)=} opt_callback Callback function\n *     for when request is complete.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {Object|goog.structs.Map=} opt_headers Map of headers to add to the\n *     request.\n * @param {number=} opt_timeoutInterval Number of milliseconds after which an\n *     incomplete request will be aborted; 0 means no timeout is set.\n * @param {boolean=} opt_withCredentials Whether to send credentials with the\n *     request. Default to false. See {@link goog.net.XhrIo#setWithCredentials}.\n * @return {!goog.net.XhrIo} The sent XhrIo.\n */\ngoog.net.XhrIo.send = function(\n    url, opt_callback, opt_method, opt_content, opt_headers,\n    opt_timeoutInterval, opt_withCredentials) {\n  var x = new goog.net.XhrIo();\n  goog.net.XhrIo.sendInstances_.push(x);\n  if (opt_callback) {\n    x.listen(goog.net.EventType.COMPLETE, opt_callback);\n  }\n  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);\n  if (opt_timeoutInterval) {\n    x.setTimeoutInterval(opt_timeoutInterval);\n  }\n  if (opt_withCredentials) {\n    x.setWithCredentials(opt_withCredentials);\n  }\n  x.send(url, opt_method, opt_content, opt_headers);\n  return x;\n};\n\n\n/**\n * Disposes all non-disposed instances of goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send}.\n * {@link goog.net.XhrIo.send} cleans up the goog.net.XhrIo instance\n * it creates when the request completes or fails.  However, if\n * the request never completes, then the goog.net.XhrIo is not disposed.\n * This can occur if the window is unloaded before the request completes.\n * We could have {@link goog.net.XhrIo.send} return the goog.net.XhrIo\n * it creates and make the client of {@link goog.net.XhrIo.send} be\n * responsible for disposing it in this case.  However, this makes things\n * significantly more complicated for the client, and the whole point\n * of {@link goog.net.XhrIo.send} is that it's simple and easy to use.\n * Clients of {@link goog.net.XhrIo.send} should call\n * {@link goog.net.XhrIo.cleanup} when doing final\n * cleanup on window unload.\n */\ngoog.net.XhrIo.cleanup = function() {\n  var instances = goog.net.XhrIo.sendInstances_;\n  while (instances.length) {\n    instances.pop().dispose();\n  }\n};\n\n\n/**\n * Installs exception protection for all entry point introduced by\n * goog.net.XhrIo instances which are not protected by\n * {@link goog.debug.ErrorHandler#protectWindowSetTimeout},\n * {@link goog.debug.ErrorHandler#protectWindowSetInterval}, or\n * {@link goog.events.protectBrowserEventEntryPoint}.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point(s).\n */\ngoog.net.XhrIo.protectEntryPoints = function(errorHandler) {\n  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n      errorHandler.protectEntryPoint(\n          goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n};\n\n\n/**\n * Disposes of the specified goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send} and removes it from\n * {@link goog.net.XhrIo.pendingStaticSendInstances_}.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanupSend_ = function() {\n  this.dispose();\n  goog.array.remove(goog.net.XhrIo.sendInstances_, this);\n};\n\n\n/**\n * Returns the number of milliseconds after which an incomplete request will be\n * aborted, or 0 if no timeout is set.\n * @return {number} Timeout interval in milliseconds.\n */\ngoog.net.XhrIo.prototype.getTimeoutInterval = function() {\n  return this.timeoutInterval_;\n};\n\n\n/**\n * Sets the number of milliseconds after which an incomplete request will be\n * aborted and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no\n * timeout is set.\n * @param {number} ms Timeout interval in milliseconds; 0 means none.\n */\ngoog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {\n  this.timeoutInterval_ = Math.max(0, ms);\n};\n\n\n/**\n * Sets the desired type for the response. At time of writing, this is only\n * supported in very recent versions of WebKit (10.0.612.1 dev and later).\n *\n * If this is used, the response may only be accessed via {@link #getResponse}.\n *\n * @param {goog.net.XhrIo.ResponseType} type The desired type for the response.\n */\ngoog.net.XhrIo.prototype.setResponseType = function(type) {\n  this.responseType_ = type;\n};\n\n\n/**\n * Gets the desired type for the response.\n * @return {goog.net.XhrIo.ResponseType} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getResponseType = function() {\n  return this.responseType_;\n};\n\n\n/**\n * Sets whether a \"credentialed\" request that is aware of cookie and\n * authentication information should be made. This option is only supported by\n * browsers that support HTTP Access Control. As of this writing, this option\n * is not supported in IE.\n *\n * @param {boolean} withCredentials Whether this should be a \"credentialed\"\n *     request.\n */\ngoog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {\n  this.withCredentials_ = withCredentials;\n};\n\n\n/**\n * Gets whether a \"credentialed\" request is to be sent.\n * @return {boolean} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getWithCredentials = function() {\n  return this.withCredentials_;\n};\n\n\n/**\n * Sets whether progress events are enabled for this request. Note\n * that progress events require pre-flight OPTIONS request handling\n * for CORS requests, and may cause trouble with older browsers. See\n * progressEventsEnabled_ for details.\n * @param {boolean} enabled Whether progress events should be enabled.\n */\ngoog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {\n  this.progressEventsEnabled_ = enabled;\n};\n\n\n/**\n * Gets whether progress events are enabled.\n * @return {boolean} Whether progress events are enabled for this request.\n */\ngoog.net.XhrIo.prototype.getProgressEventsEnabled = function() {\n  return this.progressEventsEnabled_;\n};\n\n\n/**\n * Instance send that actually uses XMLHttpRequest to make a server call.\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {Object|goog.structs.Map=} opt_headers Map of headers to add to the\n *     request.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters for opt_headers.\n */\ngoog.net.XhrIo.prototype.send = function(\n    url, opt_method, opt_content, opt_headers) {\n  if (this.xhr_) {\n    throw new Error(\n        '[goog.net.XhrIo] Object is active with another request=' +\n        this.lastUri_ + '; newUri=' + url);\n  }\n\n  var method = opt_method ? opt_method.toUpperCase() : 'GET';\n\n  this.lastUri_ = url;\n  this.lastError_ = '';\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n  this.lastMethod_ = method;\n  this.errorDispatched_ = false;\n  this.active_ = true;\n\n  // Use the factory to create the XHR object and options\n  this.xhr_ = this.createXhr();\n  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() :\n                                            goog.net.XmlHttp.getOptions();\n\n  // Set up the onreadystatechange callback\n  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);\n\n  // Set up upload/download progress events, if progress events are supported.\n  if (this.getProgressEventsEnabled() && 'onprogress' in this.xhr_) {\n    this.xhr_.onprogress =\n        goog.bind(function(e) { this.onProgressHandler_(e, true); }, this);\n    if (this.xhr_.upload) {\n      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);\n    }\n  }\n\n  /**\n   * Try to open the XMLHttpRequest (always async), if an error occurs here it\n   * is generally permission denied\n   */\n  try {\n    goog.log.fine(this.logger_, this.formatMsg_('Opening Xhr'));\n    this.inOpen_ = true;\n    this.xhr_.open(method, String(url), true);  // Always async!\n    this.inOpen_ = false;\n  } catch (err) {\n    goog.log.fine(\n        this.logger_, this.formatMsg_('Error opening Xhr: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n    return;\n  }\n\n  // We can't use null since this won't allow requests with form data to have a\n  // content length specified which will cause some proxies to return a 411\n  // error.\n  var content = opt_content || '';\n\n  var headers = this.headers.clone();\n\n  // Add headers specific to this request\n  if (opt_headers) {\n    goog.structs.forEach(\n        opt_headers, function(value, key) { headers.set(key, value); });\n  }\n\n  // Find whether a content type header is set, ignoring case.\n  // HTTP header names are case-insensitive.  See:\n  // http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\n  var contentTypeKey =\n      goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);\n\n  var contentIsFormData =\n      (goog.global['FormData'] && (content instanceof goog.global['FormData']));\n  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) &&\n      !contentTypeKey && !contentIsFormData) {\n    // For requests typically with form data, default to the url-encoded form\n    // content type unless this is a FormData request.  For FormData,\n    // the browser will automatically add a multipart/form-data content type\n    // with an appropriate multipart boundary.\n    headers.set(\n        goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);\n  }\n\n  // Add the headers to the Xhr object\n  headers.forEach(function(value, key) {\n    this.xhr_.setRequestHeader(key, value);\n  }, this);\n\n  if (this.responseType_) {\n    this.xhr_.responseType = this.responseType_;\n  }\n  // Set xhr_.withCredentials only when the value is different, or else in\n  // synchronous XMLHtppRequest.open Firefox will throw an exception.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=736340\n  if ('withCredentials' in this.xhr_ &&\n      this.xhr_.withCredentials !== this.withCredentials_) {\n    this.xhr_.withCredentials = this.withCredentials_;\n  }\n\n  /**\n   * Try to send the request, or other wise report an error (404 not found).\n   */\n  try {\n    this.cleanUpTimeoutTimer_();  // Paranoid, should never be running.\n    if (this.timeoutInterval_ > 0) {\n      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);\n      goog.log.fine(\n          this.logger_, this.formatMsg_(\n                            'Will abort after ' + this.timeoutInterval_ +\n                            'ms if incomplete, xhr2 ' + this.useXhr2Timeout_));\n      if (this.useXhr2Timeout_) {\n        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;\n        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] =\n            goog.bind(this.timeout_, this);\n      } else {\n        this.timeoutId_ =\n            goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);\n      }\n    }\n    goog.log.fine(this.logger_, this.formatMsg_('Sending request'));\n    this.inSend_ = true;\n    this.xhr_.send(content);\n    this.inSend_ = false;\n\n  } catch (err) {\n    goog.log.fine(this.logger_, this.formatMsg_('Send error: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n  }\n};\n\n\n/**\n * Determines if the argument is an XMLHttpRequest that supports the level 2\n * timeout value and event.\n *\n * Currently, FF 21.0 OS X has the fields but won't actually call the timeout\n * handler.  Perhaps the confusion in the bug referenced below hasn't\n * entirely been resolved.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=525816\n *\n * @param {!goog.net.XhrLike.OrNative} xhr The request.\n * @return {boolean} True if the request supports level 2 timeout.\n * @private\n */\ngoog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {\n  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) &&\n      goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) &&\n      goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);\n};\n\n\n/**\n * @param {string} header An HTTP header key.\n * @return {boolean} Whether the key is a content type header (ignoring\n *     case.\n * @private\n */\ngoog.net.XhrIo.isContentTypeHeader_ = function(header) {\n  return goog.string.caseInsensitiveEquals(\n      goog.net.XhrIo.CONTENT_TYPE_HEADER, header);\n};\n\n\n/**\n * Creates a new XHR object.\n * @return {!goog.net.XhrLike.OrNative} The newly created XHR object.\n * @protected\n */\ngoog.net.XhrIo.prototype.createXhr = function() {\n  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() :\n                                goog.net.XmlHttp();\n};\n\n\n/**\n * The request didn't complete after {@link goog.net.XhrIo#timeoutInterval_}\n * milliseconds; raises a {@link goog.net.EventType.TIMEOUT} event and aborts\n * the request.\n * @private\n */\ngoog.net.XhrIo.prototype.timeout_ = function() {\n  if (typeof goog == 'undefined') {\n    // If goog is undefined then the callback has occurred as the application\n    // is unloading and will error.  Thus we let it silently fail.\n  } else if (this.xhr_) {\n    this.lastError_ =\n        'Timed out after ' + this.timeoutInterval_ + 'ms, aborting';\n    this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;\n    goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));\n    this.dispatchEvent(goog.net.EventType.TIMEOUT);\n    this.abort(goog.net.ErrorCode.TIMEOUT);\n  }\n};\n\n\n/**\n * Something errorred, so inactivate, fire error callback and clean up\n * @param {goog.net.ErrorCode} errorCode The error code.\n * @param {Error} err The error object.\n * @private\n */\ngoog.net.XhrIo.prototype.error_ = function(errorCode, err) {\n  this.active_ = false;\n  if (this.xhr_) {\n    this.inAbort_ = true;\n    this.xhr_.abort();  // Ensures XHR isn't hung (FF)\n    this.inAbort_ = false;\n  }\n  this.lastError_ = err;\n  this.lastErrorCode_ = errorCode;\n  this.dispatchErrors_();\n  this.cleanUpXhr_();\n};\n\n\n/**\n * Dispatches COMPLETE and ERROR in case of an error. This ensures that we do\n * not dispatch multiple error events.\n * @private\n */\ngoog.net.XhrIo.prototype.dispatchErrors_ = function() {\n  if (!this.errorDispatched_) {\n    this.errorDispatched_ = true;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ERROR);\n  }\n};\n\n\n/**\n * Abort the current XMLHttpRequest\n * @param {goog.net.ErrorCode=} opt_failureCode Optional error code to use -\n *     defaults to ABORT.\n */\ngoog.net.XhrIo.prototype.abort = function(opt_failureCode) {\n  if (this.xhr_ && this.active_) {\n    goog.log.fine(this.logger_, this.formatMsg_('Aborting'));\n    this.active_ = false;\n    this.inAbort_ = true;\n    this.xhr_.abort();\n    this.inAbort_ = false;\n    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ABORT);\n    this.cleanUpXhr_();\n  }\n};\n\n\n/**\n * Nullifies all callbacks to reduce risks of leaks.\n * @override\n * @protected\n */\ngoog.net.XhrIo.prototype.disposeInternal = function() {\n  if (this.xhr_) {\n    // We explicitly do not call xhr_.abort() unless active_ is still true.\n    // This is to avoid unnecessarily aborting a successful request when\n    // dispose() is called in a callback triggered by a complete response, but\n    // in which browser cleanup has not yet finished.\n    // (See http://b/issue?id=1684217.)\n    if (this.active_) {\n      this.active_ = false;\n      this.inAbort_ = true;\n      this.xhr_.abort();\n      this.inAbort_ = false;\n    }\n    this.cleanUpXhr_(true);\n  }\n\n  goog.net.XhrIo.base(this, 'disposeInternal');\n};\n\n\n/**\n * Internal handler for the XHR object's readystatechange event.  This method\n * checks the status and the readystate and fires the correct callbacks.\n * If the request has ended, the handlers are cleaned up and the XHR object is\n * nullified.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChange_ = function() {\n  if (this.isDisposed()) {\n    // This method is the target of an untracked goog.Timer.callOnce().\n    return;\n  }\n  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {\n    // Were not being called from within a call to this.xhr_.send\n    // this.xhr_.abort, or this.xhr_.open, so this is an entry point\n    this.onReadyStateChangeEntryPoint_();\n  } else {\n    this.onReadyStateChangeHelper_();\n  }\n};\n\n\n/**\n * Used to protect the onreadystatechange handler entry point.  Necessary\n * as {#onReadyStateChange_} maybe called from within send or abort, this\n * method is only called when {#onReadyStateChange_} is called as an\n * entry point.\n * {@see #protectEntryPoints}\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {\n  this.onReadyStateChangeHelper_();\n};\n\n\n/**\n * Helper for {@link #onReadyStateChange_}.  This is used so that\n * entry point calls to {@link #onReadyStateChange_} can be routed through\n * {@link #onReadyStateChangeEntryPoint_}.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {\n  if (!this.active_) {\n    // can get called inside abort call\n    return;\n  }\n\n  if (typeof goog == 'undefined') {\n    // NOTE(user): If goog is undefined then the callback has occurred as the\n    // application is unloading and will error.  Thus we let it silently fail.\n\n  } else if (\n      this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] &&\n      this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      this.getStatus() == 2) {\n    // NOTE(user): In IE if send() errors on a *local* request the readystate\n    // is still changed to COMPLETE.  We need to ignore it and allow the\n    // try/catch around send() to pick up the error.\n    goog.log.fine(\n        this.logger_,\n        this.formatMsg_('Local request error detected and ignored'));\n\n  } else {\n    // In IE when the response has been cached we sometimes get the callback\n    // from inside the send call and this usually breaks code that assumes that\n    // XhrIo is asynchronous.  If that is the case we delay the callback\n    // using a timer.\n    if (this.inSend_ &&\n        this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {\n      goog.Timer.callOnce(this.onReadyStateChange_, 0, this);\n      return;\n    }\n\n    this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);\n\n    // readyState indicates the transfer has finished\n    if (this.isComplete()) {\n      goog.log.fine(this.logger_, this.formatMsg_('Request complete'));\n\n      this.active_ = false;\n\n      try {\n        // Call the specific callbacks for success or failure. Only call the\n        // success if the status is 200 (HTTP_OK) or 304 (HTTP_CACHED)\n        if (this.isSuccess()) {\n          this.dispatchEvent(goog.net.EventType.COMPLETE);\n          this.dispatchEvent(goog.net.EventType.SUCCESS);\n        } else {\n          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;\n          this.lastError_ =\n              this.getStatusText() + ' [' + this.getStatus() + ']';\n          this.dispatchErrors_();\n        }\n      } finally {\n        this.cleanUpXhr_();\n      }\n    }\n  }\n};\n\n\n/**\n * Internal handler for the XHR object's onprogress event. Fires both a generic\n * PROGRESS event and either a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event to\n * allow specific binding for each XHR progress event.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {boolean=} opt_isDownload Whether the current progress event is from a\n *     download. Used to determine whether DOWNLOAD_PROGRESS or UPLOAD_PROGRESS\n *     event should be dispatched.\n * @private\n */\ngoog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {\n  goog.asserts.assert(\n      e.type === goog.net.EventType.PROGRESS,\n      'goog.net.EventType.PROGRESS is of the same type as raw XHR progress.');\n  this.dispatchEvent(\n      goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));\n  this.dispatchEvent(\n      goog.net.XhrIo.buildProgressEvent_(\n          e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS :\n                              goog.net.EventType.UPLOAD_PROGRESS));\n};\n\n\n/**\n * Creates a representation of the native ProgressEvent. IE doesn't support\n * constructing ProgressEvent via \"new\", and the alternatives (e.g.,\n * ProgressEvent.initProgressEvent) are non-standard or deprecated.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {!goog.net.EventType} eventType The type of the event.\n * @return {!ProgressEvent} The progress event.\n * @private\n */\ngoog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {\n  return /** @type {!ProgressEvent} */ ({\n    type: eventType,\n    lengthComputable: e.lengthComputable,\n    loaded: e.loaded,\n    total: e.total\n  });\n};\n\n\n/**\n * Remove the listener to protect against leaks, and nullify the XMLHttpRequest\n * object.\n * @param {boolean=} opt_fromDispose If this is from the dispose (don't want to\n *     fire any events).\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {\n  if (this.xhr_) {\n    // Cancel any pending timeout event handler.\n    this.cleanUpTimeoutTimer_();\n\n    // Save reference so we can mark it as closed after the READY event.  The\n    // READY event may trigger another request, thus we must nullify this.xhr_\n    var xhr = this.xhr_;\n    var clearedOnReadyStateChange =\n        this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ?\n        goog.nullFunction :\n        null;\n    this.xhr_ = null;\n    this.xhrOptions_ = null;\n\n    if (!opt_fromDispose) {\n      this.dispatchEvent(goog.net.EventType.READY);\n    }\n\n    try {\n      // NOTE(user): Not nullifying in FireFox can still leak if the callbacks\n      // are defined in the same scope as the instance of XhrIo. But, IE doesn't\n      // allow you to set the onreadystatechange to NULL so nullFunction is\n      // used.\n      xhr.onreadystatechange = clearedOnReadyStateChange;\n    } catch (e) {\n      // This seems to occur with a Gears HTTP request. Delayed the setting of\n      // this onreadystatechange until after READY is sent out and catching the\n      // error to see if we can track down the problem.\n      goog.log.error(\n          this.logger_,\n          'Problem encountered resetting onreadystatechange: ' + e.message);\n    }\n  }\n};\n\n\n/**\n * Make sure the timeout timer isn't running.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {\n  if (this.xhr_ && this.useXhr2Timeout_) {\n    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;\n  }\n  if (this.timeoutId_) {\n    goog.Timer.clear(this.timeoutId_);\n    this.timeoutId_ = null;\n  }\n};\n\n\n/**\n * @return {boolean} Whether there is an active request.\n */\ngoog.net.XhrIo.prototype.isActive = function() {\n  return !!this.xhr_;\n};\n\n\n/**\n * @return {boolean} Whether the request has completed.\n */\ngoog.net.XhrIo.prototype.isComplete = function() {\n  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;\n};\n\n\n/**\n * @return {boolean} Whether the request completed with a success.\n */\ngoog.net.XhrIo.prototype.isSuccess = function() {\n  var status = this.getStatus();\n  // A zero status code is considered successful for local files.\n  return goog.net.HttpStatus.isSuccess(status) ||\n      status === 0 && !this.isLastUriEffectiveSchemeHttp_();\n};\n\n\n/**\n * @return {boolean} whether the effective scheme of the last URI that was\n *     fetched was 'http' or 'https'.\n * @private\n */\ngoog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {\n  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));\n  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);\n};\n\n\n/**\n * Get the readystate from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {goog.net.XmlHttp.ReadyState} goog.net.XmlHttp.ReadyState.*.\n */\ngoog.net.XhrIo.prototype.getReadyState = function() {\n  return this.xhr_ ?\n      /** @type {goog.net.XmlHttp.ReadyState} */ (this.xhr_.readyState) :\n                                                 goog.net.XmlHttp.ReadyState\n                                                     .UNINITIALIZED;\n};\n\n\n/**\n * Get the status from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {number} Http status.\n */\ngoog.net.XhrIo.prototype.getStatus = function() {\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.status :\n        -1;\n  } catch (e) {\n    return -1;\n  }\n};\n\n\n/**\n * Get the status text from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {string} Status text.\n */\ngoog.net.XhrIo.prototype.getStatusText = function() {\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.statusText :\n        '';\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get status: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the last Uri that was requested\n * @return {string} Last Uri.\n */\ngoog.net.XhrIo.prototype.getLastUri = function() {\n  return String(this.lastUri_);\n};\n\n\n/**\n * Get the response text from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {string} Result from the server, or '' if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseText = function() {\n  try {\n    return this.xhr_ ? this.xhr_.responseText : '';\n  } catch (e) {\n    // http://www.w3.org/TR/XMLHttpRequest/#the-responsetext-attribute\n    // states that responseText should return '' (and responseXML null)\n    // when the state is not LOADING or DONE. Instead, IE can\n    // throw unexpected exceptions, for example when a request is aborted\n    // or no data is available yet.\n    goog.log.fine(this.logger_, 'Can not get responseText: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the response body from the Xhr object. This property is only available\n * in IE since version 7 according to MSDN:\n * http://msdn.microsoft.com/en-us/library/ie/ms534368(v=vs.85).aspx\n * Will only return correct result when called from the context of a callback.\n *\n * One option is to construct a VBArray from the returned object and convert\n * it to a JavaScript array using the toArray method:\n * {@code (new window['VBArray'](xhrIo.getResponseBody())).toArray()}\n * This will result in an array of numbers in the range of [0..255]\n *\n * Another option is to use the VBScript CStr method to convert it into a\n * string as outlined in http://stackoverflow.com/questions/1919972\n *\n * @return {Object} Binary result from the server or null if not available.\n */\ngoog.net.XhrIo.prototype.getResponseBody = function() {\n\n  try {\n    if (this.xhr_ && 'responseBody' in this.xhr_) {\n      return this.xhr_['responseBody'];\n    }\n  } catch (e) {\n    // IE can throw unexpected exceptions, for example when a request is aborted\n    // or no data is yet available.\n    goog.log.fine(this.logger_, 'Can not get responseBody: ' + e.message);\n  }\n  return null;\n};\n\n\n/**\n * Get the response XML from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {Document} The DOM Document representing the XML file, or null\n * if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseXml = function() {\n\n  try {\n    return this.xhr_ ? this.xhr_.responseXML : null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get responseXML: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the response and evaluates it as JSON from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @param {string=} opt_xssiPrefix Optional XSSI prefix string to use for\n *     stripping of the response before parsing. This needs to be set only if\n *     your backend server prepends the same prefix string to the JSON response.\n * @throws Error if the response text is invalid JSON.\n * @return {Object|undefined} JavaScript object.\n */\ngoog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {\n  if (!this.xhr_) {\n    return undefined;\n  }\n\n  var responseText = this.xhr_.responseText;\n  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {\n    responseText = responseText.substring(opt_xssiPrefix.length);\n  }\n\n  return goog.json.hybrid.parse(responseText);\n};\n\n\n/**\n * Get the response as the type specificed by {@link #setResponseType}. At time\n * of writing, this is only directly supported in very recent versions of WebKit\n * (10.0.612.1 dev and later). If the field is not supported directly, we will\n * try to emulate it.\n *\n * Emulating the response means following the rules laid out at\n * http://www.w3.org/TR/XMLHttpRequest/#the-response-attribute\n *\n * On browsers with no support for this (Chrome < 10, Firefox < 4, etc), only\n * response types of DEFAULT or TEXT may be used, and the response returned will\n * be the text response.\n *\n * On browsers with Mozilla's draft support for array buffers (Firefox 4, 5),\n * only response types of DEFAULT, TEXT, and ARRAY_BUFFER may be used, and the\n * response returned will be either the text response or the Mozilla\n * implementation of the array buffer response.\n *\n * On browsers will full support, any valid response type supported by the\n * browser may be used, and the response provided by the browser will be\n * returned.\n *\n * @return {*} The response.\n */\ngoog.net.XhrIo.prototype.getResponse = function() {\n\n  try {\n    if (!this.xhr_) {\n      return null;\n    }\n    if ('response' in this.xhr_) {\n      return this.xhr_.response;\n    }\n    switch (this.responseType_) {\n      case goog.net.XhrIo.ResponseType.DEFAULT:\n      case goog.net.XhrIo.ResponseType.TEXT:\n        return this.xhr_.responseText;\n      // DOCUMENT and BLOB don't need to be handled here because they are\n      // introduced in the same spec that adds the .response field, and would\n      // have been caught above.\n      // ARRAY_BUFFER needs an implementation for Firefox 4, where it was\n      // implemented using a draft spec rather than the final spec.\n      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:\n        if ('mozResponseArrayBuffer' in this.xhr_) {\n          return this.xhr_.mozResponseArrayBuffer;\n        }\n    }\n    // Fell through to a response type that is not supported on this browser.\n    goog.log.error(\n        this.logger_, 'Response type ' + this.responseType_ + ' is not ' +\n            'supported on this browser');\n    return null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get response: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object\n * Will only return correct result when called from the context of a callback\n * and the request has completed\n * @param {string} key The name of the response-header to retrieve.\n * @return {string|undefined} The value of the response-header named key.\n */\ngoog.net.XhrIo.prototype.getResponseHeader = function(key) {\n  if (!this.xhr_ || !this.isComplete()) {\n    return undefined;\n  }\n\n  var value = this.xhr_.getResponseHeader(key);\n  return goog.isNull(value) ? undefined : value;\n};\n\n\n/**\n * Gets the text of all the headers in the response.\n * Will only return correct result when called from the context of a callback\n * and the request has completed.\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllResponseHeaders = function() {\n  // getAllResponseHeaders can return null if no response has been received,\n  // ensure we always return an empty string.\n  return this.xhr_ && this.isComplete() ?\n      (this.xhr_.getAllResponseHeaders() || '') :\n      '';\n};\n\n\n/**\n * Returns all response headers as a key-value map.\n * Multiple values for the same header key can be combined into one,\n * separated by a comma and a space.\n * Note that the native getResponseHeader method for retrieving a single header\n * does a case insensitive match on the header name. This method does not\n * include any case normalization logic, it will just return a key-value\n * representation of the headers.\n * See: http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method\n * @return {!Object<string, string>} An object with the header keys as keys\n *     and header values as values.\n */\ngoog.net.XhrIo.prototype.getResponseHeaders = function() {\n  var headersObject = {};\n  var headersArray = this.getAllResponseHeaders().split('\\r\\n');\n  for (var i = 0; i < headersArray.length; i++) {\n    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {\n      continue;\n    }\n    var keyValue = goog.string.splitLimit(headersArray[i], ': ', 2);\n    if (headersObject[keyValue[0]]) {\n      headersObject[keyValue[0]] += ', ' + keyValue[1];\n    } else {\n      headersObject[keyValue[0]] = keyValue[1];\n    }\n  }\n  return headersObject;\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object.\n * As opposed to {@link #getResponseHeader}, this method does not require that\n * the request has completed.\n * @param {string} key The name of the response-header to retrieve.\n * @return {?string} The value of the response-header, or null if it is\n *     unavailable.\n */\ngoog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {\n  return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;\n};\n\n\n/**\n * Gets the text of all the headers in the response. As opposed to\n * {@link #getAllResponseHeaders}, this method does not require that the request\n * has completed.\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {\n  return this.xhr_ ? this.xhr_.getAllResponseHeaders() : '';\n};\n\n\n/**\n * Get the last error message\n * @return {!goog.net.ErrorCode} Last error code.\n */\ngoog.net.XhrIo.prototype.getLastErrorCode = function() {\n  return this.lastErrorCode_;\n};\n\n\n/**\n * Get the last error message\n * @return {string} Last error message.\n */\ngoog.net.XhrIo.prototype.getLastError = function() {\n  return goog.isString(this.lastError_) ? this.lastError_ :\n                                          String(this.lastError_);\n};\n\n\n/**\n * Adds the last method, status and URI to the message.  This is used to add\n * this information to the logging calls.\n * @param {string} msg The message text that we want to add the extra text to.\n * @return {string} The message with the extra text appended.\n * @private\n */\ngoog.net.XhrIo.prototype.formatMsg_ = function(msg) {\n  return msg + ' [' + this.lastMethod_ + ' ' + this.lastUri_ + ' ' +\n      this.getStatus() + ']';\n};\n\n\n// Register the xhr handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n          transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n    });\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Common events for the network classes.\n */\n\n\ngoog.provide('goog.net.EventType');\n\n\n/**\n * Event names for network events\n * @enum {string}\n */\ngoog.net.EventType = {\n  COMPLETE: 'complete',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  ABORT: 'abort',\n  READY: 'ready',\n  READY_STATE_CHANGE: 'readystatechange',\n  TIMEOUT: 'timeout',\n  INCREMENTAL_DATA: 'incrementaldata',\n  PROGRESS: 'progress',\n  // DOWNLOAD_PROGRESS and UPLOAD_PROGRESS are special events dispatched by\n  // goog.net.XhrIo to allow binding listeners specific to each type of\n  // progress.\n  DOWNLOAD_PROGRESS: 'downloadprogress',\n  UPLOAD_PROGRESS: 'uploadprogress'\n};\n","// Copyright 2007 Bob Ippolito. All Rights Reserved.\n// Modifications Copyright 2009 The Closure Library Authors. All Rights\n// Reserved.\n\n/**\n * @license Portions of this code are from MochiKit, received by\n * The Closure Authors under the MIT license. All other code is Copyright\n * 2005-2009 The Closure Authors. All Rights Reserved.\n */\n\n/**\n * @fileoverview Classes for tracking asynchronous operations and handling the\n * results. The Deferred object here is patterned after the Deferred object in\n * the Twisted python networking framework.\n *\n * See: http://twistedmatrix.com/projects/core/documentation/howto/defer.html\n *\n * Based on the Dojo code which in turn is based on the MochiKit code.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @author brenneman@google.com (Shawn Brenneman)\n */\n\ngoog.provide('goog.async.Deferred');\ngoog.provide('goog.async.Deferred.AlreadyCalledError');\ngoog.provide('goog.async.Deferred.CanceledError');\n\ngoog.require('goog.Promise');\ngoog.require('goog.Thenable');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.debug.Error');\n\n\n\n/**\n * A Deferred represents the result of an asynchronous operation. A Deferred\n * instance has no result when it is created, and is \"fired\" (given an initial\n * result) by calling `callback` or `errback`.\n *\n * Once fired, the result is passed through a sequence of callback functions\n * registered with `addCallback` or `addErrback`. The functions may\n * mutate the result before it is passed to the next function in the sequence.\n *\n * Callbacks and errbacks may be added at any time, including after the Deferred\n * has been \"fired\". If there are no pending actions in the execution sequence\n * of a fired Deferred, any new callback functions will be called with the last\n * computed result. Adding a callback function is the only way to access the\n * result of the Deferred.\n *\n * If a Deferred operation is canceled, an optional user-provided cancellation\n * function is invoked which may perform any special cleanup, followed by firing\n * the Deferred's errback sequence with a `CanceledError`. If the\n * Deferred has already fired, cancellation is ignored.\n *\n * Deferreds may be templated to a specific type they produce using generics\n * with syntax such as:\n *\n *    /** @type {goog.async.Deferred<string>} *\\\n *    var d = new goog.async.Deferred();\n *    // Compiler can infer that foo is a string.\n *    d.addCallback(function(foo) {...});\n *    d.callback('string');  // Checked to be passed a string\n *\n * Since deferreds are often used to produce different values across a chain,\n * the type information is not propagated across chains, but rather only\n * associated with specifically cast objects.\n *\n * @param {Function=} opt_onCancelFunction A function that will be called if the\n *     Deferred is canceled. If provided, this function runs before the\n *     Deferred is fired with a `CanceledError`.\n * @param {Object=} opt_defaultScope The default object context to call\n *     callbacks and errbacks in.\n * @constructor\n * @implements {goog.Thenable<VALUE>}\n * @template VALUE\n */\ngoog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {\n  /**\n   * Entries in the sequence are arrays containing a callback, an errback, and\n   * an optional scope. The callback or errback in an entry may be null.\n   * @type {!Array<!Array>}\n   * @private\n   */\n  this.sequence_ = [];\n\n  /**\n   * Optional function that will be called if the Deferred is canceled.\n   * @type {Function|undefined}\n   * @private\n   */\n  this.onCancelFunction_ = opt_onCancelFunction;\n\n  /**\n   * The default scope to execute callbacks and errbacks in.\n   * @type {Object}\n   * @private\n   */\n  this.defaultScope_ = opt_defaultScope || null;\n\n  /**\n   * Whether the Deferred has been fired.\n   * @type {boolean}\n   * @private\n   */\n  this.fired_ = false;\n\n  /**\n   * Whether the last result in the execution sequence was an error.\n   * @type {boolean}\n   * @private\n   */\n  this.hadError_ = false;\n\n  /**\n   * The current Deferred result, updated as callbacks and errbacks are\n   * executed.\n   * @type {*}\n   * @private\n   */\n  this.result_ = undefined;\n\n  /**\n   * Whether the Deferred is blocked waiting on another Deferred to fire. If a\n   * callback or errback returns a Deferred as a result, the execution sequence\n   * is blocked until that Deferred result becomes available.\n   * @type {boolean}\n   * @private\n   */\n  this.blocked_ = false;\n\n  /**\n   * Whether this Deferred is blocking execution of another Deferred. If this\n   * instance was returned as a result in another Deferred's execution\n   * sequence,that other Deferred becomes blocked until this instance's\n   * execution sequence completes. No additional callbacks may be added to a\n   * Deferred once it is blocking another instance.\n   * @type {boolean}\n   * @private\n   */\n  this.blocking_ = false;\n\n  /**\n   * Whether the Deferred has been canceled without having a custom cancel\n   * function.\n   * @type {boolean}\n   * @private\n   */\n  this.silentlyCanceled_ = false;\n\n  /**\n   * If an error is thrown during Deferred execution with no errback to catch\n   * it, the error is rethrown after a timeout. Reporting the error after a\n   * timeout allows execution to continue in the calling context (empty when\n   * no error is scheduled).\n   * @type {number}\n   * @private\n   */\n  this.unhandledErrorId_ = 0;\n\n  /**\n   * If this Deferred was created by branch(), this will be the \"parent\"\n   * Deferred.\n   * @type {goog.async.Deferred}\n   * @private\n   */\n  this.parent_ = null;\n\n  /**\n   * The number of Deferred objects that have been branched off this one. This\n   * will be decremented whenever a branch is fired or canceled.\n   * @type {number}\n   * @private\n   */\n  this.branches_ = 0;\n\n  if (goog.async.Deferred.LONG_STACK_TRACES) {\n    /**\n     * Holds the stack trace at time of deferred creation if the JS engine\n     * provides the Error.captureStackTrace API.\n     * @private {?string}\n     */\n    this.constructorStack_ = null;\n    if (Error.captureStackTrace) {\n      var target = { stack: '' };\n      Error.captureStackTrace(target, goog.async.Deferred);\n      // Check if Error.captureStackTrace worked. It fails in gjstest.\n      if (typeof target.stack == 'string') {\n        // Remove first line and force stringify to prevent memory leak due to\n        // holding on to actual stack frames.\n        this.constructorStack_ = target.stack.replace(/^[^\\n]*\\n/, '');\n      }\n    }\n  }\n};\n\n\n/**\n * @define {boolean} Whether unhandled errors should always get rethrown to the\n * global scope. Defaults to false.\n */\ngoog.define('goog.async.Deferred.STRICT_ERRORS', false);\n\n\n/**\n * @define {boolean} Whether to attempt to make stack traces long.  Defaults to\n * false.\n */\ngoog.define('goog.async.Deferred.LONG_STACK_TRACES', false);\n\n\n/**\n * Cancels a Deferred that has not yet been fired, or is blocked on another\n * deferred operation. If this Deferred is waiting for a blocking Deferred to\n * fire, the blocking Deferred will also be canceled.\n *\n * If this Deferred was created by calling branch() on a parent Deferred with\n * opt_propagateCancel set to true, the parent may also be canceled. If\n * opt_deepCancel is set, cancel() will be called on the parent (as well as any\n * other ancestors if the parent is also a branch). If one or more branches were\n * created with opt_propagateCancel set to true, the parent will be canceled if\n * cancel() is called on all of those branches.\n *\n * @param {boolean=} opt_deepCancel If true, cancels this Deferred's parent even\n *     if cancel() hasn't been called on some of the parent's branches. Has no\n *     effect on a branch without opt_propagateCancel set to true.\n */\ngoog.async.Deferred.prototype.cancel = function(opt_deepCancel) {\n  if (!this.hasFired()) {\n    if (this.parent_) {\n      // Get rid of the parent reference before potentially running the parent's\n      // canceler function to ensure that this cancellation isn't\n      // double-counted.\n      var parent = this.parent_;\n      delete this.parent_;\n      if (opt_deepCancel) {\n        parent.cancel(opt_deepCancel);\n      } else {\n        parent.branchCancel_();\n      }\n    }\n\n    if (this.onCancelFunction_) {\n      // Call in user-specified scope.\n      this.onCancelFunction_.call(this.defaultScope_, this);\n    } else {\n      this.silentlyCanceled_ = true;\n    }\n    if (!this.hasFired()) {\n      this.errback(new goog.async.Deferred.CanceledError(this));\n    }\n  } else if (this.result_ instanceof goog.async.Deferred) {\n    this.result_.cancel();\n  }\n};\n\n\n/**\n * Handle a single branch being canceled. Once all branches are canceled, this\n * Deferred will be canceled as well.\n *\n * @private\n */\ngoog.async.Deferred.prototype.branchCancel_ = function() {\n  this.branches_--;\n  if (this.branches_ <= 0) {\n    this.cancel();\n  }\n};\n\n\n/**\n * Called after a blocking Deferred fires. Unblocks this Deferred and resumes\n * its execution sequence.\n *\n * @param {boolean} isSuccess Whether the result is a success or an error.\n * @param {*} res The result of the blocking Deferred.\n * @private\n */\ngoog.async.Deferred.prototype.continue_ = function(isSuccess, res) {\n  this.blocked_ = false;\n  this.updateResult_(isSuccess, res);\n};\n\n\n/**\n * Updates the current result based on the success or failure of the last action\n * in the execution sequence.\n *\n * @param {boolean} isSuccess Whether the new result is a success or an error.\n * @param {*} res The result.\n * @private\n */\ngoog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {\n  this.fired_ = true;\n  this.result_ = res;\n  this.hadError_ = !isSuccess;\n  this.fire_();\n};\n\n\n/**\n * Verifies that the Deferred has not yet been fired.\n *\n * @private\n * @throws {Error} If this has already been fired.\n */\ngoog.async.Deferred.prototype.check_ = function() {\n  if (this.hasFired()) {\n    if (!this.silentlyCanceled_) {\n      throw new goog.async.Deferred.AlreadyCalledError(this);\n    }\n    this.silentlyCanceled_ = false;\n  }\n};\n\n\n/**\n * Fire the execution sequence for this Deferred by passing the starting result\n * to the first registered callback.\n * @param {VALUE=} opt_result The starting result.\n */\ngoog.async.Deferred.prototype.callback = function(opt_result) {\n  this.check_();\n  this.assertNotDeferred_(opt_result);\n  this.updateResult_(true /* isSuccess */, opt_result);\n};\n\n\n/**\n * Fire the execution sequence for this Deferred by passing the starting error\n * result to the first registered errback.\n * @param {*=} opt_result The starting error.\n */\ngoog.async.Deferred.prototype.errback = function(opt_result) {\n  this.check_();\n  this.assertNotDeferred_(opt_result);\n  this.makeStackTraceLong_(opt_result);\n  this.updateResult_(false /* isSuccess */, opt_result);\n};\n\n\n/**\n * Attempt to make the error's stack trace be long in that it contains the\n * stack trace from the point where the deferred was created on top of the\n * current stack trace to give additional context.\n * @param {*} error\n * @private\n */\ngoog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {\n  if (!goog.async.Deferred.LONG_STACK_TRACES) {\n    return;\n  }\n  if (this.constructorStack_ && goog.isObject(error) && error.stack &&\n      // Stack looks like it was system generated. See\n      // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n      (/^[^\\n]+(\\n   [^\\n]+)+/).test(error.stack)) {\n    error.stack = error.stack + '\\nDEFERRED OPERATION:\\n' +\n        this.constructorStack_;\n  }\n};\n\n\n/**\n * Asserts that an object is not a Deferred.\n * @param {*} obj The object to test.\n * @throws {Error} Throws an exception if the object is a Deferred.\n * @private\n */\ngoog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {\n  goog.asserts.assert(\n      !(obj instanceof goog.async.Deferred),\n      'An execution sequence may not be initiated with a blocking Deferred.');\n};\n\n\n/**\n * Register a callback function to be called with a successful result. If no\n * value is returned by the callback function, the result value is unchanged. If\n * a new value is returned, it becomes the Deferred result and will be passed to\n * the next callback in the execution sequence.\n *\n * If the function throws an error, the error becomes the new result and will be\n * passed to the next errback in the execution chain.\n *\n * If the function returns a Deferred, the execution sequence will be blocked\n * until that Deferred fires. Its result will be passed to the next callback (or\n * errback if it is an error result) in this Deferred's execution sequence.\n *\n * @param {function(this:T,VALUE):?} cb The function to be called with a\n *     successful result.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @return {!goog.async.Deferred} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {\n  return this.addCallbacks(cb, null, opt_scope);\n};\n\n\n/**\n * Register a callback function to be called with an error result. If no value\n * is returned by the function, the error result is unchanged. If a new error\n * value is returned or thrown, that error becomes the Deferred result and will\n * be passed to the next errback in the execution sequence.\n *\n * If the errback function handles the error by returning a non-error value,\n * that result will be passed to the next normal callback in the sequence.\n *\n * If the function returns a Deferred, the execution sequence will be blocked\n * until that Deferred fires. Its result will be passed to the next callback (or\n * errback if it is an error result) in this Deferred's execution sequence.\n *\n * @param {function(this:T,?):?} eb The function to be called on an\n *     unsuccessful result.\n * @param {T=} opt_scope An optional scope to call the errback in.\n * @return {!goog.async.Deferred<VALUE>} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {\n  return this.addCallbacks(null, eb, opt_scope);\n};\n\n\n/**\n * Registers one function as both a callback and errback.\n *\n * @param {function(this:T,?):?} f The function to be called on any result.\n * @param {T=} opt_scope An optional scope to call the function in.\n * @return {!goog.async.Deferred} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addBoth = function(f, opt_scope) {\n  return this.addCallbacks(f, f, opt_scope);\n};\n\n\n/**\n * Like addBoth, but propagates uncaught exceptions in the errback.\n *\n * @param {function(this:T,?):?} f The function to be called on any result.\n * @param {T=} opt_scope An optional scope to call the function in.\n * @return {!goog.async.Deferred<VALUE>} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addFinally = function(f, opt_scope) {\n  return this.addCallbacks(f, function(err) {\n    var result = f.call(/** @type {?} */ (this), err);\n    if (!goog.isDef(result)) {\n      throw err;\n    }\n    return result;\n  }, opt_scope);\n};\n\n\n/**\n * Registers a callback function and an errback function at the same position\n * in the execution sequence. Only one of these functions will execute,\n * depending on the error state during the execution sequence.\n *\n * NOTE: This is not equivalent to {@code def.addCallback().addErrback()}! If\n * the callback is invoked, the errback will be skipped, and vice versa.\n *\n * @param {?(function(this:T,VALUE):?)} cb The function to be called on a\n *     successful result.\n * @param {?(function(this:T,?):?)} eb The function to be called on an\n *     unsuccessful result.\n * @param {T=} opt_scope An optional scope to call the functions in.\n * @return {!goog.async.Deferred} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {\n  goog.asserts.assert(!this.blocking_, 'Blocking Deferreds can not be re-used');\n  this.sequence_.push([cb, eb, opt_scope]);\n  if (this.hasFired()) {\n    this.fire_();\n  }\n  return this;\n};\n\n\n/**\n * Implements {@see goog.Thenable} for seamless integration with\n * {@see goog.Promise}.\n * Deferred results are mutable and may represent multiple values over\n * their lifetime. Calling `then` on a Deferred returns a Promise\n * with the result of the Deferred at that point in its callback chain.\n * Note that if the Deferred result is never mutated, and only\n * `then` calls are made, the Deferred will behave like a Promise.\n *\n * @override\n */\ngoog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected,\n    opt_context) {\n  var resolve, reject;\n  var promise = new goog.Promise(function(res, rej) {\n    // Copying resolvers to outer scope, so that they are available when the\n    // deferred callback fires (which may be synchronous).\n    resolve = res;\n    reject = rej;\n  });\n  this.addCallbacks(resolve, function(reason) {\n    if (reason instanceof goog.async.Deferred.CanceledError) {\n      promise.cancel();\n    } else {\n      reject(reason);\n    }\n  });\n  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);\n};\ngoog.Thenable.addImplementation(goog.async.Deferred);\n\n\n/**\n * Links another Deferred to the end of this Deferred's execution sequence. The\n * result of this execution sequence will be passed as the starting result for\n * the chained Deferred, invoking either its first callback or errback.\n *\n * @param {!goog.async.Deferred} otherDeferred The Deferred to chain.\n * @return {!goog.async.Deferred} This Deferred.\n */\ngoog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {\n  this.addCallbacks(\n      otherDeferred.callback, otherDeferred.errback, otherDeferred);\n  return this;\n};\n\n\n/**\n * Makes this Deferred wait for another Deferred's execution sequence to\n * complete before continuing.\n *\n * This is equivalent to adding a callback that returns `otherDeferred`,\n * but doesn't prevent additional callbacks from being added to\n * `otherDeferred`.\n *\n * @param {!goog.async.Deferred|!goog.Thenable} otherDeferred The Deferred\n *     to wait for.\n * @return {!goog.async.Deferred} This Deferred.\n */\ngoog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {\n  if (!(otherDeferred instanceof goog.async.Deferred)) {\n    // The Thenable case.\n    return this.addCallback(function() {\n      return otherDeferred;\n    });\n  }\n  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));\n};\n\n\n/**\n * Creates a branch off this Deferred's execution sequence, and returns it as a\n * new Deferred. The branched Deferred's starting result will be shared with the\n * parent at the point of the branch, even if further callbacks are added to the\n * parent.\n *\n * All branches at the same stage in the execution sequence will receive the\n * same starting value.\n *\n * @param {boolean=} opt_propagateCancel If cancel() is called on every child\n *     branch created with opt_propagateCancel, the parent will be canceled as\n *     well.\n * @return {!goog.async.Deferred<VALUE>} A Deferred that will be started with\n *     the computed result from this stage in the execution sequence.\n */\ngoog.async.Deferred.prototype.branch = function(opt_propagateCancel) {\n  var d = new goog.async.Deferred();\n  this.chainDeferred(d);\n  if (opt_propagateCancel) {\n    d.parent_ = this;\n    this.branches_++;\n  }\n  return d;\n};\n\n\n/**\n * @return {boolean} Whether the execution sequence has been started on this\n *     Deferred by invoking `callback` or `errback`.\n */\ngoog.async.Deferred.prototype.hasFired = function() {\n  return this.fired_;\n};\n\n\n/**\n * @param {*} res The latest result in the execution sequence.\n * @return {boolean} Whether the current result is an error that should cause\n *     the next errback to fire. May be overridden by subclasses to handle\n *     special error types.\n * @protected\n */\ngoog.async.Deferred.prototype.isError = function(res) {\n  return res instanceof Error;\n};\n\n\n/**\n * @return {boolean} Whether an errback exists in the remaining sequence.\n * @private\n */\ngoog.async.Deferred.prototype.hasErrback_ = function() {\n  return goog.array.some(this.sequence_, function(sequenceRow) {\n    // The errback is the second element in the array.\n    return goog.isFunction(sequenceRow[1]);\n  });\n};\n\n\n/**\n * Exhausts the execution sequence while a result is available. The result may\n * be modified by callbacks or errbacks, and execution will block if the\n * returned result is an incomplete Deferred.\n *\n * @private\n */\ngoog.async.Deferred.prototype.fire_ = function() {\n  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {\n    // It is possible to add errbacks after the Deferred has fired. If a new\n    // errback is added immediately after the Deferred encountered an unhandled\n    // error, but before that error is rethrown, the error is unscheduled.\n    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);\n    this.unhandledErrorId_ = 0;\n  }\n\n  if (this.parent_) {\n    this.parent_.branches_--;\n    delete this.parent_;\n  }\n\n  var res = this.result_;\n  var unhandledException = false;\n  var isNewlyBlocked = false;\n\n  while (this.sequence_.length && !this.blocked_) {\n    var sequenceEntry = this.sequence_.shift();\n\n    var callback = sequenceEntry[0];\n    var errback = sequenceEntry[1];\n    var scope = sequenceEntry[2];\n\n    var f = this.hadError_ ? errback : callback;\n    if (f) {\n\n      try {\n        var ret = f.call(scope || this.defaultScope_, res);\n\n        // If no result, then use previous result.\n        if (goog.isDef(ret)) {\n          // Bubble up the error as long as the return value hasn't changed.\n          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));\n          this.result_ = res = ret;\n        }\n\n        if (goog.Thenable.isImplementedBy(res) ||\n            (typeof goog.global['Promise'] === 'function' &&\n            res instanceof goog.global['Promise'])) {\n          isNewlyBlocked = true;\n          this.blocked_ = true;\n        }\n\n      } catch (ex) {\n        res = ex;\n        this.hadError_ = true;\n        this.makeStackTraceLong_(res);\n\n        if (!this.hasErrback_()) {\n          // If an error is thrown with no additional errbacks in the queue,\n          // prepare to rethrow the error.\n          unhandledException = true;\n        }\n      }\n    }\n  }\n\n  this.result_ = res;\n\n  if (isNewlyBlocked) {\n    var onCallback = goog.bind(this.continue_, this, true /* isSuccess */);\n    var onErrback = goog.bind(this.continue_, this, false /* isSuccess */);\n\n    if (res instanceof goog.async.Deferred) {\n      res.addCallbacks(onCallback, onErrback);\n      res.blocking_ = true;\n    } else {\n      /** @type {!IThenable} */ (res).then(onCallback, onErrback);\n    }\n  } else if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) &&\n      !(res instanceof goog.async.Deferred.CanceledError)) {\n    this.hadError_ = true;\n    unhandledException = true;\n  }\n\n  if (unhandledException) {\n    // Rethrow the unhandled error after a timeout. Execution will continue, but\n    // the error will be seen by global handlers and the user. The throw will\n    // be canceled if another errback is appended before the timeout executes.\n    // The error's original stack trace is preserved where available.\n    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);\n  }\n};\n\n\n/**\n * Creates a Deferred that has an initial result.\n *\n * @param {*=} opt_result The result.\n * @return {!goog.async.Deferred} The new Deferred.\n */\ngoog.async.Deferred.succeed = function(opt_result) {\n  var d = new goog.async.Deferred();\n  d.callback(opt_result);\n  return d;\n};\n\n\n/**\n * Creates a Deferred that fires when the given promise resolves.\n * Use only during migration to Promises.\n *\n * Note: If the promise resolves to a thenable value (which is not allowed by\n * conforming promise implementations), then the deferred may behave\n * unexpectedly as it tries to wait on it. This should not be a risk when using\n * goog.Promise, goog.async.Deferred, or native Promise objects.\n *\n * @param {!IThenable<T>} promise\n * @return {!goog.async.Deferred<T>} The new Deferred.\n * @template T\n */\ngoog.async.Deferred.fromPromise = function(promise) {\n  var d = new goog.async.Deferred();\n  promise.then(\n      function(value) {\n        d.callback(value);\n      },\n      function(error) {\n        d.errback(error);\n      });\n  return d;\n};\n\n\n/**\n * Creates a Deferred that has an initial error result.\n *\n * @param {*} res The error result.\n * @return {!goog.async.Deferred} The new Deferred.\n */\ngoog.async.Deferred.fail = function(res) {\n  var d = new goog.async.Deferred();\n  d.errback(res);\n  return d;\n};\n\n\n/**\n * Creates a Deferred that has already been canceled.\n *\n * @return {!goog.async.Deferred} The new Deferred.\n */\ngoog.async.Deferred.canceled = function() {\n  var d = new goog.async.Deferred();\n  d.cancel();\n  return d;\n};\n\n\n/**\n * Normalizes values that may or may not be Deferreds.\n *\n * If the input value is a Deferred, the Deferred is branched (so the original\n * execution sequence is not modified) and the input callback added to the new\n * branch. The branch is returned to the caller.\n *\n * If the input value is not a Deferred, the callback will be executed\n * immediately and an already firing Deferred will be returned to the caller.\n *\n * In the following (contrived) example, if <code>isImmediate</code> is true\n * then 3 is alerted immediately, otherwise 6 is alerted after a 2-second delay.\n *\n * <pre>\n * var value;\n * if (isImmediate) {\n *   value = 3;\n * } else {\n *   value = new goog.async.Deferred();\n *   setTimeout(function() { value.callback(6); }, 2000);\n * }\n *\n * var d = goog.async.Deferred.when(value, alert);\n * </pre>\n *\n * @param {*} value Deferred or normal value to pass to the callback.\n * @param {function(this:T, ?):?} callback The callback to execute.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @return {!goog.async.Deferred} A new Deferred that will call the input\n *     callback with the input value.\n * @template T\n */\ngoog.async.Deferred.when = function(value, callback, opt_scope) {\n  if (value instanceof goog.async.Deferred) {\n    return value.branch(true).addCallback(callback, opt_scope);\n  } else {\n    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);\n  }\n};\n\n\n\n/**\n * An error sub class that is used when a Deferred has already been called.\n * @param {!goog.async.Deferred} deferred The Deferred.\n *\n * @constructor\n * @extends {goog.debug.Error}\n */\ngoog.async.Deferred.AlreadyCalledError = function(deferred) {\n  goog.debug.Error.call(this);\n\n  /**\n   * The Deferred that raised this error.\n   * @type {goog.async.Deferred}\n   */\n  this.deferred = deferred;\n};\ngoog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);\n\n\n/** @override */\ngoog.async.Deferred.AlreadyCalledError.prototype.message =\n    'Deferred has already fired';\n\n\n/** @override */\ngoog.async.Deferred.AlreadyCalledError.prototype.name = 'AlreadyCalledError';\n\n\n\n/**\n * An error sub class that is used when a Deferred is canceled.\n *\n * @param {!goog.async.Deferred} deferred The Deferred object.\n * @constructor\n * @extends {goog.debug.Error}\n */\ngoog.async.Deferred.CanceledError = function(deferred) {\n  goog.debug.Error.call(this);\n\n  /**\n   * The Deferred that raised this error.\n   * @type {goog.async.Deferred}\n   */\n  this.deferred = deferred;\n};\ngoog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);\n\n\n/** @override */\ngoog.async.Deferred.CanceledError.prototype.message = 'Deferred was canceled';\n\n\n/** @override */\ngoog.async.Deferred.CanceledError.prototype.name = 'CanceledError';\n\n\n\n/**\n * Wrapper around errors that are scheduled to be thrown by failing deferreds\n * after a timeout.\n *\n * @param {*} error Error from a failing deferred.\n * @constructor\n * @final\n * @private\n * @struct\n */\ngoog.async.Deferred.Error_ = function(error) {\n  /** @const @private {number} */\n  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);\n\n  /** @const @private {*} */\n  this.error_ = error;\n};\n\n\n/**\n * Actually throws the error and removes it from the list of pending\n * deferred errors.\n */\ngoog.async.Deferred.Error_.prototype.throwError = function() {\n  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_],\n      'Cannot throw an error that is not scheduled.');\n  delete goog.async.Deferred.errorMap_[this.id_];\n  throw this.error_;\n};\n\n\n/**\n * Resets the error throw timer.\n */\ngoog.async.Deferred.Error_.prototype.resetTimer = function() {\n  goog.global.clearTimeout(this.id_);\n};\n\n\n/**\n * Map of unhandled errors scheduled to be rethrown in a future timestep.\n * @private {!Object<(number|string), goog.async.Deferred.Error_>}\n */\ngoog.async.Deferred.errorMap_ = {};\n\n\n/**\n * Schedules an error to be thrown after a delay.\n * @param {*} error Error from a failing deferred.\n * @return {number} Id of the error.\n * @private\n */\ngoog.async.Deferred.scheduleError_ = function(error) {\n  var deferredError = new goog.async.Deferred.Error_(error);\n  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;\n  return deferredError.id_;\n};\n\n\n/**\n * Unschedules an error from being thrown.\n * @param {number} id Id of the deferred error to unschedule.\n * @private\n */\ngoog.async.Deferred.unscheduleError_ = function(id) {\n  var error = goog.async.Deferred.errorMap_[id];\n  if (error) {\n    error.resetTimer();\n    delete goog.async.Deferred.errorMap_[id];\n  }\n};\n\n\n/**\n * Asserts that there are no pending deferred errors. If there are any\n * scheduled errors, one will be thrown immediately to make this function fail.\n */\ngoog.async.Deferred.assertNoErrors = function() {\n  var map = goog.async.Deferred.errorMap_;\n  for (var key in map) {\n    var error = map[key];\n    error.resetTimer();\n    error.throwError();\n  }\n};\n","// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Error codes shared between goog.net.IframeIo and\n * goog.net.XhrIo.\n */\n\ngoog.provide('goog.net.ErrorCode');\n\n\n/**\n * Error codes\n * @enum {number}\n */\ngoog.net.ErrorCode = {\n\n  /**\n   * There is no error condition.\n   */\n  NO_ERROR: 0,\n\n  /**\n   * The most common error from iframeio, unfortunately, is that the browser\n   * responded with an error page that is classed as a different domain. The\n   * situations, are when a browser error page  is shown -- 404, access denied,\n   * DNS failure, connection reset etc.)\n   *\n   */\n  ACCESS_DENIED: 1,\n\n  /**\n   * Currently the only case where file not found will be caused is when the\n   * code is running on the local file system and a non-IE browser makes a\n   * request to a file that doesn't exist.\n   */\n  FILE_NOT_FOUND: 2,\n\n  /**\n   * If Firefox shows a browser error page, such as a connection reset by\n   * server or access denied, then it will fail silently without the error or\n   * load handlers firing.\n   */\n  FF_SILENT_ERROR: 3,\n\n  /**\n   * Custom error provided by the client through the error check hook.\n   */\n  CUSTOM_ERROR: 4,\n\n  /**\n   * Exception was thrown while processing the request.\n   */\n  EXCEPTION: 5,\n\n  /**\n   * The Http response returned a non-successful http status code.\n   */\n  HTTP_ERROR: 6,\n\n  /**\n   * The request was aborted.\n   */\n  ABORT: 7,\n\n  /**\n   * The request timed out.\n   */\n  TIMEOUT: 8,\n\n  /**\n   * The resource is not available offline.\n   */\n  OFFLINE: 9\n};\n\n\n/**\n * Returns a friendly error message for an error code. These messages are for\n * debugging and are not localized.\n * @param {goog.net.ErrorCode} errorCode An error code.\n * @return {string} A message for debugging.\n */\ngoog.net.ErrorCode.getDebugMessage = function(errorCode) {\n  switch (errorCode) {\n    case goog.net.ErrorCode.NO_ERROR:\n      return 'No Error';\n\n    case goog.net.ErrorCode.ACCESS_DENIED:\n      return 'Access denied to content document';\n\n    case goog.net.ErrorCode.FILE_NOT_FOUND:\n      return 'File not found';\n\n    case goog.net.ErrorCode.FF_SILENT_ERROR:\n      return 'Firefox silently errored';\n\n    case goog.net.ErrorCode.CUSTOM_ERROR:\n      return 'Application custom error';\n\n    case goog.net.ErrorCode.EXCEPTION:\n      return 'An exception occurred';\n\n    case goog.net.ErrorCode.HTTP_ERROR:\n      return 'Http response at 400 or 500 level';\n\n    case goog.net.ErrorCode.ABORT:\n      return 'Request was aborted';\n\n    case goog.net.ErrorCode.TIMEOUT:\n      return 'Request timed out';\n\n    case goog.net.ErrorCode.OFFLINE:\n      return 'The resource is not available offline';\n\n    default:\n      return 'Unrecognized error code';\n  }\n};\n","// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility to load JavaScript files via DOM script tags.\n * Refactored from goog.net.Jsonp. Works cross-domain.\n *\n */\n\ngoog.provide('goog.net.jsloader');\ngoog.provide('goog.net.jsloader.Error');\ngoog.provide('goog.net.jsloader.ErrorCode');\ngoog.provide('goog.net.jsloader.Options');\n\ngoog.require('goog.array');\ngoog.require('goog.async.Deferred');\ngoog.require('goog.debug.Error');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.object');\n\n\n/**\n * The name of the property of goog.global under which the JavaScript\n * verification object is stored by the loaded script.\n * @private {string}\n */\ngoog.net.jsloader.GLOBAL_VERIFY_OBJS_ = 'closure_verification';\n\n\n/**\n * The default length of time, in milliseconds, we are prepared to wait for a\n * load request to complete.\n * @type {number}\n */\ngoog.net.jsloader.DEFAULT_TIMEOUT = 5000;\n\n\n/**\n * Optional parameters for goog.net.jsloader.send.\n * timeout: The length of time, in milliseconds, we are prepared to wait\n *     for a load request to complete, or 0 or negative for no timeout. Default\n *     is 5 seconds.\n * document: The HTML document under which to load the JavaScript. Default is\n *     the current document.\n * cleanupWhenDone: If true clean up the script tag after script completes to\n *     load. This is important if you just want to read data from the JavaScript\n *     and then throw it away. Default is false.\n * attributes: Additional attributes to set on the script tag.\n *\n * @typedef {{\n *   timeout: (number|undefined),\n *   document: (HTMLDocument|undefined),\n *   cleanupWhenDone: (boolean|undefined),\n *   attributes: (!Object<string, string>|undefined)\n * }}\n */\ngoog.net.jsloader.Options;\n\n\n/**\n * Scripts (URIs) waiting to be loaded.\n * @private {!Array<!goog.html.TrustedResourceUrl>}\n */\ngoog.net.jsloader.scriptsToLoad_ = [];\n\n\n/**\n * The deferred result of loading the URIs in scriptsToLoad_.\n * We need to return this to a caller that wants to load URIs while\n * a deferred is already working on them.\n * @private {!goog.async.Deferred<null>}\n */\ngoog.net.jsloader.scriptLoadingDeferred_;\n\n\n\n/**\n * Loads and evaluates the JavaScript files at the specified URIs, guaranteeing\n * the order of script loads.\n *\n * Because we have to load the scripts in serial (load script 1, exec script 1,\n * load script 2, exec script 2, and so on), this will be slower than doing\n * the network fetches in parallel.\n *\n * If you need to load a large number of scripts but dependency order doesn't\n * matter, you should just call goog.net.jsloader.safeLoad N times.\n *\n * If you need to load a large number of scripts on the same domain,\n * you may want to use goog.module.ModuleLoader.\n *\n * @param {Array<!goog.html.TrustedResourceUrl>} trustedUris The URIs to load.\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\n *     goog.net.jsloader.options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks\n */\ngoog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {\n  // Loading the scripts in serial introduces asynchronosity into the flow.\n  // Therefore, there are race conditions where client A can kick off the load\n  // sequence for client B, even though client A's scripts haven't all been\n  // loaded yet.\n  //\n  // To work around this issue, all module loads share a queue.\n  if (!trustedUris.length) {\n    return goog.async.Deferred.succeed(null);\n  }\n\n  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;\n  goog.array.extend(goog.net.jsloader.scriptsToLoad_, trustedUris);\n  if (isAnotherModuleLoading) {\n    // jsloader is still loading some other scripts.\n    // In order to prevent the race condition noted above, we just add\n    // these URIs to the end of the scripts' queue and return the deferred\n    // result of the ongoing script load, so the caller knows when they\n    // finish loading.\n    return goog.net.jsloader.scriptLoadingDeferred_;\n  }\n\n  trustedUris = goog.net.jsloader.scriptsToLoad_;\n  var popAndLoadNextScript = function() {\n    var trustedUri = trustedUris.shift();\n    var deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);\n    if (trustedUris.length) {\n      deferred.addBoth(popAndLoadNextScript);\n    }\n    return deferred;\n  };\n  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();\n  return goog.net.jsloader.scriptLoadingDeferred_;\n};\n\n\n/**\n * Loads and evaluates a JavaScript file.\n * When the script loads, a user callback is called.\n * It is the client's responsibility to verify that the script ran successfully.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\n *     goog.net.jsloader.Options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks and/or cancel the transmission.\n *     The error callback will be called with a single goog.net.jsloader.Error\n *     parameter.\n */\ngoog.net.jsloader.safeLoad = function(trustedUri, opt_options) {\n  var options = opt_options || {};\n  var doc = options.document || document;\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n\n  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);\n  var request = {script_: script, timeout_: undefined};\n  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);\n\n  // Set a timeout.\n  var timeout = null;\n  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ?\n      options.timeout :\n      goog.net.jsloader.DEFAULT_TIMEOUT;\n  if (timeoutDuration > 0) {\n    timeout = window.setTimeout(function() {\n      goog.net.jsloader.cleanup_(script, true);\n      deferred.errback(\n          new goog.net.jsloader.Error(\n              goog.net.jsloader.ErrorCode.TIMEOUT,\n              'Timeout reached for loading script ' + uri));\n    }, timeoutDuration);\n    request.timeout_ = timeout;\n  }\n\n  // Hang the user callback to be called when the script completes to load.\n  // NOTE(user): This callback will be called in IE even upon error. In any\n  // case it is the client's responsibility to verify that the script ran\n  // successfully.\n  script.onload = script.onreadystatechange = function() {\n    if (!script.readyState || script.readyState == 'loaded' ||\n        script.readyState == 'complete') {\n      var removeScriptNode = options.cleanupWhenDone || false;\n      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);\n      deferred.callback(null);\n    }\n  };\n\n  // Add an error callback.\n  // NOTE(user): Not supported in IE.\n  script.onerror = function() {\n    goog.net.jsloader.cleanup_(script, true, timeout);\n    deferred.errback(\n        new goog.net.jsloader.Error(\n            goog.net.jsloader.ErrorCode.LOAD_ERROR,\n            'Error while loading script ' + uri));\n  };\n\n  var properties = options.attributes || {};\n  goog.object.extend(\n      properties, {'type': 'text/javascript', 'charset': 'UTF-8'});\n  goog.dom.setProperties(script, properties);\n  // NOTE(user): Safari never loads the script if we don't set the src\n  // attribute before appending.\n  goog.dom.safe.setScriptSrc(script, trustedUri);\n  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);\n  scriptParent.appendChild(script);\n\n  return deferred;\n};\n\n\n/**\n * Loads a JavaScript file and verifies it was evaluated successfully, using a\n * verification object.\n * The verification object is set by the loaded JavaScript at the end of the\n * script.\n * We verify this object was set and return its value in the success callback.\n * If the object is not defined we trigger an error callback.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\n * @param {string} verificationObjName The name of the verification object that\n *     the loaded script should set.\n * @param {goog.net.jsloader.Options} options Optional parameters. See\n *     goog.net.jsloader.Options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks and/or cancel the transmission.\n *     The success callback will be called with a single parameter containing\n *     the value of the verification object.\n *     The error callback will be called with a single goog.net.jsloader.Error\n *     parameter.\n */\ngoog.net.jsloader.safeLoadAndVerify = function(\n    trustedUri, verificationObjName, options) {\n  // Define the global objects variable.\n  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {\n    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};\n  }\n  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n\n  // Verify that the expected object does not exist yet.\n  if (goog.isDef(verifyObjs[verificationObjName])) {\n    // TODO(user): Error or reset variable?\n    return goog.async.Deferred.fail(\n        new goog.net.jsloader.Error(\n            goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS,\n            'Verification object ' + verificationObjName +\n                ' already defined.'));\n  }\n\n  // Send request to load the JavaScript.\n  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options);\n\n  // Create a deferred object wrapping the send result.\n  var deferred =\n      new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));\n\n  // Call user back with object that was set by the script.\n  sendDeferred.addCallback(function() {\n    var result = verifyObjs[verificationObjName];\n    if (goog.isDef(result)) {\n      deferred.callback(result);\n      delete verifyObjs[verificationObjName];\n    } else {\n      // Error: script was not loaded properly.\n      deferred.errback(\n          new goog.net.jsloader.Error(\n              goog.net.jsloader.ErrorCode.VERIFY_ERROR, 'Script ' + uri +\n                  ' loaded, but verification object ' + verificationObjName +\n                  ' was not defined.'));\n    }\n  });\n\n  // Pass error to new deferred object.\n  sendDeferred.addErrback(function(error) {\n    if (goog.isDef(verifyObjs[verificationObjName])) {\n      delete verifyObjs[verificationObjName];\n    }\n    deferred.errback(error);\n  });\n\n  return deferred;\n};\n\n\n/**\n * Gets the DOM element under which we should add new script elements.\n * How? Take the first head element, and if not found take doc.documentElement,\n * which always exists.\n *\n * @param {!HTMLDocument} doc The relevant document.\n * @return {!Element} The script parent element.\n * @private\n */\ngoog.net.jsloader.getScriptParentElement_ = function(doc) {\n  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);\n  if (!headElements || goog.array.isEmpty(headElements)) {\n    return doc.documentElement;\n  } else {\n    return headElements[0];\n  }\n};\n\n\n/**\n * Cancels a given request.\n * @this {{script_: Element, timeout_: number}} The request context.\n * @private\n */\ngoog.net.jsloader.cancel_ = function() {\n  var request = this;\n  if (request && request.script_) {\n    var scriptNode = request.script_;\n    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {\n      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);\n    }\n  }\n};\n\n\n/**\n * Removes the script node and the timeout.\n *\n * @param {Node} scriptNode The node to be cleaned up.\n * @param {boolean} removeScriptNode If true completely remove the script node.\n * @param {?number=} opt_timeout The timeout handler to cleanup.\n * @private\n */\ngoog.net.jsloader.cleanup_ = function(\n    scriptNode, removeScriptNode, opt_timeout) {\n  if (goog.isDefAndNotNull(opt_timeout)) {\n    goog.global.clearTimeout(opt_timeout);\n  }\n\n  scriptNode.onload = goog.nullFunction;\n  scriptNode.onerror = goog.nullFunction;\n  scriptNode.onreadystatechange = goog.nullFunction;\n\n  // Do this after a delay (removing the script node of a running script can\n  // confuse older IEs).\n  if (removeScriptNode) {\n    window.setTimeout(function() { goog.dom.removeNode(scriptNode); }, 0);\n  }\n};\n\n\n/**\n * Possible error codes for jsloader.\n * @enum {number}\n */\ngoog.net.jsloader.ErrorCode = {\n  LOAD_ERROR: 0,\n  TIMEOUT: 1,\n  VERIFY_ERROR: 2,\n  VERIFY_OBJECT_ALREADY_EXISTS: 3\n};\n\n\n\n/**\n * A jsloader error.\n *\n * @param {goog.net.jsloader.ErrorCode} code The error code.\n * @param {string=} opt_message Additional message.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.net.jsloader.Error = function(code, opt_message) {\n  var msg = 'Jsloader error (code #' + code + ')';\n  if (opt_message) {\n    msg += ': ' + opt_message;\n  }\n  goog.net.jsloader.Error.base(this, 'constructor', msg);\n\n  /**\n   * The code for this error.\n   *\n   * @type {goog.net.jsloader.ErrorCode}\n   */\n  this.code = code;\n};\ngoog.inherits(goog.net.jsloader.Error, goog.debug.Error);\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines fireauth.iframeclient.IframeWrapper used to communicate\n * with the hidden iframe to detect Auth events.\n */\n\ngoog.provide('fireauth.iframeclient.IframeWrapper');\n\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.net.jsloader');\ngoog.require('goog.string.Const');\n\n\n/**\n * Defines the hidden iframe wrapper for cross origin communications.\n * @param {string} url The hidden iframe src URL.\n * @constructor\n */\nfireauth.iframeclient.IframeWrapper = function(url) {\n  /** @private {string} The hidden iframe URL. */\n  this.url_ = url;\n\n  /**\n   * @type {?gapi.iframes.Iframe}\n   * @private\n   */\n  this.iframe_ = null;\n\n  /** @private {!goog.Promise} A promise that resolves on iframe open. */\n  this.onIframeOpen_ = this.open_();\n};\n\n\n/**\n * @typedef {{\n *   type: string\n * }}\n */\nfireauth.iframeclient.IframeWrapper.Message;\n\n/**\n * Returns URL, src of the hidden iframe.\n * @return {string}\n * @private\n */\nfireauth.iframeclient.IframeWrapper.prototype.getPath_ = function() {\n  return this.url_;\n};\n\n\n/**\n * @return {!goog.Promise} The promise that resolves when the iframe is ready.\n */\nfireauth.iframeclient.IframeWrapper.prototype.onReady = function() {\n  return this.onIframeOpen_;\n};\n\n\n/**\n * Returns options used to open the iframe.\n * @return {!gapi.iframes.OptionsBag}\n * @private\n */\nfireauth.iframeclient.IframeWrapper.prototype.getOptions_ = function() {\n  var options = /** @type {!gapi.iframes.OptionsBag} */ ({\n    'where': document.body,\n    'url': this.getPath_(),\n    'messageHandlersFilter': /** @type {!gapi.iframes.IframesFilter} */ (\n        fireauth.util.getObjectRef(\n            'gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER')),\n    'attributes': {\n      'style': {\n        'position': 'absolute',\n        'top': '-100px',\n        'width': '1px',\n        'height': '1px'\n      }\n    },\n    'dontclear': true\n  });\n  return options;\n};\n\n\n/**\n * Opens an iframe.\n * @return {!goog.Promise} A promise that resolves on successful iframe open.\n * @private\n */\nfireauth.iframeclient.IframeWrapper.prototype.open_ = function() {\n  var self = this;\n  return fireauth.iframeclient.IframeWrapper.loadGApiJs_().then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      /**\n       * @param {?gapi.iframes.Iframe} iframe The new opened iframe.\n       */\n      var onOpen = function(iframe) {\n        self.iframe_ = iframe;\n        self.iframe_.restyle({\n          // Prevent iframe from closing on mouse out.\n          'setHideOnLeave': false\n        });\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        var networkErrorTimer = setTimeout(function() {\n          reject(new Error('Network Error'));\n        }, fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_.get());\n        // Clear timer and resolve pending iframe ready promise.\n        var clearTimerAndResolve = function() {\n          clearTimeout(networkErrorTimer);\n          resolve();\n        };\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(\n            clearTimerAndResolve,\n            function(error) { reject(new Error('Network Error')); });\n      };\n      /** @type {function():!gapi.iframes.Context} */ (\n          fireauth.util.getObjectRef('gapi.iframes.getContext'))().open(\n              self.getOptions_(), onOpen);\n    });\n  });\n};\n\n\n/**\n * @param {!fireauth.iframeclient.IframeWrapper.Message} message to send.\n * @return {!goog.Promise<?Object>} The promise that resolve when message is\n *     sent.\n */\nfireauth.iframeclient.IframeWrapper.prototype.sendMessage = function(message) {\n  var self = this;\n  return this.onIframeOpen_.then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      self.iframe_.send(\n          message['type'],\n          message,\n          resolve,\n          /** @type {!gapi.iframes.IframesFilter} */ (\n              fireauth.util.getObjectRef(\n                  'gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER')));\n\n    });\n  });\n};\n\n\n/**\n * Registers a listener to a post message.\n * @param {string} eventName The message to register for.\n * @param {gapi.iframes.MessageHandler} handler Message handler.\n */\nfireauth.iframeclient.IframeWrapper.prototype.registerEvent =\n    function(eventName, handler) {\n  var self = this;\n  this.onIframeOpen_.then(function() {\n    self.iframe_.register(\n        eventName,\n        /** @type {function(this:gapi.iframes.Iframe,\n         *                  *, gapi.iframes.Iframe): *}\n         */ (handler),\n        /** @type {!gapi.iframes.IframesFilter} */ (\n            fireauth.util.getObjectRef(\n                'gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER')));\n  });\n};\n\n\n/**\n * Unregisters a listener to a post message.\n * @param {string} eventName The message to unregister.\n * @param {gapi.iframes.MessageHandler} handler Message handler.\n */\nfireauth.iframeclient.IframeWrapper.prototype.unregisterEvent =\n    function(eventName, handler) {\n  var self = this;\n  this.onIframeOpen_.then(function() {\n    self.iframe_.unregister(\n        eventName,\n        /** @type {(function(this:gapi.iframes.Iframe,\n         *                   *, gapi.iframes.Iframe): *|undefined)}\n         */ (handler));\n  });\n};\n\n\n/** @private @const {!goog.string.Const} The GApi loader URL. */\nfireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_ = goog.string.Const.from(\n    'https://apis.google.com/js/api.js?onload=%{onload}');\n\n\n/**\n * @private @const {!fireauth.util.Delay} The gapi.load network error timeout\n *     delay with units in ms.\n */\nfireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * @private @const {!fireauth.util.Delay} The iframe ping error timeout delay\n *     with units in ms.\n */\nfireauth.iframeclient.IframeWrapper.PING_TIMEOUT_ =\n    new fireauth.util.Delay(5000, 15000);\n\n\n/** @private {?goog.Promise} The cached GApi loader promise. */\nfireauth.iframeclient.IframeWrapper.cachedGApiLoader_ = null;\n\n\n/** Resets the cached GApi loader. */\nfireauth.iframeclient.IframeWrapper.resetCachedGApiLoader = function() {\n  fireauth.iframeclient.IframeWrapper.cachedGApiLoader_ = null;\n};\n\n\n\n/**\n * Loads the GApi client library if it is not loaded for gapi.iframes usage.\n * @return {!goog.Promise} A promise that resolves when gapi.iframes is loaded.\n * @private\n */\nfireauth.iframeclient.IframeWrapper.loadGApiJs_ = function() {\n  // If already pending or resolved, return the cached promise.\n  if (fireauth.iframeclient.IframeWrapper.cachedGApiLoader_) {\n    return fireauth.iframeclient.IframeWrapper.cachedGApiLoader_;\n  }\n  // If there is no cached promise, initialize a new one.\n  fireauth.iframeclient.IframeWrapper.cachedGApiLoader_ =\n      new goog.Promise(function(resolve, reject) {\n    // Function to run when gapi.load is ready.\n    var onGapiLoad = function() {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      fireauth.util.resetUnloadedGapiModules();\n      var loader = /** @type {function(string, !Object)} */ (\n          fireauth.util.getObjectRef('gapi.load'));\n      loader('gapi.iframes', {\n        'callback': resolve,\n        'ontimeout': function() {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          fireauth.util.resetUnloadedGapiModules();\n          reject(new Error('Network Error'));\n        },\n        'timeout': fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_.get()\n      });\n    };\n    if (fireauth.util.getObjectRef('gapi.iframes.Iframe')) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve();\n    } else if (fireauth.util.getObjectRef('gapi.load')) {\n      // Gapi loader ready, load gapi.iframes.\n      onGapiLoad();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      var cbName = '__iframefcb' +\n          Math.floor(Math.random() * 1000000).toString();\n      // GApi loader not available, dynamically load platform.js.\n      goog.global[cbName] = function() {\n        // GApi loader should be ready.\n        if (fireauth.util.getObjectRef('gapi.load')) {\n          onGapiLoad();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(new Error('Network Error'));\n        }\n      };\n      // Build GApi loader.\n      var url = goog.html.TrustedResourceUrl.format(\n          fireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_,\n          {'onload': cbName});\n      // Load GApi loader.\n      var result = goog.Promise.resolve(goog.net.jsloader.safeLoad(url));\n      result.thenCatch(function(error) {\n        // In case library fails to load, typically due to a network error,\n        // reset cached loader to null to force a refresh on a retrial.\n        reject(new Error('Network Error'));\n      });\n    }\n  }).thenCatch(function(error) {\n    // Reset cached promise to allow for retrial.\n    fireauth.iframeclient.IframeWrapper.cachedGApiLoader_ = null;\n    throw error;\n  });\n  return fireauth.iframeclient.IframeWrapper.cachedGApiLoader_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.AsyncStorage');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\n\n\n/**\n * AsyncStorage provides an interface to the React Native AsyncStorage API.\n * @param {!Object=} opt_asyncStorage The AsyncStorage API. If not provided\n *     this method will attempt to fetch an implementation from\n *     firebase.INTERNAL.reactNative.\n * @constructor\n * @implements {fireauth.storage.Storage}\n * @see https://facebook.github.io/react-native/docs/asyncstorage.html\n */\nfireauth.storage.AsyncStorage = function(opt_asyncStorage) {\n  /**\n   * The underlying storage instance for persistent data.\n   * @private\n   */\n  this.storage_ =\n      opt_asyncStorage || (firebase.INTERNAL['reactNative'] &&\n                           firebase.INTERNAL['reactNative']['AsyncStorage']);\n\n  if (!this.storage_) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'The React Native compatibility library was not found.');\n  }\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.ASYNC_STORAGE;\n};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.get = function(key) {\n  return goog.Promise.resolve(this.storage_['getItem'](key))\n      .then(function(val) {\n        return val && fireauth.util.parseJSON(val);\n      });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.set = function(key, value) {\n  return goog.Promise.resolve(\n      this.storage_['setItem'](key, fireauth.util.stringifyJSON(value)));\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.remove = function(key) {\n  return goog.Promise.resolve(this.storage_['removeItem'](key));\n};\n\n\n/**\n * Does nothing. AsyncStorage does not support storage events,\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.addStorageListener = function(\n    listener) {};\n\n\n/**\n * Does nothing. AsyncStorage does not support storage events,\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.Storage');\n\n\n\n/**\n * Defines a generic interface to storage APIs across platforms.\n * @interface\n */\nfireauth.storage.Storage = function() {};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n */\nfireauth.storage.Storage.prototype.get = function(key) {};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n */\nfireauth.storage.Storage.prototype.set = function(key, value) {};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n */\nfireauth.storage.Storage.prototype.remove = function(key) {};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)|function(!Array<string>)}\n *     listener The storage event listener.\n */\nfireauth.storage.Storage.prototype.addStorageListener = function(listener) {};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)|function(!Array<string>)}\n *     listener The storage event listener.\n */\nfireauth.storage.Storage.prototype.removeStorageListener = function(listener) {\n};\n\n\n/** @type {string} The storage type identifier. */\nfireauth.storage.Storage.prototype.type;\n\n\n/**\n * Enum for the identifier of the type of underlying storage.\n * @enum {string}\n */\nfireauth.storage.Storage.Type = {\n  ASYNC_STORAGE: 'asyncStorage',\n  IN_MEMORY: 'inMemory',\n  INDEXEDDB: 'indexedDB',\n  LOCAL_STORAGE: 'localStorage',\n  MOCK_STORAGE: 'mockStorage',\n  NULL_STORAGE: 'nullStorage',\n  SESSION_STORAGE: 'sessionStorage'\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the MessageChannel based wrapper for receiving\n * messages from other windows or workers.\n */\n\ngoog.provide('fireauth.messagechannel.Receiver');\n\ngoog.require('fireauth.messagechannel.Status');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n/**\n * Initializes a channel to receive specific messages from a specified event\n * target.\n * Note receivers should not be manually instantiated. Instead `getInstance()`\n * should be used instead to get a receiver instance for a specified event\n * target.\n * @param {!EventTarget} eventTarget The event target to listen to.\n * @constructor\n */\nfireauth.messagechannel.Receiver = function(eventTarget) {\n  /**\n   * @const @private {!EventTarget} The messageChannel event target.\n   */\n  this.eventTarget_ = eventTarget;\n  /**\n   * @const @private {!Object.<string,\n   *                    !Array<function(string, *):!goog.Promise<?>|void>>}\n   *     This is the event type to handlers hash map. It is used to hold the\n   *     corresponding handlers for specified events.\n   */\n  this.eventHandlers_ = {};\n  /**\n   * @const @private {function(!Event)} The internal 'message' event handler\n   *     used to reroute the request to corresponding subscribed handlers.\n   */\n  this.messageEventHandler_ = goog.bind(this.handleEvent_, this);\n};\n\n\n/**\n * @param {!EventTarget} eventTarget The event target to check for.\n * @return {boolean} Whether the receiver is listening to the specified event\n *     target.\n */\nfireauth.messagechannel.Receiver.prototype.isListeningTo =\n    function(eventTarget) {\n  return this.eventTarget_ == eventTarget;\n};\n\n\n/**\n * @const @private {!Array<!fireauth.messagechannel.Receiver>} The list of all\n *     created `fireauth.messagechannel.Receiver` instances.\n */\nfireauth.messagechannel.Receiver.receivers_ = [];\n\n\n/**\n * Return a receiver instance for the specified event target. This is needed\n * since one instance can be available per event target. Otherwise receivers\n * could clobber each other.\n * @param {!EventTarget} eventTarget The event target to listen to.\n * @return {!fireauth.messagechannel.Receiver} The receiver instance for the\n *     specified event target.\n */\nfireauth.messagechannel.Receiver.getInstance = function(eventTarget) {\n  // The results are stored in an array since objects can't be keys for other\n  // objects. In addition, setting a unique property on an event target as a\n  // hash map key may not be allowed due to CORS restrictions.\n  var instance;\n  goog.array.forEach(\n      fireauth.messagechannel.Receiver.receivers_,\n      function(receiver) {\n        if (receiver.isListeningTo(eventTarget)) {\n          instance = receiver;\n        }\n      });\n  if (!instance) {\n    instance = new fireauth.messagechannel.Receiver(eventTarget);\n    fireauth.messagechannel.Receiver.receivers_.push(instance);\n  }\n  return instance;\n};\n\n\n/**\n * Handles a PostMessage event based on the following protocol:\n * <ul>\n * <li>When an event is first detected, check there is a subscribed handler.\n *     If not, do nothing as there could be other listeners.</li>\n * <li>If there is a subscribed event, reply with an ACK event to notify the\n *     sender that the event can be handled.</li>\n * <li>Trigger the subscribed handlers.</li>\n * <li>Reply again with the combined results of all subscribed handlers and\n *     return the response back.</li>\n * </ul>\n *\n * @param {!Event} event The PostMessage event to handle.\n * @private\n */\nfireauth.messagechannel.Receiver.prototype.handleEvent_ = function(event) {\n  // Respond to sender first with ack reply. This will let the client\n  // know that the service worker can handle this event.\n  var eventType = event.data['eventType'];\n  var eventId = event.data['eventId'];\n  var handlers = this.eventHandlers_[eventType];\n  if (handlers && handlers.length > 0) {\n    // Event can be handled.\n    event.ports[0].postMessage({\n      'status': fireauth.messagechannel.Status.ACK,\n      'eventId': eventId,\n      'eventType': eventType,\n      'response': null\n    });\n    var promises = [];\n    goog.array.forEach(handlers, function(handler) {\n      // Wrap in promise in case the handler doesn't return a promise.\n      promises.push(goog.Promise.resolve().then(function() {\n        return handler(event.origin, event.data['data']);\n      }));\n    });\n    // allSettled is more flexible as it executes all the promises passed and\n    // returns whether they succeeded or failed.\n    goog.Promise.allSettled(promises)\n        .then(function(result) {\n          // allResponse has the format:\n          // !Array<!{fulfilled: boolean, value: (*|undefined),\n          //          reason: (*|undefined)}>\n          // Respond to sender with ack reply.\n          // De-obfuscate the allSettled result.\n          var allResponses = [];\n          goog.array.forEach(result, function(item) {\n            allResponses.push({\n              'fulfilled': item.fulfilled,\n              'value': item.value,\n              // Error cannot be clone in postMessage.\n              'reason': item.reason ? item.reason.message : undefined\n            });\n          });\n          // Remove undefined fields.\n          goog.array.forEach(allResponses, function(item) {\n            for (var key in item) {\n              if (typeof item[key] === 'undefined') {\n                delete item[key];\n              }\n            }\n          });\n          event.ports[0].postMessage({\n            'status': fireauth.messagechannel.Status.DONE,\n            'eventId': eventId,\n            'eventType': eventType,\n            'response': allResponses\n          });\n        });\n  }\n  // Let unsupported events time out, as there could be external receivers\n  // that can handle them.\n};\n\n\n/**\n * Subscribes to events of the specified type.\n * @param {string} eventType The event type to listen to.\n * @param {function(string, *):!goog.Promise<?>|void} handler The async callback\n *     function to run when the event is triggered.\n */\nfireauth.messagechannel.Receiver.prototype.subscribe =\n    function(eventType, handler) {\n  if (goog.object.isEmpty(this.eventHandlers_)) {\n    this.eventTarget_.addEventListener('message', this.messageEventHandler_);\n  }\n  if (typeof this.eventHandlers_[eventType] === 'undefined') {\n    this.eventHandlers_[eventType] = [];\n  }\n  this.eventHandlers_[eventType].push(handler);\n};\n\n\n/**\n * Unsubscribes the specified handler from the specified event. If no handler\n * is specified, all handlers are unsubscribed.\n * @param {string} eventType The event type to unsubscribe from.\n * @param {?function(string, *):!goog.Promise<?>|void=} opt_handler The\n *     callback function to unsubscribe from the specified event type. If none\n *     is specified, all handlers are unsubscribed.\n */\nfireauth.messagechannel.Receiver.prototype.unsubscribe =\n    function(eventType, opt_handler) {\n  if (typeof this.eventHandlers_[eventType] !== 'undefined' && opt_handler) {\n    goog.array.removeAllIf(this.eventHandlers_[eventType], function(ele) {\n      return ele == opt_handler;\n    });\n    if (this.eventHandlers_[eventType].length == 0) {\n      delete this.eventHandlers_[eventType];\n    }\n  } else if (!opt_handler) {\n    // Unsubscribe all handlers for speficied event.\n    delete this.eventHandlers_[eventType];\n  }\n  if (goog.object.isEmpty(this.eventHandlers_)) {\n    this.eventTarget_.removeEventListener('message', this.messageEventHandler_);\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines a local storage interface with an indexedDB\n * implementation to be used as a fallback with browsers that do not synchronize\n * local storage changes between different windows of the same origin.\n */\n\ngoog.provide('fireauth.storage.IndexedDB');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.messagechannel.Receiver');\ngoog.require('fireauth.messagechannel.Sender');\ngoog.require('fireauth.messagechannel.WorkerClientPostMessager');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.array');\n\n\n\n/**\n * Initialize an indexedDB local storage manager used to mimic local storage\n * using an indexedDB underlying implementation including the ability to listen\n * to storage changes by key similar to localstorage storage event.\n * @param {string} dbName The indexedDB database name where all local storage\n *     data is to be stored.\n * @param {string} objectStoreName The indexedDB object store name where all\n *     local storage data is to be stored.\n * @param {string} dataKeyPath The indexedDB object store index name used to key\n *     all local storage data.\n * @param {string} valueKeyPath The indexedDB object store value field for each\n *     entry.\n * @param {number} version The indexedDB database version number.\n * @param {?IDBFactory=} opt_indexedDB The optional IndexedDB factory object.\n * @implements {fireauth.storage.Storage}\n * @constructor\n */\nfireauth.storage.IndexedDB = function(\n    dbName,\n    objectStoreName,\n    dataKeyPath,\n    valueKeyPath,\n    version,\n    opt_indexedDB) {\n  // indexedDB not available, fail hard.\n  if (!fireauth.storage.IndexedDB.isAvailable()) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  }\n  /**\n   * @const @private {string} The indexedDB database name where all local\n   *     storage data is to be stored.\n   */\n  this.dbName_ = dbName;\n  /**\n   * @const @private {string} The indexedDB object store name where all local\n   *     storage data is to be stored.\n   */\n  this.objectStoreName_ = objectStoreName;\n  /**\n   * @const @private {string} The indexedDB object store index name used to key\n   *     all local storage data.\n   */\n  this.dataKeyPath_ = dataKeyPath;\n  /**\n   * @const @private {string} The indexedDB object store value field for each\n   *     entry.\n   */\n  this.valueKeyPath_ = valueKeyPath;\n  /** @const @private {number} The indexedDB database version number. */\n  this.version_ = version;\n  /** @private {!Object.<string, *>} The local indexedDB map copy. */\n  this.localMap_ = {};\n  /**\n   * @private {!Array<function(!Array<string>)>} Listeners to storage events.\n   */\n  this.storageListeners_ = [];\n  /** @private {number} The indexedDB pending write operations tracker. */\n  this.pendingOpsTracker_ = 0;\n  /** @private {!IDBFactory} The indexedDB factory object. */\n  this.indexedDB_ = /** @type {!IDBFactory} */ (\n      opt_indexedDB || goog.global.indexedDB);\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.INDEXEDDB;\n  /**\n   * @private {?goog.Promise<void>} The pending polling promise for syncing\n   *     unprocessed indexedDB external changes.\n   */\n  this.poll_ = null;\n  /**\n   * @private {?number} The poll timer ID for syncing external indexedDB\n   *     changes.\n   */\n  this.pollTimerId_ = null;\n  /**\n   * @private {?fireauth.messagechannel.Receiver} The messageChannel receiver if\n   *     running from a serviceworker.\n   */\n  this.receiver_ = null;\n  /**\n   * @private {?fireauth.messagechannel.Sender} The messageChannel sender to\n   *     send keyChanged messages to the service worker from the client.\n   */\n  this.sender_ = null;\n  /**\n   * @private {boolean} Whether the service worker has a receiver for the\n   *     keyChanged events.\n   */\n  this.serviceWorkerReceiverAvailable_ = false;\n  /** @private {?ServiceWorker} The current active service worker. */\n  this.activeServiceWorker_ = null;\n  var scope = this;\n  if (fireauth.util.getWorkerGlobalScope()) {\n    this.receiver_ = fireauth.messagechannel.Receiver.getInstance(\n        /** @type {!WorkerGlobalScope} */ (\n            fireauth.util.getWorkerGlobalScope()));\n    // Listen to indexedDB changes.\n    this.receiver_.subscribe('keyChanged', function(origin, request) {\n      // Sync data.\n      return scope.sync_().then(function(keys) {\n        // Trigger listeners if unhandled changes are detected.\n        if (keys.length > 0) {\n          goog.array.forEach(\n              scope.storageListeners_,\n              function(listener) {\n                listener(keys);\n              });\n        }\n        // When this is false, it means the change was already\n        // detected and processed before the notification.\n        return {\n          'keyProcessed': goog.array.contains(keys, request['key'])\n        };\n      });\n    });\n    // Used to inform sender that service worker what events it supports.\n    this.receiver_.subscribe('ping', function(origin, request) {\n      return goog.Promise.resolve(['keyChanged']);\n    });\n  } else {\n    // Get active service worker when its available.\n    fireauth.util.getActiveServiceWorker()\n        .then(function(sw) {\n          scope.activeServiceWorker_ = sw;\n          if (sw) {\n            // Initialize the sender.\n            scope.sender_ = new fireauth.messagechannel.Sender(\n                new fireauth.messagechannel.WorkerClientPostMessager(sw));\n            // Ping the service worker to check what events they can handle.\n            // Use long timeout.\n            scope.sender_.send('ping', null, true)\n                .then(function(results) {\n                  // Check if keyChanged is supported.\n                  if (results[0]['fulfilled'] &&\n                      goog.array.contains(results[0]['value'], 'keyChanged')) {\n                    scope.serviceWorkerReceiverAvailable_ = true;\n                  }\n                })\n                .thenCatch(function(error) {\n                  // Ignore error.\n                });\n          }\n        });\n  }\n};\n\n\n\n/**\n * The indexedDB database name where all local storage data is to be stored.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.DB_NAME_ = 'firebaseLocalStorageDb';\n\n\n/**\n * The indexedDB object store name where all local storage data is to be stored.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_ = 'firebaseLocalStorage';\n\n\n/**\n * The indexedDB object store index name used to key all local storage data.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.DATA_KEY_PATH_ = 'fbase_key';\n\n\n/**\n * The indexedDB object store value field for each entry.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.VALUE_KEY_PATH_ = 'value';\n\n\n/**\n * The indexedDB database version number.\n * @private @const {number}\n */\nfireauth.storage.IndexedDB.VERSION_ = 1;\n\n\n/**\n * The indexedDB polling delay time in milliseconds.\n * @private @const {number}\n */\nfireauth.storage.IndexedDB.POLLING_DELAY_ = 800;\n\n\n/**\n * The indexedDB polling stop error.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.STOP_ERROR_ = 'STOP_EVENT';\n\n\n\n/**\n * @return {!fireauth.storage.IndexedDB} The Firebase Auth indexedDB\n *     local storage manager.\n */\nfireauth.storage.IndexedDB.getFireauthManager = function() {\n  if (!fireauth.storage.IndexedDB.managerInstance_) {\n    fireauth.storage.IndexedDB.managerInstance_ =\n        new fireauth.storage.IndexedDB(\n            fireauth.storage.IndexedDB.DB_NAME_,\n            fireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_,\n            fireauth.storage.IndexedDB.DATA_KEY_PATH_,\n            fireauth.storage.IndexedDB.VALUE_KEY_PATH_,\n            fireauth.storage.IndexedDB.VERSION_);\n  }\n  return fireauth.storage.IndexedDB.managerInstance_;\n};\n\n\n/**\n * Delete the indexedDB database.\n * @return {!goog.Promise<!IDBDatabase>} A promise that resolves on successful\n *     database deletion.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.deleteDb_ = function() {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    var request = self.indexedDB_.deleteDatabase(self.dbName_);\n    request.onsuccess = function(event) {\n      resolve();\n    };\n    request.onerror = function(event) {\n      reject(new Error(event.target.error));\n    };\n  });\n};\n\n\n/**\n * Initializes The indexedDB database, creates it if not already created and\n * opens it.\n * @return {!goog.Promise<!IDBDatabase>} A promise for the database object.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.initializeDb_ = function() {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    var request = self.indexedDB_.open(self.dbName_, self.version_);\n    request.onerror = function(event) {\n      // Suppress this from surfacing to browser console.\n      try {\n        event.preventDefault();\n      } catch (e) {}\n      reject(new Error(event.target.error));\n    };\n    request.onupgradeneeded = function(event) {\n      var db = event.target.result;\n      try {\n        db.createObjectStore(\n            self.objectStoreName_,\n            {\n              'keyPath': self.dataKeyPath_\n            });\n      } catch (e) {\n        reject(e);\n      }\n    };\n    request.onsuccess = function(event) {\n      var db = event.target.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n      if (!db.objectStoreNames.contains(self.objectStoreName_)) {\n        self.deleteDb_()\n            .then(function() {\n              return self.initializeDb_();\n            })\n            .then(function(newDb) {\n              resolve(newDb);\n            })\n            .thenCatch(function(e) {\n              reject(e);\n            });\n      } else {\n        resolve(db);\n      }\n    };\n  });\n};\n\n\n/**\n * Checks if indexedDB is initialized, if so, the callback is run, otherwise,\n * it waits for the db to initialize and then runs the callback function.\n * @return {!goog.Promise<!IDBDatabase>} A promise for the initialized indexedDB\n *     database.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.initializeDbAndRun_ =\n    function() {\n  if (!this.initPromise_) {\n    this.initPromise_ = this.initializeDb_();\n  }\n  return this.initPromise_;\n};\n\n\n/**\n * @return {boolean} Whether indexedDB is available or not.\n */\nfireauth.storage.IndexedDB.isAvailable = function() {\n  try {\n    return !!goog.global['indexedDB'];\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * Creates a reference for the local storage indexedDB object store and returns\n * it.\n * @param {!IDBTransaction} tx The IDB transaction instance.\n * @return {!IDBObjectStore} The indexedDB object store.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.getDataObjectStore_ =\n    function(tx) {\n  return tx.objectStore(this.objectStoreName_);\n};\n\n\n/**\n * Creates an IDB transaction and returns it.\n * @param {!IDBDatabase} db The indexedDB instance.\n * @param {boolean} isReadWrite Whether the current indexedDB operation is a\n *     read/write operation or not.\n * @return {!IDBTransaction} The requested IDB transaction instance.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.getTransaction_ =\n    function(db, isReadWrite) {\n  var tx = db.transaction(\n      [this.objectStoreName_],\n      isReadWrite ? 'readwrite' : 'readonly');\n  return tx;\n};\n\n\n/**\n * @param {!IDBRequest} request The IDB request instance.\n * @return {!goog.Promise} The promise to resolve on transaction completion.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.onIDBRequest_ =\n    function(request) {\n  return new goog.Promise(function(resolve, reject) {\n    request.onsuccess = function(event) {\n      if (event && event.target) {\n        resolve(event.target.result);\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function(event) {\n      reject(event.target.error);\n    };\n  });\n};\n\n\n/**\n * Sets the item's identified by the key provided to the value passed. If the\n * item does not exist, it is created. An optional callback is run on success.\n * @param {string} key The storage key for the item to set. If the item exists,\n *     it is updated, otherwise created.\n * @param {*} value The value to store for the item to set.\n * @return {!goog.Promise<void>} A promise that resolves on operation success.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.set = function(key, value) {\n  var isLocked = false;\n  var dbTemp;\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        dbTemp = db;\n        var objectStore = self.getDataObjectStore_(\n            self.getTransaction_(dbTemp, true));\n        return self.onIDBRequest_(objectStore.get(key));\n      })\n      .then(function(data) {\n        var objectStore = self.getDataObjectStore_(\n            self.getTransaction_(dbTemp, true));\n        if (data) {\n          // Update the value(s) in the object that you want to change\n          data.value = value;\n          // Put this updated object back into the database.\n          return self.onIDBRequest_(objectStore.put(data));\n        }\n        self.pendingOpsTracker_++;\n        isLocked = true;\n        var obj = {};\n        obj[self.dataKeyPath_] = key;\n        obj[self.valueKeyPath_] = value;\n        return self.onIDBRequest_(objectStore.add(obj));\n      })\n      .then(function() {\n        // Save in local copy to avoid triggering false external event.\n        self.localMap_[key] = value;\n        // Announce change in key to service worker.\n        return self.notifySW_(key);\n      })\n      .thenAlways(function() {\n        if (isLocked) {\n          self.pendingOpsTracker_--;\n        }\n      });\n};\n\n\n/**\n * Notify the service worker of the indexeDB write operation.\n * Waits until the operation is processed.\n * @param {string} key The key which is changing.\n * @return {!goog.Promise<void>} A promise that resolves on delivery.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.notifySW_ = function(key) {\n  // If sender is available.\n  // Run some sanity check to confirm no sw change occurred.\n  // For now, we support one service worker per page.\n  if (this.sender_ &&\n      this.activeServiceWorker_ &&\n      fireauth.util.getServiceWorkerController() ===\n      this.activeServiceWorker_) {\n    return this.sender_.send(\n        'keyChanged',\n        {'key': key},\n        // Use long timeout if receiver is known to be available.\n        this.serviceWorkerReceiverAvailable_)\n        .then(function(responses) {\n          // Return nothing.\n        })\n        .thenCatch(function(error) {\n          // This is a best effort approach. Ignore errors.\n        });\n  }\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Retrieves a stored item identified by the key provided asynchronously.\n * The value is passed to the callback function provided.\n * @param {string} key The storage key for the item to fetch.\n * @return {!goog.Promise} A promise that resolves with the item's value, or\n *     null if the item is not found.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.get = function(key) {\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        return self.onIDBRequest_(\n            self.getDataObjectStore_(self.getTransaction_(db, false)).get(key));\n      })\n      .then(function(response) {\n        return response && response.value;\n      });\n};\n\n\n/**\n * Deletes the item identified by the key provided and on success, runs the\n * optional callback.\n * @param {string} key The storage key for the item to remove.\n * @return {!goog.Promise<void>} A promise that resolves on operation success.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.remove = function(key) {\n  var isLocked = false;\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        isLocked = true;\n        self.pendingOpsTracker_++;\n        return self.onIDBRequest_(\n            self.getDataObjectStore_(\n                self.getTransaction_(db, true))['delete'](key));\n      }).then(function() {\n        // Delete from local copy to avoid triggering false external event.\n        delete self.localMap_[key];\n        // Announce change in key to service worker.\n        return self.notifySW_(key);\n      }).thenAlways(function() {\n        if (isLocked) {\n          self.pendingOpsTracker_--;\n        }\n      });\n};\n\n\n/**\n * @return {!goog.Promise<!Array<string>>} A promise that resolved with all the\n *     storage keys that have changed.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.sync_ = function() {\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        var objectStore =\n            self.getDataObjectStore_(self.getTransaction_(db, false));\n        if (objectStore['getAll']) {\n          // Get all keys and value pairs using getAll if supported.\n          return self.onIDBRequest_(objectStore['getAll']());\n        } else {\n          // If getAll isn't supported, fallback to cursor.\n          return new goog.Promise(function(resolve, reject) {\n            var res = [];\n            var request = objectStore.openCursor();\n            request.onsuccess = function(event) {\n              var cursor = event.target.result;\n              if (cursor) {\n                res.push(cursor.value);\n                cursor['continue']();\n              } else {\n                resolve(res);\n              }\n            };\n            request.onerror = function(event) {\n              reject(event.target.error);\n            };\n          });\n        }\n      }).then(function(res) {\n        var centralCopy = {};\n        // List of keys differing from central copy.\n        var diffKeys = [];\n        // Build central copy (external copy).\n        if (self.pendingOpsTracker_ == 0) {\n          for (var i = 0; i < res.length; i++) {\n            centralCopy[res[i][self.dataKeyPath_]] =\n                res[i][self.valueKeyPath_];\n          }\n          // Get diff of central copy and local copy.\n          diffKeys = fireauth.util.getKeyDiff(self.localMap_, centralCopy);\n          // Update local copy.\n          self.localMap_ = centralCopy;\n        }\n        // Return modified keys.\n        return diffKeys;\n      });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!Array<string>)} listener The storage event listener.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.addStorageListener =\n    function(listener) {\n  // First listener, start listeners.\n  if (this.storageListeners_.length == 0) {\n    this.startListeners_();\n  }\n  this.storageListeners_.push(listener);\n};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!Array<string>)} listener The storage event listener.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.removeStorageListener =\n    function(listener) {\n  goog.array.removeAllIf(\n      this.storageListeners_,\n      function(ele) {\n        return ele == listener;\n      });\n  // No more listeners, stop.\n  if (this.storageListeners_.length == 0) {\n    this.stopListeners_();\n  }\n};\n\n\n/**\n * Removes all listeners to storage event change.\n */\nfireauth.storage.IndexedDB.prototype.removeAllStorageListeners =\n    function() {\n  this.storageListeners_ = [];\n  // No more listeners, stop.\n  this.stopListeners_();\n};\n\n\n/**\n * Starts the listener to storage events.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.startListeners_ = function() {\n  var self = this;\n  // Stop any previous listeners.\n  this.stopListeners_();\n  var repeat = function() {\n    self.pollTimerId_ = setTimeout(\n        function() {\n          self.poll_ = self.sync_()\n              .then(function(keys) {\n                // If keys modified, call listeners.\n                if (keys.length > 0) {\n                  goog.array.forEach(\n                      self.storageListeners_,\n                      function(listener) {\n                        listener(keys);\n                      });\n                }\n              })\n              .then(function() {\n                repeat();\n              })\n              .thenCatch(function(error) {\n                if (error.message != fireauth.storage.IndexedDB.STOP_ERROR_) {\n                  repeat();\n                }\n              });\n        },\n        fireauth.storage.IndexedDB.POLLING_DELAY_);\n  };\n  repeat();\n};\n\n\n/**\n * Stops the listener to storage events.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.stopListeners_ = function() {\n  if (this.poll_) {\n    // Cancel polling function.\n    this.poll_.cancel(fireauth.storage.IndexedDB.STOP_ERROR_);\n  }\n  // Clear any pending polling timer.\n  if (this.pollTimerId_) {\n    clearTimeout(this.pollTimerId_);\n    this.pollTimerId_ = null;\n  }\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the PostMessager interface needed for the\n * `fireauth.messagechannel.Sender`, in addition to 2 types of implementations.\n */\n\ngoog.provide('fireauth.messagechannel.PostMessager');\ngoog.provide('fireauth.messagechannel.WindowPostMessager');\ngoog.provide('fireauth.messagechannel.WorkerClientPostMessager');\n\n\n/**\n * This is the interface defining the postMessage format of a window which\n * takes an additional second parameter for target origin.\n *\n * @typedef {{\n *   postMessage: function(*, string, !Array<!Transferable>)\n * }}\n */\nfireauth.messagechannel.Window;\n\n\n/**\n * This is the interface defining the postMessage format of a worker or\n * ServiceWorkerClient, etc. which just takes a message and a list of\n * Transferables.\n *\n * @typedef {{\n *   postMessage: function(*, !Array<!Transferable>)\n * }}\n */\nfireauth.messagechannel.WorkerClient;\n\n\n/**\n * Defines a common interface to postMessage data to a specified PostMessager.\n * @interface\n */\nfireauth.messagechannel.PostMessager = function() {};\n\n\n/**\n * Sends a message to the specified context.\n * @param {*} message The message to send.\n * @param {!Array<!Transferable>} transfer The list of `Transferable` objects\n *     that are transferred with the message. The ownsership fo these objects is\n *     given to the destination side and they are no longer usable on the\n *     sending side.\n */\nfireauth.messagechannel.PostMessager.prototype.postMessage =\n    function(message, transfer) {};\n\n\n\n/**\n * Defines the implementation for postMessaging to a window context.\n * @param {!fireauth.messagechannel.Window} win The window PostMessager.\n * @param {?string=} opt_targetOrigin The target origin.\n * @constructor\n * @implements {fireauth.messagechannel.PostMessager}\n */\nfireauth.messagechannel.WindowPostMessager = function(win, opt_targetOrigin) {\n  /**\n   * @const @private {!fireauth.messagechannel.Window} The window PostMessager.\n   */\n  this.win_ = win;\n  /** @const @private {string} The postMessage target origin. */\n  this.targetOrigin_ = opt_targetOrigin || '*';\n};\n\n\n/**\n * Sends a message to the specified window context.\n * @param {*} message The message to send.\n * @param {!Array<!Transferable>} transfer The list of `Transferable` objects\n *     that are transferred with the message. The ownsership fo these objects is\n *     given to the destination side and they are no longer usable on the\n *     sending side.\n * @override\n */\nfireauth.messagechannel.WindowPostMessager.prototype.postMessage =\n    function(message, transfer) {\n  this.win_.postMessage(message, this.targetOrigin_, transfer);\n};\n\n\n/**\n * Defines the implementation for postMessaging to a worker/client context.\n * @param {!fireauth.messagechannel.WorkerClient} worker The worker/client\n *     PostMessager.\n * @constructor\n * @implements {fireauth.messagechannel.PostMessager}\n */\nfireauth.messagechannel.WorkerClientPostMessager = function(worker) {\n  /**\n   * @const @private {!fireauth.messagechannel.WorkerClient} The worker/client\n   *     PostMessager.\n   */\n  this.worker_ = worker;\n};\n\n\n/**\n * Sends a message to the specified worker/client context.\n * @param {*} message The message to send.\n * @param {!Array<!Transferable>} transfer The list of `Transferable` objects\n *     that are transferred with the message. The ownsership fo these objects is\n *     given to the destination side and they are no longer usable on the\n *     sending side.\n * @override\n */\nfireauth.messagechannel.WorkerClientPostMessager.prototype.postMessage =\n    function(message, transfer) {\n  this.worker_.postMessage(message, transfer);\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the MessageChannel based wrapper for sending messages\n * to other windows or workers.\n */\n\ngoog.provide('fireauth.messagechannel.Sender');\n\ngoog.require('fireauth.messagechannel.Error');\ngoog.require('fireauth.messagechannel.PostMessager');\ngoog.require('fireauth.messagechannel.Status');\ngoog.require('fireauth.messagechannel.TimeoutDuration');\ngoog.require('fireauth.messagechannel.utils');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\n\n\n/**\n * This is the interface defining a MessageChannel/handler pair.\n *\n * @typedef {{\n *   onMessage: function(!Event),\n *   messageChannel: !MessageChannel\n * }}\n */\nfireauth.messagechannel.MessageHandler;\n\n\n/**\n * Helper static function to create messageChannel errors.\n * @param {!fireauth.messagechannel.Error} errorId The error identifier.\n * @param {?string=} opt_message The optional error message used for generic\n *     error types.\n * @return {!Error} The constructed error to return.\n * @private\n */\nfireauth.messagechannel.createError_ = function(errorId, opt_message) {\n  if (errorId != fireauth.messagechannel.Error.UNKNOWN || !opt_message) {\n    return new Error(errorId);\n  } else {\n    return new Error(opt_message);\n  }\n};\n\n\n/**\n * Initializes a channel to send specific messages to a specified PostMessage.\n * @param {!fireauth.messagechannel.PostMessager} postMessager The post messager\n *     to send messages to.\n * @constructor\n */\nfireauth.messagechannel.Sender = function(postMessager) {\n  /**\n   * @const @private {!fireauth.messagechannel.PostMessager} The messageChannel\n   *     PostMessager.\n   */\n  this.postMessager_ = postMessager;\n  /** @private {boolean} Whether the connection was closed. */\n  this.closed_ = false;\n  /**\n   * @const @private {!Array<!fireauth.messagechannel.MessageHandler>} The list\n   *     of subscribed message handlers and their corresponding MessageChannels.\n   */\n  this.messageHandlers_ = [];\n};\n\n\n/**\n * Sends a message to the receiver. The message is identified by an event\n * type and can carry additional payload data.\n * The sender protocol works as follows:\n * <ul>\n * <li>The request is constructed and postMessaged to the receiver with the port\n *     used to reply back to sender.</li>\n * <li>The operation will block until an ACK response is received. If not, it\n *     will timeout and reject with an error.</li>\n * <li>If an ACK response is received, it will wait longer for the full\n *     processed response.</li>\n * <li>Once the response is received, the operation will resolve with that\n *     result.</li>\n * </ul>\n *\n * @param {string} eventType The event type identifying the message. This is\n *     used to help the receiver handle this message.\n * @param {?Object=} opt_data The optional data to send along the message.\n * @param {?boolean=} opt_useLongTimeout Whether long timeout should be used\n *     for ACK responses.\n * @return {!goog.Promise<!Array<{fulfilled: boolean,\n *                                value: (*|undefined),\n *                                reason: (*|undefined)}>>} A promise that\n *     resolves with the receiver responses.\n */\nfireauth.messagechannel.Sender.prototype.send = function(\n    eventType, opt_data, opt_useLongTimeout) {\n  var self = this;\n  var eventId;\n  var data = opt_data || {};\n  var onMessage;\n  var ackTimer;\n  var completionTimer;\n  var entry = null;\n  if (this.closed_) {\n    return goog.Promise.reject(fireauth.messagechannel.createError_(\n        fireauth.messagechannel.Error.CONNECTION_UNAVAILABLE));\n  }\n  var ackTimeout =\n      !!opt_useLongTimeout ?\n      fireauth.messagechannel.TimeoutDuration.LONG_ACK :\n      fireauth.messagechannel.TimeoutDuration.ACK;\n  var messageChannel =\n      fireauth.messagechannel.utils.initializeMessageChannel();\n  return new goog.Promise(function(resolve, reject) {\n    // Send message along with port for reply\n    if (messageChannel) {\n      eventId = fireauth.messagechannel.utils.generateEventId();\n      // Start the connection if not already started.\n      messageChannel.port1.start();\n      // Handler for receiving message reply from receiver.\n      // Blocks promise resolution until service worker detects the change.\n      ackTimer = setTimeout(function() {\n        // The receiver may not be able to handle the response for various\n        // reasons: library not included, or an incompatible version of\n        // the library is included.\n        // Timeout after some time.\n        reject(fireauth.messagechannel.createError_(\n            fireauth.messagechannel.Error.UNSUPPORTED_EVENT));\n      }, ackTimeout);\n      onMessage = function(event) {\n        // Process only the expected events that match current event ID.\n        if (event.data['eventId'] !== eventId) {\n          return;\n        }\n        // This avoids adding a long wait when the receiver is unable to handle\n        // the event.\n        if (event.data['status'] === fireauth.messagechannel.Status.ACK) {\n          clearTimeout(ackTimer);\n          // Set longer timeout to allow receiver to process.\n          completionTimer = setTimeout(function() {\n            reject(fireauth.messagechannel.createError_(\n                fireauth.messagechannel.Error.TIMEOUT));\n          }, fireauth.messagechannel.TimeoutDuration.COMPLETION);\n          return;\n        } else if (event.data['status'] ===\n                   fireauth.messagechannel.Status.DONE) {\n          clearTimeout(completionTimer);\n          if (typeof event.data['response'] !== 'undefined') {\n            resolve(event.data['response']);\n          } else {\n            reject(fireauth.messagechannel.createError_(\n                fireauth.messagechannel.Error.UNKNOWN));\n          }\n        } else {\n          clearTimeout(ackTimer);\n          clearTimeout(completionTimer);\n          reject(fireauth.messagechannel.createError_(\n              fireauth.messagechannel.Error.INVALID_RESPONSE));\n        }\n      };\n      entry = {\n        'messageChannel': messageChannel,\n        'onMessage': onMessage\n      };\n      self.messageHandlers_.push(entry);\n      messageChannel.port1.addEventListener('message', onMessage);\n      var request = {\n        'eventType': eventType,\n        'eventId': eventId,\n        'data': data\n      };\n      // It is possible the receiver cannot handle this result.\n      // For example, the developer may not be including the library in the\n      // receiver or using an outdated version.\n      self.postMessager_.postMessage(\n          request,\n          [messageChannel.port2]);\n    } else {\n      // No connection available.\n      reject(fireauth.messagechannel.createError_(\n          fireauth.messagechannel.Error.CONNECTION_UNAVAILABLE));\n    }\n  }).then(function(result) {\n    // On completion, remove the message handler. A new one is needed for a\n    // new message.\n    self.removeMessageHandler_(entry);\n    return result;\n  }).thenCatch(function(error) {\n    // On failure, remove the message handler. A new one is needed for a new\n    // message.\n    self.removeMessageHandler_(entry);\n    throw error;\n  });\n};\n\n\n/**\n * Removes the onMessage handler for the specified messageChannel.\n * @param {?fireauth.messagechannel.MessageHandler} messageHandler\n * @private\n */\nfireauth.messagechannel.Sender.prototype.removeMessageHandler_ =\n    function(messageHandler) {\n  if (!messageHandler) {\n    return;\n  }\n  var messageChannel = messageHandler['messageChannel'];\n  var onMessage = messageHandler['onMessage'];\n  if (messageChannel) {\n    messageChannel.port1.removeEventListener('message', onMessage);\n    messageChannel.port1.close();\n  }\n  goog.array.removeAllIf(this.messageHandlers_, function(ele) {\n    return ele == messageHandler;\n  });\n};\n\n\n/** Closes the underlying MessageChannel connection. */\nfireauth.messagechannel.Sender.prototype.close = function() {\n  // Any pending event will timeout.\n  while (this.messageHandlers_.length > 0) {\n    this.removeMessageHandler_(this.messageHandlers_[0]);\n  }\n  this.closed_ = true;\n};\n\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the MessageChannel common utilities and enums.\n */\n\ngoog.provide('fireauth.messagechannel.Error');\ngoog.provide('fireauth.messagechannel.Status');\ngoog.provide('fireauth.messagechannel.TimeoutDuration');\ngoog.provide('fireauth.messagechannel.utils');\n\n\n/**\n * Enum for the messagechannel error messages. These errors are not meant to be\n * user facing.\n * @enum {string}\n */\nfireauth.messagechannel.Error = {\n  CONNECTION_CLOSED: 'connection_closed',\n  CONNECTION_UNAVAILABLE: 'connection_unavailable',\n  INVALID_RESPONSE: 'invalid_response',\n  TIMEOUT: 'timeout',\n  UNKNOWN: 'unknown_error',\n  UNSUPPORTED_EVENT: 'unsupported_event'\n};\n\n\n/**\n * Enum for the message channel request status labels.\n * @enum {string}\n */\nfireauth.messagechannel.Status = {\n  ACK: 'ack',\n  DONE: 'done'\n};\n\n\n/**\n * Enum for the timeout durations in milliseconds for different contexts.\n * @enum {number}\n */\nfireauth.messagechannel.TimeoutDuration = {\n  ACK: 50,\n  COMPLETION: 3000,\n  // Used when a handler is confirmed to be available on the other side.\n  LONG_ACK: 800\n};\n\n\n/**\n * @param {?string=} opt_prefix An optional prefix string to prepend to ID.\n * @param {?number=} opt_digits An optional number of digits used for event ID.\n * @return {string} The generated event ID used to identify a generic event.\n */\nfireauth.messagechannel.utils.generateEventId =\n    function(opt_prefix, opt_digits) {\n  // 0, null and undefined will default to 20.\n  var digits = opt_digits || 20;\n  return opt_prefix ? opt_prefix : '' +\n      Math.floor(Math.random() * Math.pow(10, digits)).toString();\n};\n\n\n/**\n * @return {?MessageChannel} The initialized MessageChannel instance if\n *     supported.\n */\nfireauth.messagechannel.utils.initializeMessageChannel = function() {\n  return typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.HybridIndexedDB');\n\ngoog.require('fireauth.storage.IndexedDB');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\n\n/**\n * HybridStorage provides an interface to indexedDB, the persistent Web\n * Storage API for browsers that support it. This will fallback to the provided\n * fallback storage when indexedDB is not supported which is determined\n * asynchronously.\n * @param {!fireauth.storage.Storage} fallbackStorage The storage to fallback to\n *     when indexedDB is not available.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.HybridIndexedDB = function(fallbackStorage) {\n  var self = this;\n  var storage = null;\n  /**\n   * @const @private {!Array<function((!goog.events.BrowserEvent|\n   *                                   !Array<string>))>} The storage listeners.\n   */\n  this.storageListeners_ = [];\n  // This type may change if the fallback is used.\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.INDEXEDDB;\n  /**\n   * @const @private {!fireauth.storage.Storage} The fallback storage when\n   *     indexedDB is unavailable.\n   */\n  this.fallbackStorage_ = fallbackStorage;\n  /**\n   * @const @private {!goog.Promise<!fireauth.storage.Storage>} A promise that\n   *     resolves with the underlying indexedDB storage or a fallback when not\n   *     supported.\n   */\n  this.underlyingStoragePromise_ = goog.Promise.resolve().then(function() {\n    // Initial check shows indexedDB is available. This is not enough.\n    // Try to write/read from indexedDB. If it fails, switch to fallback.\n    if (fireauth.storage.IndexedDB.isAvailable()) {\n      // Test write/read using a random key. This is important for the following\n      // reasons:\n      // 1. Double inclusion of the firebase-auth.js library.\n      // 2. Multiple windows opened at the same time.\n      // The above may cause collision if multiple instances try to\n      // write/read/delete from the same entry.\n      var randomId = fireauth.util.generateEventId();\n      var randomKey = fireauth.storage.HybridIndexedDB.KEY_ + randomId;\n      storage = fireauth.storage.IndexedDB.getFireauthManager();\n      return storage.set(randomKey, randomId)\n          .then(function() {\n            return storage.get(randomKey);\n          })\n          .then(function(value) {\n            if (value !== randomId) {\n              throw new Error('indexedDB not supported!');\n            }\n            return storage.remove(randomKey);\n          })\n          .then(function() {\n            return storage;\n          })\n          .thenCatch(function(error) {\n            return self.fallbackStorage_;\n          });\n    } else {\n      // indexedDB not available, use fallback.\n      return self.fallbackStorage_;\n    }\n  }).then(function(storage) {\n    // Update type.\n    self.type = storage.type;\n    // Listen to all storage changes.\n    storage.addStorageListener(function(key) {\n      // Trigger all attached storage listeners.\n      goog.array.forEach(self.storageListeners_, function(listener) {\n        listener(key);\n      });\n    });\n    return storage;\n  });\n};\n\n\n/**\n * The key used to check if the storage instance is available.\n * @private {string}\n * @const\n */\nfireauth.storage.HybridIndexedDB.KEY_ = '__sak';\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.get = function(key) {\n  return this.underlyingStoragePromise_.then(function(storage) {\n    return storage.get(key);\n  });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.set = function(key, value) {\n  return this.underlyingStoragePromise_.then(function(storage) {\n    return storage.set(key, value);\n  });\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.remove = function(key) {\n  return this.underlyingStoragePromise_.then(function(storage) {\n    return storage.remove(key);\n  });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function((!goog.events.BrowserEvent|!Array<string>))} listener The\n *     storage event listener.\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.addStorageListener =\n    function(listener) {\n  this.storageListeners_.push(listener);\n};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.removeStorageListener =\n    function(listener) {\n  goog.array.removeAllIf(this.storageListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.InMemoryStorage');\n\ngoog.require('goog.Promise');\n\n\n\n/**\n * InMemoryStorage provides an implementation of Storage that will only persist\n * data in memory. This data is volatile and in a browser environment, will\n * be lost on page unload and will only be available in the current window.\n * This is a useful fallback for browsers where web storage is disabled or\n * environments where the preferred storage mechanism is not available or not\n * supported.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.InMemoryStorage = function() {\n  /** @protected {!Object} The object where we store values. */\n  this.storage = {};\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.IN_MEMORY;\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.get = function(key) {\n  return goog.Promise.resolve(/** @type {*} */ (this.storage[key]));\n};\n\n\n/**\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.set = function(key, value) {\n  this.storage[key] = value;\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.remove = function(key) {\n  delete this.storage[key];\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {function((!goog.events.BrowserEvent|!Array<string>))} listener The\n *     storage event listener.\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.addStorageListener =\n    function(listener) {\n};\n\n\n/**\n * @param {function((!goog.events.BrowserEvent|!Array<string>))} listener The\n *     storage event listener.\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.LocalStorage');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.events');\n\n\n\n/**\n * LocalStorage provides an interface to localStorage, the persistent Web\n * Storage API.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.LocalStorage = function() {\n  // Check is localStorage available in the current environment.\n  if (!fireauth.storage.LocalStorage.isAvailable()) {\n    // In a Node.js environment, dom-storage module needs to be required.\n    if (fireauth.util.getEnvironment() == fireauth.util.Env.NODE) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n          'The LocalStorage compatibility library was not found.');\n    }\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  }\n\n  /**\n   * The underlying storage instance for persistent data.\n   * @private {!Storage}\n   */\n  this.storage_ = /** @type {!Storage} */ (\n      fireauth.storage.LocalStorage.getGlobalStorage() ||\n      firebase.INTERNAL['node']['localStorage']);\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.LOCAL_STORAGE;\n};\n\n\n/** @return {?Storage|undefined} The global localStorage instance. */\nfireauth.storage.LocalStorage.getGlobalStorage = function() {\n  try {\n    var storage = goog.global['localStorage'];\n    // Try editing web storage. If an error is thrown, it may be disabled.\n    var key = fireauth.util.generateEventId();\n    if (storage) {\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n    }\n    return storage;\n  } catch (e) {\n    // In some cases, browsers with web storage disabled throw an error simply\n    // on access.\n    return null;\n  }\n};\n\n\n/**\n * The key used to check if the storage instance is available.\n * @private {string}\n * @const\n */\nfireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_ = '__sak';\n\n\n/** @return {boolean} Whether localStorage is available. */\nfireauth.storage.LocalStorage.isAvailable = function() {\n  // In Node.js localStorage is polyfilled.\n  var isNode = fireauth.util.getEnvironment() == fireauth.util.Env.NODE;\n  // Either window should provide this storage mechanism or in case of Node.js,\n  // firebase.INTERNAL should provide it.\n  var storage = fireauth.storage.LocalStorage.getGlobalStorage() ||\n      (isNode &&\n       firebase.INTERNAL['node'] &&\n       firebase.INTERNAL['node']['localStorage']);\n  if (!storage) {\n    return false;\n  }\n  try {\n    // setItem will throw an exception if we cannot access web storage (e.g.,\n    // Safari in private mode).\n    storage.setItem(fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_, '1');\n    storage.removeItem(fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.LocalStorage.prototype.get = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var json = self.storage_.getItem(key);\n        return fireauth.util.parseJSON(json);\n      });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.LocalStorage.prototype.set = function(key, value) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var obj = fireauth.util.stringifyJSON(value);\n        if (goog.isNull(obj)) {\n          self.remove(key);\n        } else {\n          self.storage_.setItem(key, obj);\n        }\n      });\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.LocalStorage.prototype.remove = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        self.storage_.removeItem(key);\n      });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.LocalStorage.prototype.addStorageListener = function(\n    listener) {\n  if (goog.global['window']) {\n    goog.events.listen(goog.global['window'], 'storage', listener);\n  }\n};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.LocalStorage.prototype.removeStorageListener = function(\n    listener) {\n  if (goog.global['window']) {\n    goog.events.unlisten(goog.global['window'], 'storage', listener);\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.NullStorage');\n\ngoog.require('fireauth.storage.Storage');\ngoog.require('goog.Promise');\n\n\n\n/**\n * NullStorage provides an implementation of Storage that does always returns\n * null. This can be used if a type of storage is unsupported on a platform.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.NullStorage = function() {\n  /** @private {!Object} The object where we store values. */\n  this.storage_ = {};\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.NULL_STORAGE;\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.NullStorage.prototype.get = function(key) {\n  return goog.Promise.resolve(/** @type {*} */ (null));\n};\n\n\n/**\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.NullStorage.prototype.set = function(key, value) {\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.NullStorage.prototype.remove = function(key) {\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.NullStorage.prototype.addStorageListener = function(listener) {\n};\n\n\n/**\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.NullStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.SessionStorage');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\n\n\n\n/**\n * SessionStorage provides an interface to sessionStorage, the temporary web\n * storage API.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.SessionStorage = function() {\n  // Check is sessionStorage available in the current environment.\n  if (!fireauth.storage.SessionStorage.isAvailable()) {\n    // In a Node.js environment, dom-storage module needs to be required.\n    if (fireauth.util.getEnvironment() == fireauth.util.Env.NODE) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n          'The SessionStorage compatibility library was not found.');\n    }\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  }\n\n  /**\n   * The underlying storage instance for temporary data.\n   * @private {!Storage}\n   */\n  this.storage_ = /** @type {!Storage} */ (\n      fireauth.storage.SessionStorage.getGlobalStorage() ||\n      firebase.INTERNAL['node']['sessionStorage']);\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.SESSION_STORAGE;\n};\n\n\n/** @return {?Storage|undefined} The global sessionStorage instance. */\nfireauth.storage.SessionStorage.getGlobalStorage = function() {\n  try {\n    var storage = goog.global['sessionStorage'];\n    // Try editing web storage. If an error is thrown, it may be disabled.\n    var key = fireauth.util.generateEventId();\n    if (storage) {\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n    }\n    return storage;\n  } catch (e) {\n    // In some cases, browsers with web storage disabled throw an error simply\n    // on access.\n    return null;\n  }\n};\n\n\n/**\n * The key used to check if the storage instance is available.\n * @private {string}\n * @const\n */\nfireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_ = '__sak';\n\n\n/** @return {boolean} Whether sessionStorage is available. */\nfireauth.storage.SessionStorage.isAvailable = function() {\n  // In Node.js sessionStorage is polyfilled.\n  var isNode = fireauth.util.getEnvironment() == fireauth.util.Env.NODE;\n  // Either window should provide this storage mechanism or in case of Node.js,\n  // firebase.INTERNAL should provide it.\n  var storage = fireauth.storage.SessionStorage.getGlobalStorage() ||\n      (isNode &&\n       firebase.INTERNAL['node'] &&\n       firebase.INTERNAL['node']['sessionStorage']);\n  if (!storage) {\n    return false;\n  }\n  try {\n    // setItem will throw an exception if we cannot access web storage (e.g.,\n    // Safari in private mode).\n    storage.setItem(\n        fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_, '1');\n    storage.removeItem(fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.SessionStorage.prototype.get = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var json = self.storage_.getItem(key);\n        return fireauth.util.parseJSON(json);\n      });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.SessionStorage.prototype.set = function(key, value) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var obj = fireauth.util.stringifyJSON(value);\n        if (goog.isNull(obj)) {\n          self.remove(key);\n        } else {\n          self.storage_.setItem(key, obj);\n        }\n      });\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.SessionStorage.prototype.remove = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        self.storage_.removeItem(key);\n      });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.SessionStorage.prototype.addStorageListener = function(\n    listener) {};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.SessionStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.Factory');\ngoog.provide('fireauth.storage.Factory.EnvConfig');\n\ngoog.require('fireauth.storage.AsyncStorage');\ngoog.require('fireauth.storage.HybridIndexedDB');\ngoog.require('fireauth.storage.InMemoryStorage');\ngoog.require('fireauth.storage.LocalStorage');\ngoog.require('fireauth.storage.NullStorage');\ngoog.require('fireauth.storage.SessionStorage');\ngoog.require('fireauth.util');\n\n\n/**\n * Factory manages the storage implementations and determines the correct one\n * for the current environment.\n * @param {!fireauth.storage.Factory.EnvConfigType} env The storage\n *     configuration for the current environment.\n * @constructor\n */\nfireauth.storage.Factory = function(env) {\n  /** @const @private {!fireauth.storage.Factory.EnvConfigType} */\n  this.env_ = env;\n};\n\n\n/**\n * Construct the singleton instance of the Factory, automatically detecting\n * the current environment.\n * @return {!fireauth.storage.Factory}\n */\nfireauth.storage.Factory.getInstance = function() {\n  if (!fireauth.storage.Factory.instance_) {\n    fireauth.storage.Factory.instance_ =\n        new fireauth.storage.Factory(fireauth.storage.Factory.getEnvConfig());\n  }\n  return fireauth.storage.Factory.instance_;\n};\n\n\n/**\n * @typedef {{\n *   persistent: function(new:fireauth.storage.Storage),\n *   temporary: function(new:fireauth.storage.Storage)\n * }}\n */\nfireauth.storage.Factory.EnvConfigType;\n\n\n/**\n * Configurations of storage for different environments.\n * @enum {!fireauth.storage.Factory.EnvConfigType}\n */\nfireauth.storage.Factory.EnvConfig = {\n  BROWSER: {\n    persistent: fireauth.storage.LocalStorage,\n    temporary: fireauth.storage.SessionStorage\n  },\n  NODE: {\n    persistent: fireauth.storage.LocalStorage,\n    temporary: fireauth.storage.SessionStorage\n  },\n  REACT_NATIVE: {\n    persistent: fireauth.storage.AsyncStorage,\n    temporary: fireauth.storage.NullStorage\n  },\n  WORKER: {\n    persistent: fireauth.storage.LocalStorage,\n    temporary: fireauth.storage.NullStorage\n  }\n};\n\n\n/**\n * Detects the current environment and returns the appropriate environment\n * configuration.\n * @return {!fireauth.storage.Factory.EnvConfigType}\n */\nfireauth.storage.Factory.getEnvConfig = function() {\n  var envMap = {};\n  envMap[fireauth.util.Env.BROWSER] =\n      fireauth.storage.Factory.EnvConfig.BROWSER;\n  envMap[fireauth.util.Env.NODE] =\n      fireauth.storage.Factory.EnvConfig.NODE;\n  envMap[fireauth.util.Env.REACT_NATIVE] =\n      fireauth.storage.Factory.EnvConfig.REACT_NATIVE;\n  envMap[fireauth.util.Env.WORKER] =\n      fireauth.storage.Factory.EnvConfig.WORKER;    \n  return envMap[fireauth.util.getEnvironment()];\n};\n\n\n/**\n * @return {!fireauth.storage.Storage} The persistent storage instance.\n */\nfireauth.storage.Factory.prototype.makePersistentStorage = function() {\n  if (fireauth.util.persistsStorageWithIndexedDB()) {\n    // If persistent storage is implemented using indexedDB, use indexedDB.\n    // Use HybridIndexedDB instead of indexedDB directly since this will\n    // fallback to a fallback storage when indexedDB is not supported (private\n    // browsing mode, etc).\n    return new fireauth.storage.HybridIndexedDB(\n        fireauth.util.isWorker() ?\n        new fireauth.storage.InMemoryStorage() : new this.env_.persistent());\n  }\n  return new this.env_.persistent();\n};\n\n\n/**\n * @return {!fireauth.storage.Storage} The temporary storage instance.\n */\nfireauth.storage.Factory.prototype.makeTemporaryStorage = function() {\n  return new this.env_.temporary();\n};\n\n\n/**\n * @return {!fireauth.storage.Storage} An in memory storage instance.\n */\nfireauth.storage.Factory.prototype.makeInMemoryStorage = function() {\n  return new fireauth.storage.InMemoryStorage();\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines utilities for session management.\n */\n\ngoog.provide('fireauth.authStorage');\ngoog.provide('fireauth.authStorage.Key');\ngoog.provide('fireauth.authStorage.Manager');\ngoog.provide('fireauth.authStorage.Persistence');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Factory');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.events');\ngoog.require('goog.object');\n\n\n\n/**\n * The namespace for Firebase Auth storage.\n * @private @const {string}\n */\nfireauth.authStorage.NAMESPACE_ = 'firebase';\n\n\n/**\n * The separator for Firebase Auth storage with App ID key.\n * @private @const {string}\n */\nfireauth.authStorage.SEPARATOR_ = ':';\n\n\n/**\n * @const {number} The IE 10 localStorage cross tab synchronization delay in\n *     milliseconds.\n */\nfireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\n\n/**\n * Enums for Auth state persistence.\n * @enum {string}\n */\nfireauth.authStorage.Persistence = {\n  // State will persist even when the browser window is closed or the activity\n  // is destroyed in react-native.\n  LOCAL: 'local',\n  // State is only stored in memory and will be cleared when the window or\n  // activity is refreshed.\n  NONE: 'none',\n  // State will only persist in current session/tab, relevant to web only, and\n  // will be cleared when the tab is closed.\n  SESSION: 'session'\n};\n\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n * @param {*} arg The argument to validate.\n */\nfireauth.authStorage.validatePersistenceArgument =\n    function(arg) {\n  // Invalid type error.\n  var invalidTypeError = new fireauth.AuthError(\n      fireauth.authenum.Error.INVALID_PERSISTENCE);\n  // Unsupported type error.\n  var unsupportedTypeError = new fireauth.AuthError(\n      fireauth.authenum.Error.UNSUPPORTED_PERSISTENCE);\n  // Check if the persistence type is a valid one.\n  // Throw invalid type error if not valid.\n  if (!goog.object.containsValue(fireauth.authStorage.Persistence, arg) ||\n      // goog.object.containsValue(fireauth.authStorage.Persistence, ['none'])\n      // returns true.\n      typeof arg !== 'string') {\n    throw invalidTypeError;\n  }\n  // Validate if the specified type is supported in the current environment.\n  switch (fireauth.util.getEnvironment()) {\n    case fireauth.util.Env.REACT_NATIVE:\n      // This is only supported in a browser.\n      if (arg === fireauth.authStorage.Persistence.SESSION) {\n        throw unsupportedTypeError;\n      }\n      break;\n    case fireauth.util.Env.NODE:\n      // Only none is supported in Node.js.\n      if (arg !== fireauth.authStorage.Persistence.NONE) {\n        throw unsupportedTypeError;\n      }\n      break;\n    case fireauth.util.Env.BROWSER:\n    default:\n      // This is restricted by what the browser supports.\n      if (!fireauth.util.isWebStorageSupported() &&\n          arg !== fireauth.authStorage.Persistence.NONE) {\n        throw unsupportedTypeError;\n      }\n      break;\n  }\n};\n\n\n/**\n * Storage key metadata.\n * @typedef {{name: string, persistent: !fireauth.authStorage.Persistence}}\n */\nfireauth.authStorage.Key;\n\n\n/**\n * Storage manager.\n * @param {string} namespace The optional namespace.\n * @param {string} separator The optional separator.\n * @param {boolean} safariLocalStorageNotSynced Whether browser has Safari\n *     iframe restriction with storage event triggering but storage not updated.\n * @param {boolean} runsInBackground Whether browser can detect storage event\n *     when it had already been pushed to the background. This may happen in\n *     some mobile browsers. A localStorage change in the foreground window\n *     will not be detected in the background window via the storage event.\n *     This was detected in iOS 7.x mobile browsers.\n * @param {boolean} webStorageSupported Whether browser web storage is\n *     supported.\n * @constructor @struct @final\n */\nfireauth.authStorage.Manager = function(\n    namespace,\n    separator,\n    safariLocalStorageNotSynced,\n    runsInBackground,\n    webStorageSupported) {\n  /** @const @private {string} Storage namespace. */\n  this.namespace_ = namespace;\n  /** @const @private {string} Storage namespace key separator. */\n  this.separator_ = separator;\n  /**\n   * @const @private {boolean} Whether browser has Safari iframe restriction\n   *     with storage event triggering but storage not updated.\n   */\n  this.safariLocalStorageNotSynced_ = safariLocalStorageNotSynced;\n  /**\n   *  @private {boolean} Whether browser can detect storage event when it\n   *     had already been pushed to the background. This may happen in some\n   *     mobile browsers.\n   */\n  this.runsInBackground_ = runsInBackground;\n  /**  @const @private {boolean} Whether browser web storage is supported. */\n  this.webStorageSupported_ = webStorageSupported;\n\n  /**\n   * @const @private {!Object.<string, !Array<function()>>} The storage event\n   *     key to listeners map.\n   */\n  this.listeners_ = {};\n\n  var storageFactory = fireauth.storage.Factory.getInstance();\n  try {\n    /**\n     * @private {!fireauth.storage.Storage} Persistence storage.\n     */\n    this.persistentStorage_ = storageFactory.makePersistentStorage();\n  } catch (e) {\n    // Default to in memory storage if the preferred persistent storage is not\n    // supported.\n    this.persistentStorage_ = storageFactory.makeInMemoryStorage();\n    // Do not use indexedDB fallback.\n    this.localStorageNotSynchronized_ = false;\n    // Do not set polling functions on window.localStorage.\n    this.runsInBackground_ = true;\n  }\n  try {\n    /**\n     * @private {!fireauth.storage.Storage} Temporary session storage.\n     */\n    this.temporaryStorage_ = storageFactory.makeTemporaryStorage();\n  } catch (e) {\n    // Default to in memory storage if the preferred temporary storage is not\n    // supported. This should be a different in memory instance as the\n    // persistent storage, since the same key could be available for both types\n    // of storage.\n    this.temporaryStorage_ = storageFactory.makeInMemoryStorage();\n  }\n  /**\n   * @private {!fireauth.storage.Storage} In memory storage.\n   */\n  this.inMemoryStorage_ = storageFactory.makeInMemoryStorage();\n\n  /**\n   * @const @private {function(!goog.events.BrowserEvent)|\n   *                  function(!Array<string>)} Storage change handler.\n   */\n  this.storageChangeEventHandler_ = goog.bind(this.storageChangeEvent_, this);\n  /** @private {!Object.<string, *>} Local map for localStorage. */\n  this.localMap_ = {};\n};\n\n\n/**\n * @return {!fireauth.authStorage.Manager} The default Auth storage manager\n *     instance.\n */\nfireauth.authStorage.Manager.getInstance = function() {\n  // Creates the default instance for Auth storage maanger.\n  if (!fireauth.authStorage.Manager.instance_) {\n    /**\n     * @private {?fireauth.authStorage.Manager} The default storage manager\n     *     instance.\n     */\n    fireauth.authStorage.Manager.instance_ = new fireauth.authStorage.Manager(\n        fireauth.authStorage.NAMESPACE_,\n        fireauth.authStorage.SEPARATOR_,\n        fireauth.util.isSafariLocalStorageNotSynced(),\n        fireauth.util.runsInBackground(),\n        fireauth.util.isWebStorageSupported());\n  }\n  return fireauth.authStorage.Manager.instance_;\n};\n\n\n/** Clears storage manager instances. This is used for testing. */\nfireauth.authStorage.Manager.clear = function() {\n  fireauth.authStorage.Manager.instance_ = null;\n};\n\n\n/**\n * Returns the storage corresponding to the specified persistence.\n * @param {!fireauth.authStorage.Persistence} persistent The type of storage\n *     persistence.\n * @return {!fireauth.storage.Storage} The corresponding storage instance.\n * @private\n */\nfireauth.authStorage.Manager.prototype.getStorage_ = function(persistent) {\n  switch (persistent) {\n    case fireauth.authStorage.Persistence.SESSION:\n      return this.temporaryStorage_;\n    case fireauth.authStorage.Persistence.NONE:\n      return this.inMemoryStorage_;\n    case fireauth.authStorage.Persistence.LOCAL:\n    default:\n      return this.persistentStorage_;\n  }\n};\n\n\n/**\n * Constructs the corresponding storage key name.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string=} opt_id This ID associates storage values with specific\n *     apps.\n * @return {string} The corresponding key name with namespace prefixed.\n * @private\n */\nfireauth.authStorage.Manager.prototype.getKeyName_ = function(dataKey, opt_id) {\n  return this.namespace_ + this.separator_ + dataKey.name +\n      (opt_id ? this.separator_ + opt_id : '');\n};\n\n\n/**\n * Migrates window.localStorage to the provided persistent storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the persistent\n *     value is supposed to be stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise<void>} A promise that resolves when the data stored\n *     in window.localStorage is migrated to the provided persistent storage\n *     identified by the provided data key.\n */\nfireauth.authStorage.Manager.prototype.migrateFromLocalStorage =\n    function(dataKey, opt_id) {\n  var self = this;\n  var key = this.getKeyName_(dataKey, opt_id);\n  var storage = this.getStorage_(dataKey.persistent);\n  // Get data stored in the default persistent storage identified by dataKey.\n  return this.get(dataKey, opt_id).then(function(response) {\n    // Get the stored value in window.localStorage if available.\n    var oldStorageValue = null;\n    try {\n      oldStorageValue = fireauth.util.parseJSON(\n          goog.global['localStorage']['getItem'](key));\n    } catch (e) {\n      // Set value as null. This will resolve the promise immediately.\n    }\n    // If data is stored in window.localStorage but no data is available in\n    // default persistent storage, migrate data from window.localStorage to\n    // default persistent storage.\n    if (oldStorageValue && !response) {\n      // This condition may fail in situations where a user opens a tab with\n      // an old version while using a tab with a new version, or when a\n      // developer switches back and forth between and old and new version of\n      // the library.\n      goog.global['localStorage']['removeItem'](key);\n      // Migrate the value to new default persistent storage.\n      return self.set(dataKey, oldStorageValue, opt_id);\n    } else if (oldStorageValue &&\n               response &&\n               storage.type != fireauth.storage.Storage.Type.LOCAL_STORAGE) {\n      // Data stored in both localStorage and new persistent storage (eg.\n      // indexedDB) for some reason.\n      // This could happen if the developer is migrating back and forth.\n      // The new default persistent storage (eg. indexedDB) takes precedence.\n      goog.global['localStorage']['removeItem'](key);\n    }\n  });\n};\n\n\n/**\n * Gets the stored value from the corresponding storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise} A Promise that resolves with the stored value.\n */\nfireauth.authStorage.Manager.prototype.get = function(dataKey, opt_id) {\n  var keyName = this.getKeyName_(dataKey, opt_id);\n  return this.getStorage_(dataKey.persistent).get(keyName);\n};\n\n\n/**\n * Removes the stored value from the corresponding storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise<void>} A Promise that resolves when the operation is\n *     completed.\n */\nfireauth.authStorage.Manager.prototype.remove = function(dataKey, opt_id) {\n  var keyName = this.getKeyName_(dataKey, opt_id);\n  // Keep local map up to date for requested key if persistent storage is used.\n  if (dataKey.persistent == fireauth.authStorage.Persistence.LOCAL) {\n    this.localMap_[keyName] = null;\n  }\n  return this.getStorage_(dataKey.persistent).remove(keyName);\n};\n\n\n/**\n * Stores the value in the corresponding storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {*} value The value to be stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise<void>} A Promise that resolves when the operation is\n *     completed.\n */\nfireauth.authStorage.Manager.prototype.set = function(dataKey, value, opt_id) {\n  var keyName = this.getKeyName_(dataKey, opt_id);\n  var self = this;\n  var storage = this.getStorage_(dataKey.persistent);\n  return storage.set(keyName, value)\n      .then(function() {\n        return storage.get(keyName);\n      })\n      .then(function(serializedValue) {\n        // Keep local map up to date for requested key if persistent storage is\n        // used.\n        if (dataKey.persistent == fireauth.authStorage.Persistence.LOCAL) {\n          self.localMap_[keyName] = serializedValue;\n        }\n      });\n};\n\n\n/**\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string} id When operating in multiple app mode, this ID associates\n *     storage values with specific apps.\n * @param {function()} listener The callback listener to run on storage event\n *     related to key.\n */\nfireauth.authStorage.Manager.prototype.addListener =\n    function(dataKey, id, listener) {\n  var key = this.getKeyName_(dataKey, id);\n  // Initialize local map for current key if web storage is supported.\n  if (this.webStorageSupported_) {\n    this.localMap_[key] = goog.global['localStorage']['getItem'](key);\n  }\n  if (goog.object.isEmpty(this.listeners_)) {\n    // Start listeners.\n    this.startListeners_();\n  }\n  if (!this.listeners_[key]) {\n    this.listeners_[key] = [];\n  }\n  this.listeners_[key].push(listener);\n};\n\n\n/**\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string} id When operating in multiple app mode, this ID associates\n *     storage values with specific apps.\n * @param {function()} listener The listener to remove.\n */\nfireauth.authStorage.Manager.prototype.removeListener =\n    function(dataKey, id, listener) {\n  var key = this.getKeyName_(dataKey, id);\n  if (this.listeners_[key]) {\n    goog.array.removeAllIf(\n        this.listeners_[key],\n        function(ele) {\n          return ele == listener;\n        });\n    if (this.listeners_[key].length == 0) {\n      delete this.listeners_[key];\n    }\n  }\n  if (goog.object.isEmpty(this.listeners_)) {\n    // Stop listeners.\n    this.stopListeners_();\n  }\n};\n\n\n/**\n * The delay to wait between continuous checks of localStorage on browsers where\n * tabs do not run in the background. After each interval wait, we check for\n * external changes in localStorage that were not detected in the current tab.\n * @const {number}\n * @private\n */\nfireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_ = 1000;\n\n\n/**\n * Starts all storage event listeners.\n * @private\n */\nfireauth.authStorage.Manager.prototype.startListeners_ = function() {\n  this.getStorage_(fireauth.authStorage.Persistence.LOCAL)\n      .addStorageListener(this.storageChangeEventHandler_);\n  // TODO: refactor this implementation to be handled by the underlying\n  // storage mechanism.\n  if (!this.runsInBackground_ &&\n      // Add an exception for browsers that persist storage with indexedDB, we\n      // should stick with indexedDB listener implementation in that case.\n      !fireauth.util.persistsStorageWithIndexedDB() &&\n      // Confirm browser web storage is supported as polling relies on it.\n      this.webStorageSupported_) {\n    this.startManualListeners_();\n  }\n};\n\n/**\n * Starts manual polling function to detect storage event changes.\n * @private\n */\nfireauth.authStorage.Manager.prototype.startManualListeners_ = function() {\n  var self = this;\n  this.stopManualListeners_();\n  /** @private {?number} The interval timer for manual storage checking. */\n  this.manualListenerTimer_ = setInterval(function() {\n    // Check all keys with listeners on them.\n    for (var key in self.listeners_) {\n      // Get value from localStorage.\n      var currentValue = goog.global['localStorage']['getItem'](key);\n      var oldValue = self.localMap_[key];\n      // If local map value does not match, trigger listener with storage event.\n      if (currentValue != oldValue) {\n        self.localMap_[key] = currentValue;\n        var event = new goog.events.BrowserEvent(/** @type {!Event} */ ({\n          type: 'storage',\n          key: key,\n          target: window,\n          oldValue: oldValue,\n          newValue: currentValue,\n          // Differentiate this simulated event from the real storage event.\n          poll: true\n        }));\n        self.storageChangeEvent_(event);\n      }\n    }\n  }, fireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_);\n};\n\n\n/**\n * Stops manual polling function to detect storage event changes.\n * @private\n */\nfireauth.authStorage.Manager.prototype.stopManualListeners_ = function() {\n  if (this.manualListenerTimer_) {\n    clearInterval(this.manualListenerTimer_);\n    this.manualListenerTimer_ = null;\n  }\n};\n\n\n/**\n * Stops all storage event listeners.\n * @private\n */\nfireauth.authStorage.Manager.prototype.stopListeners_ = function() {\n  this.getStorage_(fireauth.authStorage.Persistence.LOCAL)\n      .removeStorageListener(this.storageChangeEventHandler_);\n  this.stopManualListeners_();\n};\n\n\n/**\n * @param {!goog.events.BrowserEvent|!Array<string>} data The storage event\n *     triggered or the array of keys modified.\n * @private\n */\nfireauth.authStorage.Manager.prototype.storageChangeEvent_ = function(data) {\n  if (data && data.getBrowserEvent) {\n    var event = /** @type {!goog.events.BrowserEvent} */ (data);\n    var key = event.getBrowserEvent().key;\n    // Key would be null in some situations, like when localStorage is cleared\n    // from the browser developer tools.\n    if (key == null) {\n      // For all keys of interest.\n      for (var keyName in this.listeners_) {\n        // Check if something changed in this key's real value.\n        var storedValue = this.localMap_[keyName];\n        // localStorage returns null when a field is not found.\n        if (typeof storedValue === 'undefined') {\n          storedValue = null;\n        }\n        var realValue = goog.global['localStorage']['getItem'](keyName);\n        if (realValue !== storedValue) {\n          // Update local map with real value.\n          this.localMap_[keyName] = realValue;\n          // Trigger that key's listener.\n          this.callListeners_(keyName);\n        }\n      }\n      return;\n    }\n    // Check if the key is Firebase Auth related, otherwise ignore.\n    if (key.indexOf(this.namespace_ + this.separator_) != 0 ||\n        // Ignore keys that have no listeners.\n        !this.listeners_[key]) {\n      return;\n    }\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    // Do not use hasOwnProperty('poll') as poll gets obfuscated.\n    if (typeof event.getBrowserEvent().poll !== 'undefined') {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.getStorage_(fireauth.authStorage.Persistence.LOCAL)\n          .removeStorageListener(this.storageChangeEventHandler_);\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopManualListeners_();\n    }\n    // Safari embedded iframe. Storage event will trigger with the delta changes\n    // but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced_) {\n      // Get current iframe page value, old value and new value.\n      var currentValue = goog.global['localStorage']['getItem'](key);\n      var newValue = event.getBrowserEvent().newValue;\n      // Value not synchronized, synchronize manually.\n      if (newValue !== currentValue) {\n        if (newValue !== null) {\n          // Value changed from current value.\n          goog.global['localStorage']['setItem'](key, newValue);\n        } else {\n          // Current value deleted.\n          goog.global['localStorage']['removeItem'](key);\n        }\n      } else {\n        // Already detected and processed, do not trigger listeners again.\n        if (this.localMap_[key] === newValue &&\n            // Real storage event.\n            typeof event.getBrowserEvent().poll === 'undefined') {\n          return;\n        }\n      }\n    }\n    var self = this;\n    var triggerListeners = function() {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      if (typeof event.getBrowserEvent().poll === 'undefined' &&\n          self.localMap_[key] === goog.global['localStorage']['getItem'](key)) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      self.localMap_[key] = goog.global['localStorage']['getItem'](key);\n      self.callListeners_(key);\n    };\n    if (fireauth.util.isIe10() &&\n        goog.global['localStorage']['getItem'](key) !==\n        event.getBrowserEvent().newValue &&\n        event.getBrowserEvent().newValue !== event.getBrowserEvent().oldValue) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures this\n      // recovers from that situation.\n      setTimeout(\n          triggerListeners, fireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  } else {\n    var keys = /** @type {!Array<string>} */ (data);\n    goog.array.forEach(keys, goog.bind(this.callListeners_, this));\n  }\n};\n\n\n/**\n * Calls all listeners for specified storage event key.\n * @param {string} key The storage event key whose listeners are to be run.\n * @private\n */\nfireauth.authStorage.Manager.prototype.callListeners_ = function(key) {\n  if (this.listeners_[key]) {\n    goog.array.forEach(\n        this.listeners_[key],\n        function(listener) {\n          listener();\n        });\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.AuthEventManager class used by\n * the iframe to retrieve and delete Auth events triggered through an OAuth\n * flow.\n */\n\ngoog.provide('fireauth.storage.AuthEventManager');\ngoog.provide('fireauth.storage.AuthEventManager.Keys');\n\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.authStorage');\n\n\n/**\n * Defines the Auth event storage manager. It provides methods to\n * load and delete Auth events as well as listen to external OAuth changes on\n * them.\n * @param {string} appId The Auth event's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.AuthEventManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth event's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * Valid keys for Auth event manager data.\n * @enum {!fireauth.authStorage.Key}\n */\nfireauth.storage.AuthEventManager.Keys = {\n  AUTH_EVENT: {\n    name: 'authEvent',\n    persistent: fireauth.authStorage.Persistence.LOCAL\n  },\n  REDIRECT_EVENT: {\n    name: 'redirectEvent',\n    persistent: fireauth.authStorage.Persistence.SESSION\n  }\n};\n\n\n/**\n * @return {!goog.Promise<?fireauth.AuthEvent>} A promise that resolves on\n *     success with the stored Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.getAuthEvent = function() {\n  return this.manager_.get(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_)\n      .then(function(response) {\n        return fireauth.AuthEvent.fromPlainObject(response);\n      });\n};\n\n\n/**\n * Removes the identifier's Auth event if it exists.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.AuthEventManager.prototype.removeAuthEvent = function() {\n  return this.manager_.remove(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_);\n};\n\n\n/**\n * Adds a listener to Auth event for App ID provided.\n * @param {!function()} listener The listener to run on Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.addAuthEventListener =\n    function(listener) {\n  this.manager_.addListener(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_, listener);\n};\n\n\n/**\n * Removes a listener to Auth event for App ID provided.\n * @param {!function()} listener The listener to run on Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.removeAuthEventListener =\n    function(listener) {\n  this.manager_.removeListener(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_, listener);\n};\n\n\n/**\n * @return {!goog.Promise<?fireauth.AuthEvent>} A promise that resolves on\n *     success with the stored redirect Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.getRedirectEvent =\n    function() {\n  return this.manager_.get(\n      fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT,\n      this.appId_).then(function(response) {\n        return fireauth.AuthEvent.fromPlainObject(response);\n      });\n};\n\n\n/**\n * Removes the identifier's redirect Auth event if it exists.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.AuthEventManager.prototype.removeRedirectEvent = function() {\n  return this.manager_.remove(\n      fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT, this.appId_);\n};\n","// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Base class for SHA-2 cryptographic hash.\n *\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Some code similar to SHA1 are borrowed from sha1.js written by mschilder@.\n *\n */\n\ngoog.provide('goog.crypt.Sha2');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.crypt.Hash');\n\n\n\n/**\n * SHA-2 cryptographic hash constructor.\n * This constructor should not be used directly to create the object. Rather,\n * one should use the constructor of the sub-classes.\n * @param {number} numHashBlocks The size of output in 16-byte blocks.\n * @param {!Array<number>} initHashBlocks The hash-specific initialization\n * @constructor\n * @extends {goog.crypt.Hash}\n * @struct\n */\ngoog.crypt.Sha2 = function(numHashBlocks, initHashBlocks) {\n  goog.crypt.Sha2.base(this, 'constructor');\n\n  this.blockSize = goog.crypt.Sha2.BLOCKSIZE_;\n\n  /**\n   * A chunk holding the currently processed message bytes. Once the chunk has\n   * 64 bytes, we feed it into computeChunk_ function and reset this.chunk_.\n   * @private {!Array<number>|!Uint8Array}\n   */\n  this.chunk_ = goog.global['Uint8Array'] ? new Uint8Array(this.blockSize) :\n                                            new Array(this.blockSize);\n\n  /**\n   * Current number of bytes in this.chunk_.\n   * @private {number}\n   */\n  this.inChunk_ = 0;\n\n  /**\n   * Total number of bytes in currently processed message.\n   * @private {number}\n   */\n  this.total_ = 0;\n\n\n  /**\n   * Holds the previous values of accumulated hash a-h in the computeChunk_\n   * function.\n   * @private {!Array<number>|!Int32Array}\n   */\n  this.hash_ = [];\n\n  /**\n   * The number of output hash blocks (each block is 4 bytes long).\n   * @private {number}\n   */\n  this.numHashBlocks_ = numHashBlocks;\n\n  /**\n   * @private {!Array<number>} initHashBlocks\n   */\n  this.initHashBlocks_ = initHashBlocks;\n\n  /**\n   * Temporary array used in chunk computation.  Allocate here as a\n   * member rather than as a local within computeChunk_() as a\n   * performance optimization to reduce the number of allocations and\n   * reduce garbage collection.\n   * @private {!Int32Array|!Array<number>}\n   */\n  this.w_ = goog.global['Int32Array'] ? new Int32Array(64) : new Array(64);\n\n  if (!goog.isDef(goog.crypt.Sha2.Kx_)) {\n    // This is the first time this constructor has been called.\n    if (goog.global['Int32Array']) {\n      // Typed arrays exist\n      goog.crypt.Sha2.Kx_ = new Int32Array(goog.crypt.Sha2.K_);\n    } else {\n      // Typed arrays do not exist\n      goog.crypt.Sha2.Kx_ = goog.crypt.Sha2.K_;\n    }\n  }\n\n  this.reset();\n};\ngoog.inherits(goog.crypt.Sha2, goog.crypt.Hash);\n\n\n/**\n * The block size\n * @private {number}\n */\ngoog.crypt.Sha2.BLOCKSIZE_ = 512 / 8;\n\n\n/**\n * Contains data needed to pad messages less than BLOCK_SIZE_ bytes.\n * @private {!Array<number>}\n */\ngoog.crypt.Sha2.PADDING_ = goog.array.concat(\n    128, goog.array.repeat(0, goog.crypt.Sha2.BLOCKSIZE_ - 1));\n\n\n/** @override */\ngoog.crypt.Sha2.prototype.reset = function() {\n  this.inChunk_ = 0;\n  this.total_ = 0;\n  this.hash_ = goog.global['Int32Array'] ?\n      new Int32Array(this.initHashBlocks_) :\n      goog.array.clone(this.initHashBlocks_);\n};\n\n\n/**\n * Helper function to compute the hashes for a given 512-bit message chunk.\n * @private\n */\ngoog.crypt.Sha2.prototype.computeChunk_ = function() {\n  var chunk = this.chunk_;\n  goog.asserts.assert(chunk.length == this.blockSize);\n  var rounds = 64;\n\n  // Divide the chunk into 16 32-bit-words.\n  var w = this.w_;\n  var index = 0;\n  var offset = 0;\n  while (offset < chunk.length) {\n    w[index++] = (chunk[offset] << 24) | (chunk[offset + 1] << 16) |\n        (chunk[offset + 2] << 8) | (chunk[offset + 3]);\n    offset = index * 4;\n  }\n\n  // Extend the w[] array to be the number of rounds.\n  for (var i = 16; i < rounds; i++) {\n    var w_15 = w[i - 15] | 0;\n    var s0 = ((w_15 >>> 7) | (w_15 << 25)) ^ ((w_15 >>> 18) | (w_15 << 14)) ^\n        (w_15 >>> 3);\n    var w_2 = w[i - 2] | 0;\n    var s1 = ((w_2 >>> 17) | (w_2 << 15)) ^ ((w_2 >>> 19) | (w_2 << 13)) ^\n        (w_2 >>> 10);\n\n    // As a performance optimization, construct the sum a pair at a time\n    // with casting to integer (bitwise OR) to eliminate unnecessary\n    // double<->integer conversions.\n    var partialSum1 = ((w[i - 16] | 0) + s0) | 0;\n    var partialSum2 = ((w[i - 7] | 0) + s1) | 0;\n    w[i] = (partialSum1 + partialSum2) | 0;\n  }\n\n  var a = this.hash_[0] | 0;\n  var b = this.hash_[1] | 0;\n  var c = this.hash_[2] | 0;\n  var d = this.hash_[3] | 0;\n  var e = this.hash_[4] | 0;\n  var f = this.hash_[5] | 0;\n  var g = this.hash_[6] | 0;\n  var h = this.hash_[7] | 0;\n  for (var i = 0; i < rounds; i++) {\n    var S0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n    var maj = ((a & b) ^ (a & c) ^ (b & c));\n    var t2 = (S0 + maj) | 0;\n    var S1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n    var ch = ((e & f) ^ ((~e) & g));\n\n    // As a performance optimization, construct the sum a pair at a time\n    // with casting to integer (bitwise OR) to eliminate unnecessary\n    // double<->integer conversions.\n    var partialSum1 = (h + S1) | 0;\n    var partialSum2 = (ch + (goog.crypt.Sha2.Kx_[i] | 0)) | 0;\n    var partialSum3 = (partialSum2 + (w[i] | 0)) | 0;\n    var t1 = (partialSum1 + partialSum3) | 0;\n\n    h = g;\n    g = f;\n    f = e;\n    e = (d + t1) | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = (t1 + t2) | 0;\n  }\n\n  this.hash_[0] = (this.hash_[0] + a) | 0;\n  this.hash_[1] = (this.hash_[1] + b) | 0;\n  this.hash_[2] = (this.hash_[2] + c) | 0;\n  this.hash_[3] = (this.hash_[3] + d) | 0;\n  this.hash_[4] = (this.hash_[4] + e) | 0;\n  this.hash_[5] = (this.hash_[5] + f) | 0;\n  this.hash_[6] = (this.hash_[6] + g) | 0;\n  this.hash_[7] = (this.hash_[7] + h) | 0;\n};\n\n\n/** @override */\ngoog.crypt.Sha2.prototype.update = function(message, opt_length) {\n  if (!goog.isDef(opt_length)) {\n    opt_length = message.length;\n  }\n  // Process the message from left to right up to |opt_length| bytes.\n  // When we get a 512-bit chunk, compute the hash of it and reset\n  // this.chunk_. The message might not be multiple of 512 bits so we\n  // might end up with a chunk that is less than 512 bits. We store\n  // such partial chunk in this.chunk_ and it will be filled up later\n  // in digest().\n  var n = 0;\n  var inChunk = this.inChunk_;\n\n  // The input message could be either byte array of string.\n  if (goog.isString(message)) {\n    while (n < opt_length) {\n      this.chunk_[inChunk++] = message.charCodeAt(n++);\n      if (inChunk == this.blockSize) {\n        this.computeChunk_();\n        inChunk = 0;\n      }\n    }\n  } else if (goog.isArrayLike(message)) {\n    while (n < opt_length) {\n      var b = message[n++];\n      if (!('number' == typeof b && 0 <= b && 255 >= b && b == (b | 0))) {\n        throw new Error('message must be a byte array');\n      }\n      this.chunk_[inChunk++] = b;\n      if (inChunk == this.blockSize) {\n        this.computeChunk_();\n        inChunk = 0;\n      }\n    }\n  } else {\n    throw new Error('message must be string or array');\n  }\n\n  // Record the current bytes in chunk to support partial update.\n  this.inChunk_ = inChunk;\n\n  // Record total message bytes we have processed so far.\n  this.total_ += opt_length;\n};\n\n\n/** @override */\ngoog.crypt.Sha2.prototype.digest = function() {\n  var digest = [];\n  var totalBits = this.total_ * 8;\n\n  // Append pad 0x80 0x00*.\n  if (this.inChunk_ < 56) {\n    this.update(goog.crypt.Sha2.PADDING_, 56 - this.inChunk_);\n  } else {\n    this.update(\n        goog.crypt.Sha2.PADDING_, this.blockSize - (this.inChunk_ - 56));\n  }\n\n  // Append # bits in the 64-bit big-endian format.\n  for (var i = 63; i >= 56; i--) {\n    this.chunk_[i] = totalBits & 255;\n    totalBits /= 256;  // Don't use bit-shifting here!\n  }\n  this.computeChunk_();\n\n  // Finally, output the result digest.\n  var n = 0;\n  for (var i = 0; i < this.numHashBlocks_; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      digest[n++] = ((this.hash_[i] >> j) & 255);\n    }\n  }\n  return digest;\n};\n\n\n/**\n * Constants used in SHA-2.\n * @const\n * @private {!Array<number>}\n */\ngoog.crypt.Sha2.K_ = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\n\n/**\n * Sha2.K as an Int32Array if this JS supports typed arrays; otherwise,\n * the same array as Sha2.K.\n *\n * The compiler cannot remove an Int32Array, even if it is not needed\n * (There are certain cases where creating an Int32Array is not\n * side-effect free).  Instead, the first time we construct a Sha2\n * instance, we convert or assign Sha2.K as appropriate.\n * @private {undefined|!Array<number>|!Int32Array}\n */\ngoog.crypt.Sha2.Kx_;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.OAuthHandlerManager class which\n * provides utilities to the OAuth handler widget to set Auth events after an\n * IDP sign in attempt and to store state during the OAuth handshake with IDP.\n */\n\ngoog.provide('fireauth.storage.OAuthHandlerManager');\n\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.OAuthHelperState');\ngoog.require('fireauth.authStorage');\ngoog.require('fireauth.storage.AuthEventManager.Keys');\n\n\n/**\n * Defines the OAuth handler storage manager. It provides methods to\n * store, load and delete OAuth handler widget state, properties and setting\n * Auth events.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.OAuthHandlerManager = function(opt_manager) {\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * Valid keys for OAuth handler manager data.\n * @private @enum {!fireauth.authStorage.Key}\n */\nfireauth.storage.OAuthHandlerManager.Keys_ = {\n  OAUTH_HELPER_STATE: {\n    name: 'oauthHelperState',\n    persistent: fireauth.authStorage.Persistence.SESSION\n  },\n  SESSION_ID: {\n    name: 'sessionId',\n    persistent: fireauth.authStorage.Persistence.SESSION\n  }\n};\n\n\n/**\n * @param {string} appId The Auth state's application ID.\n * @return {!goog.Promise<?string|undefined>} A promise that resolves on success\n *     with the stored session ID.\n */\nfireauth.storage.OAuthHandlerManager.prototype.getSessionId = function(appId) {\n  return this.manager_.get(\n      fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID, appId);\n};\n\n\n/**\n * Removes the session ID string if it exists.\n * @param {string} appId The Auth state's application ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.removeSessionId =\n    function(appId) {\n  return this.manager_.remove(\n      fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID, appId);\n};\n\n\n/**\n * Stores the session ID string.\n * @param {string} appId The Auth state's application ID.\n * @param {string} sessionId The session ID string to store.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setSessionId =\n    function(appId, sessionId) {\n  return this.manager_.set(\n      fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID, sessionId, appId);\n};\n\n\n/**\n * @return {!goog.Promise<?fireauth.OAuthHelperState>} A promise that resolves\n *     on success with the stored OAuth helper state.\n */\nfireauth.storage.OAuthHandlerManager.prototype.getOAuthHelperState =\n    function() {\n  return this.manager_.get(\n      fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE)\n      .then(function(response) {\n        return fireauth.OAuthHelperState.fromPlainObject(response);\n      });\n};\n\n\n/**\n * Removes the current OAuth helper state if it exists.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.removeOAuthHelperState =\n    function() {\n  return this.manager_.remove(\n      fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE);\n};\n\n\n/**\n * Stores the current OAuth helper state.\n * @param {!fireauth.OAuthHelperState} state The OAuth helper state.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setOAuthHelperState =\n    function(state) {\n  return this.manager_.set(\n      fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE,\n      state.toPlainObject());\n};\n\n\n/**\n * Stores the Auth event for specified identifier.\n * @param {string} appId The Auth state's application ID.\n * @param {!fireauth.AuthEvent} authEvent The Auth event.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setAuthEvent =\n    function(appId, authEvent) {\n  return this.manager_.set(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT,\n      authEvent.toPlainObject(),\n      appId);\n};\n\n\n/**\n * Stores the redirect Auth event for specified identifier.\n * @param {string} appId The Auth state's application ID.\n * @param {!fireauth.AuthEvent} authEvent The redirect Auth event.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setRedirectEvent =\n    function(appId, authEvent) {\n  return this.manager_.set(\n      fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT,\n      authEvent.toPlainObject(),\n      appId);\n};\n","// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See goog.crypt.Sha1 and goog.crypt.Md5 for sample implementations.\n *\n */\n\ngoog.provide('goog.crypt.Hash');\n\n\n\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\ngoog.crypt.Hash = function() {\n  /**\n   * The block size for the hasher.\n   * @type {number}\n   */\n  this.blockSize = -1;\n};\n\n\n/**\n * Resets the internal accumulator.\n */\ngoog.crypt.Hash.prototype.reset = goog.abstractMethod;\n\n\n/**\n * Adds a byte array (array with values in [0-255] range) or a string (must\n * only contain 8-bit, i.e., Latin1 characters) to the internal accumulator.\n *\n * Many hash functions operate on blocks of data and implement optimizations\n * when a full chunk of data is readily available. Hence it is often preferable\n * to provide large chunks of data (a kilobyte or more) than to repeatedly\n * call the update method with few tens of bytes. If this is not possible, or\n * not feasible, it might be good to provide data in multiplies of hash block\n * size (often 64 bytes). Please see the implementation and performance tests\n * of your favourite hash.\n *\n * @param {Array<number>|Uint8Array|string} bytes Data used for the update.\n * @param {number=} opt_length Number of bytes to use.\n */\ngoog.crypt.Hash.prototype.update = goog.abstractMethod;\n\n\n/**\n * @return {!Array<number>} The finalized hash computed\n *     from the internal accumulator.\n */\ngoog.crypt.Hash.prototype.digest = goog.abstractMethod;\n","// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview SHA-256 cryptographic hash.\n *\n * Usage:\n *   var sha256 = new goog.crypt.Sha256();\n *   sha256.update(bytes);\n *   var hash = sha256.digest();\n *\n */\n\ngoog.provide('goog.crypt.Sha256');\n\ngoog.require('goog.crypt.Sha2');\n\n\n\n/**\n * SHA-256 cryptographic hash constructor.\n *\n * @constructor\n * @extends {goog.crypt.Sha2}\n * @final\n * @struct\n */\ngoog.crypt.Sha256 = function() {\n  goog.crypt.Sha256.base(\n      this, 'constructor', 8, goog.crypt.Sha256.INIT_HASH_BLOCK_);\n};\ngoog.inherits(goog.crypt.Sha256, goog.crypt.Sha2);\n\n\n/** @private {!Array<number>} */\ngoog.crypt.Sha256.INIT_HASH_BLOCK_ = [\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c,\n  0x1f83d9ab, 0x5be0cd19\n];\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines Cordova utility and helper functions.\n * The following plugins must be installed:\n * cordova plugin add cordova-plugin-buildinfo\n * cordova plugin add cordova-universal-links-plugin-fix\n * cordova plugin add cordova-plugin-browsertab\n * cordova plugin add cordova-plugin-inappbrowser\n * iOS custom scheme support:\n * cordova plugin add cordova-plugin-customurlscheme --variable \\\n * URL_SCHEME=com.firebase.example\n * Console logging in iOS:\n * cordova plugin add cordova-plugin-console\n */\n\ngoog.provide('fireauth.CordovaHandler');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.DynamicLink');\ngoog.require('fireauth.OAuthSignInHandler');\ngoog.require('fireauth.UniversalLinkSubscriber');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.storage.AuthEventManager');\ngoog.require('fireauth.storage.OAuthHandlerManager');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.crypt');\ngoog.require('goog.crypt.Sha256');\n\n\n/**\n * Cordova environment utility and helper functions.\n * @param {string} authDomain The application authDomain.\n * @param {string} apiKey The API key.\n * @param {string} appName The App name.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {number=} opt_initialTimeout Initial Auth event timeout.\n * @param {number=} opt_redirectTimeout Redirect result timeout.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @constructor\n * @implements {fireauth.OAuthSignInHandler}\n */\nfireauth.CordovaHandler = function(authDomain, apiKey, appName,\n    opt_clientVersion, opt_initialTimeout, opt_redirectTimeout,\n    opt_endpointId) {\n  /** @private {string} The application authDomain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The application API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The application name. */\n  this.appName_ = appName;\n  /** @private {?string} The client version */\n  this.clientVersion_ = opt_clientVersion || null;\n  /** @private {?string} The Auth endpoint ID. */\n  this.endpointId_ = opt_endpointId || null;\n  /** @private {string} The storage key. */\n  this.storageKey_ = fireauth.util.createStorageKey(apiKey, appName);\n  /**\n   * @private {!fireauth.storage.OAuthHandlerManager} The OAuth handler\n   *     storage manager reference, used to save a partial Auth event when\n   *     redirect operation is triggered.\n   */\n  this.savePartialEventManager_ = new fireauth.storage.OAuthHandlerManager();\n  /**\n   * @private {!fireauth.storage.AuthEventManager} The Auth event storage\n   *     manager reference. This is used to get back the saved partial Auth\n   *     event and then delete on successful handling.\n   */\n  this.getAndDeletePartialEventManager_ =\n      new fireauth.storage.AuthEventManager(this.storageKey_);\n  /**\n   * @private {?goog.Promise<!fireauth.AuthEvent>} A promise that resolves with\n   *     the OAuth redirect URL response.\n   */\n  this.initialAuthEvent_ = null;\n  /**\n   * @private {!Array<!function(?fireauth.AuthEvent)>} The Auth event\n   *     listeners.\n   */\n  this.authEventListeners_ = [];\n  /** @private {number} The initial Auth event timeout. */\n  this.initialTimeout_ = opt_initialTimeout ||\n      fireauth.CordovaHandler.INITIAL_TIMEOUT_MS_;\n  /** @private {number} The return to app after redirect timeout. */\n  this.redirectTimeout_ = opt_redirectTimeout ||\n      fireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_;\n  /**\n   * @private {?goog.Promise} The last pending redirect promise. This is null if\n   *     already completed.\n   */\n  this.pendingRedirect_ = null;\n  /**\n   * @private {?Object} The inAppBrowser reference window if available. This is\n   *     relevant to iOS 7 and 8 embedded webviews.\n   */\n  this.inAppBrowserRef_ = null;\n};\n\n\n/**\n * The total number of chars used to generate the session ID string.\n * @const {number}\n * @private\n */\nfireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_ = 20;\n\n\n/**\n * The default initial Auth event timeout in ms.\n * @const {number}\n * @private\n */\nfireauth.CordovaHandler.INITIAL_TIMEOUT_MS_ = 500;\n\n\n/**\n * The default timeout in milliseconds for a pending redirect operation after\n * returning to the app.\n * @const {number}\n * @private\n */\nfireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_ = 2000;\n\n\n/**\n * Constructs a Cordova configuration error message.\n * @param {?string=} opt_message The optional error message to be used. This\n *     will override the existing default one.\n * @return {!fireauth.AuthError} The Cordova invalid configuration error with\n *     the custom message provided. If no message is provided, the default\n *     message is used.\n * @private\n */\nfireauth.CordovaHandler.getError_ = function(opt_message) {\n  return new fireauth.AuthError(\n      fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION,\n      opt_message);\n};\n\n\n/**\n * Initializes the Cordova environment and waits for it to be ready.\n * @return {!goog.Promise} A promise that resolves if the current environment is\n *     a Cordova environment.\n * @override\n */\nfireauth.CordovaHandler.prototype.initializeAndWait = function() {\n  if (this.isReady_) {\n    return this.isReady_;\n  }\n  this.isReady_ = fireauth.util.checkIfCordova().then(function() {\n    // Check all dependencies installed.\n    // Note that cordova-universal-links-plugin has been abandoned.\n    // A fork with latest fixes is available at:\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n    var subscribe = fireauth.util.getObjectRef(\n        'universalLinks.subscribe', goog.global);\n    if (typeof subscribe !== 'function') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-universal-links-plugin-fix is not installed');\n    }\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\n    var appIdentifier =\n        fireauth.util.getObjectRef('BuildInfo.packageName', goog.global);\n    if (typeof appIdentifier === 'undefined') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-plugin-buildinfo is not installed');\n    }\n    // https://github.com/google/cordova-plugin-browsertab\n    var openUrl = fireauth.util.getObjectRef(\n        'cordova.plugins.browsertab.openUrl', goog.global);\n    if (typeof openUrl !== 'function') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-plugin-browsertab is not installed');\n    }\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n    var openInAppBrowser = fireauth.util.getObjectRef(\n        'cordova.InAppBrowser.open', goog.global);\n    if (typeof openInAppBrowser !== 'function') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-plugin-inappbrowser is not installed');\n    }\n  }, function(error) {\n    // If not supported.\n    throw new fireauth.AuthError(fireauth.authenum.Error.CORDOVA_NOT_READY);\n  });\n  return this.isReady_;\n};\n\n\n/**\n * Generates a session ID. Used to prevent session fixation attacks.\n * @param {number} numOfChars The number of characters to generate.\n * @return {string} The generated session ID.\n * @private\n */\nfireauth.CordovaHandler.prototype.generateSessionId_ = function(numOfChars) {\n  var chars = [];\n  var allowedChars =\n      '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  while (numOfChars > 0) {\n    var index = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(index));\n    numOfChars--;\n  }\n  return chars.join('');\n};\n\n\n/**\n * Computes the sha256 hash of a session ID.\n * @param {string} str The string to hash.\n * @return {string} The hashed string.\n * @private\n */\nfireauth.CordovaHandler.prototype.computeSecureHash_ = function(str) {\n  // sha256 the sessionId. This will be passed to the OAuth backend.\n  // When exchanging the Auth code with a firebase ID token, the raw session ID\n  // needs to be provided.\n  var sha256 = new goog.crypt.Sha256();\n  sha256.update(str);\n  return goog.crypt.byteArrayToHex(sha256.digest());\n};\n\n\n/**\n * Waits for popup window to close and time out if the result is unhandled.\n * This is not supported in Cordova.\n * @param {!Window} popupWin The popup window.\n * @param {!function(!fireauth.AuthError)} onError The on error callback.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.CordovaHandler.prototype.startPopupTimeout =\n    function(popupWin, onError, timeoutDuration) {\n  // Not supported operation, check processPopup for details.\n  onError(new fireauth.AuthError(\n      fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes the popup request. This is not supported in Cordova.\n * @param {?Window} popupWin The popup window reference.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function()} onInitialize The function to call on initialization.\n * @param {!function(*)} onError The function to call on error.\n * @param {string=} opt_eventId The optional event ID.\n * @param {boolean=} opt_alreadyRedirected Whether popup is already redirected\n *     to final destination.\n * @return {!goog.Promise} The popup window promise.\n * @override\n */\nfireauth.CordovaHandler.prototype.processPopup = function(\n    popupWin,\n    mode,\n    provider,\n    onInitialize,\n    onError,\n    opt_eventId,\n    opt_alreadyRedirected) {\n  // Popups not supported in Cordova as the activity could be destroyed in\n  // some cases. Redirect works better as getRedirectResult can be used as a\n  // fallback to get the result when the activity is detroyed.\n  return goog.Promise.reject(new fireauth.AuthError(\n      fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n};\n\n\n/**\n * @return {boolean} Whether the handler will unload the current page on\n *     redirect operations.\n * @override\n */\nfireauth.CordovaHandler.prototype.unloadsOnRedirect = function() {\n  // Does not necessarily unload the page on redirect.\n  return false;\n};\n\n\n/**\n * @return {boolean} Whether the handler should be initialized early.\n * @override\n */\nfireauth.CordovaHandler.prototype.shouldBeInitializedEarly = function() {\n  // Initialize early to detect incoming link. This is not an expensive\n  // operation, unlike embedding an iframe.\n  return true;\n};\n\n\n/**\n * @return {boolean} Whether the sign-in handler in the current environment\n *     has volatile session storage.\n * @override\n */\nfireauth.CordovaHandler.prototype.hasVolatileStorage = function() {\n  // An activity can be destroyed and thereby sessionStorage wiped out.\n  return true;\n};\n\n\n/**\n * Processes the OAuth redirect request. Will resolve when the OAuth response\n * is detected in the incoming link and the corresponding Auth event is\n * triggered.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.CordovaHandler.prototype.processRedirect = function(\n    mode,\n    provider,\n    opt_eventId) {\n  // If there is already a pending redirect, throw an error.\n  if (this.pendingRedirect_) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.REDIRECT_OPERATION_PENDING));\n  }\n  var self = this;\n  var doc = goog.global.document;\n  // On close timer promise.\n  var onClose = null;\n  // Auth event detection callback;\n  var authEventCallback = null;\n  // On resume (return from the redirect operation).\n  var onResume = null;\n  // On visibility change used to detect return to app in certain versions,\n  // currently iOS.\n  var onVisibilityChange = null;\n  // When the processRedirect promise completes, clean up any remaining\n  // temporary listeners and timers.\n  var cleanup = function() {\n    // Remove current resume listener.\n    if (onResume) {\n      doc.removeEventListener('resume', onResume, false);\n    }\n    // Remove visibility change listener.\n    if (onVisibilityChange) {\n      doc.removeEventListener('visibilitychange', onVisibilityChange, false);\n    }\n    // Cancel onClose promise if not already cancelled.\n    if (onClose) {\n      onClose.cancel();\n    }\n    // Remove Auth event callback.\n    if (authEventCallback) {\n      self.removeAuthEventListener(authEventCallback);\n    }\n    // Clear any pending redirect now that it is completed.\n    self.pendingRedirect_ = null;\n  };\n  // Save the pending redirect promise and clear it on completion.\n  this.pendingRedirect_ = goog.Promise.resolve().then(function() {\n    // Validate provider.\n    // Fail fast in this case.\n    fireauth.AuthProvider.checkIfOAuthSupported(provider);\n    return self.getInitialAuthEvent_();\n  }).then(function() {\n    return self.processRedirectInternal_(mode, provider, opt_eventId);\n  }).then(function() {\n    // Wait for result (universal link) before resolving this operation.\n    // This ensures that if the activity is not destroyed, we can still\n    // return the result of this operation.\n    return new goog.Promise(function(resolve, reject) {\n      /**\n       * @param {?fireauth.AuthEvent} event The Auth event detected.\n       * @return {boolean}\n       */\n      authEventCallback = function(event) {\n        // Auth event detected, resolve promise.\n        // Close SFSVC if still open.\n        var closeBrowsertab = fireauth.util.getObjectRef(\n            'cordova.plugins.browsertab.close', goog.global);\n        resolve();\n        // Close the SFSVC if it is still open (iOS 9+).\n        if (typeof closeBrowsertab === 'function') {\n          closeBrowsertab();\n        }\n        // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n        // open.\n        if (self.inAppBrowserRef_ &&\n            typeof self.inAppBrowserRef_['close'] === 'function') {\n          self.inAppBrowserRef_['close']();\n          // Reset reference.\n          self.inAppBrowserRef_ = null;\n        }\n        return false;\n      };\n      // Wait and listen for the operation to complete (Auth event would\n      // trigger).\n      self.addAuthEventListener(authEventCallback);\n      // On resume (return from the redirect operation).\n      onResume = function() {\n        // Already resumed. Do not run again.\n        if (onClose) {\n          return;\n        }\n        // Wait for some time before throwing the error that the flow was\n        // cancelled by the user.\n        onClose = goog.Timer.promise(self.redirectTimeout_).then(function() {\n          // Throw the redirect cancelled by user error.\n          reject(new fireauth.AuthError(\n              fireauth.authenum.Error.REDIRECT_CANCELLED_BY_USER));\n        });\n      };\n      onVisibilityChange = function() {\n        // If app is visible, run onResume. Otherwise, ignore.\n        if (fireauth.util.isAppVisible()) {\n          onResume();\n        }\n      };\n      // Listen to resume event (will trigger when the user returns to the app).\n      doc.addEventListener('resume', onResume, false);\n      // Listen to visibility change. This is used for iOS Cordova Safari 7+.\n      // Does not work in Android stock browser versions older than 4.4.\n      // We rely on resume event in Android as it works reliably in all\n      // versions.\n      if (!fireauth.util.isAndroid()) {\n        doc.addEventListener('visibilitychange', onVisibilityChange, false);\n      }\n    }).thenCatch(function(error) {\n      // Remove any pending partial event.\n      return self.getPartialStoredEvent_().then(function() {\n        throw error;\n      });\n    });\n  }).thenAlways(cleanup);\n  // Return the pending redirect promise.\n  return this.pendingRedirect_;\n};\n\n/**\n * Processes the OAuth redirect request.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n * @private\n */\nfireauth.CordovaHandler.prototype.processRedirectInternal_ = function(\n    mode,\n    provider,\n    opt_eventId) {\n  var self = this;\n  // https://github.com/google/cordova-plugin-browsertab\n  // Opens chrome custom tab in Android if chrome is installed,\n  // SFSafariViewController in iOS if supported.\n  // If the above are not supported, opens the system browser.\n  // Opening a system browser could result in an app being rejected in the App\n  // Store. The only solution here is to use an insecure embedded UIWebView.\n  // This applies to older iOS versions 8 and under.\n  // Generate a random session ID.\n  var sessionId = this.generateSessionId_(\n      fireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_);\n  // Create the partial Auth event.\n  var event = new fireauth.AuthEvent(\n      mode,\n      opt_eventId,\n      null,\n      sessionId,\n      new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));\n  // Use buildinfo package to get app metadata.\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  // Get app identifier.\n  var appIdentifier =\n      fireauth.util.getObjectRef('BuildInfo.packageName', goog.global);\n  // initializeAndWait will ensure this does not happen.\n  if (typeof appIdentifier !== 'string') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n  }\n  // Get app display name.\n  var appDisplayName =\n      fireauth.util.getObjectRef('BuildInfo.displayName', goog.global);\n  // Construct additional params to pass to OAuth handler.\n  var additionalParams  = {};\n  // Append app identifier.\n  if (fireauth.util.isIOS()) {\n    // iOS app.\n    additionalParams['ibi'] = appIdentifier;\n  } else if (fireauth.util.isAndroid()) {\n    // Android app.\n    additionalParams['apn'] = appIdentifier;\n  } else {\n    // This should not happen as Cordova handler should not even be used in this\n    // case.\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  // Pass app display name.\n  if (appDisplayName) {\n    additionalParams['appDisplayName'] = appDisplayName;\n  }\n  // Hash the session ID and pass it to additional params.\n  var hashedSessionId = this.computeSecureHash_(sessionId);\n  // Append session ID.\n  additionalParams['sessionId'] = hashedSessionId;\n  // Construct OAuth handler URL.\n  var oauthHelperWidgetUrl =\n      fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n          this.authDomain_,\n          this.apiKey_,\n          this.appName_,\n          mode,\n          provider,\n          null,\n          opt_eventId,\n          this.clientVersion_,\n          additionalParams,\n          this.endpointId_);\n  // Make sure handler initialized and ready.\n  // This should also ensure all plugins are installed.\n  return this.initializeAndWait().then(function() {\n    // Save partial Auth event.\n    return self.savePartialEventManager_.setAuthEvent(self.storageKey_, event);\n  }).then(function() {\n    // initializeAndWait will ensure this plugin is installed.\n    var isAvailable = /** @type {!function(!function(*))} */ (\n        fireauth.util.getObjectRef(\n            'cordova.plugins.browsertab.isAvailable', goog.global));\n    if (typeof isAvailable !== 'function') {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n    }\n    var openUrl = null;\n    // Check if browsertab is supported.\n    isAvailable(function(result) {\n      if (result) {\n        // browsertab supported.\n        openUrl = /** @type {!function(string, ...*)} */ (\n            fireauth.util.getObjectRef(\n                'cordova.plugins.browsertab.openUrl', goog.global));\n        if (typeof openUrl !== 'function') {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n        }\n        // Open OAuth handler.\n        openUrl(oauthHelperWidgetUrl);\n      } else {\n        // browsertab not supported, switch to inappbrowser.\n        openUrl = /** @type {!function(string, string, string=)} */ (\n            fireauth.util.getObjectRef(\n                'cordova.InAppBrowser.open', goog.global));\n        if (typeof openUrl !== 'function') {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n        }\n        // Open in embedded webview for iOS 7 and 8 as Apple rejects apps that\n        // switch context.\n        // _blank opens an embedded webview.\n        // _system opens the system browser.\n        // _system (opens a system browser) is used as a fallback when\n        // browsertab plugin is unable to open a chromecustomtab or SFSVC.\n        // This has to exclude all iOS older versions where switching to a\n        // browser is frowned upon by Apple and embedding a UIWebView is the\n        // only option but is insecure and deprecated by Google for OAuth\n        // sign-in. This will be applicable in old versions of Android.\n        self.inAppBrowserRef_ = openUrl(\n            oauthHelperWidgetUrl,\n            fireauth.util.isIOS7Or8() ? '_blank' : '_system',\n            'location=yes');\n      }\n    });\n  });\n};\n\n\n/**\n * Dispatches the detected Auth event to all subscribed listeners.\n * @param {!fireauth.AuthEvent} event A detected Auth event.\n * @private\n */\nfireauth.CordovaHandler.prototype.dispatchEvent_ = function(event) {\n  for (var i = 0; i < this.authEventListeners_.length; i++) {\n    try {\n      this.authEventListeners_[i](event);\n    } catch (e) {\n      // If any handler fails, ignore and run next handler.\n    }\n  }\n};\n\n\n/**\n * Resolves the first redirect Auth event and caches it.\n * @return {!goog.Promise<!fireauth.AuthEvent>} A promise that resolves with the\n *     initial Auth event response from a redirect operation. Initializes the\n *     internal Auth event listener which will dispatch Auth events to all\n *     subscribed listeners.\n * @private\n */\nfireauth.CordovaHandler.prototype.getInitialAuthEvent_ = function() {\n  var self = this;\n  if (!this.initialAuthEvent_) {\n    // Cache this result so on next call, it is not triggered again.\n    this.initialAuthEvent_ = this.initializeAndWait().then(function() {\n      return new goog.Promise(function(resolve, reject) {\n        /**\n         * @param {?fireauth.AuthEvent} event The Auth event detected.\n         * @return {boolean}\n         */\n        var authEventCallback = function(event) {\n          resolve(event);\n          // Remove on completion.\n          self.removeAuthEventListener(authEventCallback);\n          return false;\n        };\n        // Listen to Auth events. If resolved, resolve promise.\n        self.addAuthEventListener(authEventCallback);\n        // This should succeed as initializeAndWait should guarantee plugins are\n        // ready.\n        self.setAuthEventListener_();\n      });\n    });\n  }\n  return this.initialAuthEvent_;\n};\n\n\n/**\n * Gets and deletes the current stored partial event from storage.\n * @return {!goog.Promise<?fireauth.AuthEvent>} A promise that resolves with the\n *     stored Auth event.\n * @private\n */\nfireauth.CordovaHandler.prototype.getPartialStoredEvent_ = function() {\n  var event = null;\n  var self = this;\n  // Get any saved partial Auth event.\n  return this.getAndDeletePartialEventManager_.getAuthEvent()\n    .then(function(authEvent) {\n      // Save partial event locally.\n      event = authEvent;\n      // Delete partial event.\n      return self.getAndDeletePartialEventManager_.removeAuthEvent();\n    }).then(function() {\n      // Return the locally saved partial event.\n      return event;\n    });\n};\n\n\n/**\n * Extracts the Auth event pertaining to the incoming URL.\n * @param {!fireauth.AuthEvent} partialEvent The partial Auth event.\n * @param {string} url The incoming universal link.\n * @return {?fireauth.AuthEvent} The resolved Auth event corresponding to the\n *     callback URL. This is null if no event is found.\n * @private\n */\nfireauth.CordovaHandler.prototype.extractAuthEventFromUrl_ =\n    function(partialEvent, url) {\n  // Default no redirect event result.\n  var authEvent = null;\n  // Parse the deep link within the dynamic link URL.\n  var callbackUrl = fireauth.DynamicLink.parseDeepLink(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.indexOf('/__/auth/callback') != -1) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    var uri = goog.Uri.parse(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    var errorObject = fireauth.util.parseJSON(\n        uri.getParameterValue('firebaseError') || null);\n    var error = typeof errorObject === 'object' ?\n        fireauth.AuthError.fromPlainObject(\n            /** @type {?Object} */ (errorObject)) :\n        null;\n    if (error) {\n      // Construct the full failed Auth event.\n      authEvent = new fireauth.AuthEvent(\n          partialEvent.getType(),\n          partialEvent.getEventId(),\n          null,\n          null,\n          error);\n    } else {\n      // Construct the full successful Auth event.\n      authEvent = new fireauth.AuthEvent(\n          partialEvent.getType(),\n          partialEvent.getEventId(),\n          callbackUrl,\n          partialEvent.getSessionId());\n    }\n  }\n  return authEvent;\n};\n\n\n/**\n * Sets the internal Auth event listener. This listens to incoming universal\n * links and on detection, repackages them into an Auth event and then\n * dispatches the events in all event listeners.\n * @private\n */\nfireauth.CordovaHandler.prototype.setAuthEventListener_ = function() {\n  // https://github.com/nordnet/cordova-universal-links-plugin-fix\n  var self = this;\n  // Default no redirect event result.\n  var noEvent = new fireauth.AuthEvent(\n      fireauth.AuthEvent.Type.UNKNOWN,\n      null,\n      null,\n      null,\n      new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));\n  var initialResolve = false;\n  // On initialization, if no incoming universal link detected, trigger\n  // no Auth event (no redirect operation previously called) after waiting\n  // for a short period of time.\n  var noEventTimer = goog.Timer.promise(this.initialTimeout_).then(function() {\n    // Delete any pending unhandled event.\n    return self.getPartialStoredEvent_().then(function(event) {\n      // On timeout trigger noEvent if not already resolved in link\n      // subscriber.\n      if (!initialResolve) {\n        self.dispatchEvent_(noEvent);\n      }\n    });\n  });\n  // No event name needed, subscribe to all incoming universal links.\n  var universalLinkCb = function(eventData) {\n    initialResolve = true;\n    // Cancel no event timer.\n    if (noEventTimer) {\n      noEventTimer.cancel();\n    }\n    // Incoming link detected.\n    // Check for any stored partial event.\n    self.getPartialStoredEvent_().then(function(event) {\n      // Initialize to an unknown event.\n      var authEvent = noEvent;\n      // Confirm OAuth response included.\n      if (event && eventData && eventData['url']) {\n        // Construct complete event. Default to unknown event if none found.\n        authEvent = self.extractAuthEventFromUrl_(event, eventData['url']) ||\n            noEvent;\n      }\n      // Dispatch Auth event.\n      self.dispatchEvent_(authEvent);\n    });\n  };\n  // iOS 7 or 8 custom URL schemes.\n  // This is also the current default behavior for iOS 9+.\n  // For this to work, cordova-plugin-customurlscheme needs to be installed.\n  // https://github.com/EddyVerbruggen/Custom-URL-scheme\n  // Do not overwrite the existing developer's URL handler.\n  var existingHandlerOpenURL = goog.global['handleOpenURL'];\n  goog.global['handleOpenURL'] = function(url) {\n    var appIdentifier =\n        fireauth.util.getObjectRef('BuildInfo.packageName', goog.global);\n    // Apply case insensitive match. While bundle IDs are case sensitive,\n    // when creating a new app, Apple verifies the Bundle ID using\n    // case-insensitive search. So it is not possible that an app in the app\n    // store try to impersonate another one by lower/upper casing characters.\n    if (url.toLowerCase().indexOf(appIdentifier.toLowerCase() + '://') == 0) {\n      universalLinkCb({\n        'url': url\n      });\n    }\n    // Call the developer's handler if it is present.\n    if (typeof existingHandlerOpenURL === 'function') {\n      try {\n        existingHandlerOpenURL(url);\n      } catch(e) {\n        // This doesn't swallow the error but also does not interrupt the flow.\n        console.error(e);\n      }\n    }\n  };\n  fireauth.UniversalLinkSubscriber.getInstance().subscribe(universalLinkCb);\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to add.\n * @override\n */\nfireauth.CordovaHandler.prototype.addAuthEventListener = function(listener) {\n  // TODO: consider creating an abstract base class that OAuth handlers\n  // extend with add, remove Auth event listeners and dispatcher methods.\n  this.authEventListeners_.push(listener);\n  // Set internal listener to Auth events. This will be ignored on subsequent\n  // calls.\n  this.getInitialAuthEvent_().thenCatch(function(error) {\n    // Suppress this error as it should be caught through other actionable\n    // public methods.\n    // This would typically happen on invalid Cordova setup, when the OAuth\n    // plugins are not installed. This should still trigger the Auth event\n    // as developers are not forced to use OAuth sign-in in their Cordova app.\n    // This is needed for onAuthStateChanged listener to trigger initially.\n    if (error.code === 'auth/invalid-cordova-configuration') {\n      var noEvent = new fireauth.AuthEvent(\n          fireauth.AuthEvent.Type.UNKNOWN,\n          null,\n          null,\n          null,\n          new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));\n      listener(noEvent);\n    }\n  });\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to remove.\n * @override\n */\nfireauth.CordovaHandler.prototype.removeAuthEventListener = function(listener) {\n  goog.array.removeAllIf(this.authEventListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Namespace with crypto related helper functions.\n */\n\ngoog.provide('goog.crypt');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\n\n\n/**\n * Turns a string into an array of bytes; a \"byte\" being a JS number in the\n * range 0-255. Multi-byte characters are written as little-endian.\n * @param {string} str String value to arrify.\n * @return {!Array<number>} Array of numbers corresponding to the\n *     UCS character codes of each character in str.\n */\ngoog.crypt.stringToByteArray = function(str) {\n  var output = [], p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    // NOTE: c <= 0xffff since JavaScript strings are UTF-16.\n    if (c > 0xff) {\n      output[p++] = c & 0xff;\n      c >>= 8;\n    }\n    output[p++] = c;\n  }\n  return output;\n};\n\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {!Uint8Array|!Array<number>} bytes Array of numbers representing\n *     characters.\n * @return {string} Stringification of the array.\n */\ngoog.crypt.byteArrayToString = function(bytes) {\n  var CHUNK_SIZE = 8192;\n\n  // Special-case the simple case for speed's sake.\n  if (bytes.length <= CHUNK_SIZE) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n\n  // The remaining logic splits conversion by chunks since\n  // Function#apply() has a maximum parameter count.\n  // See discussion: http://goo.gl/LrWmZ9\n\n  var str = '';\n  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);\n    str += String.fromCharCode.apply(null, chunk);\n  }\n  return str;\n};\n\n\n/**\n * Turns an array of numbers into the hex string given by the concatenation of\n * the hex values to which the numbers correspond.\n * @param {Uint8Array|Array<number>} array Array of numbers representing\n *     characters.\n * @param {string=} opt_separator Optional separator between values\n * @return {string} Hex string.\n */\ngoog.crypt.byteArrayToHex = function(array, opt_separator) {\n  return goog.array\n      .map(\n          array,\n          function(numByte) {\n            var hexByte = numByte.toString(16);\n            return hexByte.length > 1 ? hexByte : '0' + hexByte;\n          })\n      .join(opt_separator || '');\n};\n\n\n/**\n * Converts a hex string into an integer array.\n * @param {string} hexString Hex string of 16-bit integers (two characters\n *     per integer).\n * @return {!Array<number>} Array of {0,255} integers for the given string.\n */\ngoog.crypt.hexToByteArray = function(hexString) {\n  goog.asserts.assert(\n      hexString.length % 2 == 0, 'Key string length must be multiple of 2');\n  var arr = [];\n  for (var i = 0; i < hexString.length; i += 2) {\n    arr.push(parseInt(hexString.substring(i, i + 2), 16));\n  }\n  return arr;\n};\n\n\n/**\n * Converts a JS string to a UTF-8 \"byte\" array.\n * @param {string} str 16-bit unicode string.\n * @return {!Array<number>} UTF-8 byte array.\n */\ngoog.crypt.stringToUtf8ByteArray = function(str) {\n  // TODO(user): Use native implementations if/when available\n  var out = [], p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n        ((c & 0xFC00) == 0xD800) && (i + 1) < str.length &&\n        ((str.charCodeAt(i + 1) & 0xFC00) == 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n\n/**\n * Converts a UTF-8 byte array to JavaScript's 16-bit Unicode.\n * @param {Uint8Array|Array<number>} bytes UTF-8 byte array.\n * @return {string} 16-bit Unicode string.\n */\ngoog.crypt.utf8ByteArrayToString = function(bytes) {\n  // TODO(user): Use native implementations if/when available\n  var out = [], pos = 0, c = 0;\n  while (pos < bytes.length) {\n    var c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      var c2 = bytes[pos++];\n      out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      var c2 = bytes[pos++];\n      var c3 = bytes[pos++];\n      var c4 = bytes[pos++];\n      var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) -\n          0x10000;\n      out[c++] = String.fromCharCode(0xD800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xDC00 + (u & 1023));\n    } else {\n      var c2 = bytes[pos++];\n      var c3 = bytes[pos++];\n      out[c++] =\n          String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n    }\n  }\n  return out.join('');\n};\n\n\n/**\n * XOR two byte arrays.\n * @param {!Uint8Array|!Int8Array|!Array<number>} bytes1 Byte array 1.\n * @param {!Uint8Array|!Int8Array|!Array<number>} bytes2 Byte array 2.\n * @return {!Array<number>} Resulting XOR of the two byte arrays.\n */\ngoog.crypt.xorByteArray = function(bytes1, bytes2) {\n  goog.asserts.assert(\n      bytes1.length == bytes2.length, 'XOR array lengths must match');\n\n  var result = [];\n  for (var i = 0; i < bytes1.length; i++) {\n    result.push(bytes1[i] ^ bytes2[i]);\n  }\n  return result;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.PendingRedirectManager class which\n * provides utilities to store, retrieve and delete the state of whether there\n * is a pending redirect operation previously triggered.\n */\n\ngoog.provide('fireauth.storage.PendingRedirectManager');\n\ngoog.require('fireauth.authStorage');\n\n\n/**\n * Defines the pending redirect storage manager. It provides methods\n * to store, retrieve and delete the state of whether there is a pending\n * redirect operation previously triggered.\n * @param {string} appId The Auth state's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.PendingRedirectManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth state's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * @const @private{!string} The pending redirect flag.\n */\nfireauth.storage.PendingRedirectManager.PENDING_FLAG_ = 'pending';\n\n\n/**\n * @const @private{!fireauth.authStorage.Key} The pending redirect status\n *     storage identifier key.\n */\nfireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_ = {\n  name: 'pendingRedirect',\n  persistent: fireauth.authStorage.Persistence.SESSION\n};\n\n\n/**\n * Stores the pending redirect operation for the provided application ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.PendingRedirectManager.prototype.setPendingStatus =\n    function() {\n  return this.manager_.set(\n      fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,\n      fireauth.storage.PendingRedirectManager.PENDING_FLAG_,\n      this.appId_);\n};\n\n\n/**\n * Removes the stored pending redirect operation for provided app ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.PendingRedirectManager.prototype.removePendingStatus =\n    function() {\n  return this.manager_.remove(\n      fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,\n      this.appId_);\n};\n\n\n/**\n * @return {!goog.Promise<boolean>} A promise that resolves with a boolean\n *     whether there is a pending redirect operaiton for the provided app ID.\n */\nfireauth.storage.PendingRedirectManager.prototype.getPendingStatus =\n    function() {\n  return this.manager_.get(\n      fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,\n      this.appId_).then(function(response) {\n        return response ==\n            fireauth.storage.PendingRedirectManager.PENDING_FLAG_;\n      });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Auth event manager instance.\n */\n\ngoog.provide('fireauth.AuthEventHandler');\ngoog.provide('fireauth.AuthEventManager');\ngoog.provide('fireauth.AuthEventManager.Result');\ngoog.provide('fireauth.PopupAuthEventProcessor');\ngoog.provide('fireauth.RedirectAuthEventProcessor');\n\ngoog.require('fireauth.AuthCredential');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.CordovaHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.storage.PendingRedirectManager');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.array');\n\n\n/**\n * Initializes the Auth event manager which provides the mechanism to connect\n * external Auth events to their corresponding listeners.\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @constructor\n */\nfireauth.AuthEventManager = function(authDomain, apiKey, appName) {\n  /** @private {string} The Auth domain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The browser API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /**\n   * @private {!Array<!fireauth.AuthEventHandler>} List of subscribed handlers.\n   */\n  this.subscribedHandlers_ = [];\n  /**\n   * @private {boolean} Whether the Auth event manager instance is initialized.\n   */\n  this.initialized_ = false;\n  /** @private {function(?fireauth.AuthEvent)} The Auth event handler. */\n  this.authEventHandler_ = goog.bind(this.handleAuthEvent_, this);\n  /** @private {!fireauth.RedirectAuthEventProcessor} The redirect event\n   *      processor. */\n  this.redirectAuthEventProcessor_ =\n      new fireauth.RedirectAuthEventProcessor(this);\n  /** @private {!fireauth.PopupAuthEventProcessor} The popup event processor. */\n  this.popupAuthEventProcessor_ = new fireauth.PopupAuthEventProcessor(this);\n  /**\n   * @private {!fireauth.storage.PendingRedirectManager} The pending redirect\n   *     storage manager instance.\n   */\n  this.pendingRedirectStorageManager_ =\n      new fireauth.storage.PendingRedirectManager(\n          fireauth.AuthEventManager.getKey_(this.apiKey_, this.appName_));\n\n  /**\n   * @private {!Object.<!fireauth.AuthEvent.Type, !fireauth.AuthEventProcessor>}\n   *     Map containing Firebase event processor instances keyed by event type.\n   */\n  this.typeToManager_ = {};\n  this.typeToManager_[fireauth.AuthEvent.Type.UNKNOWN] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.LINK_VIA_REDIRECT] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP] =\n      this.popupAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.LINK_VIA_POPUP] =\n      this.popupAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.REAUTH_VIA_POPUP] =\n      this.popupAuthEventProcessor_;\n  /**\n   * @private {!fireauth.OAuthSignInHandler} The OAuth sign in handler depending\n   *     on the current environment.\n   */\n  this.oauthSignInHandler_ =\n      fireauth.AuthEventManager.instantiateOAuthSignInHandler(\n          this.authDomain_, this.apiKey_, this.appName_,\n          firebase.SDK_VERSION || null,\n          fireauth.constants.clientEndpoint);\n};\n\n\n/**\n * @return {!fireauth.RedirectAuthEventProcessor} The redirect event processor.\n */\nfireauth.AuthEventManager.prototype.getRedirectAuthEventProcessor = function() {\n  return this.redirectAuthEventProcessor_;\n};\n\n\n/** @return {!fireauth.PopupAuthEventProcessor} The popup event processor. */\nfireauth.AuthEventManager.prototype.getPopupAuthEventProcessor = function() {\n  return this.popupAuthEventProcessor_;\n};\n\n\n/**\n * Instantiates an OAuth sign-in handler depending on the current environment\n * and returns it.\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {?string} version The SDK client version.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @return {!fireauth.OAuthSignInHandler} The OAuth sign in handler depending\n *     on the current environment.\n */\nfireauth.AuthEventManager.instantiateOAuthSignInHandler =\n    function(authDomain, apiKey, appName, version, opt_endpointId) {\n  // This assumes that android/iOS file environment must be a Cordova\n  // environment which is not true. This is the best way currently available\n  // to instantiate this synchronously without waiting for checkIfCordova to\n  // resolve. If it is determined that the Cordova was falsely detected, it will\n  // be caught via actionable public popup and redirect methods.\n  return fireauth.util.isAndroidOrIosFileEnvironment() ?\n      new fireauth.CordovaHandler(\n          authDomain, apiKey, appName, version, undefined, undefined,\n          opt_endpointId) :\n      new fireauth.iframeclient.IfcHandler(\n          authDomain, apiKey, appName, version, opt_endpointId);\n};\n\n\n/** Reset iframe. This will require reinitializing it.*/\nfireauth.AuthEventManager.prototype.reset = function() {\n  // Reset initialized status. This will force a popup request to re-initialize\n  // the iframe.\n  this.initialized_ = false;\n  // Remove any previous existing Auth event listener.\n  this.oauthSignInHandler_.removeAuthEventListener(this.authEventHandler_);\n  // Construct a new instance of OAuth sign in handler.\n\n  this.oauthSignInHandler_ =\n      fireauth.AuthEventManager.instantiateOAuthSignInHandler(\n          this.authDomain_, this.apiKey_, this.appName_,\n          firebase.SDK_VERSION || null);\n};\n\n\n/**\n * Clears the cached redirect result as long as there is no pending redirect\n * result being processed. Unrecoverable errors will not be cleared.\n */\nfireauth.AuthEventManager.prototype.clearRedirectResult = function() {\n  this.redirectAuthEventProcessor_.clearRedirectResult();\n};\n\n\n/**\n * @typedef {{\n *   user: (?fireauth.AuthUser|undefined),\n *   credential: (?fireauth.AuthCredential|undefined),\n *   operationType: (?string|undefined),\n *   additionalUserInfo: (?fireauth.AdditionalUserInfo|undefined)\n * }}\n */\nfireauth.AuthEventManager.Result;\n\n\n/**\n * Whether to enable Auth event manager subscription.\n * @const {boolean}\n */\nfireauth.AuthEventManager.ENABLED = true;\n\n\n/**\n * Initializes the ifchandler and add Auth event listener on it.\n * @return {!goog.Promise} The promise that resolves when the iframe is ready.\n */\nfireauth.AuthEventManager.prototype.initialize = function() {\n  var self = this;\n  // Initialize once.\n  if (!this.initialized_) {\n    this.initialized_ = true;\n    // Listen to Auth events on iframe.\n    this.oauthSignInHandler_.addAuthEventListener(this.authEventHandler_);\n  }\n  var previousOauthSignInHandler = this.oauthSignInHandler_;\n  // This should initialize ifchandler underneath.\n  // Return on OAuth handler ready promise.\n  // Check for error in ifcHandler used to embed the iframe.\n  return this.oauthSignInHandler_.initializeAndWait()\n      .thenCatch(function(error) {\n        // Force ifchandler to reinitialize on retrial.\n        if (self.oauthSignInHandler_ == previousOauthSignInHandler) {\n          // If a new OAuth sign in handler was already created, do not reset.\n          self.reset();\n        }\n        throw error;\n      });\n};\n\n\n/**\n * Called after it is determined that there is no pending redirect result.\n * Will populate the redirect result if it is guaranteed to be null and will\n * force an early initialization of the OAuth sign in handler if the\n * environment requires it.\n * @private\n */\nfireauth.AuthEventManager.prototype.initializeWithNoPendingRedirectResult_ =\n    function() {\n  var self = this;\n  // Check if the OAuth sign in handler should be initialized early in all\n  // cases.\n  if (this.oauthSignInHandler_.shouldBeInitializedEarly()) {\n    this.initialize().thenCatch(function(error) {\n      // Current environment was falsely detected as Cordova, trigger a fake\n      // Auth event to notify getRedirectResult that operation is not supported.\n      var notSupportedEvent = new fireauth.AuthEvent(\n          fireauth.AuthEvent.Type.UNKNOWN,\n          null,\n          null,\n          null,\n          new fireauth.AuthError(\n              fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n      if (fireauth.AuthEventManager.isCordovaFalsePositive_(\n          /** @type {?fireauth.AuthError} */ (error))) {\n        self.handleAuthEvent_(notSupportedEvent);\n      }\n    });\n  }\n  // For environments where storage is volatile, we can't determine that\n  // there is no pending redirect response. This is true in Cordova\n  // where an activity would be destroyed in some cases and the\n  // sessionStorage is lost.\n  if (!this.oauthSignInHandler_.hasVolatileStorage()) {\n    // Since there is no redirect result, it is safe to default to empty\n    // redirect result instead of blocking on this.\n    // The downside here is that on iOS devices, calling signInWithPopup\n    // after getRedirectResult resolves and the iframe does not finish\n    // loading, the popup event propagating to the iframe would not be\n    // detected. This is because in iOS devices, storage events only trigger\n    // in iframes but are not actually saved in web storage. The iframe must\n    // be embedded and ready before the storage event propagates. Otherwise\n    // it won't be detected.\n    this.redirectAuthEventProcessor_.defaultToEmptyResponse();\n  }\n};\n\n\n/**\n * Subscribes an Auth event handler to list of handlers.\n * @param {!fireauth.AuthEventHandler} handler The instance to subscribe.\n */\nfireauth.AuthEventManager.prototype.subscribe = function(handler) {\n  if (!goog.array.contains(this.subscribedHandlers_, handler)) {\n    this.subscribedHandlers_.push(handler);\n  }\n  if (this.initialized_) {\n    return;\n  }\n  var self = this;\n  // Check pending redirect status.\n  this.pendingRedirectStorageManager_.getPendingStatus()\n      .then(function(status) {\n    // Pending redirect detected.\n    if (status) {\n      // Remove pending status and initialize.\n      self.pendingRedirectStorageManager_.removePendingStatus()\n          .then(function() {\n            self.initialize().thenCatch(function(error) {\n              // Current environment was falsely detected as Cordova, trigger a\n              // fake Auth event to notify getRedirectResult that operation is\n              // not supported.\n              var notSupportedEvent = new fireauth.AuthEvent(\n                 fireauth.AuthEvent.Type.UNKNOWN,\n                 null,\n                 null,\n                 null,\n                 new fireauth.AuthError(\n                     fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n              if (fireauth.AuthEventManager.isCordovaFalsePositive_(\n                  /** @type {?fireauth.AuthError} */ (error))) {\n                self.handleAuthEvent_(notSupportedEvent);\n              }\n            });\n          });\n    } else {\n      // No previous redirect, default to empty response.\n      self.initializeWithNoPendingRedirectResult_();\n    }\n  }).thenCatch(function(error) {\n    // Error checking pending status, default to empty response.\n    self.initializeWithNoPendingRedirectResult_();\n  });\n};\n\n\n/**\n * @param {!fireauth.AuthEventHandler} handler The possible subscriber.\n * @return {boolean} Whether the handle is subscribed.\n */\nfireauth.AuthEventManager.prototype.isSubscribed = function(handler) {\n  return goog.array.contains(this.subscribedHandlers_, handler);\n};\n\n\n/**\n * Unsubscribes an Auth event handler to list of handlers.\n * @param {!fireauth.AuthEventHandler} handler The instance to unsubscribe.\n */\nfireauth.AuthEventManager.prototype.unsubscribe = function(handler) {\n  goog.array.removeAllIf(this.subscribedHandlers_, function(ele) {\n    return ele == handler;\n  });\n};\n\n\n/**\n * Handles external Auth event detected by the OAuth sign-in handler.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @return {boolean} Whether the event found an appropriate owner that can\n *     handle it. This signals to the OAuth helper iframe that the event is safe\n *     to delete.\n * @private\n */\nfireauth.AuthEventManager.prototype.handleAuthEvent_ = function(authEvent) {\n  // This should not happen as fireauth.iframe.AuthRelay will not send null\n  // events.\n  if (!authEvent) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  }\n  // Initialize event processed status to false. When set to false, the event is\n  // not clear to delete in the OAuth helper iframe as the owner of this event\n  // could be a user in another tab.\n  var processed = false;\n  // Lookup a potential handler for this event.\n  for (var i = 0; i < this.subscribedHandlers_.length; i++) {\n    var potentialHandler = this.subscribedHandlers_[i];\n    if (potentialHandler.canHandleAuthEvent(\n        authEvent.getType(), authEvent.getEventId())) {\n      var eventManager = this.typeToManager_[authEvent.getType()];\n      if (eventManager) {\n        eventManager.processAuthEvent(authEvent, potentialHandler);\n      }\n      // Event has been processed, free to clear in OAuth helper.\n      processed = true;\n      break;\n    }\n  }\n  // If no redirect response ready yet, default to an empty response.\n  this.redirectAuthEventProcessor_.defaultToEmptyResponse();\n  // Notify iframe of processed status.\n  return processed;\n};\n\n\n/**\n * The popup promise timeout delay with units in ms between the time the iframe\n * is ready (successfully embedded on the page) and the time the popup Auth\n * event is detected in the parent container.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.AuthEventManager.POPUP_TIMEOUT_MS_ =\n    new fireauth.util.Delay(2000, 10000);\n\n\n/**\n * The redirect promise timeout delay with units in ms. Unlike the popup\n * timeout, this covers the entire duration from start to getRedirectResult\n * resolution.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * Returns the redirect result. If coming back from a successful redirect sign\n * in, will resolve to the signed in user. If coming back from an unsuccessful\n * redirect sign, will reject with the proper error. If no redirect operation\n * called, resolves with null.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthEventManager.prototype.getRedirectResult = function() {\n  return this.redirectAuthEventProcessor_.getRedirectResult();\n};\n\n\n/**\n * Processes the popup request. The popup instance must be provided externally\n * and on error, the requestor must close the window.\n * @param {?Window} popupWin The popup window reference.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {string=} opt_eventId The optional event ID.\n * @param {boolean=} opt_alreadyRedirected Whether popup is already redirected\n *     to final destination.\n * @return {!goog.Promise} The popup window promise.\n */\nfireauth.AuthEventManager.prototype.processPopup =\n    function(popupWin, mode, provider, opt_eventId, opt_alreadyRedirected) {\n  var self = this;\n  return this.oauthSignInHandler_.processPopup(\n      popupWin,\n      mode,\n      provider,\n      // On initialization, add Auth event listener if not already added.\n      function() {\n        if (!self.initialized_) {\n          self.initialized_ = true;\n          // Listen to Auth events on iframe.\n          self.oauthSignInHandler_.addAuthEventListener(self.authEventHandler_);\n        }\n      },\n      // On error, reset to force re-initialization on retrial.\n      function(error) {\n        self.reset();\n      },\n      opt_eventId,\n      opt_alreadyRedirected);\n};\n\n\n/**\n * @param {?fireauth.AuthError} error The error to check for Cordova false\n *     positive.\n * @return {boolean} Whether the current environment was falsely identified as\n *     Cordova.\n * @private\n */\nfireauth.AuthEventManager.isCordovaFalsePositive_ = function(error) {\n  if (error && error['code'] == 'auth/cordova-not-ready') {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Processes the redirect request.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n */\nfireauth.AuthEventManager.prototype.processRedirect =\n    function(mode, provider, opt_eventId) {\n  var self = this;\n  var error;\n  // Save pending status first.\n  return this.pendingRedirectStorageManager_.setPendingStatus()\n    .then(function() {\n      // Try to redirect.\n      return self.oauthSignInHandler_.processRedirect(\n          mode, provider, opt_eventId)\n        .thenCatch(function(e) {\n          if (fireauth.AuthEventManager.isCordovaFalsePositive_(\n              /** @type {?fireauth.AuthError} */ (e))) {\n            throw new fireauth.AuthError(\n                fireauth.authenum.Error.OPERATION_NOT_SUPPORTED);\n          }\n          // On failure, remove pending status and rethrow the error.\n          error = e;\n          return self.pendingRedirectStorageManager_.removePendingStatus()\n            .then(function() {\n              throw error;\n            });\n        })\n        .then(function() {\n          // Resolve, if the OAuth handler unloads the page on redirect.\n          if (!self.oauthSignInHandler_.unloadsOnRedirect()) {\n            // Relevant to Cordova case, will not matter in web case where\n            // browser redirects.\n            // In Cordova, the activity could still be running in the background\n            // so we need to wait for getRedirectResult to resolve before\n            // resolving this current promise.\n            // Otherwise, if the activity is destroyed, getRedirectResult would\n            // be used.\n            // At this point, authEvent should have been triggered.\n            // When this promise resolves, the developer should be able to\n            // call getRedirectResult to get the result of this operation.\n            // Remove pending status as result should be resolved.\n            return self.pendingRedirectStorageManager_.removePendingStatus()\n                .then(function() {\n                  // Ensure redirect result ready before resolving.\n                  return self.getRedirectResult();\n                }).then(function(result) {\n                  // Do nothing. Developer expected to call getRedirectResult to\n                  // get result.\n                }).thenCatch(function(error) {\n                  // Do nothing. Developer expected to call getRedirectResult to\n                  // get result.\n                });\n          } else {\n            // For environments that will unload the page on redirect, keep\n            // the promise pending on success. This makes it easier to reuse\n            // the same code for Cordova environment and browser environment.\n            // The developer can always add getRedirectResult on promise\n            // resolution and expect that when it runs, the redirect operation\n            // was completed.\n            return new goog.Promise(function(resolve, reject) {\n              // Keep this pending.\n            });\n          }\n        });\n    });\n};\n\n\n/**\n * Waits for popup window to close. When closed start timeout listener for popup\n * pending promise. If in the process, it was detected that the iframe does not\n * support web storage, the popup is closed and the web storage unsupported\n * error is thrown.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!Window} popupWin The popup window.\n * @param {?string=} opt_eventId The event ID.\n * @return {!goog.Promise}\n */\nfireauth.AuthEventManager.prototype.startPopupTimeout =\n    function(owner, mode, popupWin, opt_eventId) {\n  return this.oauthSignInHandler_.startPopupTimeout(\n      popupWin,\n      // On popup error such as popup closed by user or web storage not\n      // supported.\n      function(error) {\n        // Notify owner of the error.\n        owner.resolvePendingPopupEvent(mode, null, error, opt_eventId);\n      },\n      fireauth.AuthEventManager.POPUP_TIMEOUT_MS_.get());\n};\n\n\n\n/**\n * @private {!Object.<string, !fireauth.AuthEventManager>} Map containing\n *     Firebase event manager instances keyed by Auth event manager ID.\n */\nfireauth.AuthEventManager.manager_ = {};\n\n\n/**\n * The separator for manager keys to concatenate app name and apiKey.\n * @const {string}\n * @private\n */\nfireauth.AuthEventManager.KEY_SEPARATOR_ = ':';\n\n\n/**\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The Auth instance that initiated the Auth event.\n * @return {string} The key identifying the Auth event manager instance.\n * @private\n */\nfireauth.AuthEventManager.getKey_ = function(apiKey, appName) {\n  return apiKey + fireauth.AuthEventManager.KEY_SEPARATOR_ + appName;\n};\n\n\n/**\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The Auth instance that initiated the Auth event\n *     manager.\n * @return {!fireauth.AuthEventManager} the requested manager instance.\n */\nfireauth.AuthEventManager.getManager = function(authDomain, apiKey, appName) {\n  // Construct storage key.\n  var key = fireauth.AuthEventManager.getKey_(apiKey, appName);\n  if (!fireauth.AuthEventManager.manager_[key]) {\n    fireauth.AuthEventManager.manager_[key] =\n        new fireauth.AuthEventManager(authDomain, apiKey, appName);\n  }\n  return fireauth.AuthEventManager.manager_[key];\n};\n\n\n\n/**\n * The interface that represents a specific type of Auth event processor.\n * @interface\n */\nfireauth.AuthEventProcessor = function() {};\n\n\n/**\n * Completes the processing of an external Auth event detected by the embedded\n * iframe.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n */\nfireauth.AuthEventProcessor.prototype.processAuthEvent =\n    function(authEvent, owner) {};\n\n\n\n/**\n * Redirect Auth event manager.\n * @param {!fireauth.AuthEventManager} manager The parent Auth event manager.\n * @constructor\n * @implements {fireauth.AuthEventProcessor}\n */\nfireauth.RedirectAuthEventProcessor = function(manager) {\n  this.manager_ = manager;\n  // Only one redirect result can be tracked on first load.\n  /**\n   * @private {?function():!goog.Promise<!fireauth.AuthEventManager.Result>}\n   *     Redirect result resolver. This will be used to resolve the\n   *     getRedirectResult promise. When the redirect result is obtained, this\n   *     field will be set.\n   */\n  this.redirectedUserPromise_ = null;\n  /**\n   * @private {!Array<function(!fireauth.AuthEventManager.Result)>} Pending\n   *     promise redirect resolver. When the redirect result is obtained and the\n   *     user is detected, this will be called.\n   */\n  this.redirectResolve_ = [];\n  /**\n   * @private {!Array<function(*)>} Pending Promise redirect rejecter. When the\n   *     redirect result is obtained and an error is detected, this will be\n   *     called.\n   */\n  this.redirectReject_ = [];\n  /** @private {?goog.Promise} Pending timeout promise for redirect. */\n  this.redirectTimeoutPromise_ = null;\n  /**\n   * @private {boolean} Whether redirect result is resolved. This is true\n   *     when a valid Auth event has been triggered.\n   */\n  this.redirectResultResolved_ = false;\n  /**\n   * @private {boolean} Whether an unrecoverable error was detected. This\n   *     includes web storage unsupported or operation not allowed errors.\n   */\n  this.unrecoverableErrorDetected_ = false;\n};\n\n\n/** Reset any previous redirect result. */\nfireauth.RedirectAuthEventProcessor.prototype.reset = function() {\n  // Reset to allow override getRedirectResult. This is relevant for Cordova\n  // environment where redirect events do not necessarily unload the current\n  // page.\n  this.redirectedUserPromise_ = null;\n  if (this.redirectTimeoutPromise_) {\n    this.redirectTimeoutPromise_.cancel();\n    this.redirectTimeoutPromise_ = null;\n  }\n};\n\n\n/**\n * Completes the processing of an external Auth event detected by the embedded\n * iframe.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @override\n */\nfireauth.RedirectAuthEventProcessor.prototype.processAuthEvent =\n    function(authEvent, owner) {\n  // This should not happen as fireauth.iframe.AuthRelay will not send null\n  // events.\n  if (!authEvent) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n  // Reset any pending redirect result. This event will overwrite it.\n  this.reset();\n  this.redirectResultResolved_ = true;\n  var mode = authEvent.getType();\n  var eventId = authEvent.getEventId();\n  // Check if web storage is not supported in the iframe.\n  var isWebStorageNotSupported =\n      authEvent.getError() &&\n      authEvent.getError()['code'] == 'auth/web-storage-unsupported';\n  /// Check if operation is supported in this environment.\n  var isOperationNotSupported =\n      authEvent.getError() &&\n      authEvent.getError()['code'] == 'auth/operation-not-supported-in-this-' +\n          'environment';\n  this.unrecoverableErrorDetected_ =\n      !!(isWebStorageNotSupported || isOperationNotSupported);\n  // UNKNOWN mode is always triggered on load by iframe when no popup/redirect\n  // data is available. If web storage unsupported error is thrown, process as\n  // error and not as unknown event. If the operation is not supported in this\n  // environment, also treat as an error and not as an unknown event.\n  if (mode == fireauth.AuthEvent.Type.UNKNOWN &&\n      !isWebStorageNotSupported &&\n      !isOperationNotSupported) {\n    return this.processUnknownEvent_();\n  } else if (authEvent.hasError()) {\n    return this.processErrorEvent_(authEvent, owner);\n  } else if (owner.getAuthEventHandlerFinisher(mode, eventId)) {\n    return this.processSuccessEvent_(authEvent, owner);\n  } else {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n};\n\n\n/**\n * Sets an empty redirect result response when no redirect result is available.\n */\nfireauth.RedirectAuthEventProcessor.prototype.defaultToEmptyResponse =\n    function() {\n  // If the first event does not resolve redirectResult and no subscriber can\n  // handle it, set redirect result to null.\n  // An example of this scenario would be a link via redirect that was triggered\n  // by a user that was not logged in. canHandleAuthEvent will be false for all\n  // subscribers. So make sure getRedirectResult when called will resolve to a\n  // null user.\n  if (!this.redirectResultResolved_) {\n    this.redirectResultResolved_ = true;\n    // No Auth event available, getRedirectResult should resolve with null.\n    this.setRedirectResult_(false, null, null);\n  }\n};\n\n\n/**\n * Clears the cached redirect result as long as there is no pending redirect\n * result being processed. Unrecoverable errors will not be cleared.\n */\nfireauth.RedirectAuthEventProcessor.prototype.clearRedirectResult = function() {\n  // Clear the result if it is already resolved and no unrecoverable errors are\n  // detected.\n  if (this.redirectResultResolved_ && !this.unrecoverableErrorDetected_) {\n    this.setRedirectResult_(false, null, null);\n  }\n};\n\n\n/**\n * Processes the unknown event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.processUnknownEvent_ =\n    function() {\n  // No Auth event available, getRedirectResult should resolve with null.\n  this.setRedirectResult_(false, null, null);\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes an error event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.processErrorEvent_ =\n    function(authEvent, owner) {\n  // Set redirect result to resolve with null if event is not a redirect or\n  // reject with error if event is an error.\n  this.setRedirectResult_(true, null, authEvent.getError());\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes a successful event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.processSuccessEvent_ =\n    function(authEvent, owner) {\n  var self = this;\n  var eventId = authEvent.getEventId();\n  var mode = authEvent.getType();\n  var handler = owner.getAuthEventHandlerFinisher(mode, eventId);\n  var requestUri = /** @type {string} */ (authEvent.getUrlResponse());\n  var sessionId = /** @type {string} */ (authEvent.getSessionId());\n  var postBody = /** @type {?string} */ (authEvent.getPostBody());\n  var isRedirect = fireauth.AuthEvent.isRedirect(authEvent);\n  // Complete sign in or link account operation and then pass result to\n  // relevant pending popup promise.\n  return handler(requestUri, sessionId, postBody)\n      .then(function(popupRedirectResponse) {\n    // Flow completed.\n    // For a redirect operation resolve with the popupRedirectResponse,\n    // otherwise resolve with null.\n    self.setRedirectResult_(isRedirect, popupRedirectResponse, null);\n  }).thenCatch(function(error) {\n    // Flow not completed due to error.\n    // For a redirect operation reject with the error, otherwise resolve\n    // with null.\n    self.setRedirectResult_(\n        isRedirect, null, /** @type {!fireauth.AuthError} */ (error));\n    // Always resolve.\n    return;\n  });\n};\n\n\n/**\n * Sets redirect error result.\n * @param {!fireauth.AuthError} error The redirect operation error.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.setRedirectReject_ =\n    function(error) {\n  // If a redirect error detected, reject getRedirectResult with that error.\n  this.redirectedUserPromise_ = function() {\n    return goog.Promise.reject(error);\n  };\n  // Reject all pending getRedirectResult promises.\n  if (this.redirectReject_.length) {\n    for (var i = 0; i < this.redirectReject_.length; i++) {\n      this.redirectReject_[i](error);\n    }\n  }\n};\n\n\n/**\n * Sets redirect success result.\n * @param {!fireauth.AuthEventManager.Result} popupRedirectResult The\n *     resolved user for a successful or null user redirect.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.setRedirectResolve_ =\n    function(popupRedirectResult) {\n  // If a redirect user detected, resolve getRedirectResult with the\n  // popupRedirectResult.\n  // Result should not be null in this case.\n  this.redirectedUserPromise_ = function() {\n    return goog.Promise.resolve(\n        /** @type {!fireauth.AuthEventManager.Result} */ (popupRedirectResult));\n  };\n  // Resolve all pending getRedirectResult promises.\n  if (this.redirectResolve_.length) {\n    for (var i = 0; i < this.redirectResolve_.length; i++) {\n      this.redirectResolve_[i](\n          /** @type {!fireauth.AuthEventManager.Result} */ (\n              popupRedirectResult));\n    }\n  }\n};\n\n\n/**\n * @param {boolean} isRedirect Whether Auth event is a redirect event.\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The\n *     resolved user for a successful redirect. This user is null if no redirect\n *     operation run.\n * @param {?fireauth.AuthError} error The redirect operation error.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.setRedirectResult_ =\n    function(isRedirect, popupRedirectResult, error) {\n  if (isRedirect) {\n    // This is a redirect operation, either resolves with user or error.\n    if (error) {\n      // If a redirect error detected, reject getRedirectResult with that error.\n      this.setRedirectReject_(error);\n    } else {\n      // If a redirect user detected, resolve getRedirectResult with the\n      // popupRedirectResult.\n      // Result should not be null in this case.\n      this.setRedirectResolve_(\n          /** @type {!fireauth.AuthEventManager.Result} */ (\n              popupRedirectResult));\n    }\n  } else {\n    // Not a redirect, set redirectUser_ to return null.\n    this.setRedirectResolve_({\n      'user': null\n    });\n  }\n  // Reset all pending promises.\n  this.redirectResolve_ = [];\n  this.redirectReject_ = [];\n};\n\n\n/**\n * Returns the redirect result. If coming back from a successful redirect sign\n * in, will resolve to the signed in user. If coming back from an unsuccessful\n * redirect sign, will reject with the proper error. If no redirect operation\n * called, resolves with null.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.RedirectAuthEventProcessor.prototype.getRedirectResult = function() {\n  var self = this;\n  // Initial result could be overridden in the case of Cordova.\n  // Auth domain must be included for this to resolve.\n  // If still pending just return the pending promise.\n  var p = new goog.Promise(function(resolve, reject) {\n    // The following logic works if this method was called before Auth event\n    // is triggered.\n    if (!self.redirectedUserPromise_) {\n      // Save resolves and rejects of pending promise for redirect operation.\n      self.redirectResolve_.push(resolve);\n      self.redirectReject_.push(reject);\n      // Start timeout listener to getRedirectResult pending promise.\n      // Call this only when redirectedUserPromise_ is not determined.\n      self.startRedirectTimeout_();\n    } else {\n      // Called after Auth event is triggered.\n      self.redirectedUserPromise_().then(resolve, reject);\n    }\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (p);\n};\n\n\n/**\n * Starts timeout listener for getRedirectResult pending promise. This method\n * should not be called again after getRedirectResult's redirectedUserPromise_\n * is determined.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.startRedirectTimeout_ =\n    function() {\n  // Expire pending timeout promise for popup operation.\n  var self = this;\n  var error = new fireauth.AuthError(\n      fireauth.authenum.Error.TIMEOUT);\n  if (this.redirectTimeoutPromise_) {\n    this.redirectTimeoutPromise_.cancel();\n  }\n  // For redirect mode.\n  this.redirectTimeoutPromise_ =\n      goog.Timer.promise(fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_.get())\n      .then(function() {\n        // If not resolved yet, reject with timeout error.\n        if (!self.redirectedUserPromise_) {\n          // Consider redirect result resolved.\n          self.redirectResultResolved_ = true;\n          self.setRedirectResult_(true, null, error);\n        }\n      });\n\n};\n\n\n\n/**\n * Popup Auth event manager.\n * @param {!fireauth.AuthEventManager} manager The parent Auth event manager.\n * @constructor\n * @implements {fireauth.AuthEventProcessor}\n */\nfireauth.PopupAuthEventProcessor = function(manager) {\n  this.manager_ = manager;\n};\n\n\n/**\n * Completes the processing of an external Auth event detected by the embedded\n * iframe.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @override\n */\nfireauth.PopupAuthEventProcessor.prototype.processAuthEvent =\n    function(authEvent, owner) {\n  // This should not happen as fireauth.iframe.AuthRelay will not send null\n  // events.\n  if (!authEvent) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n  var mode = authEvent.getType();\n  var eventId = authEvent.getEventId();\n  if (authEvent.hasError()) {\n    return this.processErrorEvent_(authEvent, owner);\n  } else if (owner.getAuthEventHandlerFinisher(mode, eventId)) {\n    return this.processSuccessEvent_(authEvent, owner);\n  } else {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n};\n\n\n/**\n * Processes an error event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.PopupAuthEventProcessor.prototype.processErrorEvent_ =\n    function(authEvent, owner) {\n  var eventId = authEvent.getEventId();\n  var mode = authEvent.getType();\n  // For pending popup promises trigger rejects with the error.\n  owner.resolvePendingPopupEvent(mode, null, authEvent.getError(), eventId);\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes a successful event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.PopupAuthEventProcessor.prototype.processSuccessEvent_ =\n    function(authEvent, owner) {\n  var eventId = authEvent.getEventId();\n  var mode = authEvent.getType();\n  var handler = owner.getAuthEventHandlerFinisher(mode, eventId);\n  // Successful operation, complete the exchange for an ID token.\n  var requestUri = /** @type {string} */ (authEvent.getUrlResponse());\n  var sessionId = /** @type {string} */ (authEvent.getSessionId());\n  var postBody = /** @type {?string} */ (authEvent.getPostBody());\n  // Complete sign in or link account operation and then pass result to\n  // relevant pending popup promise.\n  return handler(requestUri, sessionId, postBody)\n      .then(function(popupRedirectResponse) {\n    // Flow completed.\n    // Resolve pending popup promise if it exists.\n    owner.resolvePendingPopupEvent(mode, popupRedirectResponse, null, eventId);\n  }).thenCatch(function(error) {\n    // Flow not completed due to error.\n    // Resolve pending promise if it exists.\n    owner.resolvePendingPopupEvent(\n        mode, null, /** @type {!fireauth.AuthError} */ (error), eventId);\n    // Always resolve.\n    return;\n  });\n};\n\n\n\n/**\n * The interface that represents an Auth event handler. It provides the\n * ability for the Auth event manager to determine the owner of an Auth event,\n * the ability to resolve a pending popup event and the appropriate handler for\n * an event.\n * @interface\n */\nfireauth.AuthEventHandler = function() {};\n\n\n/**\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The event ID.\n * @return {boolean} Whether the Auth event handler can handler the provided\n *     event.\n */\nfireauth.AuthEventHandler.prototype.canHandleAuthEvent =\n    function(mode, opt_eventId) {};\n\n\n/**\n * Completes the pending popup operation. If error is not null, rejects with the\n * error. Otherwise, it resolves with the popup redirect result.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The result\n *     to resolve with when no error supplied.\n * @param {?fireauth.AuthError} error When supplied, the promise will reject.\n * @param {?string=} opt_eventId The event ID.\n */\nfireauth.AuthEventHandler.prototype.resolvePendingPopupEvent =\n    function(mode, popupRedirectResult, error, opt_eventId) {};\n\n\n/**\n * Returns the handler's appropriate popup and redirect sign in operation\n * finisher.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {?function(string,\n *     string, ?string=):!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthEventHandler.prototype.getAuthEventHandlerFinisher =\n    function(mode, opt_eventId) {};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the firebase.auth.AuthSettings structure.\n */\n\ngoog.provide('fireauth.AuthSettings');\n\n\n/**\n * The class used to initialize an Auth settings object currently used to\n * enable or disable app verification for testing.\n * @constructor\n */\nfireauth.AuthSettings = function() {\n  this.appVerificationDisabledForTesting_ = false;\n  Object.defineProperty(\n      /** @type {!Object} */ (this),\n      'appVerificationDisabled',\n      {\n        /**\n         * @this {!Object}\n         * @return {boolean} The current status.\n         */\n        get: function() {\n          return this.getAppVerificationDisabledForTesting();\n        },\n        /**\n         * @this {!Object}\n         * @param {boolean} value The new status.\n         */\n        set: function(value) {\n          this.setAppVerificationDisabledForTesting(value);\n        },\n        enumerable: false\n      });\n};\n\n\n/**\n * Sets whether app verification is disable for testing.\n * @param {boolean} status App verification status for testing.\n */\nfireauth.AuthSettings.prototype.setAppVerificationDisabledForTesting =\n    function(status) {\n  this.appVerificationDisabledForTesting_ = status;\n};\n\n\n/**\n * @return {boolean} Whether app verification is enabled or disabled for\n *     testing.\n */\nfireauth.AuthSettings.prototype.getAppVerificationDisabledForTesting =\n    function() {\n  return this.appVerificationDisabledForTesting_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the firebase.auth.ConfirmationResult. This is needed\n * to provide first class support for phone Auth API: signInWithPhoneNumber,\n * linkWithPhoneNumber and reauthenticateWithPhoneNumber.\n */\n\ngoog.provide('fireauth.ConfirmationResult');\n\ngoog.require('fireauth.PhoneAuthProvider');\ngoog.require('fireauth.object');\ngoog.require('goog.Promise');\n\n\n/**\n * The confirmation result class. This takes in the verification ID returned\n * from the phone Auth provider and the credential resolver to run when\n * confirming with a verification code.\n * @param {string} verificationId The verification ID returned from the Phone\n *     Auth provider after sending the verification code.\n * @param {!function(!fireauth.AuthCredential):\n *     !goog.Promise<!fireauth.AuthEventManager.Result>} credentialResolver a\n *     function that takes in an AuthCredential and returns a promise that\n *     resolves with a UserCredential object.\n * @constructor\n */\nfireauth.ConfirmationResult = function(verificationId, credentialResolver) {\n  /**\n   * @const @private {!function(!fireauth.AuthCredential):\n   *     !goog.Promise<!fireauth.AuthEventManager.Result>} A function that takes\n   *     in an AuthCredential and returns a promise that resolves with a\n   *     UserCredential object.\n   */\n  this.credentialResolver_ = credentialResolver;\n  // Set verificationId as read-only property.\n  fireauth.object.setReadonlyProperty(this, 'verificationId', verificationId);\n};\n\n\n/**\n * Confirms the verification code and returns a promise that resolves with the\n * User Credential object.\n * @param {string} verificationCode The phone Auth verification code to use to\n *     complete the Auth flow.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.ConfirmationResult.prototype.confirm = function(verificationCode) {\n  // Initialize a phone Auth credential with the verification ID and code.\n  var credential = fireauth.PhoneAuthProvider.credential(\n      this['verificationId'], verificationCode);\n  // Run the credential resolver with the phone Auth credential and return its\n  // result.\n  return this.credentialResolver_(credential);\n};\n\n\n/**\n * Initializes a ConfirmationResult using the provided phone number, app\n * verifier and returns it asynchronously. On code confirmation, the result will\n * resolve using the credential resolver provided.\n * @param {!fireauth.Auth} auth The corresponding Auth instance.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @param {!function(!fireauth.AuthCredential):\n *     !goog.Promise<!fireauth.AuthEventManager.Result>} credentialResolver a\n *     function that takes in an AuthCredential and returns a promise that\n *     resolves with a UserCredential object.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.ConfirmationResult.initialize =\n    function(auth, phoneNumber, appVerifier, credentialResolver) {\n  // Initialize a phone Auth provider instance using the provided Auth\n  // instance.\n  var phoneAuthProvider = new fireauth.PhoneAuthProvider(auth);\n  // Verify the phone number.\n  return phoneAuthProvider.verifyPhoneNumber(phoneNumber, appVerifier)\n      .then(function(verificationId) {\n        // When code is sent and verification ID is returned, initialize a\n        // ConfirmationResult with the returned verification ID and credential\n        // resolver, and return that instance.\n        return new fireauth.ConfirmationResult(\n            verificationId, credentialResolver);\n      });\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the firebase.auth.IdTokenResult class that is obtained\n * from getIdTokenResult. It contains the ID token JWT string and other helper\n * properties for getting different data associated with the token as well as\n * all the decoded payload claims.\n */\n\ngoog.provide('fireauth.IdTokenResult');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.IdToken');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\n\n\n\n/**\n * This is the ID token result object obtained from getIdTokenResult. It\n * contains the ID token JWT string and other helper properties for getting\n * different data associated with the token as well as all the decoded payload\n * claims.\n * @param {string} tokenString The JWT token.\n * @constructor\n */\nfireauth.IdTokenResult = function(tokenString) {\n  var idToken = fireauth.IdToken.parseIdTokenClaims(tokenString);\n  if (!idToken || !idToken['exp'] || !idToken['auth_time'] || !idToken['iat']) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'An internal error occurred. The token obtained by Firebase appears ' +\n        'to be malformed. Please retry the operation.');\n  }\n  fireauth.object.setReadonlyProperties(this, {\n    'token': tokenString,\n    'expirationTime': fireauth.util.utcTimestampToDateString(\n        idToken['exp'] * 1000),\n    'authTime': fireauth.util.utcTimestampToDateString(\n        idToken['auth_time'] * 1000),\n    'issuedAtTime': fireauth.util.utcTimestampToDateString(\n        idToken['iat'] * 1000),\n    'signInProvider': (idToken['firebase'] &&\n                       idToken['firebase']['sign_in_provider']) ?\n                      idToken['firebase']['sign_in_provider'] : null,\n    'claims': idToken\n  });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for proactive refresh with exponential backoff\n * algorithm typically used to define a retry policy for certain async\n * operations.\n */\n\ngoog.provide('fireauth.ProactiveRefresh');\n\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\n\n\n/**\n * The helper utility used to proactively refresh a certain operation based on\n * certain constraints with an exponential backoff retrial policy when\n * specific recoverable errors occur. Typically this is used to retry an\n * operation on network errors.\n * @param {!function():!goog.Promise} operation The promise returning operation\n *     to run.\n * @param {!function(*):boolean} retryPolicy A function that takes in an error\n *     and returns whether a retry policy should be implemented based on the\n *     error. If not, the operation will not run again.\n * @param {!function():number} getWaitDuration A function that returns the wait\n *     period before running again.\n * @param {number} lowerBound The lower bound duration to wait when an error\n *     occurs. This is the first interval to wait before rerunning after an\n *     error is detected.\n * @param {number} upperBound The upper bound duration to wait when an error\n *     keeps occurring. This upper bound should not be exceeded.\n * @param {boolean=} opt_runInBackground Whether to run in the background, when\n *     the tab is not visible. If the refresh should only run when the app is\n *     visible, the operation will block until the app is visible and then run.\n * @constructor @struct @final\n */\nfireauth.ProactiveRefresh = function(\n    operation,\n    retryPolicy,\n    getWaitDuration,\n    lowerBound,\n    upperBound,\n    opt_runInBackground) {\n  /**\n   * @const @private {!function():!goog.Promise} The promise returning operation\n   *     to run.\n   */\n  this.operation_ = operation;\n  /**\n   * @const @private {!function(*):boolean} The function that takes in an error\n   *     and returns whether a retry policy should be implemented based on the\n   *     error caught.\n   */\n  this.retryPolicy_ = retryPolicy;\n  /**\n   * @const @private {!function():number} The function that returns the wait\n   *     period after a successful operation before running again.\n   */\n  this.getWaitDuration_ = getWaitDuration;\n  /**\n   * @const @private {number} The lower bound duration to wait when an error\n   *     first occurs.\n   */\n  this.lowerBound_ = lowerBound;\n  /**\n   * @const @private {number} The upper bound duration to wait when an error\n   *     keeps occurring. This upper bound should not be exceeded.\n   */\n  this.upperBound_ = upperBound;\n  /**\n   * @const @private {boolean} Whether to run in the background, when the tab is\n   *     not visible.\n   */\n  this.runInBackground_ = !!opt_runInBackground;\n  /**\n   * @private {?goog.Promise} The pending promise for the next operation to run.\n   */\n  this.pending_ = null;\n  /**\n   * @private {number} The first wait interval when a new error occurs.\n   */\n  this.nextErrorWaitInterval_ = this.lowerBound_;\n  // Throw an error if the lower bound is greater than upper bound.\n  if (this.upperBound_ < this.lowerBound_) {\n    throw new Error('Proactive refresh lower bound greater than upper bound!');\n  }\n};\n\n\n/** Starts the proactive refresh based on the current configuration. */\nfireauth.ProactiveRefresh.prototype.start = function() {\n  // Set the next error wait interval to the lower bound. On each consecutive\n  // error, this will double in value until it reaches the upper bound.\n  this.nextErrorWaitInterval_ = this.lowerBound_;\n  // Start proactive refresh with clean slate (successful status).\n  this.process_(true);\n};\n\n\n/**\n * Returns the wait duration before the next run depending on the last run\n * status. If the last operation has succeeded, returns the getWaitDuration()\n * response. Otherwise, doubles the last error wait interval starting from\n * lowerBound and up to upperBound.\n * @param {boolean} hasSucceeded Whether last run succeeded.\n * @return {number} The wait time for the next run.\n * @private\n */\nfireauth.ProactiveRefresh.prototype.getNextRun_ = function(hasSucceeded) {\n  if (hasSucceeded) {\n    // If last operation succeeded, reset next error wait interval and return\n    // the default wait duration.\n    this.nextErrorWaitInterval_ = this.lowerBound_;\n    // Return typical wait duration interval after a successful operation.\n    return this.getWaitDuration_();\n  } else {\n    // Get next error wait interval.\n    var currentErrorWaitInterval = this.nextErrorWaitInterval_;\n    // Double interval for next consecutive error.\n    this.nextErrorWaitInterval_ *= 2;\n    // Make sure next wait interval does not exceed the maximum upper bound.\n    if (this.nextErrorWaitInterval_  > this.upperBound_) {\n      this.nextErrorWaitInterval_  = this.upperBound_;\n    }\n    return currentErrorWaitInterval;\n  }\n};\n\n\n/**\n * Processes one refresh call and sets the timer for the next call based on\n * the last recorded result.\n * @param {boolean} hasSucceeded Whether last run succeeded.\n * @private\n */\nfireauth.ProactiveRefresh.prototype.process_ = function(hasSucceeded) {\n  var self = this;\n  // Stop any other pending operation.\n  this.stop();\n  // Wait for next scheduled run based on whether an error occurred during last\n  // run.\n  this.pending_ = goog.Timer.promise(this.getNextRun_(hasSucceeded))\n      .then(function() {\n        // Block for conditions (if app is required to be visible) to be ready.\n        return self.waitUntilReady_();\n       })\n       .then(function() {\n         // Run the operation.\n         return self.operation_();\n       })\n      .then(function() {\n         // If successful, try again on next cycle with no previous error\n         // passed.\n         self.process_(true);\n       })\n      .thenCatch(function(error) {\n         // If an error occurs, only rerun when the error meets the retry\n         // policy.\n         if (self.retryPolicy_(error)) {\n           // Should retry with error to trigger exponentional backoff.\n           self.process_(false);\n         }\n         // Any other error is considered unrecoverable. Do not try again.\n       });\n};\n\n\n/**\n * Returns a promise which resolves when the current tab is visible.\n * This resolves quickly if refresh is supposed to run in the background too.\n * @return {!goog.Promise} The promise that resolves when the tab is visible or\n *     that requirement is not needed.\n * @private\n */\nfireauth.ProactiveRefresh.prototype.waitUntilReady_ = function() {\n  // Wait until app is in foreground if required.\n  if (this.runInBackground_) {\n    // If runs in background, resolve quickly.\n    return goog.Promise.resolve();\n  } else {\n    // Wait for the app to be visible before resolving the promise.\n    return fireauth.util.onAppVisible();\n  }\n};\n\n\n/** Stops the proactive refresh from running again. */\nfireauth.ProactiveRefresh.prototype.stop = function() {\n  // If there is a pending promise.\n  if (this.pending_) {\n    // Cancel the pending promise and nullify it.\n    this.pending_.cancel();\n    this.pending_ = null;\n  }\n};\n\n\n/** @return {boolean} Whether the proactive refresh is running or not. */\nfireauth.ProactiveRefresh.prototype.isRunning = function() {\n  return !!this.pending_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the user info pertaining to an identity provider and\n * the Firebase user object.\n */\n\ngoog.provide('fireauth.AuthUser');\ngoog.provide('fireauth.AuthUser.AccountInfo');\ngoog.provide('fireauth.AuthUserInfo');\ngoog.provide('fireauth.TokenRefreshTime');\ngoog.provide('fireauth.UserEvent');\ngoog.provide('fireauth.UserEventType');\ngoog.provide('fireauth.UserMetadata');\n\ngoog.require('fireauth.ActionCodeSettings');\ngoog.require('fireauth.AdditionalUserInfo');\ngoog.require('fireauth.AuthCredential');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthEventHandler');\ngoog.require('fireauth.AuthEventManager');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.ConfirmationResult');\ngoog.require('fireauth.IdTokenResult');\ngoog.require('fireauth.PhoneAuthProvider');\ngoog.require('fireauth.ProactiveRefresh');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.StsTokenManager');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.constants.AuthEventType');\ngoog.require('fireauth.deprecation');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.object');\n\n\n\n/**\n * Initializes an instance of a user metadata object.\n * @param {?string=} opt_createdAt The optional creation date UTC timestamp.\n * @param {?string=} opt_lastLoginAt The optional last login date UTC timestamp.\n * @constructor\n */\nfireauth.UserMetadata = function(opt_createdAt, opt_lastLoginAt) {\n  /** @private {?string} The created at UTC timestamp. */\n  this.createdAt_ = opt_createdAt || null;\n  /** @private {?string} The last login at UTC timestamp. */\n  this.lastLoginAt_ = opt_lastLoginAt || null;\n  fireauth.object.setReadonlyProperties(this, {\n    'lastSignInTime': fireauth.util.utcTimestampToDateString(\n        opt_lastLoginAt || null),\n    'creationTime': fireauth.util.utcTimestampToDateString(\n        opt_createdAt || null),\n  });\n};\n\n\n/**\n * @return {!fireauth.UserMetadata} A clone of the current user metadata object.\n */\nfireauth.UserMetadata.prototype.clone = function() {\n  return new fireauth.UserMetadata(this.createdAt_, this.lastLoginAt_);\n};\n\n\n/**\n * @return {!Object} The object representation of the user metadata instance.\n */\nfireauth.UserMetadata.prototype.toPlainObject = function() {\n  return {\n    'lastLoginAt': this.lastLoginAt_,\n    'createdAt': this.createdAt_\n  };\n};\n\n\n/**\n * Initializes an instance of the user info for an identity provider.\n * @param {string} uid The user ID.\n * @param {!fireauth.idp.ProviderId} providerId The provider ID.\n * @param {?string=} opt_email The optional user email.\n * @param {?string=} opt_displayName The optional display name.\n * @param {?string=} opt_photoURL The optional photo URL.\n * @param {?string=} opt_phoneNumber The optional phone number.\n * @constructor\n */\nfireauth.AuthUserInfo = function(\n    uid,\n    providerId,\n    opt_email,\n    opt_displayName,\n    opt_photoURL,\n    opt_phoneNumber) {\n  fireauth.object.setReadonlyProperties(this, {\n    'uid': uid,\n    'displayName': opt_displayName || null,\n    'photoURL': opt_photoURL || null,\n    'email': opt_email || null,\n    'phoneNumber': opt_phoneNumber || null,\n    'providerId': providerId\n  });\n};\n\n\n\n/**\n * User custom event.\n * @param {string} type The event type.\n * @param {?Object=} opt_properties The optional properties to set to the custom\n *     event using same keys as object provided.\n * @constructor\n * @extends {goog.events.Event}\n */\nfireauth.UserEvent = function(type, opt_properties) {\n  goog.events.Event.call(this, type);\n  // If optional properties provided.\n  // Add each property to custom event.\n  for (var key in opt_properties) {\n    this[key] = opt_properties[key];\n  }\n};\ngoog.inherits(fireauth.UserEvent, goog.events.Event);\n\n\n/**\n * Events dispatched by pages on containers.\n * @enum {string}\n */\nfireauth.UserEventType = {\n  /** Dispatched when token is changed due to Auth event. */\n  TOKEN_CHANGED: 'tokenChanged',\n\n  /** Dispatched when user is deleted. */\n  USER_DELETED: 'userDeleted',\n\n  /**\n   * Dispatched when user session is invalidated. This could happen when the\n   * following errors occur: user-disabled or user-token-expired.\n   */\n  USER_INVALIDATED: 'userInvalidated'\n};\n\n\n/**\n * Defines the proactive token refresh time constraints in milliseconds.\n * @enum {number}\n */\nfireauth.TokenRefreshTime = {\n  /**\n   * The offset time before token natural expiration to run the refresh.\n   * This is currently 5 minutes.\n   */\n  OFFSET_DURATION: 5 * 60 * 1000,\n  /**\n   * This is the first retrial wait after an error. This is currently\n   * 30 seconds.\n   */\n  RETRIAL_MIN_WAIT: 30 * 1000,\n  /**\n   * This is the maximum retrial wait, currently 16 minutes.\n   */\n  RETRIAL_MAX_WAIT: 16 * 60 * 1000\n};\n\n\n\n/**\n * The Firebase user.\n * @param {!Object} appOptions The application options.\n * @param {!Object} stsTokenResponse The server STS token response.\n * @param {?Object=} opt_accountInfo The optional user account info.\n * @constructor\n * @extends {goog.events.EventTarget}\n * @implements {fireauth.AuthEventHandler}\n */\nfireauth.AuthUser =\n    function(appOptions, stsTokenResponse, opt_accountInfo) {\n  /** @private {!Array<!goog.Promise<*, *>|!goog.Promise<void>>} List of pending\n   *      promises. */\n  this.pendingPromises_ = [];\n  // User is only created via Auth so API key should always be available.\n  /** @private {string} The API key. */\n  this.apiKey_ = /** @type {string} */ (appOptions['apiKey']);\n  // This is needed to associate a user to the corresponding Auth instance.\n  /** @private {string} The App name. */\n  this.appName_ = /** @type {string} */ (appOptions['appName']);\n  /** @private {?string} The Auth domain. */\n  this.authDomain_ = appOptions['authDomain'] || null;\n  var clientFullVersion = firebase.SDK_VERSION ?\n      fireauth.util.getClientVersion(\n          fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION) :\n      null;\n  /** @private {!fireauth.RpcHandler} The RPC handler instance. */\n  this.rpcHandler_ = new fireauth.RpcHandler(\n      this.apiKey_,\n      // Get the client Auth endpoint used.\n      fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),\n      clientFullVersion);\n  // TODO: Consider having AuthUser take a fireauth.StsTokenManager\n  // instance instead of a token response but make sure lastAccessToken_ also\n  // initialized at the right time. In this case initializeFromIdTokenResponse\n  // will take in a token response object and convert it to an instance of\n  // fireauth.StsTokenManager to properly initialize user.\n  /** @private {!fireauth.StsTokenManager} The STS token manager instance. */\n  this.stsTokenManager_ = new fireauth.StsTokenManager(this.rpcHandler_);\n\n  this.setLastAccessToken_(\n      stsTokenResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN]);\n  // STS token manager will always be populated using server response.\n  this.stsTokenManager_.parseServerResponse(stsTokenResponse);\n  fireauth.object.setReadonlyProperty(\n      this, 'refreshToken', this.stsTokenManager_.getRefreshToken());\n  this.setAccountInfo(/** @type {!fireauth.AuthUser.AccountInfo} */ (\n      opt_accountInfo || {}));\n  // Add call to superclass constructor.\n  fireauth.AuthUser.base(this, 'constructor');\n  /** @private {boolean} Whether popup and redirect is enabled on the user. */\n  this.popupRedirectEnabled_ = false;\n  if (this.authDomain_ &&\n      fireauth.AuthEventManager.ENABLED &&\n      // Make sure popup and redirects are supported in the current environment.\n      fireauth.util.isPopupRedirectSupported()) {\n    // Get the Auth event manager associated with this user.\n    this.authEventManager_ = fireauth.AuthEventManager.getManager(\n        this.authDomain_, this.apiKey_, this.appName_);\n  }\n  /** @private {!Array<!function(!fireauth.AuthUser):!goog.Promise>} The list of\n   *      state change listeners. This is needed to make sure state changes are\n   *      resolved before resolving user API promises. For example redirect\n   *      operations should make sure the associated event ID is saved before\n   *      redirecting.\n   */\n  this.stateChangeListeners_ = [];\n  /**\n   * @private {?fireauth.AuthError} The user invalidation error if it exists.\n   */\n  this.userInvalidatedError_ = null;\n  /**\n   * @private {!fireauth.ProactiveRefresh} The reference to the proactive token\n   *     refresher utility for the current user.\n   */\n  this.proactiveRefresh_ = this.initializeProactiveRefreshUtility_();\n  /**\n   * @private {!function(!Object)} The handler for user token changes used to\n   *     realign the proactive token refresh with external token refresh calls.\n   */\n  this.userTokenChangeListener_ = goog.bind(this.handleUserTokenChange_, this);\n  var self = this;\n  /** @private {?string} The current user's language code. */\n  this.languageCode_ = null;\n  /**\n   * @private {function(!goog.events.Event)} The on language code changed event\n   *     handler.\n   */\n  this.onLanguageCodeChanged_ = function(event) {\n    // Update the user language code.\n    self.setLanguageCode(event.languageCode);\n  };\n  /**\n   * @private {?goog.events.EventTarget} The language code change event\n   *     dispatcher.\n   */\n  this.languageCodeChangeEventDispatcher_ = null;\n\n  /** @private {!Array<string>} The current Firebase frameworks. */\n  this.frameworks_ = [];\n  /**\n   * @private {function(!goog.events.Event)} The on framework list changed event\n   *     handler.\n   */\n  this.onFrameworkChanged_ = function(event) {\n    // Update the Firebase frameworks.\n    self.setFramework(event.frameworks);\n  };\n  /**\n   * @private {?goog.events.EventTarget} The framework change event dispatcher.\n   */\n  this.frameworkChangeEventDispatcher_ = null;\n};\ngoog.inherits(fireauth.AuthUser, goog.events.EventTarget);\n\n\n/**\n * Updates the user language code.\n * @param {?string} languageCode The current language code to use in user\n *     requests.\n */\nfireauth.AuthUser.prototype.setLanguageCode = function(languageCode) {\n  // Save current language.\n  this.languageCode_ = languageCode;\n  // Update the custom locale header.\n  this.rpcHandler_.updateCustomLocaleHeader(languageCode);\n};\n\n\n/** @return {?string} The current user's language code. */\nfireauth.AuthUser.prototype.getLanguageCode = function() {\n  return this.languageCode_;\n};\n\n\n/**\n * Listens to language code changes triggered by the provided dispatcher.\n * @param {?goog.events.EventTarget} dispatcher The language code changed event\n *     dispatcher.\n */\nfireauth.AuthUser.prototype.setLanguageCodeChangeDispatcher =\n    function(dispatcher) {\n  // Remove any previous listener.\n  if (this.languageCodeChangeEventDispatcher_) {\n    goog.events.unlisten(\n        this.languageCodeChangeEventDispatcher_,\n        fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED,\n        this.onLanguageCodeChanged_);\n  }\n  // Update current dispatcher.\n  this.languageCodeChangeEventDispatcher_ = dispatcher;\n  // Using an event listener makes it easy for non-currentUsers to detect\n  // language changes on the parent Auth instance. A developer could still call\n  // APIs that require localization on signed out user references.\n  if (dispatcher) {\n    goog.events.listen(\n        dispatcher,\n        fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED,\n        this.onLanguageCodeChanged_);\n  }\n};\n\n\n/**\n * Updates the Firebase frameworks on the current user.\n * @param {!Array<string>} framework The list of Firebase frameworks.\n */\nfireauth.AuthUser.prototype.setFramework = function(framework) {\n  // Save current frameworks.\n  this.frameworks_ = framework;\n  // Update the client version in RPC handler with the new frameworks.\n  this.rpcHandler_.updateClientVersion(firebase.SDK_VERSION ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION,\n            this.frameworks_) :\n        null);\n};\n\n\n/** @return {!Array<string>} The current Firebase frameworks. */\nfireauth.AuthUser.prototype.getFramework = function() {\n  return goog.array.clone(this.frameworks_);\n};\n\n\n/**\n * Listens to framework changes triggered by the provided dispatcher.\n * @param {?goog.events.EventTarget} dispatcher The framework changed event\n *     dispatcher.\n */\nfireauth.AuthUser.prototype.setFrameworkChangeDispatcher =\n    function(dispatcher) {\n  // Remove any previous listener.\n  if (this.frameworkChangeEventDispatcher_) {\n    goog.events.unlisten(\n        this.frameworkChangeEventDispatcher_,\n        fireauth.constants.AuthEventType.FRAMEWORK_CHANGED,\n        this.onFrameworkChanged_);\n  }\n  // Update current dispatcher.\n  this.frameworkChangeEventDispatcher_ = dispatcher;\n  // Using an event listener makes it easy for non-currentUsers to detect\n  // framework changes on the parent Auth instance.\n  if (dispatcher) {\n    goog.events.listen(\n        dispatcher,\n        fireauth.constants.AuthEventType.FRAMEWORK_CHANGED,\n        this.onFrameworkChanged_);\n  }\n};\n\n\n/**\n * Handles user token changes. Currently used to realign the proactive token\n * refresh internal timing with successful external token refreshes.\n * @param {!Object} event The token change event.\n * @private\n */\nfireauth.AuthUser.prototype.handleUserTokenChange_ = function(event) {\n  // If an external service refreshes the token, reset the proactive token\n  // refresh utility in case it is still running so the next run time is\n  // up to date.\n  // This will currently also trigger when the proactive refresh succeeds.\n  // This is not ideal but should not have any downsides. It just adds a\n  // redundant reset which can be optimized not to run in the future.\n  if (this.proactiveRefresh_.isRunning()) {\n    this.proactiveRefresh_.stop();\n    this.proactiveRefresh_.start();\n  }\n};\n\n\n/**\n * @return {!fireauth.Auth} The corresponding Auth instance that created the\n *     current user.\n * @private\n */\nfireauth.AuthUser.prototype.getAuth_ = function() {\n  try {\n    // Get the Auth instance for the current app identified by the App name.\n    // This could fail if, for example, the App instance was deleted.\n    return firebase['app'](this.appName_)['auth']();\n  } catch (e) {\n    // Throw appropriate error.\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'No firebase.auth.Auth instance is available for the Firebase App ' +\n        '\\'' + this.appName_ + '\\'!');\n  }\n};\n\n\n/**\n * @return {string} The user's API key.\n */\nfireauth.AuthUser.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * Used to initialize the current user's proactive token refresher utility.\n * @return {!fireauth.ProactiveRefresh} The user's proactive token refresh\n *     utility.\n * @private\n */\nfireauth.AuthUser.prototype.initializeProactiveRefreshUtility_ = function() {\n  var self = this;\n  return new fireauth.ProactiveRefresh(\n      // Force ID token refresh right before expiration.\n      function() {\n        // Keep in mind when this fails for any reason other than a network\n        // error, it will effectively stop the proactive refresh.\n        return self.getIdToken(true);\n      },\n      // Retry only on network errors.\n      function(error) {\n        if (error && error.code == 'auth/network-request-failed') {\n          return true;\n        }\n        return false;\n      },\n      // Return next time to run with offset applied.\n      function() {\n        // Get time until expiration minus the refresh offset.\n        var waitInterval =\n            self.stsTokenManager_.getExpirationTime() - goog.now() -\n            fireauth.TokenRefreshTime.OFFSET_DURATION;\n        // Set to zero if wait interval is negative.\n        return waitInterval > 0 ? waitInterval : 0;\n      },\n      // Retrial minimum wait.\n      fireauth.TokenRefreshTime.RETRIAL_MIN_WAIT,\n      // Retrial maximum wait.\n      fireauth.TokenRefreshTime.RETRIAL_MAX_WAIT,\n      // Do not run in background as it is common to have multiple tabs open\n      // in a browser and this could increase QPS on server.\n      false);\n};\n\n\n/** Starts token proactive refresh. */\nfireauth.AuthUser.prototype.startProactiveRefresh = function() {\n  // Only allow if not destroyed and not already started.\n  if (!this.destroyed_ && !this.proactiveRefresh_.isRunning()) {\n    this.proactiveRefresh_.start();\n    // Unlisten any previous token change listener.\n    goog.events.unlisten(\n        this,\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n    // Listen to token changes to reset the token refresher.\n    goog.events.listen(\n        this,\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n  }\n};\n\n\n/** Stops token proactive refresh. */\nfireauth.AuthUser.prototype.stopProactiveRefresh = function() {\n  // Remove internal token change listener.\n  goog.events.unlisten(\n      this,\n      fireauth.UserEventType.TOKEN_CHANGED,\n      this.userTokenChangeListener_);\n  // Stop proactive token refresh.\n  this.proactiveRefresh_.stop();\n};\n\n\n/**\n * Sets latest access token for the AuthUser object.\n * @param {string} lastAccessToken\n * @private\n */\nfireauth.AuthUser.prototype.setLastAccessToken_ = function(lastAccessToken) {\n  /** @private {?string} Latest access token. */\n  this.lastAccessToken_ = lastAccessToken;\n  fireauth.object.setReadonlyProperty(this, '_lat', lastAccessToken);\n};\n\n\n/**\n * @param {!function(!fireauth.AuthUser):!goog.Promise} listener The listener\n *     to state changes to add.\n */\nfireauth.AuthUser.prototype.addStateChangeListener = function(listener) {\n  this.stateChangeListeners_.push(listener);\n};\n\n\n/**\n * @param {!function(!fireauth.AuthUser):!goog.Promise} listener The listener\n *     to state changes to remove.\n */\nfireauth.AuthUser.prototype.removeStateChangeListener = function(listener) {\n  goog.array.removeAllIf(this.stateChangeListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n\n/**\n * Executes all state change listener promises and when all fulfilled, resolves\n * with the current user.\n * @return {!goog.Promise} A promise that resolves when all state listeners\n *     fulfilled.\n * @private\n */\nfireauth.AuthUser.prototype.notifyStateChangeListeners_ = function() {\n  var promises = [];\n  var self = this;\n  for (var i = 0; i < this.stateChangeListeners_.length; i++) {\n    // Run listener with Auth user instance and add to list of promises.\n    promises.push(this.stateChangeListeners_[i](this));\n  }\n  return goog.Promise.allSettled(promises).then(function(results) {\n    // State change errors should be recoverable even if errors occur.\n    return self;\n  });\n};\n\n\n/**\n * Sets the user current pending popup event ID.\n * @param {string} eventId The pending popup event ID.\n */\nfireauth.AuthUser.prototype.setPopupEventId = function(eventId) {\n  // Saving a popup event in a separate property other than redirectEventId\n  // would prevent a pending redirect event from being overwritten by a newly\n  // called popup operation.\n  this.popupEventId_ = eventId;\n};\n\n\n/**\n * @return {?string} The pending popup event ID.\n */\nfireauth.AuthUser.prototype.getPopupEventId = function() {\n  return this.popupEventId_ || null;\n};\n\n\n/**\n * Sets the user current pending redirect event ID.\n * @param {string} eventId The pending redirect event ID.\n */\nfireauth.AuthUser.prototype.setRedirectEventId = function(eventId) {\n  this.redirectEventId_ = eventId;\n};\n\n\n/**\n * @return {?string} The pending redirect event ID.\n */\nfireauth.AuthUser.prototype.getRedirectEventId = function() {\n  return this.redirectEventId_ || null;\n};\n\n\n/**\n * Subscribes to Auth event manager to handle popup and redirect events.\n * This is an explicit operation as users could exist in temporary states. For\n * example a user change could be detected in another tab. When syncing to those\n * changes, a temporary user is retrieved from storage and then copied to\n * existing user. The temporary user should not subscribe to Auth event changes.\n */\nfireauth.AuthUser.prototype.enablePopupRedirect = function() {\n  // Subscribe to Auth event manager if available.\n  if (this.authEventManager_ && !this.popupRedirectEnabled_) {\n    this.popupRedirectEnabled_ = true;\n    this.authEventManager_.subscribe(this);\n  }\n};\n\n\n/**\n * getAccountInfo users field.\n * @const {string}\n */\nfireauth.AuthUser.GET_ACCOUNT_INFO_USERS = 'users';\n\n\n/**\n * getAccountInfo response user fields.\n * @enum {string}\n */\nfireauth.AuthUser.GetAccountInfoField = {\n  CREATED_AT: 'createdAt',\n  DISPLAY_NAME: 'displayName',\n  EMAIL: 'email',\n  LAST_LOGIN_AT: 'lastLoginAt',\n  LOCAL_ID: 'localId',\n  PASSWORD_HASH: 'passwordHash',\n  PASSWORD_UPDATED_AT: 'passwordUpdatedAt',\n  PHONE_NUMBER: 'phoneNumber',\n  PHOTO_URL: 'photoUrl',\n  PROVIDER_USER_INFO: 'providerUserInfo',\n  EMAIL_VERIFIED: 'emailVerified'\n};\n\n\n/**\n * setAccountInfo response user fields.\n * @enum {string}\n */\nfireauth.AuthUser.SetAccountInfoField = {\n  DISPLAY_NAME: 'displayName',\n  EMAIL: 'email',\n  PHOTO_URL: 'photoUrl',\n  PROVIDER_ID: 'providerId',\n  PROVIDER_USER_INFO: 'providerUserInfo'\n};\n\n\n/**\n * getAccountInfo response provider user info fields.\n * @enum {string}\n */\nfireauth.AuthUser.GetAccountInfoProviderField = {\n  DISPLAY_NAME: 'displayName',\n  EMAIL: 'email',\n  PHOTO_URL: 'photoUrl',\n  PHONE_NUMBER: 'phoneNumber',\n  PROVIDER_ID: 'providerId',\n  RAW_ID: 'rawId'\n};\n\n\n/**\n * verifyAssertion response fields.\n * @enum {string}\n */\nfireauth.AuthUser.VerifyAssertionField = {\n  ID_TOKEN: 'idToken',\n  PROVIDER_ID: 'providerId'\n};\n\n\n/** @return {!fireauth.StsTokenManager} The STS token manager instance */\nfireauth.AuthUser.prototype.getStsTokenManager = function() {\n  return this.stsTokenManager_;\n};\n\n\n/**\n * Sets the user account info.\n * @param {!fireauth.AuthUser.AccountInfo} accountInfo The account information\n *     from the default provider.\n */\nfireauth.AuthUser.prototype.setAccountInfo = function(accountInfo) {\n  fireauth.object.setReadonlyProperties(this, {\n    'uid': accountInfo['uid'],\n    'displayName': accountInfo['displayName'] || null,\n    'photoURL': accountInfo['photoURL'] || null,\n    'email': accountInfo['email'] || null,\n    'emailVerified': accountInfo['emailVerified'] || false,\n    'phoneNumber': accountInfo['phoneNumber'] || null,\n    'isAnonymous': accountInfo['isAnonymous'] || false,\n    'metadata': new fireauth.UserMetadata(\n        accountInfo['createdAt'], accountInfo['lastLoginAt']),\n    'providerData': []\n  });\n};\n\n\n/**\n * Type specifying the parameters that can be passed to the\n * {@code fireauth.AuthUser} constructor.\n * @typedef {{\n *   uid: (?string|undefined),\n *   displayName: (?string|undefined),\n *   photoURL: (?string|undefined),\n *   email: (?string|undefined),\n *   emailVerified: ?boolean,\n *   phoneNumber: (?string|undefined),\n *   isAnonymous: ?boolean,\n *   createdAt: (?string|undefined),\n *   lastLoginAt: (?string|undefined)\n * }}\n */\nfireauth.AuthUser.AccountInfo;\n\n\n/**\n * The provider for all fireauth.AuthUser objects is 'firebase'.\n */\nfireauth.object.setReadonlyProperty(fireauth.AuthUser.prototype, 'providerId',\n    fireauth.idp.ProviderId.FIREBASE);\n\n\n/**\n * Returns nothing. This can be used to consume the output of a Promise.\n * @private\n */\nfireauth.AuthUser.returnNothing_ = function() {\n  // Return nothing. Intentionally left empty.\n};\n\n\n/**\n * Ensures the user is still logged in before moving to the next promise\n * resolution.\n * @return {!goog.Promise<undefined,undefined>}\n * @private\n */\nfireauth.AuthUser.prototype.checkDestroyed_ = function() {\n  var self = this;\n  return goog.Promise.resolve().then(function() {\n    if (self.destroyed_) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.MODULE_DESTROYED);\n    }\n  });\n};\n\n\n/**\n * @return {!Array<!fireauth.idp.ProviderId>} The list of provider IDs.\n */\nfireauth.AuthUser.prototype.getProviderIds = function() {\n  return goog.array.map(this['providerData'], function(userInfo) {\n    return userInfo['providerId'];\n  });\n};\n\n\n/**\n * Adds the provided user info to list of providers' data.\n * @param {?fireauth.AuthUserInfo} providerData Provider data to store for user.\n */\nfireauth.AuthUser.prototype.addProviderData = function(providerData) {\n  if (!providerData) {\n    return;\n  }\n  this.removeProviderData(providerData['providerId']);\n  this['providerData'].push(providerData);\n};\n\n\n/**\n * @param {!fireauth.idp.ProviderId} providerId The provider ID whose\n *     data should be removed.\n */\nfireauth.AuthUser.prototype.removeProviderData = function(providerId) {\n  goog.array.removeAllIf(this['providerData'], function(userInfo) {\n    return userInfo['providerId'] == providerId;\n  });\n};\n\n\n/**\n * @param {string} propName The property name to modify.\n * @param {?string|boolean} value The new value to set.\n */\nfireauth.AuthUser.prototype.updateProperty = function(propName, value) {\n  // User ID is required.\n  if (propName == 'uid' && !value) {\n    return;\n  }\n  if (this.hasOwnProperty(propName)) {\n    fireauth.object.setReadonlyProperty(this, propName, value);\n  }\n};\n\n\n/**\n * @param {!fireauth.AuthUser} otherUser The other user to compare to.\n * @return {boolean} True if both User objects have the same user ID.\n */\nfireauth.AuthUser.prototype.hasSameUserIdAs = function(otherUser) {\n  var thisId = this['uid'];\n  var thatId = otherUser['uid'];\n  if (thisId === undefined || thisId === null || thisId === '' ||\n      thatId === undefined || thatId === null || thatId === '') {\n    return false;\n  }\n  return thisId == thatId;\n};\n\n\n/**\n * Copies all properties and STS token manager instance from userToCopy to\n * current user without triggering any Auth state change or token change\n * listener.\n * @param {!fireauth.AuthUser} userToCopy The updated user to overwrite current\n *     user.\n */\nfireauth.AuthUser.prototype.copy = function(userToCopy) {\n  var self = this;\n  // Copy to self.\n  if (self == userToCopy) {\n    return;\n  }\n  fireauth.object.setReadonlyProperties(this, {\n    'uid': userToCopy['uid'],\n    'displayName': userToCopy['displayName'],\n    'photoURL': userToCopy['photoURL'],\n    'email': userToCopy['email'],\n    'emailVerified': userToCopy['emailVerified'],\n    'phoneNumber': userToCopy['phoneNumber'],\n    'isAnonymous': userToCopy['isAnonymous'],\n    'providerData': []\n  });\n  // This should always be available but just in case there is a conflict with\n  // a user from an older version.\n  if (userToCopy['metadata']) {\n    fireauth.object.setReadonlyProperty(\n        this,\n        'metadata',\n        /** @type{!fireauth.UserMetadata} */ (userToCopy['metadata']).clone());\n  } else {\n    // User to copy has no metadata. Align with that.\n    fireauth.object.setReadonlyProperty(\n        this, 'metadata', new fireauth.UserMetadata());\n  }\n  goog.array.forEach(userToCopy['providerData'], function(userInfo) {\n    self.addProviderData(userInfo);\n  });\n  this.stsTokenManager_.copy(userToCopy.getStsTokenManager());\n  fireauth.object.setReadonlyProperty(\n      this, 'refreshToken', this.stsTokenManager_.getRefreshToken());\n};\n\n\n/**\n * Set the Auth user redirect storage manager.\n * @param {?fireauth.storage.RedirectUserManager} redirectStorageManager The\n *     utility used to store or delete the user on redirect.\n */\nfireauth.AuthUser.prototype.setRedirectStorageManager =\n    function(redirectStorageManager) {\n  /**\n   * @private {?fireauth.storage.RedirectUserManager} The redirect user storage\n   *     manager.\n   */\n  this.redirectStorageManager_ = redirectStorageManager;\n};\n\n\n/**\n * Refreshes the current user, if signed in.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.reload = function() {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(this.checkDestroyed_().then(function() {\n    return self.reloadWithoutSaving_()\n        .then(function() {\n          return self.notifyStateChangeListeners_();\n        })\n        .then(fireauth.AuthUser.returnNothing_);\n  }));\n};\n\n\n/**\n * Refreshes the current user, if signed in.\n * @return {!goog.Promise<string>} Promise that resolves with the idToken.\n * @private\n */\nfireauth.AuthUser.prototype.reloadWithoutSaving_ = function() {\n  var self = this;\n  // ID token is required to refresh the user's data.\n  // If this is called after invalidation, getToken will throw the cached error.\n  return this.getIdToken().then(function(idToken) {\n    var isAnonymous = self['isAnonymous'];\n    return self.setUserAccountInfoFromToken_(idToken)\n        .then(function(user) {\n          if (!isAnonymous) {\n            // Preserves the not anonymous status of the stored user,\n            // even if no more credentials (federated or email/password)\n            // linked to the user.\n            self.updateProperty('isAnonymous', false);\n          }\n          return idToken;\n        });\n  });\n};\n\n\n/**\n * This operation resolves with the Firebase ID token result which contains\n * the entire payload claims.\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<!fireauth.IdTokenResult>} A Promise that resolves with\n *     the ID token result.\n */\nfireauth.AuthUser.prototype.getIdTokenResult = function(opt_forceRefresh) {\n  return this.getIdToken(opt_forceRefresh).then(function(idToken) {\n    return new fireauth.IdTokenResult(idToken);\n  });\n};\n\n\n/**\n * This operation resolves with the Firebase ID token.\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<string>} A Promise that resolves with the ID token.\n */\nfireauth.AuthUser.prototype.getIdToken = function(opt_forceRefresh) {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(this.checkDestroyed_().then(function() {\n    return self.stsTokenManager_.getToken(opt_forceRefresh);\n  }).then(function(response) {\n    if (!response) {\n      // If the user exists, the token manager should be initialized.\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n    }\n    // Only if the access token is refreshed, notify Auth listeners.\n    if (response['accessToken'] != self.lastAccessToken_) {\n      self.setLastAccessToken_(response['accessToken']);\n      // Auth state change, notify listeners.\n      self.notifyAuthListeners_();\n    }\n    self.updateProperty('refreshToken', response['refreshToken']);\n    return response['accessToken'];\n  }));\n};\n\n\n/**\n * Checks if the error corresponds to a user invalidation action.\n * @param {*} error The error returned by a user operation.\n * @return {boolean} Whether the user is invalidated based on the error\n *     provided.\n * @private\n */\nfireauth.AuthUser.isUserInvalidated_ = function(error) {\n  return !!(error &&\n      (error.code == 'auth/user-disabled' ||\n       error.code == 'auth/user-token-expired'));\n};\n\n\n/**\n * Updates the current tokens using a server response, if new tokens are\n * present and are different from the current ones, and notify the Auth\n * listeners.\n * @param {!Object} response The response from the server.\n * @private\n */\nfireauth.AuthUser.prototype.updateTokensIfPresent_ = function(response) {\n  if (response[fireauth.RpcHandler.AuthServerField.ID_TOKEN] &&\n      this.lastAccessToken_ != response[\n          fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    this.stsTokenManager_.parseServerResponse(response);\n    this.notifyAuthListeners_();\n    this.setLastAccessToken_(response[\n        fireauth.RpcHandler.AuthServerField.ID_TOKEN]);\n    // Update refresh token property.\n    this.updateProperty(\n        'refreshToken', this.stsTokenManager_.getRefreshToken());\n  }\n};\n\n\n/**\n * Called internally on Auth (access token) changes to notify listeners.\n * @private\n */\nfireauth.AuthUser.prototype.notifyAuthListeners_ = function() {\n  this.dispatchEvent(\n      new fireauth.UserEvent(fireauth.UserEventType.TOKEN_CHANGED));\n};\n\n\n/**\n * Called internally on user deletion to notify listeners.\n * @private\n */\nfireauth.AuthUser.prototype.notifyUserDeletedListeners_ = function() {\n  this.dispatchEvent(\n      new fireauth.UserEvent(fireauth.UserEventType.USER_DELETED));\n};\n\n\n/**\n * Called internally on user session invalidation to notify listeners.\n * @private\n */\nfireauth.AuthUser.prototype.notifyUserInvalidatedListeners_ = function() {\n  this.dispatchEvent(\n      new fireauth.UserEvent(fireauth.UserEventType.USER_INVALIDATED));\n};\n\n\n/**\n * Queries the backend using the provided ID token for all linked accounts to\n * build the Firebase user object.\n * @param {!string} idToken The ID token string.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.AuthUser.prototype.setUserAccountInfoFromToken_ = function(idToken) {\n  return this.rpcHandler_.getAccountInfoByIdToken(idToken)\n      .then(goog.bind(this.parseAccountInfo_, this));\n};\n\n\n/**\n * Parses the response from the getAccountInfo endpoint.\n * @param {!Object} resp The backend response.\n * @private\n */\nfireauth.AuthUser.prototype.parseAccountInfo_ = function(resp) {\n  var users = resp[fireauth.AuthUser.GET_ACCOUNT_INFO_USERS];\n  if (!users || !users.length) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  var user = users[0];\n  var accountInfo = /** @type {!fireauth.AuthUser.AccountInfo} */ ({\n    'uid': /** @type {string} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.LOCAL_ID]),\n    'displayName': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.DISPLAY_NAME]),\n    'photoURL': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.PHOTO_URL]),\n    'email': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.EMAIL]),\n    'emailVerified':\n        !!user[fireauth.AuthUser.GetAccountInfoField.EMAIL_VERIFIED],\n    'phoneNumber': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.PHONE_NUMBER]),\n    'lastLoginAt': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.LAST_LOGIN_AT]),\n    'createdAt': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.CREATED_AT])\n  });\n  this.setAccountInfo(accountInfo);\n  var linkedAccounts = this.extractLinkedAccounts_(user);\n  for (var i = 0; i < linkedAccounts.length; i++) {\n    this.addProviderData(linkedAccounts[i]);\n  }\n  // Sets the isAnonymous flag based on email, passwordHash and providerData.\n  var isAnonymous = !(this['email'] &&\n      user[fireauth.AuthUser.GetAccountInfoField.PASSWORD_HASH]) &&\n      !(this['providerData'] && this['providerData'].length);\n  this.updateProperty('isAnonymous', isAnonymous);\n};\n\n\n/**\n * Extracts the linked accounts from getAccountInfo response and returns an\n * array of corresponding provider data.\n * @param {!Object} resp The response object.\n * @return {!Array.<!fireauth.AuthUserInfo>} The linked accounts.\n * @private\n */\nfireauth.AuthUser.prototype.extractLinkedAccounts_ = function(resp) {\n  var providerInfo =\n      resp[fireauth.AuthUser.GetAccountInfoField.PROVIDER_USER_INFO];\n  if (!providerInfo || !providerInfo.length) {\n    return [];\n  }\n\n  return goog.array.map(providerInfo, function(info) {\n    return new fireauth.AuthUserInfo(\n        info[fireauth.AuthUser.GetAccountInfoProviderField.RAW_ID],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.PROVIDER_ID],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.EMAIL],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.DISPLAY_NAME],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.PHOTO_URL],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.PHONE_NUMBER]);\n  });\n};\n\n\n/**\n * Reauthenticates a user using a fresh credential, to be used before operations\n * such as updatePassword that require tokens from recent login attempts. It\n * also returns any additional user info data or credentials returned form the\n * backend.\n * @param {!fireauth.AuthCredential} credential\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.reauthenticateAndRetrieveDataWithCredential =\n    function(credential) {\n  var self = this;\n  var userCredential = null;\n  // Register this pending promise but bypass user invalidation check.\n  return this.registerPendingPromise_(\n      // Match ID token from credential with the current user UID.\n      credential.matchIdTokenWithUid(this.rpcHandler_, this['uid'])\n      .then(function(response) {\n        // If the credential is valid and matches the current user ID, then\n        // update the tokens accordingly.\n        self.updateTokensIfPresent_(response);\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.REAUTHENTICATE);\n        // This could potentially validate an invalidated user. This happens in\n        // the case a password reset was applied. The refresh token is expired.\n        // Reauthentication should revalidate the user.\n        // User would remain non current if already signed out, but should be\n        // enabled again.\n        self.userInvalidatedError_ = null;\n        return self.reload();\n      }).then(function() {\n        // Return user credential after reauthenticated user is reloaded.\n        return userCredential;\n      }),\n      // Skip invalidation check as reauthentication could revalidate a user.\n      true);\n};\n\n\n/**\n * Reauthenticates a user using a fresh credential, to be used before operations\n * such as updatePassword that require tokens from recent login attempts. It has\n * been deprecated in favor of reauthenticateAndRetrieveDataWithCredential.\n * @param {!fireauth.AuthCredential} credential\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithCredential =\n    function(credential) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.REAUTH_WITH_CREDENTIAL);\n  // Get reauthenticateAndRetrieveDataWithCredential result and return void.\n  return this.reauthenticateAndRetrieveDataWithCredential(credential)\n      .then(function(result) {\n        // Do not return anything. Promise should resolve with void.\n      });\n};\n\n\n/**\n * Reloads the user and then checks if a provider is already linked. If so,\n * this returns a Promise that rejects. Note that state change listeners are not\n * notified on success, so that operations using this can make changes and then\n * do one final listener notification.\n * @param {string} providerId\n * @return {!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.checkIfAlreadyLinked_ =\n    function(providerId) {\n  var self = this;\n  // Reload first in case the user was updated elsewhere.\n  return this.reloadWithoutSaving_()\n      .then(function() {\n        if (goog.array.contains(self.getProviderIds(), providerId)) {\n          return self.notifyStateChangeListeners_()\n              .then(function() {\n                  throw new fireauth.AuthError(\n                      fireauth.authenum.Error.PROVIDER_ALREADY_LINKED);\n              });\n        }\n      });\n};\n\n\n/**\n * Links a provider to the current user and returns any additional user info\n * data or credentials returned form the backend.\n * @param {!fireauth.AuthCredential} credential The credential from the Auth\n *     provider.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.linkAndRetrieveDataWithCredential =\n    function(credential) {\n  var self = this;\n  var userCredential = null;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.checkIfAlreadyLinked_(credential['providerId'])\n      .then(function() {\n        return self.getIdToken();\n      })\n      .then(function(idToken) {\n        return credential.linkToIdToken(self.rpcHandler_, idToken);\n      })\n      .then(function(response) {\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.LINK);\n        // Finalize linking.\n        return self.finalizeLinking_(response);\n      })\n      .then(function(user) {\n        // Return user credential after finalizing linking.\n        return userCredential;\n      })\n  );\n};\n\n\n/**\n * Links a provider to the current user. It has been deprecated in favor of\n * linkAndRetrieveDataWithCredential.\n * @param {!fireauth.AuthCredential} credential The credential from the Auth\n *     provider.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.AuthUser.prototype.linkWithCredential = function(credential) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.LINK_WITH_CREDENTIAL);\n  // Get linkAndRetrieveDataWithCredential result and return the user only.\n  return this.linkAndRetrieveDataWithCredential(credential)\n      .then(function(result) {\n        return result['user'];\n      });\n};\n\n\n/**\n * Links a phone number using the App verifier instance and returns a\n * promise that resolves with the confirmation result which on confirmation\n * will resolve with the UserCredential object.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.AuthUser.prototype.linkWithPhoneNumber =\n    function(phoneNumber, appVerifier) {\n  var self = this;\n  return /** @type {!goog.Promise<!fireauth.ConfirmationResult>} */ (\n      this.registerPendingPromise_(\n          // Check if linked already. If so, throw an error.\n          // This is redundant but is needed to prevent the need to send the\n          // SMS (worth the cost).\n          this.checkIfAlreadyLinked_(fireauth.idp.ProviderId.PHONE)\n              .then(function() {\n                return fireauth.ConfirmationResult.initialize(\n                    self.getAuth_(),\n                    phoneNumber,\n                    appVerifier,\n                    // This will check again if the credential is linked.\n                    goog.bind(self.linkAndRetrieveDataWithCredential, self));\n              })));\n};\n\n\n/**\n * Reauthenticates a user with a phone number using the App verifier instance\n * and returns a promise that resolves with the confirmation result which on\n * confirmation will resolve with the UserCredential object.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithPhoneNumber =\n    function(phoneNumber, appVerifier) {\n  var self = this;\n  return /** @type {!goog.Promise<!fireauth.ConfirmationResult>} */ (\n      this.registerPendingPromise_(\n          // Wrap this operation in a Promise since self.getAuth_() may throw an\n          // error synchronously.\n          goog.Promise.resolve().then(function() {\n            return fireauth.ConfirmationResult.initialize(\n                // Get corresponding Auth instance.\n                self.getAuth_(),\n                phoneNumber,\n                appVerifier,\n                goog.bind(self.reauthenticateAndRetrieveDataWithCredential,\n                    self));\n          }),\n          // Skip invalidation check as reauthentication could revalidate a\n          // user.\n          true));\n};\n\n\n/**\n * Converts an ID token response (eg. verifyAssertion) to a UserCredential\n * object.\n * @param {!Object} idTokenResponse The ID token response.\n * @param {!fireauth.constants.OperationType} operationType The operation type\n *     to set in the user credential.\n * @return {!fireauth.AuthEventManager.Result} The UserCredential object\n *     constructed from the response.\n * @private\n */\nfireauth.AuthUser.prototype.getUserCredential_ =\n    function(idTokenResponse, operationType) {\n  // Get credential if available in the response.\n  var credential = fireauth.AuthProvider.getCredentialFromResponse(\n      idTokenResponse);\n  // Get additional user info data if available in the response.\n  var additionalUserInfo = fireauth.AdditionalUserInfo.fromPlainObject(\n      idTokenResponse);\n  // Return the readonly copy of the user credential object.\n  return fireauth.object.makeReadonlyCopy({\n    // Return the current user reference.\n    'user': this,\n    // Return any credential passed from the backend.\n    'credential': credential,\n    // Return any additional IdP data passed from the backend.\n    'additionalUserInfo': additionalUserInfo,\n    // Return the operation type in the user credential object.\n    'operationType': operationType\n  });\n};\n\n\n/**\n * Finalizes a linking flow, updating idToken and user's data using the\n * RPC linking response.\n * @param {!Object} response The RPC linking response.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n * @private\n */\nfireauth.AuthUser.prototype.finalizeLinking_ = function(response) {\n  // The response may contain a new access token,\n  // so we should update them just like a new sign in.\n  this.updateTokensIfPresent_(response);\n  // This will take care of saving the updated state.\n  var self = this;\n  return this.reload().then(function() {\n    return self;\n  });\n};\n\n\n/**\n * Updates the user's email.\n * @param {string} newEmail The new email.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.updateEmail = function(newEmail) {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(this.getIdToken()\n      .then(function(idToken) {\n        return self.rpcHandler_.updateEmail(idToken, newEmail);\n      })\n      .then(function(response) {\n        // Calls to SetAccountInfo may invalidate old tokens.\n        self.updateTokensIfPresent_(response);\n        // Reloads the user to update emailVerified.\n        return self.reload();\n      }));\n};\n\n\n/**\n * Updates the user's phone number.\n * @param {!fireauth.PhoneAuthCredential} phoneCredential\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.updatePhoneNumber = function(phoneCredential) {\n  var self = this;\n  return this.registerPendingPromise_(this.getIdToken()\n      .then(function(idToken) {\n        // The backend always overwrites the existing phone number during a\n        // link operation.\n        return phoneCredential.linkToIdToken(self.rpcHandler_, idToken);\n      })\n      .then(function(response) {\n        self.updateTokensIfPresent_(response);\n        return self.reload();\n      }));\n};\n\n\n/**\n * Updates the user's password.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.updatePassword = function(newPassword) {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.getIdToken()\n      .then(function(idToken) {\n        return self.rpcHandler_.updatePassword(idToken, newPassword);\n      })\n      .then(function(response) {\n        self.updateTokensIfPresent_(response);\n        // Reloads the user in case email has also been updated and the user\n        // was anonymous.\n        return self.reload();\n      }));\n};\n\n\n/**\n * Updates the user's profile data.\n * @param {!Object} profile The profile data to update.\n * @return {!goog.Promise<undefined>}\n */\nfireauth.AuthUser.prototype.updateProfile = function(profile) {\n  if (profile['displayName'] === undefined &&\n      profile['photoURL'] === undefined) {\n    // No change, directly return.\n    return this.checkDestroyed_();\n  }\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.getIdToken().then(function(idToken) {\n        // Translate the request into one that the backend accepts.\n        var profileRequest = {\n          'displayName': profile['displayName'],\n          'photoUrl': profile['photoURL']\n        };\n        return self.rpcHandler_.updateProfile(idToken, profileRequest);\n      })\n      .then(function(response) {\n        // Calls to SetAccountInfo may invalidate old tokens.\n        self.updateTokensIfPresent_(response);\n        // Update properties.\n        self.updateProperty('displayName',\n            response[fireauth.AuthUser.SetAccountInfoField.DISPLAY_NAME] ||\n            null);\n        self.updateProperty('photoURL',\n            response[fireauth.AuthUser.SetAccountInfoField.PHOTO_URL] || null);\n        goog.array.forEach(self['providerData'], function(userInfo) {\n          // Check if password provider is linked.\n          if (userInfo['providerId'] === fireauth.idp.ProviderId.PASSWORD) {\n            // If so, update both fields in that provider.\n            fireauth.object.setReadonlyProperty(\n                userInfo, 'displayName', self['displayName']);\n            fireauth.object.setReadonlyProperty(\n                userInfo, 'photoURL', self['photoURL']);\n          }\n        });\n        // Notify changes and resolve.\n        return self.notifyStateChangeListeners_();\n      })\n      .then(fireauth.AuthUser.returnNothing_));\n};\n\n\n/**\n * Unlinks a provider from an account.\n * @param {!fireauth.idp.ProviderId} providerId The ID of the provider to\n *     unlink.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.AuthUser.prototype.unlink = function(providerId) {\n  var self = this;\n  // Make sure we have updated user providers to avoid removing a linked\n  // provider that hasn't been updated in current copy of user.\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.reloadWithoutSaving_()\n      .then(function(idToken) {\n        // Provider already unlinked.\n        if (!goog.array.contains(self.getProviderIds(), providerId)) {\n          return self.notifyStateChangeListeners_()\n              .then(function() {\n                throw new fireauth.AuthError(\n                    fireauth.authenum.Error.NO_SUCH_PROVIDER);\n              });\n        }\n        // We delete the providerId given.\n        return self.rpcHandler_\n            .deleteLinkedAccounts(idToken, [providerId])\n            .then(function(resp) {\n              // Construct the set of provider IDs returned by server.\n              var remainingProviderIds = {};\n              var userInfo = resp[fireauth.AuthUser.SetAccountInfoField.\n                  PROVIDER_USER_INFO] || [];\n              goog.array.forEach(userInfo, function(obj) {\n                remainingProviderIds[\n                    obj[fireauth.AuthUser.SetAccountInfoField.PROVIDER_ID]] =\n                    true;\n              });\n\n              // Remove all provider data objects where the provider ID no\n              // longer exists in this user.\n              goog.array.forEach(self.getProviderIds(), function(pId) {\n                if (!remainingProviderIds[pId]) {\n                  // This provider no longer linked, remove it from user.\n                  self.removeProviderData(pId);\n                }\n              });\n\n              // Remove the phone number if the phone provider was unlinked.\n              if (!remainingProviderIds[fireauth.PhoneAuthProvider[\n                      'PROVIDER_ID']]) {\n                fireauth.object.setReadonlyProperty(self, 'phoneNumber', null);\n              }\n\n              return self.notifyStateChangeListeners_();\n            });\n      }));\n};\n\n\n/**\n * Deletes the user, triggering an Auth token change if successful.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.delete = function() {\n  // Notice the way of declaring the method, it's to avoid a weird bug on IE8.\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.getIdToken()\n      .then(function(idToken) {\n        return self.rpcHandler_.deleteAccount(idToken);\n      })\n      .then(function() {\n        self.notifyUserDeletedListeners_();\n      }))\n      .then(function() {\n        // Destroying after the registered promise is handled ensures it won't\n        // be canceled.\n        self.destroy();\n      });\n};\n\n\n/**\n * Tells the Auth event manager if this user is the owner of a detected Auth\n * event. A user can handle linkWithPopup and linkWithRedirect operations.\n * In addition, the event ID should match the user's event IDs.\n * @param {!fireauth.AuthEvent.Type} mode The Auth operation mode (popup,\n *     redirect).\n * @param {?string=} opt_eventId The event ID.\n * @return {boolean} Whether the Auth event handler can handler the provided\n *     event.\n * @override\n */\nfireauth.AuthUser.prototype.canHandleAuthEvent = function(mode, opt_eventId) {\n  if (mode == fireauth.AuthEvent.Type.LINK_VIA_POPUP &&\n      this.getPopupEventId() == opt_eventId &&\n      this.pendingPopupResolvePromise_) {\n    // The link via popup event's ID matches the user's popup event ID which\n    // makes this user the owner of this event.\n    return true;\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_POPUP &&\n      this.getPopupEventId() == opt_eventId &&\n      this.pendingPopupResolvePromise_) {\n    // The reauth via popup event's ID matches the user's popup event ID which\n    // makes this user the owner of this event.\n    return true;\n  } else if (mode == fireauth.AuthEvent.Type.LINK_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // The link via redirect event's ID matches the user's redirect event ID\n    // which makes this user the owner of this event.\n    return true;\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // The reauth via redirect event's ID matches the user's redirect event ID\n    // which makes this user the owner of this event.\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Completes the pending popup operation. If error is not null, rejects with the\n * error. Otherwise, it resolves with the popup redirect result.\n * @param {!fireauth.AuthEvent.Type} mode The Auth operation mode (popup,\n *     redirect).\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The result\n *     to resolve with when no error supplied.\n * @param {?fireauth.AuthError} error When supplied, the promise will reject.\n * @param {?string=} opt_eventId The event ID.\n * @override\n */\nfireauth.AuthUser.prototype.resolvePendingPopupEvent =\n    function(mode, popupRedirectResult, error, opt_eventId) {\n  // Only handles popup events with event IDs that match a pending popup ID.\n  if ((mode != fireauth.AuthEvent.Type.LINK_VIA_POPUP &&\n       mode != fireauth.AuthEvent.Type.REAUTH_VIA_POPUP) ||\n      opt_eventId != this.getPopupEventId()) {\n    return;\n  }\n  if (error && this.pendingPopupRejectPromise_) {\n    // Reject with error for supplied mode.\n    this.pendingPopupRejectPromise_(error);\n  } else if (popupRedirectResult &&\n             !error &&\n             this.pendingPopupResolvePromise_) {\n    // Resolve with result for supplied mode.\n    this.pendingPopupResolvePromise_(popupRedirectResult);\n  }\n  // Now that event is resolved, delete timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  // Delete pending promises.\n  delete this.pendingPopupResolvePromise_;\n  delete this.pendingPopupRejectPromise_;\n};\n\n\n/**\n * Returns the handler's appropriate popup and redirect sign in operation\n * finisher. Can handle link or reauth events that match existing event IDs.\n * @param {!fireauth.AuthEvent.Type} mode The Auth operation mode (popup,\n *     redirect).\n * @param {?string=} opt_eventId The optional event ID.\n * @return {?function(string,\n *     string, ?string=):!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @override\n */\nfireauth.AuthUser.prototype.getAuthEventHandlerFinisher =\n    function(mode, opt_eventId) {\n  if (mode == fireauth.AuthEvent.Type.LINK_VIA_POPUP &&\n      opt_eventId == this.getPopupEventId()) {\n    // Link with popup ID matches popup event ID.\n    return goog.bind(this.finishPopupAndRedirectLink, this);\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_POPUP &&\n      opt_eventId == this.getPopupEventId()) {\n    // Reauth with popup ID matches popup event ID.\n    return goog.bind(this.finishPopupAndRedirectReauth, this);\n  } else if (mode == fireauth.AuthEvent.Type.LINK_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // Link with redirect ID matches redirect event ID.\n    return goog.bind(this.finishPopupAndRedirectLink, this);\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // Reauth with redirect ID matches redirect event ID.\n    return goog.bind(this.finishPopupAndRedirectReauth, this);\n  }\n  return null;\n};\n\n\n/**\n * @return {string} The generated event ID used to identify a popup or redirect\n *     event.\n * @private\n */\nfireauth.AuthUser.prototype.generateEventId_ = function() {\n  return fireauth.util.generateEventId(this['uid'] + ':::');\n};\n\n\n/**\n * Links to Auth provider via popup.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.linkWithPopup = function(provider) {\n  var self = this;\n  // Additional check to return to fail when the provider is already linked.\n  var additionalCheck = function() {\n    return self.checkIfAlreadyLinked_(provider['providerId'])\n        .then(function() {\n          // Notify state listeners after the check as it will update the user\n          // state.\n          return self.notifyStateChangeListeners_();\n        });\n  };\n  return this.runOperationWithPopup_(\n      fireauth.AuthEvent.Type.LINK_VIA_POPUP, provider, additionalCheck, false);\n};\n\n\n/**\n * Reauthenticate to Auth provider via popup.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithPopup = function(provider) {\n  // No additional check needed before running this operation.\n  var additionalCheck = function() {\n    return goog.Promise.resolve();\n  };\n  return this.runOperationWithPopup_(\n      fireauth.AuthEvent.Type.REAUTH_VIA_POPUP,\n      provider,\n      additionalCheck,\n      // Do not update token and skip session invalidation check.\n      true);\n};\n\n\n/**\n * Runs a specific OAuth operation using the Auth provider via popup.\n * @param {!fireauth.AuthEvent.Type} mode The mode of operation (link or\n *     reauth).\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function():!goog.Promise} additionalCheck The additional check to\n *     run before proceeding with the popup processing.\n * @param {boolean} isReauthOperation whether this is a reauth operation or not.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @private\n */\nfireauth.AuthUser.prototype.runOperationWithPopup_ =\n    function(mode, provider, additionalCheck, isReauthOperation) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  // Quickly throw user invalidation error if already invalidated.\n  if (this.userInvalidatedError_ &&\n      // Skip invalidation check as reauthentication could revalidate a user.\n      !isReauthOperation) {\n    return goog.Promise.reject(this.userInvalidatedError_);\n  }\n  var self = this;\n  // Popup the window immediately to make sure the browser associates the\n  // popup with the click that triggered it.\n\n  // Get provider settings.\n  var settings = fireauth.idp.getIdpSettings(provider['providerId']);\n  // There could multiple users at the same time and multiple users could have\n  // the same UID. So try to ensure event ID uniqueness.\n  var eventId = this.generateEventId_();\n  // If incapable of redirecting popup from opener, popup destination URL\n  // directly. This could also happen in a sandboxed iframe.\n  var oauthHelperWidgetUrl = null;\n  if ((!fireauth.util.runsInBackground() || fireauth.util.isIframe()) &&\n      this.authDomain_ &&\n      provider['isOAuthProvider']) {\n    oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            this.authDomain_,\n            this.apiKey_,\n            this.appName_,\n            mode,\n            provider,\n            null,\n            eventId,\n            firebase.SDK_VERSION || null);\n  }\n  // The popup must have a name, otherwise when successive popups are triggered\n  // they will all render in the same instance and none will succeed since the\n  // popup cancel of first window will close the shared popup window instance.\n  var popupWin =\n      fireauth.util.popup(\n          oauthHelperWidgetUrl,\n          fireauth.util.generateRandomString(),\n          settings && settings.popupWidth,\n          settings && settings.popupHeight);\n  var p = additionalCheck().then(function() {\n    // Auth event manager must be available for account linking or\n    // reauthentication to be possible.\n    self.getAuthEventManager();\n    if (!isReauthOperation) {\n      // Some operations like reauthenticate do not require this.\n      return self.getIdToken().then(function(idToken) {});\n    }\n  }).then(function() {\n    // Process popup request.\n    return self.authEventManager_.processPopup(\n        popupWin, mode, provider, eventId, !!oauthHelperWidgetUrl);\n  }).then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      // Expire other pending promises if still available.\n      self.resolvePendingPopupEvent(\n          mode,\n          null,\n          new fireauth.AuthError(fireauth.authenum.Error.EXPIRED_POPUP_REQUEST),\n          // Existing popup event ID.\n          self.getPopupEventId());\n      // Save current pending promises.\n      self.pendingPopupResolvePromise_ = resolve;\n      self.pendingPopupRejectPromise_ = reject;\n      // Overwrite popup event ID with new one.\n      self.setPopupEventId(eventId);\n      // Keep track of timeout promise to cancel it on promise resolution before\n      // it times out.\n      self.popupTimeoutPromise_ =\n          self.authEventManager_.startPopupTimeout(\n              self, mode, /** @type {!Window} */ (popupWin), eventId);\n    });\n  }).then(function(result) {\n    // On resolution, close popup if still opened and pass result through.\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    if (result) {\n      return fireauth.object.makeReadonlyCopy(result);\n    }\n    return null;\n  }).thenCatch(function(error) {\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    throw error;\n  });\n  // Register this pending promise. This will also check for user invalidation.\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(\n          p,\n          // Skip invalidation check as reauthentication could revalidate a\n          // user.\n          isReauthOperation));\n};\n\n\n/**\n * Links to Auth provider via redirect.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.linkWithRedirect = function(provider) {\n  var mode = fireauth.AuthEvent.Type.LINK_VIA_REDIRECT;\n  var self = this;\n  // Additional check to return to fail when the provider is already linked.\n  var additionalCheck = function() {\n    return self.checkIfAlreadyLinked_(provider['providerId']);\n  };\n  return this.runOperationWithRedirect_(mode, provider, additionalCheck, false);\n};\n\n\n/**\n * Reauthenticates to Auth provider via redirect.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithRedirect = function(provider) {\n  // No additional check needed.\n  var additionalCheck = function() {\n    return goog.Promise.resolve();\n  };\n  return this.runOperationWithRedirect_(\n      fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT,\n      provider,\n      additionalCheck,\n      // Do not update token and skip session invalidation check.\n      true);\n};\n\n\n\n/**\n * Runs a specific OAuth operation using the Auth provider via redirect.\n * @param {!fireauth.AuthEvent.Type} mode The mode of operation (link or\n *     reauth).\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function():!goog.Promise} additionalCheck The additional check to\n *     run before proceeding with the redirect processing.\n * @param {boolean} isReauthOperation whether this is a reauth operation or not.\n * @return {!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.runOperationWithRedirect_ =\n    function(mode, provider, additionalCheck, isReauthOperation) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  // Quickly throw user invalidation error if already invalidated.\n  if (this.userInvalidatedError_ &&\n      // Skip invalidation check as reauthentication could revalidate a user.\n      !isReauthOperation) {\n    return goog.Promise.reject(this.userInvalidatedError_);\n  }\n  var self = this;\n  var errorThrown = null;\n  // There could multiple users at the same time and multiple users could have\n  // the same UID. So try to ensure event ID uniqueness.\n  var eventId = this.generateEventId_();\n  var p = additionalCheck().then(function() {\n    // Auth event manager must be available for account linking or\n    // reauthentication to be possible.\n    self.getAuthEventManager();\n    if (!isReauthOperation) {\n      // Some operations like reauthenticate do not require this.\n      return self.getIdToken().then(function(idToken) {});\n    }\n  }).then(function() {\n    // Process redirect operation.\n    self.setRedirectEventId(eventId);\n    // Before redirecting save the event ID.\n    // It is important that the user redirect event ID is updated in storage\n    // before redirecting.\n    return self.notifyStateChangeListeners_();\n  }).then(function(user) {\n    if (self.redirectStorageManager_) {\n      // Save the user before redirecting in case it is not current so that it\n      // can be retrieved after reloading for linking or reauthentication to\n      // succeed.\n      return self.redirectStorageManager_.setRedirectUser(self);\n    }\n    return user;\n  }).then(function(user) {\n    // Complete the redirect operation.\n    return self.authEventManager_.processRedirect(mode, provider, eventId);\n  }).thenCatch(function(error) {\n    // Catch error if any is generated.\n    errorThrown = error;\n    if (self.redirectStorageManager_) {\n      // If an error is detected, delete the redirected user from storage.\n      return self.redirectStorageManager_.removeRedirectUser();\n    }\n    // No storage manager, just throw error.\n    throw errorThrown;\n  }).then(function() {\n    // Rethrow the error.\n    if (errorThrown) {\n      throw errorThrown;\n    }\n  });\n  // Register this pending promise. This will also check for user invalidation.\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(\n      p,\n      // Skip invalidation check as reauthentication could revalidate a user.\n      isReauthOperation));\n};\n\n\n/**\n * @return {!fireauth.AuthEventManager} The user's Auth event manager.\n */\nfireauth.AuthUser.prototype.getAuthEventManager = function() {\n  // Either return the manager instance if available, otherwise throw an error.\n  if (this.authEventManager_ && this.popupRedirectEnabled_) {\n    return this.authEventManager_;\n  } else if (this.authEventManager_ && !this.popupRedirectEnabled_) {\n    // This should not happen as Auth will enable a user after it is created.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_AUTH_DOMAIN);\n};\n\n\n/**\n * Finishes the popup and redirect account linking operations.\n * @param {string} requestUri The callback URL with the OAuth response.\n * @param {string} sessionId The session ID used to generate the authUri.\n * @param {?string=} opt_postBody The optional POST body content.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.finishPopupAndRedirectLink =\n    function(requestUri, sessionId, opt_postBody) {\n  var self = this;\n  // Now that popup has responded, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  var userCredential = null;\n  // This routine could be run before init state, make sure it waits for that to\n  // complete otherwise this would fail as user not loaded from storage yet.\n  var p = this.getIdToken()\n      .then(function(idToken) {\n        var request = {\n          'requestUri': requestUri,\n          'postBody': opt_postBody,\n          'sessionId': sessionId,\n          'idToken': idToken\n        };\n        // This operation should fail if new ID token differs from old one.\n        // So this can be treate as a profile update operation.\n        return self.rpcHandler_.verifyAssertionForLinking(request);\n      })\n      .then(function(response) {\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.LINK);\n        // Finalizes the linking process.\n        return self.finalizeLinking_(response);\n      })\n      .then(function(user) {\n        // Return the user credential response.\n        return userCredential;\n      });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Finishes the popup and redirect account reauthentication operations.\n * @param {string} requestUri The callback URL with the OAuth response.\n * @param {string} sessionId The session ID used to generate the authUri.\n * @param {?string=} opt_postBody The optional POST body content.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.finishPopupAndRedirectReauth =\n    function(requestUri, sessionId, opt_postBody) {\n  var self = this;\n  // Now that popup has responded, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  var userCredential = null;\n  // This routine could be run before init state, make sure it waits for that to\n  // complete otherwise this would fail as user not loaded from storage yet.\n  var p = goog.Promise.resolve()\n      .then(function() {\n        var request = {\n          'requestUri': requestUri,\n          'sessionId': sessionId,\n          'postBody': opt_postBody\n        };\n        // Finish sign in by calling verifyAssertionForExisting and then\n        // matching the returned ID token's UID with the current user's.\n        return fireauth.AuthCredential.verifyTokenResponseUid(\n            self.rpcHandler_.verifyAssertionForExisting(request),\n            self['uid']);\n      }).then(function(response) {\n        // Get credential from response if available.\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.REAUTHENTICATE);\n        // If the credential is valid and matches the current user ID, then\n        // update the tokens accordingly.\n        self.updateTokensIfPresent_(response);\n        // This could potentially validate an invalidated user. This happens in\n        // the case a password reset was applied. The refresh token is expired.\n        // Reauthentication should revalidate the user.\n        // User would remain non current if already signed out, but should be\n        // enabled again.\n        self.userInvalidatedError_ = null;\n        return self.reload();\n      })\n      .then(function() {\n        // Return the user credential response.\n        return userCredential;\n      });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(\n          p,\n          // Skip invalidation check as reauthentication could revalidate a\n          // user.\n          true));\n};\n\n\n/**\n * Sends the email verification email to the email in the user's account.\n * @param {?Object=} opt_actionCodeSettings The optional action code settings\n *     object.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.sendEmailVerification =\n    function(opt_actionCodeSettings) {\n  var self = this;\n  var idToken = null;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      // Wrap in promise as ActionCodeSettings constructor could throw a\n      // synchronous error if invalid arguments are specified.\n      this.getIdToken().then(function(latestIdToken) {\n        idToken = latestIdToken;\n        if (typeof opt_actionCodeSettings !== 'undefined' &&\n            // Ignore empty objects.\n            !goog.object.isEmpty(opt_actionCodeSettings)) {\n          return new fireauth.ActionCodeSettings(\n              /** @type {!Object} */ (opt_actionCodeSettings)).buildRequest();\n        }\n        return {};\n      })\n      .then(function(additionalRequestData) {\n        return self.rpcHandler_.sendEmailVerification(\n            /** @type {string} */ (idToken), additionalRequestData);\n      })\n      .then(function(email) {\n        if (self['email'] != email) {\n          // Our local copy does not have an email. If the email changed,\n          // reload the user.\n          return self.reload();\n        }\n      })\n      .then(function() {\n        // Return nothing.\n      }));\n};\n\n\n/**\n * Destroys the user object and makes further operations invalid. Sensitive\n * fields (refreshToken) are also cleared.\n */\nfireauth.AuthUser.prototype.destroy = function() {\n  // Cancel all pending promises.\n  for (var i = 0; i < this.pendingPromises_.length; i++) {\n    this.pendingPromises_[i].cancel(fireauth.authenum.Error.MODULE_DESTROYED);\n  }\n  // Stop listening to language code changes.\n  this.setLanguageCodeChangeDispatcher(null);\n  // Stop listening to framework changes.\n  this.setFrameworkChangeDispatcher(null);\n  // Empty pending promises array.\n  this.pendingPromises_ = [];\n  this.destroyed_ = true;\n  // Stop proactive refresh if running.\n  this.stopProactiveRefresh();\n  fireauth.object.setReadonlyProperty(this, 'refreshToken', null);\n  // Make sure the destroyed user is unsubscribed from Auth event handling.\n  if (this.authEventManager_) {\n    this.authEventManager_.unsubscribe(this);\n  }\n};\n\n\n/**\n * Takes in a pending promise, saves it and adds a clean up callback which\n * forgets the pending promise after it is fulfilled and echoes the promise\n * back. If in the process, a user invalidation error is detected, caches the\n * error so next time a call is made on the user, the operation will fail with\n * the cached error.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @param {boolean=} opt_skipInvalidationCheck Whether to skip invalidation\n *     check.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.registerPendingPromise_ =\n    function(p, opt_skipInvalidationCheck) {\n  var self = this;\n  // Check if user invalidation occurs.\n  var processedP = this.checkIfInvalidated_(p, opt_skipInvalidationCheck);\n  // Save created promise in pending list.\n  this.pendingPromises_.push(processedP);\n  processedP.thenAlways(function() {\n    // When fulfilled, remove from pending list.\n    goog.array.remove(self.pendingPromises_, processedP);\n  });\n  // Return the promise.\n  return processedP;\n};\n\n\n/**\n * Check if user invalidation occurs. If so, it caches the error so it can be\n * thrown immediately the next time an operation is run on the user.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @param {boolean=} opt_skipInvalidationCheck Whether to skip invalidation\n *     check.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.checkIfInvalidated_ =\n    function(p, opt_skipInvalidationCheck) {\n  var self = this;\n  // Already invalidated, reject with token expired error.\n  // Unless invalidation check is to be skipped.\n  if (this.userInvalidatedError_ && !opt_skipInvalidationCheck) {\n    // Cancel pending promise.\n    p.cancel();\n    // Reject with cached error.\n    return goog.Promise.reject(this.userInvalidatedError_);\n  }\n  return p.thenCatch(function(error) {\n    // Session invalidated.\n    if (fireauth.AuthUser.isUserInvalidated_(error)) {\n      // Notify listeners of invalidated session.\n      if (!self.userInvalidatedError_) {\n        self.notifyUserInvalidatedListeners_();\n      }\n      // Cache the invalidation error.\n      self.userInvalidatedError_ = /** @type {!fireauth.AuthError} */ (error);\n    }\n    // Rethrow the error.\n    throw error;\n  });\n};\n\n\n/**\n * @return {!Object} The object representation of the user instance.\n * @override\n */\nfireauth.AuthUser.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // a user instance.\n  return this.toPlainObject();\n};\n\n\n/**\n * @return {!Object} The object representation of the user instance.\n */\nfireauth.AuthUser.prototype.toPlainObject = function() {\n  var obj = {\n    'uid': this['uid'],\n    'displayName': this['displayName'],\n    'photoURL': this['photoURL'],\n    'email': this['email'],\n    'emailVerified': this['emailVerified'],\n    'phoneNumber': this['phoneNumber'],\n    'isAnonymous': this['isAnonymous'],\n    'providerData': [],\n    'apiKey': this.apiKey_,\n    'appName': this.appName_,\n    'authDomain': this.authDomain_,\n    'stsTokenManager': this.stsTokenManager_.toPlainObject(),\n    // Redirect event ID must be maintained in case there is a pending redirect\n    // event.\n    'redirectEventId': this.getRedirectEventId()\n  };\n  // Extend user plain object with metadata object.\n  if (this['metadata']) {\n    goog.object.extend(obj, this['metadata'].toPlainObject());\n  }\n  goog.array.forEach(this['providerData'], function(userInfo) {\n    obj['providerData'].push(fireauth.object.makeWritableCopy(userInfo));\n  });\n  return obj;\n};\n\n\n/**\n * Converts a plain user object to {@code fireauth.AuthUser}.\n * @param {!Object} user The object representation of the user instance.\n * @return {?fireauth.AuthUser} The Firebase user object corresponding to\n *     object.\n */\nfireauth.AuthUser.fromPlainObject = function(user) {\n  if (!user['apiKey']) {\n    return null;\n  }\n  var options = {\n    'apiKey': user['apiKey'],\n    'authDomain': user['authDomain'],\n    'appName': user['appName']\n  };\n  // Convert to server response format. Constructor does not take\n  // stsTokenManager toPlainObject as that format is different than the return\n  // server response which is always used to initialize a user instance. It is\n  // also difficult to have toPlainObject equal server response due to expiresIn\n  // field in server response. toPlainObject will return an expiration time\n  // instead.\n  var stsTokenManagerResponse = {};\n  if (user['stsTokenManager'] &&\n      user['stsTokenManager']['accessToken'] &&\n      user['stsTokenManager']['expirationTime']) {\n    stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN] =\n        user['stsTokenManager']['accessToken'];\n    // Refresh token could be expired.\n    stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN] =\n        user['stsTokenManager']['refreshToken'] || null;\n    stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.EXPIRES_IN] =\n        (user['stsTokenManager']['expirationTime'] - goog.now()) / 1000;\n  } else {\n    // Token response is a required field.\n    return null;\n  }\n  var firebaseUser = new fireauth.AuthUser(options,\n      stsTokenManagerResponse,\n      /** @type {!fireauth.AuthUser.AccountInfo} */ (user));\n  if (user['providerData']) {\n    goog.array.forEach(user['providerData'], function(userInfo) {\n      if (userInfo) {\n        firebaseUser.addProviderData(/** @type {!fireauth.AuthUserInfo} */ (\n            fireauth.object.makeReadonlyCopy(userInfo)));\n      }\n    });\n  }\n  // Redirect event ID must be restored to complete any pending link with\n  // redirect operation owned by this user.\n  if (user['redirectEventId']) {\n    firebaseUser.setRedirectEventId(user['redirectEventId']);\n  }\n  return firebaseUser;\n};\n\n\n\n/**\n * Factory method for initializing a Firebase user object and populating its\n * user info. This is the recommended way for initializing a user externally.\n * On sign in/up operation, the server returns a token response. The response is\n * all that is needed to initialize this user.\n * @param {!Object} appOptions The application options.\n * @param {!Object} stsTokenResponse The server STS token response.\n * @param {?fireauth.storage.RedirectUserManager=}\n *     opt_redirectStorageManager The utility used to store and delete a user on\n *     link with redirect.\n * @param {?Array<string>=} opt_frameworks The list of frameworks to log on the\n *     user on initialization.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.AuthUser.initializeFromIdTokenResponse = function(appOptions,\n    stsTokenResponse, opt_redirectStorageManager, opt_frameworks) {\n  // Initialize the Firebase Auth user.\n  var user = new fireauth.AuthUser(\n      appOptions, stsTokenResponse);\n  // If redirect storage manager provided, set it.\n  if (opt_redirectStorageManager) {\n    user.setRedirectStorageManager(opt_redirectStorageManager);\n  }\n  // If frameworks provided, set it.\n  if (opt_frameworks) {\n    user.setFramework(opt_frameworks);\n  }\n  // Updates the user info and data and resolves with a user instance.\n  return user.reload().then(function() {\n    return user;\n  });\n};\n\n\n/**\n * Returns an AuthUser copy of the provided user using the provided parameters\n * without making any network request.\n * @param {!fireauth.AuthUser} user The user to be copied.\n * @param {?Object=} opt_appOptions The application options.\n * @param {?fireauth.storage.RedirectUserManager=}\n *     opt_redirectStorageManager The utility used to store and delete a user on\n *     link with redirect.\n * @param {?Array<string>=} opt_frameworks The list of frameworks to log on the\n *     user on initialization.\n * @return {!fireauth.AuthUser}\n */\nfireauth.AuthUser.copyUser = function(user, opt_appOptions,\n    opt_redirectStorageManager, opt_frameworks) {\n  var appOptions = opt_appOptions || {\n    'apiKey': user.apiKey_,\n    'authDomain': user.authDomain_,\n    'appName': user.appName_\n  };\n  var newUser = new fireauth.AuthUser(\n      appOptions, user.getStsTokenManager().toServerResponse());\n  // If redirect storage manager provided, set it.\n  if (opt_redirectStorageManager) {\n    newUser.setRedirectStorageManager(opt_redirectStorageManager);\n  }\n  // If frameworks provided, set it.\n  if (opt_frameworks) {\n    newUser.setFramework(opt_frameworks);\n  }\n  // Copy remaining properties.\n  newUser.copy(user);\n  return newUser;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility class to retrieve and cache STS token.\n */\ngoog.provide('fireauth.StsTokenManager');\ngoog.provide('fireauth.StsTokenManager.Response');\ngoog.provide('fireauth.StsTokenManager.ResponseData');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('goog.Promise');\ngoog.require('goog.asserts');\n\n\n\n/**\n * Creates STS token manager.\n *\n * @param {!fireauth.RpcHandler} rpcHandler Handler for RPC requests.\n * @constructor\n */\nfireauth.StsTokenManager = function(rpcHandler) {\n  /**\n   * @const @private {!fireauth.RpcHandler} The RPC handler used to request STS\n   *     tokens.\n   */\n  this.rpcHandler_ = rpcHandler;\n  /** @private {?string} The STS refresh token. */\n  this.refreshToken_ = null;\n  /** @private {?string} The STS ID token. */\n  this.accessToken_ = null;\n  /** @private {number} The STS expiration timestamp. */\n  this.expirationTime_ = 0;\n};\n\n\n/**\n * @return {!Object} The plain object representation of the STS token manager.\n */\nfireauth.StsTokenManager.prototype.toPlainObject = function() {\n  return {\n    'apiKey': this.rpcHandler_.getApiKey(),\n    'refreshToken': this.refreshToken_,\n    'accessToken': this.accessToken_,\n    'expirationTime': this.expirationTime_\n  };\n};\n\n\n/**\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler for the token\n *     manager.\n * @param {?Object} obj The plain object whose STS token manager instance is to\n *     be returned.\n * @return {?fireauth.StsTokenManager} The STS token manager instance from the\n *     plain object provided using the RPC handler provided.\n */\nfireauth.StsTokenManager.fromPlainObject = function(rpcHandler, obj) {\n  var stsTokenManager = null;\n  if (obj && obj['apiKey']) {\n    // These should be always equals and must be enforced in internal use.\n    goog.asserts.assert(obj['apiKey'] == rpcHandler.getApiKey());\n    stsTokenManager = new fireauth.StsTokenManager(rpcHandler);\n    stsTokenManager.setRefreshToken(obj['refreshToken']);\n    stsTokenManager.setAccessToken(\n        obj['accessToken'], obj['expirationTime'] || 0);\n  }\n  return stsTokenManager;\n};\n\n\n/**\n * @typedef {{\n *   accessToken: (?string),\n *   expirationTime: (number),\n *   refreshToken: (?string)\n * }}\n */\nfireauth.StsTokenManager.Response;\n\n\n/**\n * @typedef {{\n *   access_token: (?string|undefined),\n *   expires_in: (number|undefined),\n *   refresh_token: (?string|undefined)\n * }}\n */\nfireauth.StsTokenManager.ResponseData;\n\n\n/**\n * @param {?string} refreshToken The STS refresh token.\n */\nfireauth.StsTokenManager.prototype.setRefreshToken = function(refreshToken) {\n  this.refreshToken_ = refreshToken;\n};\n\n\n/**\n * @param {?string} accessToken The STS access token.\n * @param {number} expirationTime  The STS token expiration time.\n */\nfireauth.StsTokenManager.prototype.setAccessToken = function(\n    accessToken, expirationTime) {\n  this.accessToken_ = accessToken;\n  this.expirationTime_ = expirationTime;\n};\n\n\n/**\n * @return {?string} The refresh token.\n */\nfireauth.StsTokenManager.prototype.getRefreshToken = function() {\n  return this.refreshToken_;\n};\n\n\n/**\n * @return {number} The STS access token expiration time.\n */\nfireauth.StsTokenManager.prototype.getExpirationTime = function() {\n  return this.expirationTime_;\n};\n\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n * @const {number}\n * @private\n */\nfireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_ = 30 * 1000;\n\n\n/**\n * @return {boolean} Whether the STS access token is expired or not.\n * @private\n */\nfireauth.StsTokenManager.prototype.isExpired_ = function() {\n  return goog.now() >\n      this.expirationTime_ - fireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_;\n};\n\n\n/**\n * Parses a response from the server that contains STS tokens (e.g. from\n * VerifyAssertion or VerifyPassword) and save the access token, refresh token,\n * and expiration time.\n * @param {!Object} response The backend response.\n * @return {!string} The STS access token.\n */\nfireauth.StsTokenManager.prototype.parseServerResponse = function(response) {\n  var idToken = response[fireauth.RpcHandler.AuthServerField.ID_TOKEN];\n  var refreshToken =\n      response[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN];\n  var expirationTime = fireauth.StsTokenManager.calcOffsetTimestamp_(\n      response[fireauth.RpcHandler.AuthServerField.EXPIRES_IN]);\n  this.setAccessToken(idToken, expirationTime);\n  this.setRefreshToken(refreshToken);\n  return idToken;\n};\n\n\n/**\n * Converts STS token manager instance to server response object.\n * @return {!Object}\n */\nfireauth.StsTokenManager.prototype.toServerResponse = function() {\n  var stsTokenManagerResponse = {};\n  stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN] =\n      this.accessToken_;\n  // Refresh token could be expired.\n  stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN] =\n      this.getRefreshToken();\n  stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.EXPIRES_IN] =\n      (this.getExpirationTime() - goog.now()) / 1000;\n  return stsTokenManagerResponse;\n};\n\n\n/**\n * Copies IdToken, refreshToken and expirationTime from tokenManagerToCopy.\n * @param {!fireauth.StsTokenManager} tokenManagerToCopy\n */\nfireauth.StsTokenManager.prototype.copy = function(tokenManagerToCopy) {\n  this.accessToken_ = tokenManagerToCopy.accessToken_;\n  this.refreshToken_ = tokenManagerToCopy.refreshToken_;\n  this.expirationTime_ = tokenManagerToCopy.expirationTime_;\n};\n\n\n/**\n * @param {number|string} offset The offset to add to the current time, in\n *     seconds.\n * @return {number} The timestamp corresponding to the current time plus offset.\n * @private\n */\nfireauth.StsTokenManager.calcOffsetTimestamp_ = function(offset) {\n  return goog.now() + parseInt(offset, 10) * 1000;\n};\n\n\n/**\n * Exchanges the current refresh token with an access and refresh token.\n * @return {!goog.Promise<?fireauth.StsTokenManager.Response>}\n * @private\n */\nfireauth.StsTokenManager.prototype.exchangeRefreshToken_ = function() {\n  var data = {\n    'grant_type': 'refresh_token',\n    'refresh_token': this.refreshToken_\n  };\n  return this.requestToken_(data);\n};\n\n\n/**\n * Sends a request to STS token endpoint for an access/refresh token.\n * @param {!Object} data The request data to send to STS token endpoint.\n * @return {!goog.Promise<?fireauth.StsTokenManager.Response>}\n * @private\n */\nfireauth.StsTokenManager.prototype.requestToken_ = function(data) {\n  var self = this;\n  // Send RPC request to STS token endpoint.\n  return this.rpcHandler_.requestStsToken(data).then(function(resp) {\n    var response = /** @type {!fireauth.StsTokenManager.ResponseData} */ (resp);\n    self.accessToken_ =\n        response[fireauth.RpcHandler.StsServerField.ACCESS_TOKEN];\n    // Update expiration time.\n    self.expirationTime_ = fireauth.StsTokenManager.calcOffsetTimestamp_(\n        response[fireauth.RpcHandler.StsServerField.EXPIRES_IN]);\n    self.refreshToken_ =\n        response[fireauth.RpcHandler.StsServerField.REFRESH_TOKEN];\n    return /** @type {fireauth.StsTokenManager.Response} */ ({\n      'accessToken': self.accessToken_,\n      'expirationTime': self.expirationTime_,\n      'refreshToken': self.refreshToken_\n    });\n  }).thenCatch(function(error) {\n    // Refresh token expired or user deleted. In this case, reset refresh token\n    // to prevent sending the request again to the STS server unless\n    // the token is manually updated, perhaps via successful reauthentication.\n    if (error['code'] == 'auth/user-token-expired') {\n      self.refreshToken_ = null;\n    }\n    throw error;\n  });\n};\n\n\n/** @return {boolean} Whether the refresh token is expired. */\nfireauth.StsTokenManager.prototype.isRefreshTokenExpired = function() {\n  return !!(this.accessToken_ && !this.refreshToken_);\n};\n\n\n/**\n * Returns an STS token. If the cached one is unexpired it is directly returned.\n * Otherwise the existing ID token or refresh token is exchanged for a new one.\n * If there is no user signed in, returns null.\n *\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<?fireauth.StsTokenManager.Response>}\n */\nfireauth.StsTokenManager.prototype.getToken = function(opt_forceRefresh) {\n  var self = this;\n  var forceRefresh = !!opt_forceRefresh;\n  // Refresh token is expired.\n  if (this.isRefreshTokenExpired()) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.TOKEN_EXPIRED));\n  }\n  if (!forceRefresh && this.accessToken_ && !this.isExpired_()) {\n    // Cached STS access token not expired, return it.\n    return /** @type {!goog.Promise} */ (goog.Promise.resolve({\n      'accessToken': self.accessToken_,\n      'expirationTime': self.expirationTime_,\n      'refreshToken': self.refreshToken_\n    }));\n  } else if (this.refreshToken_) {\n    // Expired but refresh token available, exchange refresh token for STS\n    // token.\n    return this.exchangeRefreshToken_();\n  } else {\n    // No token, return null token.\n    return goog.Promise.resolve(\n        /** @type {?fireauth.StsTokenManager.Response} */ (null));\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.RedirectUserManager class which\n * provides utilities to store, retrieve and delete an Auth user during a\n * redirect operation.\n */\n\ngoog.provide('fireauth.storage.RedirectUserManager');\n\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.authStorage');\n\n\n/**\n * Defines the Auth redirect user storage manager. It provides methods\n * to store, load and delete a user going through a link with redirect\n * operation.\n * @param {string} appId The Auth state's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.RedirectUserManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth state's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * @const @private{!fireauth.authStorage.Key} The Auth redirect user storage\n *     identifier.\n */\nfireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_ = {\n  name: 'redirectUser',\n  persistent: fireauth.authStorage.Persistence.SESSION\n};\n\n\n/**\n * Stores the user being redirected for the provided application ID.\n * @param {!fireauth.AuthUser} redirectUser The user being redirected.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.RedirectUserManager.prototype.setRedirectUser =\n    function(redirectUser) {\n  return this.manager_.set(\n      fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_,\n      redirectUser.toPlainObject(),\n      this.appId_);\n};\n\n\n/**\n * Removes the stored redirected user for provided app ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.RedirectUserManager.prototype.removeRedirectUser =\n    function() {\n  return this.manager_.remove(\n      fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_, this.appId_);\n};\n\n\n/**\n * @param {?string=} opt_authDomain The optional Auth domain to override if\n *     provided.\n * @return {!goog.Promise<?fireauth.AuthUser>} A promise that resolves with\n *     the stored redirected user for the provided app ID.\n */\nfireauth.storage.RedirectUserManager.prototype.getRedirectUser =\n    function(opt_authDomain) {\n  return this.manager_.get(\n      fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_, this.appId_)\n      .then(function(response) {\n        // If potential user saved, override Auth domain if authDomain is\n        // provided.\n        if (response && opt_authDomain) {\n          response['authDomain'] = opt_authDomain;\n        }\n        return fireauth.AuthUser.fromPlainObject(response || {});\n      });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.UserManager class which provides\n * utilities to retrieve, store and delete the currently logged in user and to\n * listen to external authentication changes for the same app.\n * With the ability to modify Auth state persistence. The behavior is as\n * follows:\n * Common cases:\n * <ul>\n * <li>Initially, local and session storage will be checked and the state will\n *     be loaded from there without changing it unless the developer calls\n *     setPersistence explicitly. The requirement is that at any time, Auth\n *     state can be saved using one type only of persistence and never more than\n *     one.</li>\n * <li>If the developer tries to sign in with no persistence specified, the\n *     default setting will be used (local in a browser).</li>\n * <li>If the user is not signed in and persistence is set, any future sign-in\n *     attempt will use that type of persistence.</li>\n * <li>If the user is signed in and the developer then switches persistence,\n *     that existing signed in user will change persistence to the new one. All\n *     future sign-in attempts will use that same persistence.</li>\n * <li>When signInWithRedirect is called, the current persistence type is passed\n *     along with that request and on redirect back to app will pass that type\n *     to determine how that state is saved (overriding the default). If the\n *     persistence is explicitly specified on that page, it will change that\n *     redirected Auth state persistence. This is the only time the persistence\n *     is passed from one page to another.\n *     So internally, on redirect, the redirect state is retrieved and then we\n *     check: If the persistence was explicitly provided, we override the\n *     previous type and save the Auth state using that. If no persistence was\n *     explicitly provided, we use the previous persistence type that was passed\n *     in the redirect response.</li>\n * </ul>\n * Behavior across tabs:\n * <ul>\n * <li>User can sign in using session storage on multiple tabs. Each tab cannot\n *     see the state of the other tab.</li>\n * <li>Any attempt to sign in using local storage will be detected and\n *     synchronized on all tabs. If the user was previously signed in on a\n *     specific tab using session storage, that state will be cleared.</li>\n * <li>If the user was previously signed in using local storage and then signs\n *     in using session storage, the user will be signed in on the current tab\n *     only and signed out on all other tabs.</li>\n * <li>Similar logic is applied to the ‘none’ state. In one tab, switching to\n *     ‘none’ state will delete any previously saved state in ‘local’\n *     persistence in other tabs.</li>\n * </ul>\n */\n\ngoog.provide('fireauth.storage.UserManager');\n\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.authStorage');\ngoog.require('goog.Promise');\n\n\n/**\n * Defines the Auth user storage manager. It provides methods to\n * store, load and delete an authenticated current user. It also provides\n * methods to listen to external user changes (updates, sign in, sign out, etc.)\n * @param {string} appId The Auth state's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.UserManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth state's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n  /**\n   * @private {?fireauth.authStorage.Key} The current Auth user storage\n   *     identifier.\n   */\n  this.currentAuthUserKey_ = null;\n  /**\n   * @private {!goog.Promise} Storage operation serializer promise. This will\n   *     initialize the current persistence used and clean up any duplicate\n   *     states or temporary values (persistence for pending redirect).\n   *     Afterwards this is used to queue storage requests to make sure\n   *     storage operations are always synchronized and read/write events are\n   *     processed on the same storage.\n   */\n  this.onReady_ = this.initialize_();\n  // This internal listener will always run before the external ones.\n  // This is needed to queue processing of this first before any getCurrentUser\n  // is called from external listeners.\n  this.manager_.addListener(\n      fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence.LOCAL),\n      this.appId_,\n      goog.bind(this.switchToLocalOnExternalEvent_, this));\n};\n\n\n/**\n * Switches to local storage on external storage event. This will happen when\n * state is specified as local in an external tab while it is none or session\n * in the current one. If a user signs in in an external tab, the current window\n * should detect this, clear existing storage and switch to local storage.\n * @private\n */\nfireauth.storage.UserManager.prototype.switchToLocalOnExternalEvent_ =\n    function() {\n  var self = this;\n  var localKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.LOCAL);\n  // Wait for any pending operation to finish first.\n  // Block next read/write operation until persistence is transitioned to\n  // local.\n  this.waitForReady_(function() {\n    return goog.Promise.resolve().then(function() {\n      // If current persistence is not already local.\n      if (self.currentAuthUserKey_ &&\n          self.currentAuthUserKey_.persistent !=\n          fireauth.authStorage.Persistence.LOCAL) {\n        // Check if new current user is available in local storage.\n        return self.manager_.get(localKey, self.appId_);\n      }\n      return null;\n    }).then(function(response) {\n      // Sign in on an external tab.\n      if (response) {\n        // Remove any existing non-local user.\n        return self.removeAllExcept_(\n            fireauth.authStorage.Persistence.LOCAL).then(function() {\n              // Set persistence to local.\n              self.currentAuthUserKey_ = localKey;\n            });\n      }\n    });\n  });\n};\n\n\n/**\n * Removes all states stored in all supported persistence types excluding the\n * specified one.\n * @param {?fireauth.authStorage.Persistence} persistence The type of storage\n *     persistence to switch to.\n * @return {!goog.Promise} The promise that resolves when all stored values are\n *     removed for types of storage excluding specified persistence. This helps\n *     ensure there is always one type of persistence at any time.\n * @private\n */\nfireauth.storage.UserManager.prototype.removeAllExcept_ =\n    function(persistence) {\n  var promises = [];\n  // Queue all promises to remove current user in any other persistence type.\n  for (var key in fireauth.authStorage.Persistence) {\n    // Skip specified persistence.\n    if (fireauth.authStorage.Persistence[key] !== persistence) {\n      var storageKey = fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence[key]);\n      promises.push(this.manager_.remove(\n          /** @type {!fireauth.authStorage.Key} */ (storageKey),\n          this.appId_));\n    }\n  }\n  // Clear persistence key (only useful for initial load upon returning from a\n  // a redirect sign-in operation).\n  promises.push(this.manager_.remove(\n      fireauth.storage.UserManager.PERSISTENCE_KEY_,\n      this.appId_));\n  return goog.Promise.all(promises);\n};\n\n\n/**\n * Initializes the current persistence state. This will check the 3 supported\n * types. The first one that is found will be the current persistence. All\n * others will be cleared. If none is found we check PERSISTENCE_KEY_ which\n * when specified means that the operation is returning from a\n * signInWithRedirect call. This persistence will be applied.\n * Otherwise the default local persistence is used.\n * @return {!goog.Promise} A promise that resolves when the current persistence\n *     is resolved.\n * @private\n */\nfireauth.storage.UserManager.prototype.initialize_ = function() {\n  var self = this;\n  // Local key.\n  var localKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.LOCAL);\n  // Session key.\n  var sessionKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.SESSION);\n  // In memory key. This is unlikely to contain anything on load.\n  var inMemoryKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.NONE);\n  // Migrate any old currentUser from localStorage to indexedDB.\n  // This keeps any user signed in without the need for reauthentication and\n  // minimizes risks of dangling Auth states.\n  return this.manager_.migrateFromLocalStorage(\n      localKey, this.appId_).then(function() {\n    // Check if state is stored in session storage.\n    return self.manager_.get(sessionKey, self.appId_);\n  }).then(function(response) {\n    if (response) {\n      // Session storage is being used.\n      return sessionKey;\n    } else {\n      // Session storage is empty. Check in memory storage.\n      return self.manager_.get(inMemoryKey, self.appId_)\n          .then(function(response) {\n            if (response) {\n              // In memory storage being used.\n              return inMemoryKey;\n            } else {\n              // Check local storage.\n              return self.manager_.get(localKey, self.appId_)\n                  .then(function(response) {\n                    if (response) {\n                      // Local storage being used.\n                      return localKey;\n                    } else {\n                      // Nothing found in any supported storage.\n                      // Check current user persistence in storage.\n                      return self.manager_.get(\n                          fireauth.storage.UserManager.PERSISTENCE_KEY_,\n                          self.appId_).then(function(persistence) {\n                            if (persistence) {\n                              // Sign in with redirect operation, apply this\n                              // persistence to any current user.\n                              return fireauth.storage.UserManager\n                                  .getAuthUserKey_(persistence);\n                            } else {\n                              // No persistence found, use the default.\n                              return localKey;\n                            }\n                          });\n                    }\n                  });\n            }\n          });\n    }\n  }).then(function(currentKey) {\n    // Set current key according to the persistence detected.\n    self.currentAuthUserKey_ = currentKey;\n    // Make sure only one state available. Clean up everything else.\n    return self.removeAllExcept_(currentKey.persistent);\n  }).thenCatch(function(error) {\n    // If an error occurs in the process and no current key detected, set to\n    // persistence value to default.\n    if (!self.currentAuthUserKey_) {\n      self.currentAuthUserKey_ = localKey;\n    }\n  });\n};\n\n\n/**\n * @const @private {string} The Auth current user storage identifier name.\n */\nfireauth.storage.UserManager.AUTH_USER_KEY_NAME_ = 'authUser';\n\n\n/**\n * @const @private{!fireauth.authStorage.Key} The Auth user storage persistence\n *     identifier. This is needed to remember the previous persistence state for\n *     sign-in with redirect.\n */\nfireauth.storage.UserManager.PERSISTENCE_KEY_ = {\n  name: 'persistence',\n  persistent: fireauth.authStorage.Persistence.SESSION\n};\n\n\n/**\n * Returns the Auth user key corresponding to the persistence type provided.\n * @param {!fireauth.authStorage.Persistence} persistence The key for the\n *     specified type of persistence.\n * @return {!fireauth.authStorage.Key} The corresponding Auth user storage\n *     identifier.\n * @private\n */\nfireauth.storage.UserManager.getAuthUserKey_ = function(persistence) {\n  return {\n    name: fireauth.storage.UserManager.AUTH_USER_KEY_NAME_,\n    persistent: persistence\n  };\n};\n\n\n/**\n * Sets the persistence to the specified type.\n * If an existing user already is in storage, it copies that value to the new\n * storage and clears all the others.\n * @param {!fireauth.authStorage.Persistence} persistence The type of storage\n *     persistence to switch to.\n * @return {!goog.Promise} A promise that resolves when persistence change is\n *     applied.\n */\nfireauth.storage.UserManager.prototype.setPersistence = function(persistence) {\n  var currentUser = null;\n  var self = this;\n  // Validate the persistence type provided. This will throw a synchronous error\n  // if invalid.\n  fireauth.authStorage.validatePersistenceArgument(persistence);\n  // Wait for turn in queue.\n  return this.waitForReady_(function() {\n    // If persistence hasn't changed, do nothing.\n    if (persistence != self.currentAuthUserKey_.persistent) {\n      // Persistence changed. Copy from current storage to new one.\n      return self.manager_.get(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        self.appId_).then(function(result) {\n        // Save current user.\n        currentUser = result;\n        // Clear from current storage.\n        return self.removeAllExcept_(persistence);\n      }).then(function() {\n        // Update persistence key to the new one.\n        self.currentAuthUserKey_ =\n            fireauth.storage.UserManager.getAuthUserKey_(persistence);\n        // Copy current storage type to the new one.\n        if (currentUser) {\n          return self.manager_.set(\n              /** @type {!fireauth.authStorage.Key} */ (\n                  self.currentAuthUserKey_),\n              currentUser,\n              self.appId_);\n        }\n      });\n    }\n    // No change in persistence type.\n    return goog.Promise.resolve();\n  });\n};\n\n\n/**\n * Saves the current persistence type so it can be retrieved after a page\n * redirect. This is relevant for signInWithRedirect.\n * @return {!goog.Promise} Promise that resolve when current persistence is\n *     saved.\n */\nfireauth.storage.UserManager.prototype.savePersistenceForRedirect = function() {\n  var self = this;\n  return this.waitForReady_(function() {\n    // Save persistence to survive redirect.\n    return self.manager_.set(\n        fireauth.storage.UserManager.PERSISTENCE_KEY_,\n        self.currentAuthUserKey_.persistent,\n        self.appId_);\n  });\n};\n\n\n/**\n * Stores the current Auth user for the provided application ID.\n * @param {!fireauth.AuthUser} currentUser The app current Auth user to save.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.UserManager.prototype.setCurrentUser = function(currentUser) {\n  var self = this;\n  // Wait for any pending persistence change to be resolved.\n  return this.waitForReady_(function() {\n    return self.manager_.set(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        currentUser.toPlainObject(),\n        self.appId_);\n  });\n};\n\n\n/**\n * Removes the stored current user for provided app ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.UserManager.prototype.removeCurrentUser = function() {\n  var self = this;\n  // Wait for any pending persistence change to be resolved.\n  return this.waitForReady_(function() {\n    return self.manager_.remove(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        self.appId_);\n  });\n};\n\n\n/**\n * @param {?string=} opt_authDomain The optional Auth domain to override if\n *     provided.\n * @return {!goog.Promise<?fireauth.AuthUser>} A promise that resolves with\n *     the stored current user for the provided app ID.\n */\nfireauth.storage.UserManager.prototype.getCurrentUser =\n    function(opt_authDomain) {\n  var self = this;\n  // Wait for any pending persistence change to be resolved.\n  return this.waitForReady_(function() {\n    return self.manager_.get(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        self.appId_).then(function(response) {\n          // If potential user saved, override Auth domain if authDomain is\n          // provided.\n          // This is useful in cases where on one page the developer initializes\n          // the Auth instance without authDomain and signs in user using\n          // headless methods. On another page, Auth is initialized with\n          // authDomain for the purpose of linking with a popup. The loaded user\n          // (stored without the authDomain) must have this field updated with\n          // the current authDomain.\n          if (response && opt_authDomain) {\n            response['authDomain'] = opt_authDomain;\n          }\n          return fireauth.AuthUser.fromPlainObject(response || {});\n        });\n  });\n};\n\n\n/**\n * Serializes storage access operations especially since persistence\n * could be updated from one type to the other while read/write operations\n * occur.\n * @param {function():!goog.Promise<T>} cb The promise return callback to chain\n *     when pending operations are resolved.\n * @return {!goog.Promise<T>} The resulting promise that resolves when provided\n *     promise finally resolves.\n * @template T\n * @private\n */\nfireauth.storage.UserManager.prototype.waitForReady_ = function(cb) {\n  // Wait for any pending persistence change to be resolved before running\n  // storage related operation. Chain to onReady so next call will wait for\n  // this operation to resolve.\n  // While an error is unlikely, run callback even if it happens, otherwise\n  // no storage related event will be allowed to complete after an error.\n  this.onReady_ = this.onReady_.then(cb, cb);\n  return this.onReady_;\n};\n\n\n/**\n * Adds a listener to Auth current user change event for app ID provided.\n * @param {!function()} listener The listener to run on current user change\n *     event.\n */\nfireauth.storage.UserManager.prototype.addCurrentUserChangeListener =\n    function(listener) {\n  // When this is triggered, getCurrentUser is called, that will have to wait\n  // for switchToLocalOnExternalEvent_ to resolve which is ahead of it in the\n  // queue.\n  this.manager_.addListener(\n      fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence.LOCAL),\n      this.appId_,\n      listener);\n};\n\n\n/**\n * Removes a listener to Auth current user change event for app ID provided.\n * @param {!function()} listener The listener to remove from current user change\n *     event changes.\n */\nfireauth.storage.UserManager.prototype.removeCurrentUserChangeListener =\n    function(listener) {\n  this.manager_.removeListener(\n      fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence.LOCAL),\n      this.appId_,\n      listener);\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the grecaptcha interface.\n */\n\ngoog.provide('fireauth.grecaptcha');\n\n\n/**\n * The reCAPTCHA interface for initializing and managing visible v2\n * reCAPTCHAs as well as invisible ones.\n * @interface\n */\nfireauth.grecaptcha = function() {};\n\n\n/**\n * Creates a new instance of the recaptcha client.\n *\n * @param {!Element|string} elementOrId Element or element ID for the\n *     placeholder to render the reCAPTCHA client.\n * @param {!Object} params Parameters for the recaptcha client.\n * @return {number} The client ID.\n */\nfireauth.grecaptcha.prototype.render = function(elementOrId, params) {};\n\n\n/**\n * Resets a client with the given ID.  If an ID is not provided, resets the\n * default client.\n *\n * @param {number=} id The ID of the recaptcha client.\n * @param {?Object=} params Parameters for the recaptcha client.\n */\nfireauth.grecaptcha.prototype.reset = function(id, params) {};\n\n\n/**\n * Gets the response for the client with the given ID.  If an ID is not\n * provided, gets the response for the default client.\n *\n * @param {number=} id The ID of the recaptcha client.\n * @return {?string}\n */\nfireauth.grecaptcha.prototype.getResponse = function(id) {};\n\n\n/**\n * Programmatically triggers the invisible reCAPTCHA.\n *\n * @param {number=} opt_id The ID of the recaptcha client. Defaults to the\n *     first widget created if unspecified.\n */\nfireauth.grecaptcha.prototype.execute = function(opt_id) {};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the mock grecaptcha utilities used for development\n * testing.\n */\ngoog.provide('fireauth.GRecaptchaMockFactory');\ngoog.provide('fireauth.RecaptchaMock');\n\ngoog.require('fireauth.grecaptcha');\ngoog.require('fireauth.util');\ngoog.require('goog.dom');\ngoog.require('goog.events');\ngoog.require('goog.events.EventType');\n\n\n/**\n * The mock grecaptcha factory.\n * @constructor\n * @implements {fireauth.grecaptcha}\n */\nfireauth.GRecaptchaMockFactory = function() {\n  /**\n   * @const @private {!Object<string, !fireauth.RecaptchaMock>} The hash map\n   *     that stores the widget ID to mock reCAPTCHA instances.\n   */\n  this.map_ = {};\n  /**\n   * @private {number} The current widget ID counter, incremented each time\n   *     a new mock reCAPTCHA is created.\n   */\n  this.counter_ = fireauth.GRecaptchaMockFactory.START_INSTANCE_ID;\n};\n\n\n/**\n * @const {number} The start ID of the first created mock reCAPTCHA.\n */\nfireauth.GRecaptchaMockFactory.START_INSTANCE_ID = 1000000000000;\n\n\n/** @const {number} The reCAPTCHA expiration time in milliseconds. */\nfireauth.GRecaptchaMockFactory.EXPIRATION_TIME_MS = 60000;\n\n\n/** @const {number} The reCAPTCHA auto solving time in milliseconds. */\nfireauth.GRecaptchaMockFactory.SOLVE_TIME_MS = 500;\n\n\n/**\n * @private {?fireauth.GRecaptchaMockFactory} The singleton instance\n *     for grecaptcha mock object.\n */\nfireauth.GRecaptchaMockFactory.instance_ = null;\n\n\n/**\n * @return {!fireauth.GRecaptchaMockFactory} The singleton grecaptcha mock\n *     instance.\n */\nfireauth.GRecaptchaMockFactory.getInstance = function() {\n  // Check if there is an existing instance. Otherwise, create one and cache it.\n  if (!fireauth.GRecaptchaMockFactory.instance_) {\n    fireauth.GRecaptchaMockFactory.instance_ =\n        new fireauth.GRecaptchaMockFactory();\n  }\n  return fireauth.GRecaptchaMockFactory.instance_;\n};\n\n\n/**\n * Creates a new instance of the mock reCAPTCHA widget.\n *\n * @param {(!Element|string)} elementOrId Element or element ID for the\n *     placeholder to render the reCAPTCHA client.\n * @param {!Object} params Parameters for the reCAPTCHA client.\n * @return {number} The client ID.\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.render =\n    function(elementOrId, params) {\n  this.map_[this.counter_.toString()] =\n      new fireauth.RecaptchaMock(elementOrId, params);\n  return this.counter_++;\n};\n\n\n/**\n * Resets a reCAPTCHA with the given ID. If an ID is not provided, resets the\n * first instance.\n *\n * @param {number=} opt_id The id of the reCAPTCHA client. Defaults to the first\n *     widget created if unspecified.\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.reset = function(opt_id) {\n  var mock = this.getMock_(opt_id);\n  var id = this.getId_(opt_id);\n  if (mock && id) {\n    mock.delete();\n    delete this.map_[/** @type {string} */ (id)];\n  }\n};\n\n\n/**\n * Gets the response for the client with the given ID. If an ID is not\n * provided, gets the response for the default client.\n *\n * @param {number=} opt_id The ID of the reCAPTCHA widget. Defaults to the first\n *     widget created if unspecified.\n * @return {?string}\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.getResponse = function(opt_id) {\n  var mock = this.getMock_(opt_id);\n  return mock ? mock.getResponse() : null;\n};\n\n\n/**\n * Programmatically triggers the invisible reCAPTCHA.\n *\n * @param {number=} opt_id The ID of the recaptcha client. Defaults to the first\n *     widget created if unspecified.\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.execute = function(opt_id) {\n  var mock = this.getMock_(opt_id);\n  if (mock) {\n    mock.execute();\n  }\n};\n\n\n/**\n * @param {number=} opt_id The optional ID to lookup.\n * @return {?fireauth.RecaptchaMock} The corresponding reCAPTCHA mock if found.\n * @private\n */\nfireauth.GRecaptchaMockFactory.prototype.getMock_ = function(opt_id) {\n  var id = this.getId_(opt_id);\n  return id ? this.map_[id] || null : null;\n};\n\n\n/**\n * @param {number=} opt_id The optional ID to lookup.\n * @return {?string} The corresponding reCAPTCHA mock ID if found.\n * @private\n */\nfireauth.GRecaptchaMockFactory.prototype.getId_ = function(opt_id) {\n  var id = typeof opt_id === 'undefined' ?\n      fireauth.GRecaptchaMockFactory.START_INSTANCE_ID : opt_id;\n  return id ? id.toString() : null;\n};\n\n\n/**\n * Mock single reCAPTCHA instance.\n * @param {(!Element|string)} elementOrId Element or element ID for the\n *     placeholder to render the reCAPTCHA client.\n * @param {!Object} params Parameters for the reCAPTCHA client.\n * @constructor\n */\nfireauth.RecaptchaMock = function(elementOrId, params) {\n  /** @private {boolean} Whether the instance was deleted. */\n  this.deleted_ = false;\n  /** @const @private {!Object} The reCAPTCHA parameters. */\n  this.params_ = params;\n  /** @private {?string} The simulated response token if available. */\n  this.responseToken_ = null;\n  /**\n   * @private {?number} The timer ID for response callback/expiration callback\n   *     to trigger.\n   */\n  this.timerId_ = null;\n  /** @const @private {boolean} Whether the reCAPTCHA is visible or not. */\n  this.isVisible_ = this.params_['size'] !== 'invisible';\n  /**\n   * @const @private {?Element} The container or button trigger of the\n   *     reCAPTCHA.\n   */\n  this.element_ = goog.dom.getElement(elementOrId);\n  var self = this;\n  /** @private {function(?)} The on click handler for invisible reCAPTCHAs. */\n  this.onClickHandler_ = function(event) {\n    self.execute();\n  };\n  if (this.isVisible_) {\n    // For a visible reCAPTCHA, simulate reCAPTCHA continuously solved\n    // and then expired.\n    this.execute();\n  } else {\n    // Trigger on button click on when execute is directly called.\n    goog.events.listen(\n        this.element_,\n        goog.events.EventType.CLICK,\n        this.onClickHandler_);\n  }\n};\n\n\n/** @return {?string} The current reCAPTCHA response. */\nfireauth.RecaptchaMock.prototype.getResponse = function() {\n  this.checkIfDeleted_();\n  return this.responseToken_;\n};\n\n\n/** Starts the reCAPTCHA mock solving/expiration cycle. */\nfireauth.RecaptchaMock.prototype.execute = function() {\n  this.checkIfDeleted_();\n  var self = this;\n  if (this.timerId_) {\n    return;\n  }\n  // Wait for expected delay before auto-solving.\n  this.timerId_ = setTimeout(function() {\n    // Generate random string as reCAPTCHA response token.\n    self.responseToken_ = fireauth.util.generateRandomAlphaNumericString(50);\n    // Trigger developer's callbacks.\n    var callback = self.params_['callback'];\n    var expirationCallback = self.params_['expired-callback'];\n    if (callback) {\n      try {\n        callback(self.responseToken_);\n      } catch (e) {}\n    }\n    // Wait for token to expire before triggering expiration callback and\n    // resetting token response.\n    self.timerId_ = setTimeout(function() {\n      self.timerId_ = null;\n      self.responseToken_ = null;\n      if (expirationCallback) {\n        try {\n          expirationCallback();\n        } catch (e) {}\n      }\n      if (self.isVisible_) {\n        self.execute();\n      }\n    }, fireauth.GRecaptchaMockFactory.EXPIRATION_TIME_MS);\n  }, fireauth.GRecaptchaMockFactory.SOLVE_TIME_MS);\n};\n\n\n/** Deletes the current mock instance. */\nfireauth.RecaptchaMock.prototype.delete = function() {\n  this.checkIfDeleted_();\n  this.deleted_ = true;\n  clearTimeout(this.timerId_);\n  this.timerId_ = null;\n  goog.events.unlisten(\n      this.element_,\n      goog.events.EventType.CLICK,\n      this.onClickHandler_);\n};\n\n\n/**\n * Checks whether the instance was deleted.\n * @private\n */\nfireauth.RecaptchaMock.prototype.checkIfDeleted_ = function() {\n  // This error should never be thrown externally.\n  // GRecaptchaMockFactory will ensure that a deleted instance is removed.\n  if (this.deleted_) {\n    throw new Error('reCAPTCHA mock was already deleted!');\n  }\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the RecaptchaLoader implementation used to mock loading\n * of grecaptcha dependencies.\n */\n\ngoog.provide('fireauth.RecaptchaMockLoader');\n\ngoog.require('fireauth.GRecaptchaMockFactory');\ngoog.require('fireauth.RecaptchaLoader');\ngoog.require('goog.Promise');\n\n\n/**\n * Defines a mock reCAPTCHA loader by implementing the fireauth.RecaptchaLoader\n * interface.\n * @constructor\n * @implements {fireauth.RecaptchaLoader}\n */\nfireauth.RecaptchaMockLoader = function() {};\n\n\n/**\n * Loads the grecaptcha mock library if it is not loaded and returns a promise\n * that resolves on success. If the right conditions are available, will reload\n * the dependencies for a specified language code.\n * @param {?string} hl The reCAPTCHA language code.\n * @return {!goog.Promise<!fireauth.grecaptcha>} A promise that resolves when\n *     grecaptcha is loaded.\n * @override\n */\nfireauth.RecaptchaMockLoader.prototype.loadRecaptchaDeps =\n    function(hl) {\n  return goog.Promise.resolve(\n  \t/** @type {!fireauth.grecaptcha} */ (fireauth.GRecaptchaMockFactory.getInstance()));\n};\n\n\n/**\n * Decrements the reCAPTCHA instance counter.\n * @override\n */\nfireauth.RecaptchaMockLoader.prototype.clearSingleRecaptcha =\n    function() {};\n\n\n/**\n * @private {?fireauth.RecaptchaMockLoader} The singleton instance\n *     for the mock reCAPTCHA dependency loader.\n */\nfireauth.RecaptchaMockLoader.instance_ = null;\n\n\n/**\n * @return {!fireauth.RecaptchaMockLoader} The singleton mock reCAPTCHA\n *     dependency loader instance.\n */\nfireauth.RecaptchaMockLoader.getInstance = function() {\n  // Check if there is an existing instance. Otherwise create one and cache it.\n  if (!fireauth.RecaptchaMockLoader.instance_) {\n    fireauth.RecaptchaMockLoader.instance_ =\n        new fireauth.RecaptchaMockLoader();\n  }\n  return fireauth.RecaptchaMockLoader.instance_;\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the RecaptchaLoader implementation used to load all\n * the grecaptcha dependencies.\n */\n\ngoog.provide('fireauth.RecaptchaRealLoader');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.RecaptchaLoader');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.net.jsloader');\ngoog.require('goog.string.Const');\n\n\n/**\n * Utility to help load reCAPTCHA dependencies for specified languages.\n * @constructor\n * @implements {fireauth.RecaptchaLoader}\n */\nfireauth.RecaptchaRealLoader = function() {\n  /**\n   * @private {number} The reCAPTCHA instance counter. This is used to track the\n   *     number of reCAPTCHAs rendered on the page. This is needed to allow\n   *     localization of the reCAPTCHA. Localization is applied by loading the\n   *     grecaptcha SDK with the hl field provided. However, this will break\n   *     existing reCAPTCHAs. So we should only support i18n when there are no\n   *     other widgets rendered on this screen. If the developer is already\n   *     using reCAPTCHA in another context, we will disable localization so we\n   *     don't accidentally break existing reCAPTCHA widgets.\n   */\n  this.counter_ = goog.global['grecaptcha'] ? Infinity : 0;\n  /** @private {?string} The current reCAPTCHA language code. */\n  this.hl_ = null;\n  /** @const @private {string} The reCAPTCHA callback name. */\n  this.cbName_ = '__rcb' + Math.floor(Math.random() * 1000000).toString();\n};\n\n\n/** @private @const {!goog.string.Const} The reCAPTCHA javascript source URL. */\nfireauth.RecaptchaRealLoader.RECAPTCHA_SRC_ = goog.string.Const.from(\n    'https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit' +\n    '&hl=%{hl}');\n\n\n/**\n * The default timeout delay (units in milliseconds) for requests loading\n * the external reCAPTCHA dependencies.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * Loads the grecaptcha client library if it is not loaded and returns a promise\n * that resolves on success. If the right conditions are available, will reload\n * the dependencies for a specified language code.\n * @param {?string} hl The reCAPTCHA language code.\n * @return {!goog.Promise<!fireauth.grecaptcha>} A promise that resolves when\n *     grecaptcha is loaded.\n * @override\n */\nfireauth.RecaptchaRealLoader.prototype.loadRecaptchaDeps =\n    function(hl) {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    var timer = setTimeout(\n        function() {\n          reject(new fireauth.AuthError(\n              fireauth.authenum.Error.NETWORK_REQUEST_FAILED));\n        },\n        fireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_\n            .get()\n    );\n    // Load grecaptcha SDK if not already loaded or language changed since last\n    // load and no other rendered reCAPTCHA is visible,\n    if (!goog.global['grecaptcha'] || (hl !== self.hl_ && !self.counter_)) {\n      // reCAPTCHA saves the onload function and applies it on subsequent\n      // reloads. This means that the callback name has to remain the same.\n      goog.global[self.cbName_] = function() {\n        if (!goog.global['grecaptcha']) {\n          clearTimeout(timer);\n          // This should not happen.\n          reject(new fireauth.AuthError(\n              fireauth.authenum.Error.INTERNAL_ERROR));\n        } else {\n          // Update the current language code.\n          self.hl_ = hl;\n          var render = goog.global['grecaptcha']['render'];\n          // Wrap grecaptcha.render to keep track of rendered grecaptcha. This\n          // helps detect if the developer rendered a non\n          // firebase.auth.RecaptchaVerifier reCAPTCHA.\n          goog.global['grecaptcha']['render'] =\n              function(container, parameters) {\n            var widgetId = render(container, parameters);\n            // Increment only after render succeeds, in case an error is thrown\n            // during rendering.\n            self.counter_++;\n            return widgetId;\n          };\n          clearTimeout(timer);\n          resolve(goog.global['grecaptcha']);\n        }\n        delete goog.global[self.cbName_];\n      };\n      // Construct reCAPTCHA URL and on load, run the temporary function.\n      var url = goog.html.TrustedResourceUrl.format(\n          fireauth.RecaptchaRealLoader.RECAPTCHA_SRC_,\n          {'onload': self.cbName_, 'hl': hl || ''});\n      // TODO: eventually, replace all dependencies on goog.net.jsloader.\n      goog.Promise.resolve(goog.net.jsloader.safeLoad(url))\n          .thenCatch(function(error) {\n            clearTimeout(timer);\n            // In case library fails to load, typically due to a network error,\n            // reset cached loader to null to force a refresh on a retrial.\n            reject(new fireauth.AuthError(\n                fireauth.authenum.Error.INTERNAL_ERROR,\n                'Unable to load external reCAPTCHA dependencies!'));\n          });\n    } else {\n      clearTimeout(timer);\n      resolve(goog.global['grecaptcha']);\n    }\n  });\n};\n\n\n/**\n * Decrements the reCAPTCHA instance counter.\n * @override\n */\nfireauth.RecaptchaRealLoader.prototype.clearSingleRecaptcha =\n    function() {\n  this.counter_--;\n};\n\n\n/**\n * @private {?fireauth.RecaptchaRealLoader} The singleton instance\n *     for reCAPTCHA dependency loader.\n */\nfireauth.RecaptchaRealLoader.instance_ = null;\n\n\n/**\n * @return {!fireauth.RecaptchaRealLoader} The singleton reCAPTCHA\n *     dependency loader instance.\n */\nfireauth.RecaptchaRealLoader.getInstance = function() {\n  // Check if there is an existing instance. Otherwise create one and cache it.\n  if (!fireauth.RecaptchaRealLoader.instance_) {\n    fireauth.RecaptchaRealLoader.instance_ =\n        new fireauth.RecaptchaRealLoader();\n  }\n  return fireauth.RecaptchaRealLoader.instance_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the reCAPTCHA app verifier and its base class. The\n * former is currently used for web phone authentication whereas the latter is\n * used for the mobile app verification web fallback.\n */\ngoog.provide('fireauth.BaseRecaptchaVerifier');\ngoog.provide('fireauth.RecaptchaVerifier');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.RecaptchaMockLoader');\ngoog.require('fireauth.RecaptchaRealLoader');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.dom');\n\n\n/**\n * Creates the firebase base reCAPTCHA app verifier independent of Firebase\n * App or Auth instances.\n *\n * @param {string} apiKey The API key used to initialize the RPC handler for\n *     querying the Auth backend.\n * @param {!Element|string} container The reCAPTCHA container parameter. This\n *     has different meaning depending on whether the reCAPTCHA is hidden or\n *     visible.\n * @param {?Object=} opt_parameters The optional reCAPTCHA parameters.\n * @param {?(function():?string)=} opt_getLanguageCode The language code getter\n *     function.\n * @param {?string=} opt_clientVersion The optional client version to append to\n *     RPC header.\n * @param {?Object=} opt_rpcHandlerConfig The optional RPC handler\n *     configuration, typically passed when different Auth endpoints are to be\n *     used.\n * @param {boolean=} opt_isTestingMode Whether the reCAPTCHA is to be rendered\n *     in testing mode.\n * @constructor\n */\nfireauth.BaseRecaptchaVerifier = function(apiKey, container, opt_parameters,\n    opt_getLanguageCode, opt_clientVersion, opt_rpcHandlerConfig,\n    opt_isTestingMode) {\n  // Set the type readonly property needed for full implementation of the\n  // firebase.auth.ApplicationVerifier interface.\n  fireauth.object.setReadonlyProperty(this, 'type', 'recaptcha');\n  /**\n   * @private {?goog.Promise<void>} The cached reCAPTCHA ready response. This is\n   *     null until the first time it is triggered or when an error occurs in\n   *     getting ready.\n   */\n  this.cachedReadyPromise_ = null;\n  /** @private {?number} The reCAPTCHA widget ID. Null when not rendered. */\n  this.widgetId_ = null;\n  /** @private {boolean} Whether the instance is already destroyed. */\n  this.destroyed_ = false;\n  /** @private {!Element|string} The reCAPTCHA container. */\n  this.container_ = container;\n  /**\n   * @private {?fireauth.grecaptcha} The reCAPTCHA client library namespace.\n   */\n  this.grecaptcha_ = null;\n  /**\n   * @const @private {!fireauth.RecaptchaLoader} The grecaptcha loader.\n   */\n  this.recaptchaLoader_ = !!opt_isTestingMode ?\n      fireauth.RecaptchaMockLoader.getInstance() :\n      fireauth.RecaptchaRealLoader.getInstance();\n  // If no parameters passed, use default settings.\n  // Currently, visible recaptcha is the default setting as invisible reCAPTCHA\n  // is not yet supported by the backend.\n  /** @private {!Object} The reCAPTCHA parameters. */\n  this.parameters_ = opt_parameters || {\n    'theme': 'light',\n    'type': 'image'\n  };\n  /** @private {!Array<!goog.Promise<*>|!goog.Promise<void>>} List of\n   *      pending promises. */\n  this.pendingPromises_ = [];\n  if (this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY]) {\n    // sitekey should not be provided.\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'sitekey should not be provided for reCAPTCHA as one is ' +\n        'automatically provisioned for the current project.');\n  }\n  /** @private {boolean} Whether the reCAPTCHA is invisible or not. */\n  this.isInvisible_ =\n      this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SIZE] ===\n      'invisible';\n  // Check if DOM is supported.\n  if (!fireauth.util.isDOMSupported()) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED,\n        'RecaptchaVerifier is only supported in a browser HTTP/HTTPS ' +\n        'environment with DOM support.');\n  }\n  // reCAPTCHA container must be valid and if visible, not empty.\n  // An invisible reCAPTCHA will not render in its container. That container\n  // will execute the reCAPTCHA when it is clicked.\n  if (!goog.dom.getElement(container) ||\n      (!this.isInvisible_ && goog.dom.getElement(container).hasChildNodes())) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'reCAPTCHA container is either not found or already contains inner ' +\n        'elements!');\n  }\n  /**\n   * @private {!fireauth.RpcHandler} The RPC handler for querying the auth\n   *     backend.\n   */\n  this.rpcHandler_ = new fireauth.RpcHandler(\n      apiKey,\n      opt_rpcHandlerConfig || null,\n      opt_clientVersion || null);\n  /**\n   * @private {function():?string} Current language code getter.\n   */\n  this.getLanguageCode_ = opt_getLanguageCode || function() {return null;};\n  var self = this;\n  /**\n   * @private {!Array<function(?string)>} The token change listeners.\n   */\n  this.tokenListeners_ = [];\n  // Wrap token callback.\n  var existingCallback =\n      this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK];\n  this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK] =\n      function(response) {\n    // Dispatch internal event for the token response.\n    self.dispatchEvent_(response);\n    if (typeof existingCallback === 'function') {\n      existingCallback(response);\n    } else if (typeof existingCallback === 'string') {\n      // Check if the provided callback is a global function name.\n      var cb = fireauth.util.getObjectRef(existingCallback, goog.global);\n      if (typeof cb === 'function') {\n        // If so, trigger it.\n        cb(response);\n      }\n    }\n  };\n  // Wrap expired token callback.\n  var existingExpiredCallback = this.parameters_[\n    fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK];\n  this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK] =\n      function() {\n    // Dispatch internal event for the token expiration.\n    self.dispatchEvent_(null);\n    if (typeof existingExpiredCallback === 'function') {\n      existingExpiredCallback();\n    } else if (typeof existingExpiredCallback === 'string') {\n      // Check if the provided expired callback is a global function name.\n      var cb = fireauth.util.getObjectRef(existingExpiredCallback, goog.global);\n      if (typeof cb === 'function') {\n        // If so, trigger it.\n        cb();\n      }\n    }\n  };\n};\n\n\n/**\n * grecaptcha parameter names.\n * @enum {string}\n */\nfireauth.BaseRecaptchaVerifier.ParamName = {\n  CALLBACK: 'callback',\n  EXPIRED_CALLBACK: 'expired-callback',\n  SITEKEY: 'sitekey',\n  SIZE: 'size'\n};\n\n\n/**\n * Dispatches the token change event to all subscribed listeners.\n * @param {?string} token The current detected token, null for none.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.dispatchEvent_ = function(token) {\n  for (var i = 0; i < this.tokenListeners_.length; i++) {\n    try {\n      this.tokenListeners_[i](token);\n    } catch (e) {\n      // If any handler fails, ignore and run next handler.\n    }\n  }\n};\n\n\n/**\n * Add a reCAPTCHA token change listener.\n * @param {function(?string)} listener The token listener to add.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.addTokenChangeListener_ =\n    function(listener) {\n  this.tokenListeners_.push(listener);\n};\n\n\n/**\n * Remove a reCAPTCHA token change listener.\n * @param {function(?string)} listener The token listener to remove.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.removeTokenChangeListener_ =\n    function(listener) {\n  goog.array.removeAllIf(this.tokenListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n\n/**\n * Takes in a pending promise, saves it and adds a clean up callback which\n * forgets the pending promise after it is fulfilled and echoes the promise\n * back.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.registerPendingPromise_ = function(p) {\n  var self = this;\n  // Save created promise in pending list.\n  this.pendingPromises_.push(p);\n  p.thenAlways(function() {\n    // When fulfilled, remove from pending list.\n    goog.array.remove(self.pendingPromises_, p);\n  });\n  // Return the promise.\n  return p;\n};\n\n\n/** @return {boolean} Whether verifier instance has pending promises. */\nfireauth.BaseRecaptchaVerifier.prototype.hasPendingPromises = function() {\n  return this.pendingPromises_.length != 0;\n};\n\n\n/**\n * Gets the current RecaptchaVerifier in a ready state for rendering by first\n * checking that the environment supports a reCAPTCHA, loading reCAPTCHA\n * dependencies if not already available and then getting the Firebase project's\n * provisioned reCAPTCHA configuration.\n * @return {!goog.Promise<void>} The promise that resolves when recaptcha\n *     is ready for rendering.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.isReady_ = function() {\n  var self = this;\n  // If previously called, return the cached response.\n  if (this.cachedReadyPromise_) {\n    return this.cachedReadyPromise_;\n  }\n  this.cachedReadyPromise_ = this.registerPendingPromise_(goog.Promise.resolve()\n      .then(function() {\n        // Verify environment first.\n        // Fail quickly from a worker environment or non-HTTP/HTTPS environment.\n        if (fireauth.util.isHttpOrHttps() && !fireauth.util.isWorker()) {\n          // Wait for DOM to be ready as this feature depends on that.\n          return fireauth.util.onDomReady();\n        } else {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.OPERATION_NOT_SUPPORTED,\n              'RecaptchaVerifier is only supported in a browser HTTP/HTTPS ' +\n              'environment.');\n        }\n      })\n      .then(function() {\n        // Load external reCAPTCHA dependencies if not already there, taking\n        // into account the current language code.\n        return self.recaptchaLoader_.loadRecaptchaDeps(self.getLanguageCode_());\n      })\n      .then(function(grecaptcha) {\n        self.grecaptcha_ = grecaptcha;\n        // Load Firebase project's reCAPTCHA configuration.\n        return self.rpcHandler_.getRecaptchaParam();\n      })\n      .then(function(result) {\n        // Update the reCAPTCHA parameters.\n        self.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY] =\n            result[fireauth.RpcHandler.AuthServerField.RECAPTCHA_SITE_KEY];\n      }).thenCatch(function(error) {\n        // Anytime an error occurs, reset the cached ready promise to rerun on\n        // retrial.\n        self.cachedReadyPromise_ = null;\n        // Rethrow the error.\n        throw error;\n      }));\n  // Return the cached/pending ready promise.\n  return this.cachedReadyPromise_;\n};\n\n/**\n * Renders the reCAPTCHA and returns the allocated widget ID.\n * @return {!goog.Promise<number>} The promise that resolves with the reCAPTCHA\n *     widget ID when it is rendered.\n */\nfireauth.BaseRecaptchaVerifier.prototype.render = function() {\n  this.checkIfDestroyed_();\n  var self = this;\n  // Get reCAPTCHA ready.\n  return this.registerPendingPromise_(this.isReady_().then(function() {\n    if (self.widgetId_ === null) {\n      // For a visible reCAPTCHA, embed in a wrapper DIV container to allow\n      // re-rendering in the same developer provided container.\n      var container = self.container_;\n      if (!self.isInvisible_) {\n        // Get outer container (the developer provided container).\n        var outerContainer = goog.dom.getElement(container);\n        // Create wrapper temp DIV container.\n        container = goog.dom.createDom(goog.dom.TagName.DIV);\n        // Add temp DIV to outer container.\n        outerContainer.appendChild(container);\n      }\n      // If not initialized, initialize reCAPTCHA and return its widget ID.\n      self.widgetId_ = self.grecaptcha_.render(container, self.parameters_);\n    }\n    return self.widgetId_;\n  }));\n};\n\n\n/**\n * Gets the reCAPTCHA ready and waits for the reCAPTCHA token to be available\n * before resolving the promise returned.\n * @return {!goog.Promise<string>} The promise that resolves with the reCAPTCHA\n *     token when reCAPTCHA challenge is solved.\n */\nfireauth.BaseRecaptchaVerifier.prototype.verify = function() {\n  // Fail if reCAPTCHA is already destroyed.\n  this.checkIfDestroyed_();\n  var self = this;\n  // Render reCAPTCHA.\n  return this.registerPendingPromise_(this.render().then(function(widgetId) {\n    return new goog.Promise(function(resolve, reject) {\n      // Get current reCAPTCHA token.\n      var recaptchaToken = self.grecaptcha_.getResponse(widgetId);\n      if (recaptchaToken) {\n        // Unexpired token already available. Resolve pending promise with that\n        // token.\n        resolve(recaptchaToken);\n      } else {\n        // No token available. Listen to token change.\n        var cb = function(token) {\n          if (!token) {\n            // Ignore token expirations.\n            return;\n          }\n          // Remove temporary token change listener.\n          self.removeTokenChangeListener_(cb);\n          // Resolve with new token.\n          resolve(token);\n        };\n        // Add temporary token change listener.\n        self.addTokenChangeListener_(cb);\n        if (self.isInvisible_) {\n          // Execute invisible reCAPTCHA to force a challenge.\n          // This should do nothing if already triggered either by developer or\n          // by a button click.\n          self.grecaptcha_.execute(/** @type {number} */ (self.widgetId_));\n        }\n      }\n    });\n  }));\n};\n\n\n/**\n * Resets the reCAPTCHA widget.\n */\nfireauth.BaseRecaptchaVerifier.prototype.reset = function() {\n  this.checkIfDestroyed_();\n  if (this.widgetId_ !== null) {\n    this.grecaptcha_.reset(this.widgetId_);\n  }\n};\n\n\n/**\n * Throws an error if the reCAPTCHA verifier is already cleared.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.checkIfDestroyed_ = function() {\n  if (this.destroyed_) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'RecaptchaVerifier instance has been destroyed.');\n  }\n};\n\n\n/**\n * Removes the reCAPTCHA from the DOM.\n */\nfireauth.BaseRecaptchaVerifier.prototype.clear = function() {\n  this.checkIfDestroyed_();\n  this.destroyed_ = true;\n  // Decrement reCAPTCHA instance counter.\n  this.recaptchaLoader_.clearSingleRecaptcha();\n  // Cancel all pending promises.\n  for (var i = 0; i < this.pendingPromises_.length; i++) {\n    this.pendingPromises_[i].cancel(\n        'RecaptchaVerifier instance has been destroyed.');\n  }\n  if (!this.isInvisible_) {\n    goog.dom.removeChildren(goog.dom.getElement(this.container_));\n  }\n};\n\n\n/**\n * Creates the Firebase reCAPTCHA app verifier, publicly available, for the\n * Firebase app provided, used for web phone authentication.\n * This is a subclass of fireauth.BaseRecaptchaVerifier.\n *\n * @param {!Element|string} container The reCAPTCHA container parameter. This\n *     has different meaning depending on whether the reCAPTCHA is hidden or\n *     visible.\n * @param {?Object=} opt_parameters The optional reCAPTCHA parameters.\n * @param {?firebase.app.App=} opt_app The corresponding Firebase app.\n * @constructor\n * @extends {fireauth.BaseRecaptchaVerifier}\n */\nfireauth.RecaptchaVerifier = function(container, opt_parameters, opt_app) {\n  var isTestingMode = false;\n  var apiKey;\n  try {\n    /** @private {!firebase.app.App} The corresponding Firebase app instance. */\n    this.app_ = opt_app || firebase.app();\n  } catch (error) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'No firebase.app.App instance is currently initialized.');\n  }\n  // API key is required for web client RPC calls.\n  if (this.app_.options && this.app_.options['apiKey']) {\n    apiKey = this.app_.options['apiKey'];\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_API_KEY);\n  }\n  var self = this;\n  // Construct the language code getter based on the underlying Auth instance.\n  var getLanguageCode = function() {\n    var languageCode;\n    // Get the latest language setting.\n    // reCAPTCHA does not support updating the language of an already\n    // rendered reCAPTCHA. Reloading the SDK with the new hl will break\n    // the existing rendered localized reCAPTCHA. We will need to\n    // document that a new fireauth.BaseRecaptchaVerifier instance needs\n    // to be instantiated after the language is updated. Otherwise, the\n    // old language code will remain active on the existing instance.\n    try {\n      languageCode = self.app_['auth']().getLanguageCode();\n    } catch (e) {\n      languageCode = null;\n    }\n    return languageCode;\n  };\n  // Get the framework version from Auth instance.\n  var frameworkVersion = null;\n  try {\n    frameworkVersion = this.app_['auth']().getFramework();\n  } catch (e) {\n    // Do nothing.\n  }\n  try {\n    isTestingMode =\n        this.app_['auth']()['settings']['appVerificationDisabledForTesting'];\n  } catch (e) {\n    // Do nothing.\n  }\n  // Get the client version based on the Firebase JS version.\n  var clientFullVersion = firebase.SDK_VERSION ?\n      fireauth.util.getClientVersion(\n          fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION,\n          frameworkVersion) :\n      null;\n  // Call the superclass constructor with the computed API key, reCAPTCHA\n  // container, optional parameters, language code getter, Firebase JS client\n  // version and the current client configuration endpoints.\n  fireauth.RecaptchaVerifier.base(this, 'constructor', apiKey,\n      container, opt_parameters, getLanguageCode, clientFullVersion,\n      fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),\n      isTestingMode);\n};\ngoog.inherits(fireauth.RecaptchaVerifier, fireauth.BaseRecaptchaVerifier);\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides function argument validation for third-party calls\n * that cannot be validated with Closure compiler.\n */\n\ngoog.provide('fireauth.args');\ngoog.provide('fireauth.args.Argument');\n\ngoog.require('fireauth.Auth');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.authenum.Error');\n\n\n/**\n * Represents an argument to a function. Fields:\n * <ul>\n * <li> name: A label for the argument. For example, the names of the arguments\n *      to a signIn() function might be \"email\" and \"password\".\n * <li> typeLabel: A label for the expected type of the argument, starting with\n *      an article, for example, \"an object\" or \"a valid credential\".\n * <li> optional: Whether or not this argument is optional. Optional arguments\n *      cannot come after non-optional arguments in the input to validate().\n * <li> validator: A function that takes the passed value of this argument\n *      and returns whether the value is valid or not.\n * </ul>\n * @typedef {{\n *   name: string,\n *   typeLabel: string,\n *   optional: boolean,\n *   validator: function (*) : boolean,\n * }}\n */\nfireauth.args.Argument;\n\n\n/**\n * Validates the arguments to a method call and throws an error if invalid. This\n * can be used to validate external calls where the Closure compiler cannot\n * detect errors.\n *\n * Example usage:\n * function greet(recipient, opt_useFormalLanguage) {\n *   fireauth.args.validate('greet', [\n *     fireauth.args.string('recipient'),\n *     fireauth.args.bool('opt_useFormalLanguage', true)\n *   ], arguments);\n *   if (opt_useFormalLanguage) {\n *     console.log('Good day, ' + recipient + '.');\n *   } else {\n *     console.log('Wassup, ' + recipient + '?');\n *   }\n * }\n * greet('Mr. Manager', true); // Prints 'Good day, Mr. Manager.'\n * greet('Billy Bob'); // Prints 'Wassup, Billy Bob?'\n * greet(133); // Throws 'greet failed: First argument \"recipient\" must be a\n *             // valid string.'\n * greet(); // Throws 'greet failed: Expected 1-2 arguments but got 0.'\n * greet('Mr. Manager', true, 'ohno'); // Throws 'greet failed: Expected 1-2\n *                                     // arguments but got 3.'\n *\n * This can also be used to validate setters by passing an additional true\n * argument to fireauth.args.validate. This modifies the error message to be\n * relevant for that setter.\n *\n * @param {string} apiName The name of the method being called, to display in\n *     the error message for debugging purposes.\n * @param {!Array<!fireauth.args.Argument>} expected The expected arguments.\n * @param {!IArrayLike} actual The arguments object of the function whose\n *     parameters we want to validate.\n * @param {boolean=} opt_isSetter Whether the function is a setter which takes\n *     a single argument.\n */\nfireauth.args.validate = function(apiName, expected, actual, opt_isSetter) {\n  // Convert the arguments object into a real array.\n  var actualAsArray = Array.prototype.slice.call(actual);\n  var errorMessage = fireauth.args.validateAndGetMessage_(\n      expected, actualAsArray, opt_isSetter);\n  if (errorMessage) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        apiName + ' failed: ' + errorMessage);\n  }\n};\n\n\n/**\n * @param {!Array<!fireauth.args.Argument>} expected\n * @param {!Array<*>} actual\n * @param {boolean=} opt_isSetter Whether the function is a setter which takes\n *     a single argument.\n * @return {?string} The error message if there is an error, or otherwise\n *     null.\n * @private\n */\nfireauth.args.validateAndGetMessage_ =\n    function(expected, actual, opt_isSetter) {\n  var minNumArgs = fireauth.args.calcNumRequiredArgs_(expected);\n  var maxNumArgs = expected.length;\n  if (actual.length < minNumArgs || maxNumArgs < actual.length) {\n    return fireauth.args.makeLengthError_(minNumArgs, maxNumArgs,\n        actual.length);\n  }\n\n  for (var i = 0; i < actual.length; i++) {\n    // Argument is optional and undefined is explicitly passed.\n    var optionalUndefined = expected[i].optional && actual[i] === undefined;\n    // Check if invalid argument and the argument is not optional with undefined\n    // passed.\n    if (!expected[i].validator(actual[i]) && !optionalUndefined) {\n      return fireauth.args.makeErrorAtPosition_(i, expected[i], opt_isSetter);\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * @param {!Array<!fireauth.args.Argument>} expected\n * @return {number} The number of required arguments.\n * @private\n */\nfireauth.args.calcNumRequiredArgs_ = function(expected) {\n  var numRequiredArgs = 0;\n  var isOptionalSection = false;\n  for (var i = 0; i < expected.length; i++) {\n    if (expected[i].optional) {\n      isOptionalSection = true;\n    } else {\n      if (isOptionalSection) {\n        throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n            'Argument validator encountered a required argument after an ' +\n            'optional argument.');\n      }\n      numRequiredArgs++;\n    }\n  }\n  return numRequiredArgs;\n};\n\n\n/**\n * @param {number} min The minimum number of arguments to the function,\n *     inclusive.\n * @param {number} max The maximum number of arguments to the function,\n *     inclusive.\n * @param {number} actual The actual number of arguments received.\n * @return {string} The error message.\n * @private\n */\nfireauth.args.makeLengthError_ = function(min, max, actual) {\n  var numExpectedString;\n  if (min == max) {\n    if (min == 1) {\n      numExpectedString = '1 argument';\n    } else {\n      numExpectedString = min + ' arguments';\n    }\n  } else {\n    numExpectedString = min + '-' + max + ' arguments';\n  }\n  return 'Expected ' + numExpectedString + ' but got ' + actual + '.';\n};\n\n\n/**\n * @param {number} position The position at which there was an error.\n * @param {!fireauth.args.Argument} expectedType The expected type of the\n *     argument, which was violated.\n * @param {boolean=} opt_isSetter Whether the function is a setter which takes\n *     a single argument.\n * @return {string} The error message.\n * @private\n */\nfireauth.args.makeErrorAtPosition_ =\n    function(position, expectedType, opt_isSetter) {\n  var ordinal = fireauth.args.makeOrdinal_(position);\n  var argName = expectedType.name ?\n      fireauth.args.quoteString_(expectedType.name) + ' ' : '';\n  // Add support to setters for readable/writable properties which take a\n  // required single argument.\n  var errorPrefix = !!opt_isSetter ? '' : ordinal + ' argument ';\n  return errorPrefix + argName + 'must be ' +\n      expectedType.typeLabel + '.';\n};\n\n\n/** @private {!Array<string>} The first few ordinal numbers. */\nfireauth.args.ORDINAL_NUMBERS_ = ['First', 'Second', 'Third', 'Fourth',\n  'Fifth', 'Sixth', 'Seventh', 'Eighth', 'Ninth'];\n\n\n/**\n * @param {number} cardinal An integer.\n * @return {string} The integer converted to an ordinal number, starting at\n *     \"First\". That is, makeOrdinal_(0) returns \"First\" and makeOrdinal_(1)\n *     returns \"Second\", etc.\n * @private\n */\nfireauth.args.makeOrdinal_ = function(cardinal) {\n  // We only support the first few ordinal numbers. We could provide a more\n  // robust solution, but it is unlikely that a function would need more than\n  // nine arguments.\n  if (cardinal < 0 || cardinal >= fireauth.args.ORDINAL_NUMBERS_.length) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'Argument validator received an unsupported number of arguments.');\n  }\n  return fireauth.args.ORDINAL_NUMBERS_[cardinal];\n};\n\n\n/**\n * Specifies a string argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.string = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a valid string',\n    optional: !!opt_optional,\n    validator: goog.isString\n  };\n};\n\n\n/**\n * Specifies a boolean argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.bool = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a boolean',\n    optional: !!opt_optional,\n    validator: goog.isBoolean\n  };\n};\n\n\n/**\n * Specifies a number argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.number = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a valid number',\n    optional: !!opt_optional,\n    validator: goog.isNumber\n  };\n};\n\n\n/**\n * Specifies an object argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.object = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a valid object',\n    optional: !!opt_optional,\n    validator: goog.isObject\n  };\n};\n\n\n/**\n * Specifies a function argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.func = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a function',\n    optional: !!opt_optional,\n    validator: goog.isFunction\n  };\n};\n\n\n/**\n * Specifies a null argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.null = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'null',\n    optional: !!opt_optional,\n    validator: goog.isNull\n  };\n};\n\n\n/**\n * Specifies an HTML element argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.element = function(opt_name, opt_optional) {\n   return /** @type {!fireauth.args.Argument} */ ({\n    name: opt_name || '',\n    typeLabel: 'an HTML element',\n    optional: !!opt_optional,\n    validator: /** @type {function(!Element) : boolean} */ (\n        function(element) {\n          return !!(element && element instanceof Element);\n        })\n  });\n};\n\n\n/**\n * Specifies an instance of Firebase Auth.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.firebaseAuth = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'auth',\n    typeLabel: 'an instance of Firebase Auth',\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.Auth) : boolean} */ (\n        function(auth) {\n          return !!(auth && auth instanceof fireauth.Auth);\n        })\n  });\n};\n\n\n/**\n * Specifies an instance of Firebase User.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.firebaseUser = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'user',\n    typeLabel: 'an instance of Firebase User',\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.AuthUser) : boolean} */ (\n        function(user) {\n          return !!(user && user instanceof fireauth.AuthUser);\n        })\n  });\n};\n\n\n/**\n * Specifies an instance of Firebase App.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.firebaseApp = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'app',\n    typeLabel: 'an instance of Firebase App',\n    optional: !!opt_optional,\n    validator: /** @type {function(!firebase.app.App) : boolean} */ (\n        function(app) {\n          return !!(app && app instanceof firebase.app.App);\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that implements the fireauth.AuthCredential interface.\n * @param {?fireauth.idp.ProviderId=} opt_requiredProviderId The required type\n *     of provider.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.authCredential =\n    function(opt_requiredProviderId, opt_name, opt_optional) {\n  var name = opt_name ||\n      (opt_requiredProviderId ?\n       opt_requiredProviderId + 'Credential' :\n       'credential');\n  var typeLabel = opt_requiredProviderId ?\n      'a valid ' + opt_requiredProviderId + ' credential' :\n      'a valid credential';\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: name,\n    typeLabel: typeLabel,\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.AuthCredential) : boolean} */ (\n        function(credential) {\n          if (!credential) {\n            return false;\n          }\n          // If opt_requiredProviderId is set, make sure it matches the\n          // credential's providerId.\n          var matchesRequiredProvider = !opt_requiredProviderId ||\n              (credential['providerId'] === opt_requiredProviderId);\n          return !!(credential.getIdTokenProvider && matchesRequiredProvider);\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that implements the fireauth.AuthProvider interface.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.authProvider = function(opt_name, opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: opt_name || 'authProvider',\n    typeLabel: 'a valid Auth provider',\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.AuthProvider) : boolean} */ (\n        function(provider) {\n          return !!(provider &&\n                    provider['providerId'] &&\n                    provider.hasOwnProperty &&\n                    provider.hasOwnProperty('isOAuthProvider'));\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that implements the firebase.auth.ApplicationVerifier\n * interface.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.applicationVerifier = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'applicationVerifier',\n    typeLabel: 'an implementation of firebase.auth.ApplicationVerifier',\n    optional: !!opt_optional,\n    validator:\n        /** @type {function(!firebase.auth.ApplicationVerifier) : boolean} */ (\n        function(applicationVerifier) {\n          return !!(applicationVerifier &&\n                    goog.isString(applicationVerifier.type) &&\n                    goog.isFunction(applicationVerifier.verify));\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that can be either of two argument types.\n * @param {!fireauth.args.Argument} optionA\n * @param {!fireauth.args.Argument} optionB\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.or = function(optionA, optionB, opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: optionA.typeLabel + ' or ' + optionB.typeLabel,\n    optional: !!opt_optional,\n    validator: function(value) {\n      return optionA.validator(value) || optionB.validator(value);\n    }\n  };\n};\n\n\n/**\n * @param {string} str\n * @return {string} The string surrounded with quotes.\n * @private\n */\nfireauth.args.quoteString_ = function(str) {\n  return '\"' + str + '\"';\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides utilities for exporting public APIs, with error\n *     checking.\n */\n\ngoog.provide('fireauth.exportlib');\ngoog.provide('fireauth.exportlib.ExportedMethod');\n\ngoog.require('fireauth.args');\n\n\n/**\n * Type constant for Firebase Auth.\n * @const {string}\n */\nfireauth.exportlib.AUTH_TYPE = 'auth';\n\n\n/**\n * Represents an exported method, with the exported name of the method and the\n * expected arguments to that method.\n * @typedef {{\n *   name: string,\n *   args: (Array<!fireauth.args.Argument>|null|undefined)\n * }}\n */\nfireauth.exportlib.ExportedMethod;\n\n\n/**\n * Represents an exported property, with the exported name of the property and\n * the expected argument to the setter of this property.\n * @typedef {{\n *   name: string,\n *   arg: !fireauth.args.Argument\n * }}\n */\nfireauth.exportlib.ExportedProperty;\n\n\n/**\n * Exports prototype methods of an object.\n * @param {!Object} protObj The prototype of an object.\n * @param {!Object<string, fireauth.exportlib.ExportedMethod>} fnMap The map of\n *     prototype functions to their export name and expected arguments.\n */\nfireauth.exportlib.exportPrototypeMethods = function(protObj, fnMap) {\n  // This method exports methods by aliasing the unobfuscated function name\n  // (specified as a string in the \"name\" field of ExportedMethod) to the\n  // obfuscated function name (specified as a key of the fnMap object).\n  //\n  // To give a concrete example, let's say that we have this method:\n  // fireauth.Auth.prototype.fetchProvidersForEmail = function() { ... };\n  //\n  // In the exports file, we export as follows:\n  // fireauth.exportlib.exportPrototypeMethods(fireauth.Auth.prototype, {\n  //   fetchProvidersForEmail: {name: 'fetchProvidersForEmail', args: ...}\n  // });\n  //\n  // When the compiler obfuscates the code, the code above will become something\n  // like this:\n  // fireauth.Auth.prototype.qZ = function() { ... };\n  // fireauth.exportlib.exportPrototypeMethods(fireauth.Auth.prototype, {\n  //   qZ: {name: 'fetchProvidersForEmail', args: ...}\n  // });\n  //\n  // (Of course, fireauth.Auth and fireauth.exportlib.exportPrototypeMethods\n  // would also be obfuscated). Note that the key in fnMap is obfuscated but the\n  // \"name\" field in the ExportedMethod is not. Now, exportPrototypeMethods can\n  // export fetchProvidersForEmail by reading the key (\"qZ\") and the \"name\"\n  // field (\"fetchProvidersForEmail\") and essentially executing this:\n  // fireauth.Auth.prototype['fetchProvidersForEmail'] =\n  //     fireauth.Auth.prototype['qZ'];\n  for (var obfuscatedFnName in fnMap) {\n    var unobfuscatedFnName = fnMap[obfuscatedFnName].name;\n    protObj[unobfuscatedFnName] =\n        fireauth.exportlib.wrapMethodWithArgumentVerifier_(\n        unobfuscatedFnName, protObj[obfuscatedFnName],\n        fnMap[obfuscatedFnName].args);\n  }\n};\n\n\n/**\n * Exports properties of an object. See the docs for exportPrototypeMethods for\n * more information about how this works.\n * @param {!Object} protObj The prototype of an object.\n * @param {!Object<string, !fireauth.exportlib.ExportedProperty>} propMap The\n *     map of properties to their export names.\n */\nfireauth.exportlib.exportPrototypeProperties = function(protObj, propMap) {\n  for (var obfuscatedPropName in propMap) {\n    var unobfuscatedPropName = propMap[obfuscatedPropName].name;\n    // Don't alias a property to itself.\n    // Downside is that argument validation will not be possible. For now, to\n    // get around it, ensure unobfuscated property names are different\n    // than the corresponding obfuscated property names.\n    if (unobfuscatedPropName === obfuscatedPropName) {\n      continue;\n    }\n    /**\n     * @this {!Object}\n     * @param {string} obfuscatedPropName The obfuscated property name.\n     * @return {*} The value of the property.\n     */\n    var getter = function(obfuscatedPropName) {\n      return this[obfuscatedPropName];\n    };\n    /**\n     * @this {!Object}\n     * @param {string} unobfuscatedPropName The unobfuscated property name.\n     * @param {string} obfuscatedPropName The obfuscated property name.\n     * @param {!fireauth.args.Argument} expectedArg The expected argument to the\n     *     setter of this property.\n     * @param {*} value The new value of the property.\n     */\n    var setter = function(unobfuscatedPropName, obfuscatedPropName,\n                          expectedArg, value) {\n      // Validate the argument before setting it.\n      fireauth.args.validate(\n          unobfuscatedPropName, [expectedArg], [value], true);\n      this[obfuscatedPropName] = value;\n    };\n    // Get the expected argument.\n    var expectedArg = propMap[obfuscatedPropName].arg;\n    Object.defineProperty(protObj, unobfuscatedPropName, {\n      /**\n       * @this {!Object}\n       * @return {*} The value of the property.\n       */\n      get: goog.partial(getter, obfuscatedPropName),\n      /**\n       * @this {!Object}\n       * @param {*} value The new value of the property.\n       */\n      set: goog.partial(setter, unobfuscatedPropName, obfuscatedPropName,\n                        expectedArg),\n      enumerable: true\n    });\n  }\n};\n\n\n/**\n * Export a static method as a public API.\n * @param {!Object} parentObj The parent object to patch.\n * @param {string} name The public name of the method.\n * @param {!Function} func The method.\n * @param {?Array<!fireauth.args.Argument>=} opt_expectedArgs The expected\n *     arguments to the method.\n */\nfireauth.exportlib.exportFunction = function(parentObj, name, func,\n    opt_expectedArgs) {\n  parentObj[name] = fireauth.exportlib.wrapMethodWithArgumentVerifier_(\n      name, func, opt_expectedArgs);\n};\n\n\n/**\n * Wraps a method with a function that first verifies the arguments to the\n * method and then calls the original method.\n * @param {string} methodName The name of the method, which will be displayed\n *     on the error message if the arguments are not valid.\n * @param {!Function} method The method to be wrapped.\n * @param {?Array<!fireauth.args.Argument>=} opt_expectedArgs The expected\n *     arguments.\n * @return {!Function} The wrapped method.\n * @private\n */\nfireauth.exportlib.wrapMethodWithArgumentVerifier_ = function(methodName,\n    method, opt_expectedArgs) {\n  if (!opt_expectedArgs) {\n    return method;\n  }\n  var shortName = fireauth.exportlib.extractMethodNameFromFullPath_(methodName);\n  var wrapper = function() {\n    var argumentsAsArray = Array.prototype.slice.call(arguments);\n    fireauth.args.validate(shortName,\n        /** @type {!Array<!fireauth.args.Argument>} */ (opt_expectedArgs),\n        argumentsAsArray);\n    return method.apply(this, argumentsAsArray);\n  };\n  // Reattach all static stuff to wrapper.\n  for (var key in method) {\n    wrapper[key] = method[key];\n  }\n  // Reattach all prototype stuff to wrapper.\n  for (var key in method.prototype) {\n    wrapper.prototype[key] = method.prototype[key];\n  }\n  // Return wrapper with all of method's static and prototype methods and\n  // properties.\n  return wrapper;\n};\n\n\n/**\n * From a full path to a method (e.g. \"fireauth.GoogleAuthProvider.credential\"),\n * get just the method name (\"credential\").\n * @param {string} path The full path.\n * @return {string} The method name.\n * @private\n */\nfireauth.exportlib.extractMethodNameFromFullPath_ = function(path) {\n  var parts = path.split('.');\n  return parts[parts.length - 1];\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.exports');\n\ngoog.require('fireauth.Auth');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthErrorWithCredential');\ngoog.require('fireauth.AuthSettings');\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.ConfirmationResult');\ngoog.require('fireauth.EmailAuthProvider');\ngoog.require('fireauth.FacebookAuthProvider');\ngoog.require('fireauth.GRecaptchaMockFactory');\ngoog.require('fireauth.GithubAuthProvider');\ngoog.require('fireauth.GoogleAuthProvider');\ngoog.require('fireauth.InvalidOriginError');\ngoog.require('fireauth.OAuthProvider');\ngoog.require('fireauth.PhoneAuthProvider');\ngoog.require('fireauth.RecaptchaVerifier');\ngoog.require('fireauth.SAMLAuthProvider');\ngoog.require('fireauth.TwitterAuthProvider');\ngoog.require('fireauth.args');\ngoog.require('fireauth.authStorage.Persistence');\ngoog.require('fireauth.exportlib');\ngoog.require('fireauth.grecaptcha');\ngoog.require('fireauth.idp.ProviderId');\ngoog.require('goog.Promise');\n\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.Auth.prototype, {\n      applyActionCode: {\n        name: 'applyActionCode',\n        args: [fireauth.args.string('code')]\n      },\n      checkActionCode: {\n        name: 'checkActionCode',\n        args: [fireauth.args.string('code')]\n      },\n      confirmPasswordReset: {\n        name: 'confirmPasswordReset',\n        args: [\n          fireauth.args.string('code'),\n          fireauth.args.string('newPassword')\n        ]\n      },\n      createUserWithEmailAndPassword: {\n        name: 'createUserWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      createUserAndRetrieveDataWithEmailAndPassword: {\n        name: 'createUserAndRetrieveDataWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      fetchProvidersForEmail: {\n        name: 'fetchProvidersForEmail',\n        args: [fireauth.args.string('email')]\n      },\n      fetchSignInMethodsForEmail: {\n        name: 'fetchSignInMethodsForEmail',\n        args: [fireauth.args.string('email')]\n      },\n      getRedirectResult: {\n        name: 'getRedirectResult',\n        args: []\n      },\n      isSignInWithEmailLink: {\n        name: 'isSignInWithEmailLink',\n        args: [fireauth.args.string('emailLink')]\n      },\n      onAuthStateChanged: {\n        name: 'onAuthStateChanged',\n        args: [\n          fireauth.args.or(\n              fireauth.args.object(),\n              fireauth.args.func(),\n              'nextOrObserver'),\n          fireauth.args.func('opt_error', true),\n          fireauth.args.func('opt_completed', true)\n        ]\n      },\n      onIdTokenChanged: {\n        name: 'onIdTokenChanged',\n        args: [\n          fireauth.args.or(\n              fireauth.args.object(),\n              fireauth.args.func(),\n              'nextOrObserver'),\n          fireauth.args.func('opt_error', true),\n          fireauth.args.func('opt_completed', true)\n        ]\n      },\n      sendPasswordResetEmail: {\n        name: 'sendPasswordResetEmail',\n        args: [\n          fireauth.args.string('email'),\n          fireauth.args.or(\n              fireauth.args.object('opt_actionCodeSettings', true),\n              fireauth.args.null(null, true),\n              'opt_actionCodeSettings',\n              true)\n        ]\n      },\n      sendSignInLinkToEmail: {\n        name: 'sendSignInLinkToEmail',\n        args: [\n          fireauth.args.string('email'),\n          fireauth.args.object('actionCodeSettings')\n        ]\n      },\n      setPersistence: {\n        name: 'setPersistence',\n        args:  [fireauth.args.string('persistence')]\n      },\n      signInAndRetrieveDataWithCredential: {\n        name: 'signInAndRetrieveDataWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      signInAnonymously: {\n        name: 'signInAnonymously',\n        args: []\n      },\n      signInAnonymouslyAndRetrieveData: {\n        name: 'signInAnonymouslyAndRetrieveData',\n        args: []\n      },\n      signInWithCredential: {\n        name: 'signInWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      signInWithCustomToken: {\n        name: 'signInWithCustomToken',\n        args: [fireauth.args.string('token')]\n      },\n      signInAndRetrieveDataWithCustomToken: {\n        name: 'signInAndRetrieveDataWithCustomToken',\n        args: [fireauth.args.string('token')]\n      },\n      signInWithEmailAndPassword: {\n        name: 'signInWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      signInWithEmailLink: {\n        name: 'signInWithEmailLink',\n        args: [\n          fireauth.args.string('email'), fireauth.args.string('emailLink', true)\n        ]\n      },\n      signInAndRetrieveDataWithEmailAndPassword: {\n        name: 'signInAndRetrieveDataWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      signInWithPhoneNumber: {\n        name: 'signInWithPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      },\n      signInWithPopup: {\n        name: 'signInWithPopup',\n        args: [fireauth.args.authProvider()]\n      },\n      signInWithRedirect: {\n        name: 'signInWithRedirect',\n        args: [fireauth.args.authProvider()]\n      },\n      updateCurrentUser: {\n        name: 'updateCurrentUser',\n        args: [\n          fireauth.args.or(\n            fireauth.args.firebaseUser(),\n            fireauth.args.null(),\n            'user')\n        ]\n      },\n      signOut: {\n        name: 'signOut',\n        args: []\n      },\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      },\n      useDeviceLanguage: {\n        name: 'useDeviceLanguage',\n        args: []\n      },\n      verifyPasswordResetCode: {\n        name: 'verifyPasswordResetCode',\n        args: [fireauth.args.string('code')]\n      }\n    });\n\nfireauth.exportlib.exportPrototypeProperties(\n    fireauth.Auth.prototype, {\n      'lc': {\n        name: 'languageCode',\n        arg: fireauth.args.or(\n            fireauth.args.string(),\n            fireauth.args.null(),\n            'languageCode')\n      }\n    });\n\n// Exports firebase.auth.Auth.Persistence.\nfireauth.Auth['Persistence'] = fireauth.authStorage.Persistence;\nfireauth.Auth['Persistence']['LOCAL'] = fireauth.authStorage.Persistence.LOCAL;\nfireauth.Auth['Persistence']['SESSION'] =\n    fireauth.authStorage.Persistence.SESSION;\nfireauth.Auth['Persistence']['NONE'] = fireauth.authStorage.Persistence.NONE;\n\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.AuthUser.prototype, {\n      'delete': {\n        name: 'delete',\n        args: []\n      },\n      getIdTokenResult: {\n        name: 'getIdTokenResult',\n        args: [fireauth.args.bool('opt_forceRefresh', true)]\n      },\n      getIdToken: {\n        name: 'getIdToken',\n        args: [fireauth.args.bool('opt_forceRefresh', true)]\n      },\n      linkAndRetrieveDataWithCredential: {\n        name: 'linkAndRetrieveDataWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      linkWithCredential: {\n        name: 'linkWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      linkWithPhoneNumber: {\n        name: 'linkWithPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      },\n      linkWithPopup: {\n        name: 'linkWithPopup',\n        args: [fireauth.args.authProvider()]\n      },\n      linkWithRedirect: {\n        name: 'linkWithRedirect',\n        args: [fireauth.args.authProvider()]\n      },\n      reauthenticateAndRetrieveDataWithCredential: {\n        name: 'reauthenticateAndRetrieveDataWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      reauthenticateWithCredential: {\n        name: 'reauthenticateWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      reauthenticateWithPhoneNumber: {\n        name: 'reauthenticateWithPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      },\n      reauthenticateWithPopup: {\n        name: 'reauthenticateWithPopup',\n        args: [fireauth.args.authProvider()]\n      },\n      reauthenticateWithRedirect: {\n        name: 'reauthenticateWithRedirect',\n        args: [fireauth.args.authProvider()]\n      },\n      reload: {\n        name: 'reload',\n        args: []\n      },\n      sendEmailVerification: {\n        name: 'sendEmailVerification',\n        args: [\n          fireauth.args.or(\n              fireauth.args.object('opt_actionCodeSettings', true),\n              fireauth.args.null(null, true),\n              'opt_actionCodeSettings',\n              true)\n        ]\n      },\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      },\n      unlink: {\n        name: 'unlink',\n        args: [fireauth.args.string('provider')]\n      },\n      updateEmail: {\n        name: 'updateEmail',\n        args: [fireauth.args.string('email')]\n      },\n      updatePassword: {\n        name: 'updatePassword',\n        args: [fireauth.args.string('password')]\n      },\n      updatePhoneNumber: {\n        name: 'updatePhoneNumber',\n        args: [fireauth.args.authCredential(fireauth.idp.ProviderId.PHONE)]\n      },\n      updateProfile: {\n        name: 'updateProfile',\n        args: [fireauth.args.object('profile')]\n      }\n    });\n\n// Ensure internal grecaptcha mock API do not get obfuscated.\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.GRecaptchaMockFactory.prototype, {\n      execute: {\n        name: 'execute'\n      },\n      render: {\n        name: 'render'\n      },\n      reset: {\n        name: 'reset'\n      },\n      getResponse: {\n        name: 'getResponse'\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.grecaptcha.prototype, {\n      execute: {\n        name: 'execute'\n      },\n      render: {\n        name: 'render'\n      },\n      reset: {\n        name: 'reset'\n      },\n      getResponse: {\n        name: 'getResponse'\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    goog.Promise.prototype, {\n      thenAlways: {\n        name: 'finally'\n      },\n      thenCatch: {\n        name: 'catch'\n      },\n      then: {\n        name: 'then'\n      }\n    });\n\nfireauth.exportlib.exportPrototypeProperties(\n    fireauth.AuthSettings.prototype, {\n      'appVerificationDisabled': {\n        name: 'appVerificationDisabledForTesting',\n        arg: fireauth.args.bool('appVerificationDisabledForTesting')\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n   fireauth.ConfirmationResult.prototype, {\n      confirm: {\n        name: 'confirm',\n        args: [\n          fireauth.args.string('verificationCode')\n        ]\n      }\n    });\n\nfireauth.exportlib.exportFunction(\n    fireauth.EmailAuthProvider, 'credential',\n    fireauth.EmailAuthProvider.credential, [\n      fireauth.args.string('email'),\n      fireauth.args.string('password')\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.FacebookAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.FacebookAuthProvider, 'credential',\n    fireauth.FacebookAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(), fireauth.args.object(),\n          'token')\n    ]);\nfireauth.exportlib.exportFunction(\n    fireauth.EmailAuthProvider, 'credentialWithLink',\n    fireauth.EmailAuthProvider.credentialWithLink, [\n      fireauth.args.string('email'),\n      fireauth.args.string('emailLink')\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.GithubAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.GithubAuthProvider, 'credential',\n    fireauth.GithubAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(), fireauth.args.object(),\n          'token')\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.GoogleAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.GoogleAuthProvider, 'credential',\n    fireauth.GoogleAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(),\n          fireauth.args.or(fireauth.args.object(), fireauth.args.null()),\n          'idToken'),\n      fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n          'accessToken', true)\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.TwitterAuthProvider.prototype, {\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.TwitterAuthProvider, 'credential',\n    fireauth.TwitterAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(), fireauth.args.object(),\n          'token'),\n      fireauth.args.string('secret', true)\n    ]);\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.OAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      credential: {\n        name: 'credential',\n        args: [\n          fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n              'idToken', true),\n          fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n              'accessToken', true),\n          fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n              'nonce', true)\n        ]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.PhoneAuthProvider, 'credential',\n    fireauth.PhoneAuthProvider.credential, [\n      fireauth.args.string('verificationId'),\n      fireauth.args.string('verificationCode')\n    ]);\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.PhoneAuthProvider.prototype, {\n      verifyPhoneNumber: {\n        name: 'verifyPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.AuthError.prototype, {\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      }\n    });\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.AuthErrorWithCredential.prototype, {\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      }\n    });\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.InvalidOriginError.prototype, {\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.RecaptchaVerifier.prototype, {\n      clear: {\n        name: 'clear',\n        args: []\n      },\n      render: {\n        name: 'render',\n        args: []\n      },\n      verify: {\n        name: 'verify',\n        args: []\n      }\n    });\n\n\n(function() {\n  if (typeof firebase === 'undefined' || !firebase.INTERNAL ||\n      !firebase.INTERNAL.registerService) {\n    throw new Error('Cannot find the firebase namespace; be sure to include ' +\n        'firebase-app.js before this library.');\n  } else {\n    /** @type {!firebase.ServiceFactory} */\n    var factory = function(app, extendApp) {\n      var auth = new fireauth.Auth(app);\n      extendApp({\n        'INTERNAL': {\n          // Extend app.INTERNAL.getUid.\n          'getUid': goog.bind(auth.getUid, auth),\n          'getToken': goog.bind(auth.getIdTokenInternal, auth),\n          'addAuthTokenListener':\n              goog.bind(auth.addAuthTokenListenerInternal, auth),\n          'removeAuthTokenListener':\n              goog.bind(auth.removeAuthTokenListenerInternal, auth)\n        }\n      });\n      return auth;\n    };\n\n    var namespace = {\n      'Auth': fireauth.Auth,\n      'Error': fireauth.AuthError\n    };\n    fireauth.exportlib.exportFunction(namespace,\n        'EmailAuthProvider', fireauth.EmailAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'FacebookAuthProvider', fireauth.FacebookAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'GithubAuthProvider', fireauth.GithubAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'GoogleAuthProvider', fireauth.GoogleAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'TwitterAuthProvider', fireauth.TwitterAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'OAuthProvider', fireauth.OAuthProvider, [\n          fireauth.args.string('providerId')\n        ]);\n    fireauth.exportlib.exportFunction(namespace,\n        'SAMLAuthProvider', fireauth.SAMLAuthProvider, [\n          fireauth.args.string('providerId')\n        ]);\n    fireauth.exportlib.exportFunction(namespace,\n        'PhoneAuthProvider', fireauth.PhoneAuthProvider, [\n          fireauth.args.firebaseAuth(true)\n        ]);\n    fireauth.exportlib.exportFunction(namespace,\n        'RecaptchaVerifier', fireauth.RecaptchaVerifier, [\n          fireauth.args.or(\n              fireauth.args.string(),\n              fireauth.args.element(),\n              'recaptchaContainer'),\n          fireauth.args.object('recaptchaParameters', true),\n          fireauth.args.firebaseApp(true)\n        ]);\n\n    // Register Auth service with firebase.App.\n    firebase.INTERNAL.registerService(\n        fireauth.exportlib.AUTH_TYPE,\n        factory,\n        namespace,\n        // Initialize Auth when an App is created, so that tokens and Auth state\n        // listeners are available.\n        function (event, app) {\n          if (event === 'create') {\n            try {\n              app[fireauth.exportlib.AUTH_TYPE]();\n            } catch (e) {\n              // This is a silent operation in the background. If the auth\n              // initialization fails, it should not cause a fatal error.\n              // Instead when the developer tries to initialize again manually,\n              // the error will be thrown.\n              // One specific use case here is the initialization for the nodejs\n              // client when no API key is provided. This is commonly used\n              // for unauthenticated database access.\n            }\n          }\n        }\n        );\n\n\n    // Expose User as firebase.User.\n    firebase.INTERNAL.extendNamespace({\n      'User': fireauth.AuthUser\n    });\n  }\n})();\n","import '@firebase/database';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib_1 = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error = new Error(message);\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n","/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import pathToRegexp from \"path-to-regexp\";\n\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  var keys = [];\n  var re = pathToRegexp(pattern, keys, options);\n  var compiledPattern = { re: re, keys: keys };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var parent = arguments[2];\n\n  if (typeof options === \"string\") options = { path: options };\n\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n\n\n  if (path == null) return parent;\n\n  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n\n  if (!match) return null;\n\n  var url = match[0],\n      values = match.slice(1);\n\n  var isExact = pathname === url;\n\n  if (exact && !isExact) return null;\n\n  return {\n    path: path, // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n    isExact: isExact, // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nexport default matchPath;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport matchPath from \"./matchPath\";\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n};\n\n/**\n * The public API for matching a single path and rendering.\n */\n\nvar Route = function (_React$Component) {\n  _inherits(Route, _React$Component);\n\n  function Route() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Route);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props, _this.context.router)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Route.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        route: {\n          location: this.props.location || this.context.router.route.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Route.prototype.computeMatch = function computeMatch(_ref, router) {\n    var computedMatch = _ref.computedMatch,\n        location = _ref.location,\n        path = _ref.path,\n        strict = _ref.strict,\n        exact = _ref.exact,\n        sensitive = _ref.sensitive;\n\n    if (computedMatch) return computedMatch; // <Switch> already computed the match for us\n\n    invariant(router, \"You should not use <Route> or withRouter() outside a <Router>\");\n\n    var route = router.route;\n\n    var pathname = (location || route.location).pathname;\n\n    return matchPath(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }, route.match);\n  };\n\n  Route.prototype.componentWillMount = function componentWillMount() {\n    warning(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\");\n\n    warning(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored\");\n\n    warning(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored\");\n  };\n\n  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n    warning(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n\n    warning(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n\n    this.setState({\n      match: this.computeMatch(nextProps, nextContext.router)\n    });\n  };\n\n  Route.prototype.render = function render() {\n    var match = this.state.match;\n    var _props = this.props,\n        children = _props.children,\n        component = _props.component,\n        render = _props.render;\n    var _context$router = this.context.router,\n        history = _context$router.history,\n        route = _context$router.route,\n        staticContext = _context$router.staticContext;\n\n    var location = this.props.location || route.location;\n    var props = { match: match, location: location, history: history, staticContext: staticContext };\n\n    if (component) return match ? React.createElement(component, props) : null;\n\n    if (render) return match ? render(props) : null;\n\n    if (typeof children === \"function\") return children(props);\n\n    if (children && !isEmptyChildren(children)) return React.Children.only(children);\n\n    return null;\n  };\n\n  return Route;\n}(React.Component);\n\nRoute.propTypes = {\n  computedMatch: PropTypes.object, // private, from <Switch>\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  sensitive: PropTypes.bool,\n  component: PropTypes.func,\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  location: PropTypes.object\n};\nRoute.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.object.isRequired,\n    route: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  })\n};\nRoute.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\n\n\nexport default Route;","// Written in this round about way for babel-transform-imports\nimport Route from \"react-router/es/Route\";\n\nexport default Route;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * The public API for putting history on context.\n */\n\nvar Router = function (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Router);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props.history.location.pathname)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Router.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        history: this.props.history,\n        route: {\n          location: this.props.history.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Router.prototype.computeMatch = function computeMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  Router.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        history = _props.history;\n\n\n    invariant(children == null || React.Children.count(children) === 1, \"A <Router> may have only one child element\");\n\n    // Do this here so we can setState when a <Redirect> changes the\n    // location in componentWillMount. This happens e.g. when doing\n    // server rendering using a <StaticRouter>.\n    this.unlisten = history.listen(function () {\n      _this2.setState({\n        match: _this2.computeMatch(history.location.pathname)\n      });\n    });\n  };\n\n  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    warning(this.props.history === nextProps.history, \"You cannot change <Router history>\");\n  };\n\n  Router.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unlisten();\n  };\n\n  Router.prototype.render = function render() {\n    var children = this.props.children;\n\n    return children ? React.Children.only(children) : null;\n  };\n\n  return Router;\n}(React.Component);\n\nRouter.propTypes = {\n  history: PropTypes.object.isRequired,\n  children: PropTypes.node\n};\nRouter.contextTypes = {\n  router: PropTypes.object\n};\nRouter.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\n\n\nexport default Router;","// Written in this round about way for babel-transform-imports\nimport Router from \"react-router/es/Router\";\n\nexport default Router;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from \"warning\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport Router from \"./Router\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter = function (_React$Component) {\n  _inherits(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BrowserRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = createHistory(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  BrowserRouter.prototype.componentWillMount = function componentWillMount() {\n    warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\");\n  };\n\n  BrowserRouter.prototype.render = function render() {\n    return React.createElement(Router, { history: this.history, children: this.props.children });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nBrowserRouter.propTypes = {\n  basename: PropTypes.string,\n  forceRefresh: PropTypes.bool,\n  getUserConfirmation: PropTypes.func,\n  keyLength: PropTypes.number,\n  children: PropTypes.node\n};\n\n\nexport default BrowserRouter;","import pathToRegexp from \"path-to-regexp\";\n\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compileGenerator = function compileGenerator(pattern) {\n  var cacheKey = pattern;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  var compiledGenerator = pathToRegexp.compile(pattern);\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledGenerator;\n    cacheCount++;\n  }\n\n  return compiledGenerator;\n};\n\n/**\n * Public API for generating a URL pathname from a pattern and parameters.\n */\nvar generatePath = function generatePath() {\n  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (pattern === \"/\") {\n    return pattern;\n  }\n  var generator = compileGenerator(pattern);\n  return generator(params, { pretty: true });\n};\n\nexport default generatePath;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport generatePath from \"./generatePath\";\n\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, \"You should not use <Redirect> outside a <Router>\");\n\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = createLocation(prevProps.to);\n    var nextTo = createLocation(this.props.to);\n\n    if (locationsAreEqual(prevTo, nextTo)) {\n      warning(false, \"You tried to redirect to the same route you're currently on: \" + (\"\\\"\" + nextTo.pathname + nextTo.search + \"\\\"\"));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.computeTo = function computeTo(_ref) {\n    var computedMatch = _ref.computedMatch,\n        to = _ref.to;\n\n    if (computedMatch) {\n      if (typeof to === \"string\") {\n        return generatePath(to, computedMatch.params);\n      } else {\n        return _extends({}, to, {\n          pathname: generatePath(to.pathname, computedMatch.params)\n        });\n      }\n    }\n\n    return to;\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var push = this.props.push;\n\n    var to = this.computeTo(this.props);\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(React.Component);\n\nRedirect.propTypes = {\n  computedMatch: PropTypes.object, // private, from <Switch>\n  push: PropTypes.bool,\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired\n    }).isRequired,\n    staticContext: PropTypes.object\n  }).isRequired\n};\n\n\nexport default Redirect;","// Written in this round about way for babel-transform-imports\nimport Redirect from \"react-router/es/Redirect\";\n\nexport default Redirect;"],"sourceRoot":""}